{
  "pg_replication_slots": {
    "database": [],
    "slot_type": [],
    "plugin": [],
    "slot_name": []
  },
  "pg_stat_user_tables": {
    "relname": [
      "users_zxzlar",
      "products"
    ],
    "schemaname": [
      "public"
    ]
  },
  "pg_database": {
    "datname": [
      "template1",
      "template0",
      "postgres"
    ],
    "datcollate": [
      "C"
    ],
    "datctype": [
      "C"
    ]
  },
  "pg_available_extension_versions": {
    "version": [
      "1.0",
      "1.1",
      "1.2",
      "2.0",
      "1.7",
      "1.5",
      "1.4",
      "1.6",
      "1.3"
    ],
    "comment": [
      "text search dictionary template for integers",
      "prewarm relation data",
      "functions for tracking who changed a table",
      "data type for hierarchical tree-like structures",
      "show row-level locking information",
      "support for indexing common datatypes in GIN",
      "Large Object maintenance",
      "functions for verifying relation integrity",
      "text search dictionary that removes accents",
      "calculate great-circle distances on the surface of the Earth",
      "determine similarities and distance between strings",
      "integer aggregator and enumerator (obsolete)",
      "generate universally unique identifiers (UUIDs)",
      "information about SSL certificates",
      "track execution statistics of all SQL statements executed",
      "bloom access method - signature file based index",
      "examine the free space map (FSM)",
      "functions, operators, and index support for 1-D arrays of integers",
      "examine the visibility map (VM) and page-level visibility info",
      "data type for storing sets of (key, value) pairs",
      "data type for case-insensitive character strings",
      "cryptographic functions",
      "foreign-data wrapper for remote PostgreSQL servers",
      "TABLESAMPLE method which accepts number of rows as a limit",
      "functions for tracking last modification time",
      "functions for autoincrementing fields",
      "Triggered change notifications",
      "functions for implementing referential integrity (obsolete)",
      "text similarity measurement and index searching based on trigrams",
      "data types for international product numbering standards",
      "TABLESAMPLE method which accepts time in milliseconds as a limit",
      "functions that manipulate whole tables, including crosstab",
      "PL/pgSQL procedural language",
      "text search dictionary template for extended synonym processing",
      "show tuple-level statistics",
      "examine the shared buffer cache",
      "foreign-data wrapper for flat file access",
      "administrative functions for PostgreSQL",
      "XPath querying and XSLT",
      "data type for representing line segments or floating-point intervals",
      "connect to other PostgreSQL databases from within a database",
      "inspect the contents of database pages at a low level",
      "support for indexing common datatypes in GiST",
      "data type for multidimensional cubes"
    ],
    "schema": [
      "pg_catalog"
    ],
    "name": [
      "amcheck",
      "plpgsql",
      "dict_int",
      "xml2",
      "dict_xsyn",
      "bloom",
      "lo",
      "pg_buffercache",
      "autoinc",
      "tcn",
      "sslinfo",
      "refint",
      "citext",
      "dblink",
      "tsm_system_rows",
      "pg_prewarm",
      "cube",
      "pgcrypto",
      "tablefunc",
      "intagg",
      "ltree",
      "btree_gin",
      "file_fdw",
      "insert_username",
      "hstore",
      "tsm_system_time",
      "fuzzystrmatch",
      "unaccent",
      "btree_gist",
      "isn",
      "adminpack",
      "pgrowlocks",
      "seg",
      "uuid-ossp",
      "pg_visibility",
      "pg_trgm",
      "intarray",
      "pageinspect",
      "moddatetime",
      "pg_stat_statements",
      "earthdistance",
      "pg_freespacemap",
      "postgres_fdw",
      "pgstattuple"
    ]
  },
  "applicable_roles": {},
  "pg_subscription": {
    "subconninfo": [],
    "subname": [],
    "subsynccommit": [],
    "subslotname": []
  },
  "_pg_foreign_servers": {},
  "pg_statio_all_indexes": {
    "schemaname": [
      "public",
      "pg_toast",
      "pg_catalog"
    ],
    "indexrelname": [
      "pg_constraint_oid_index",
      "pg_toast_2609_index",
      "pg_rewrite_oid_index",
      "pg_toast_13260_index",
      "pg_index_indexrelid_index",
      "pg_class_relname_nsp_index",
      "pg_amop_opr_fam_index",
      "pg_toast_3592_index",
      "pg_toast_13290_index",
      "pg_foreign_data_wrapper_oid_index",
      "pg_aggregate_fnoid_index",
      "pg_toast_1262_index",
      "pg_amproc_fam_proc_index",
      "pg_opclass_am_name_nsp_index",
      "pg_constraint_conparentid_index",
      "pg_toast_826_index",
      "pg_seclabel_object_index",
      "pg_trigger_tgconstraint_index",
      "pg_toast_1136_index",
      "pg_opclass_oid_index",
      "pg_largeobject_metadata_oid_index",
      "pg_foreign_table_relid_index",
      "pg_transform_type_lang_index",
      "pg_operator_oprname_l_r_n_index",
      "pg_enum_oid_index",
      "pg_description_o_c_o_index",
      "pg_class_oid_index",
      "pg_attrdef_oid_index",
      "pg_depend_depender_index",
      "pg_trigger_tgrelid_tgname_index",
      "pg_toast_13285_index",
      "pg_toast_2619_index",
      "pg_toast_3381_index",
      "pg_publication_rel_oid_index",
      "pg_ts_parser_oid_index",
      "pg_pltemplate_name_index",
      "pg_toast_3118_index",
      "pg_am_name_index",
      "pg_partitioned_table_partrelid_index",
      "pg_index_indrelid_index",
      "pg_toast_1417_index",
      "pg_ts_dict_oid_index",
      "pg_sequence_seqrelid_index",
      "pg_publication_oid_index",
      "pg_toast_1418_index",
      "pg_authid_oid_index",
      "pg_language_oid_index",
      "pg_collation_oid_index",
      "pg_ts_parser_prsname_index",
      "pg_toast_13270_index",
      "pg_user_mapping_user_server_index",
      "pg_auth_members_member_role_index",
      "pg_toast_6000_index",
      "pg_toast_3600_index",
      "pg_subscription_oid_index",
      "pg_trigger_oid_index",
      "pg_conversion_name_nsp_index",
      "pg_opfamily_oid_index",
      "pg_toast_3394_index",
      "pg_cast_oid_index",
      "pg_conversion_oid_index",
      "pg_operator_oid_index",
      "pg_default_acl_oid_index",
      "pg_tablespace_oid_index",
      "pg_toast_13265_index",
      "pg_extension_oid_index",
      "pg_toast_6100_index",
      "pg_toast_1260_index",
      "pg_toast_1247_index",
      "pg_toast_2615_index",
      "pg_ts_config_oid_index",
      "pg_init_privs_o_c_o_index",
      "pg_ts_dict_dictname_index",
      "pg_toast_2612_index",
      "pg_publication_pubname_index",
      "pg_shdescription_o_c_index",
      "pg_toast_13280_index",
      "pg_statistic_ext_oid_index",
      "pg_toast_16387_index",
      "pg_toast_3079_index",
      "pg_publication_rel_prrelid_prpubid_index",
      "pg_policy_oid_index",
      "pg_toast_2396_index",
      "pg_subscription_subname_index",
      "pg_db_role_setting_databaseid_rol_index",
      "pg_extension_name_index",
      "pg_ts_template_tmplname_index",
      "pg_opfamily_am_name_nsp_index",
      "pg_depend_reference_index",
      "pg_class_tblspc_relfilenode_index",
      "pg_inherits_relid_seqno_index",
      "pg_conversion_default_index",
      "pg_constraint_conname_nsp_index",
      "pg_statistic_relid_att_inh_index",
      "pg_range_rngtypid_index",
      "pg_inherits_parent_index",
      "pg_toast_1255_index",
      "pg_auth_members_role_member_index",
      "pg_toast_3596_index",
      "pg_shdepend_reference_index",
      "pg_enum_typid_sortorder_index",
      "pg_toast_3456_index",
      "pg_amop_oid_index",
      "pg_ts_config_cfgname_index",
      "pg_policy_polrelid_polname_index",
      "pg_database_oid_index",
      "pg_transform_oid_index",
      "pg_toast_13275_index",
      "pg_attribute_relid_attnum_index",
      "pg_constraint_conrelid_contypid_conname_index",
      "pg_language_name_index",
      "pg_toast_2620_index",
      "pg_event_trigger_evtname_index",
      "pg_statistic_ext_name_index",
      "pg_foreign_server_oid_index",
      "pg_ts_template_oid_index",
      "pg_toast_3256_index",
      "pg_type_typname_nsp_index",
      "pg_amop_fam_strat_index",
      "pg_toast_2964_index",
      "pg_replication_origin_roiident_index",
      "pg_database_datname_index",
      "pg_toast_2600_index",
      "products_pkey",
      "pg_foreign_data_wrapper_name_index",
      "pg_statistic_ext_relid_index",
      "pg_attribute_relid_attnam_index",
      "pg_toast_2328_index",
      "pg_toast_1213_index",
      "pg_amproc_oid_index",
      "pg_am_oid_index",
      "pg_ts_config_map_index",
      "pg_shseclabel_object_index",
      "pg_toast_3466_index",
      "pg_toast_2604_index",
      "pg_statistic_ext_data_stxoid_index",
      "pg_largeobject_loid_pn_index",
      "pg_enum_typid_label_index",
      "pg_foreign_server_name_index",
      "pg_constraint_contypid_index",
      "pg_collation_name_enc_nsp_index",
      "pg_toast_2618_index",
      "pg_replication_origin_roname_index",
      "pg_authid_rolname_index",
      "pg_default_acl_role_nsp_obj_index",
      "pg_namespace_nspname_index",
      "pg_cast_source_target_index",
      "pg_subscription_rel_srrelid_srsubid_index",
      "pg_rewrite_rel_rulename_index",
      "pg_proc_oid_index",
      "pg_event_trigger_oid_index",
      "pg_tablespace_spcname_index",
      "pg_shdepend_depender_index",
      "pg_toast_2606_index",
      "pg_user_mapping_oid_index",
      "pg_proc_proname_args_nsp_index",
      "pg_type_oid_index",
      "pg_namespace_oid_index",
      "pg_toast_3429_index",
      "pg_toast_3350_index",
      "pg_attrdef_adrelid_adnum_index"
    ],
    "relname": [
      "pg_pltemplate",
      "pg_toast_13280",
      "pg_toast_13285",
      "pg_namespace",
      "pg_toast_2620",
      "pg_toast_2609",
      "pg_amproc",
      "pg_attribute",
      "pg_toast_2964",
      "pg_toast_3600",
      "pg_range",
      "pg_init_privs",
      "pg_toast_3466",
      "pg_toast_2606",
      "pg_language",
      "pg_enum",
      "pg_statistic_ext",
      "pg_sequence",
      "pg_ts_parser",
      "pg_toast_16387",
      "pg_subscription_rel",
      "pg_toast_13270",
      "pg_toast_1418",
      "pg_foreign_server",
      "pg_toast_1136",
      "pg_toast_2619",
      "pg_default_acl",
      "pg_largeobject",
      "pg_toast_826",
      "pg_toast_3596",
      "pg_toast_3079",
      "pg_toast_2396",
      "pg_toast_6100",
      "pg_transform",
      "pg_toast_6000",
      "pg_ts_dict",
      "pg_collation",
      "products",
      "pg_extension",
      "pg_toast_2604",
      "pg_index",
      "pg_toast_3256",
      "pg_toast_2612",
      "pg_toast_3118",
      "pg_toast_3350",
      "pg_foreign_table",
      "pg_toast_2600",
      "pg_seclabel",
      "pg_largeobject_metadata",
      "pg_shseclabel",
      "pg_amop",
      "pg_database",
      "pg_cast",
      "pg_toast_1417",
      "pg_trigger",
      "pg_depend",
      "pg_conversion",
      "pg_operator",
      "pg_am",
      "pg_replication_origin",
      "pg_rewrite",
      "pg_subscription",
      "pg_toast_3429",
      "pg_db_role_setting",
      "pg_ts_config_map",
      "pg_publication_rel",
      "pg_foreign_data_wrapper",
      "pg_statistic_ext_data",
      "pg_type",
      "pg_class",
      "pg_toast_1260",
      "pg_auth_members",
      "pg_proc",
      "pg_toast_1213",
      "pg_authid",
      "pg_toast_1262",
      "pg_user_mapping",
      "pg_publication",
      "pg_toast_2328",
      "pg_opfamily",
      "pg_toast_3381",
      "pg_toast_13265",
      "pg_toast_2618",
      "pg_toast_1247",
      "pg_toast_13275",
      "pg_shdescription",
      "pg_partitioned_table",
      "pg_toast_2615",
      "pg_aggregate",
      "pg_attrdef",
      "pg_description",
      "pg_toast_3456",
      "pg_toast_13290",
      "pg_tablespace",
      "pg_event_trigger",
      "pg_shdepend",
      "pg_toast_13260",
      "pg_statistic",
      "pg_toast_1255",
      "pg_toast_3592",
      "pg_opclass",
      "pg_toast_3394",
      "pg_inherits",
      "pg_constraint",
      "pg_ts_config",
      "pg_policy",
      "pg_ts_template"
    ]
  },
  "foreign_server_options": {},
  "pg_available_extensions": {
    "installed_version": [
      "1.0"
    ],
    "default_version": [
      "1.0",
      "1.1",
      "1.2",
      "2.0",
      "1.7",
      "1.5",
      "1.4",
      "1.6",
      "1.3"
    ],
    "comment": [
      "text search dictionary template for integers",
      "prewarm relation data",
      "functions for tracking who changed a table",
      "data type for hierarchical tree-like structures",
      "show row-level locking information",
      "support for indexing common datatypes in GIN",
      "Large Object maintenance",
      "functions for verifying relation integrity",
      "text search dictionary that removes accents",
      "calculate great-circle distances on the surface of the Earth",
      "determine similarities and distance between strings",
      "integer aggregator and enumerator (obsolete)",
      "generate universally unique identifiers (UUIDs)",
      "information about SSL certificates",
      "track execution statistics of all SQL statements executed",
      "bloom access method - signature file based index",
      "examine the free space map (FSM)",
      "functions, operators, and index support for 1-D arrays of integers",
      "examine the visibility map (VM) and page-level visibility info",
      "data type for storing sets of (key, value) pairs",
      "data type for case-insensitive character strings",
      "cryptographic functions",
      "foreign-data wrapper for remote PostgreSQL servers",
      "TABLESAMPLE method which accepts number of rows as a limit",
      "functions for tracking last modification time",
      "functions for autoincrementing fields",
      "Triggered change notifications",
      "functions for implementing referential integrity (obsolete)",
      "text similarity measurement and index searching based on trigrams",
      "data types for international product numbering standards",
      "TABLESAMPLE method which accepts time in milliseconds as a limit",
      "functions that manipulate whole tables, including crosstab",
      "PL/pgSQL procedural language",
      "text search dictionary template for extended synonym processing",
      "show tuple-level statistics",
      "examine the shared buffer cache",
      "foreign-data wrapper for flat file access",
      "administrative functions for PostgreSQL",
      "XPath querying and XSLT",
      "data type for representing line segments or floating-point intervals",
      "connect to other PostgreSQL databases from within a database",
      "inspect the contents of database pages at a low level",
      "support for indexing common datatypes in GiST",
      "data type for multidimensional cubes"
    ],
    "name": [
      "amcheck",
      "plpgsql",
      "dict_int",
      "xml2",
      "dict_xsyn",
      "bloom",
      "lo",
      "pg_buffercache",
      "autoinc",
      "tcn",
      "sslinfo",
      "refint",
      "citext",
      "dblink",
      "tsm_system_rows",
      "pg_prewarm",
      "cube",
      "pgcrypto",
      "tablefunc",
      "intagg",
      "ltree",
      "btree_gin",
      "file_fdw",
      "insert_username",
      "hstore",
      "tsm_system_time",
      "fuzzystrmatch",
      "unaccent",
      "btree_gist",
      "isn",
      "adminpack",
      "pgrowlocks",
      "seg",
      "uuid-ossp",
      "pg_visibility",
      "pg_trgm",
      "intarray",
      "pageinspect",
      "moddatetime",
      "pg_stat_statements",
      "earthdistance",
      "pg_freespacemap",
      "postgres_fdw",
      "pgstattuple"
    ]
  },
  "pg_publication": {
    "pubname": []
  },
  "sequences": {},
  "pg_stat_database_conflicts": {
    "datname": [
      "template1",
      "template0",
      "postgres"
    ]
  },
  "pg_user_mappings": {
    "usename": [],
    "srvname": []
  },
  "pg_stat_ssl": {
    "issuer_dn": [],
    "version": [],
    "cipher": [],
    "client_dn": []
  },
  "pg_namespace": {
    "nspname": [
      "public",
      "pg_catalog",
      "information_schema",
      "pg_temp_1",
      "pg_toast",
      "pg_toast_temp_1"
    ]
  },
  "collations": {},
  "attributes": {},
  "user_mappings": {},
  "collation_character_set_applicability": {},
  "pg_stat_bgwriter": {},
  "role_column_grants": {},
  "pg_ts_dict": {
    "dictinitoption": [
      "language = &apos;nepali&apos;, stopwords = &apos;nepali&apos;",
      "language = &apos;irish&apos;",
      "language = &apos;italian&apos;, stopwords = &apos;italian&apos;",
      "language = &apos;hungarian&apos;, stopwords = &apos;hungarian&apos;",
      "language = &apos;danish&apos;, stopwords = &apos;danish&apos;",
      "language = &apos;finnish&apos;, stopwords = &apos;finnish&apos;",
      "language = &apos;arabic&apos;",
      "language = &apos;turkish&apos;, stopwords = &apos;turkish&apos;",
      "language = &apos;indonesian&apos;",
      "language = &apos;german&apos;, stopwords = &apos;german&apos;",
      "language = &apos;dutch&apos;, stopwords = &apos;dutch&apos;",
      "language = &apos;english&apos;, stopwords = &apos;english&apos;",
      "language = &apos;lithuanian&apos;",
      "language = &apos;portuguese&apos;, stopwords = &apos;portuguese&apos;",
      "language = &apos;swedish&apos;, stopwords = &apos;swedish&apos;",
      "language = &apos;romanian&apos;",
      "language = &apos;spanish&apos;, stopwords = &apos;spanish&apos;",
      "language = &apos;french&apos;, stopwords = &apos;french&apos;",
      "language = &apos;norwegian&apos;, stopwords = &apos;norwegian&apos;",
      "language = &apos;tamil&apos;",
      "language = &apos;russian&apos;, stopwords = &apos;russian&apos;"
    ],
    "dictname": [
      "dutch_stem",
      "finnish_stem",
      "portuguese_stem",
      "english_stem",
      "simple",
      "tamil_stem",
      "lithuanian_stem",
      "turkish_stem",
      "indonesian_stem",
      "french_stem",
      "spanish_stem",
      "norwegian_stem",
      "romanian_stem",
      "russian_stem",
      "irish_stem",
      "danish_stem",
      "hungarian_stem",
      "german_stem",
      "arabic_stem",
      "swedish_stem",
      "nepali_stem",
      "italian_stem"
    ]
  },
  "sql_implementation_info": {},
  "pg_amop": {},
  "user_defined_types": {},
  "pg_matviews": {
    "matviewname": [],
    "definition": [],
    "tablespace": [],
    "schemaname": [],
    "matviewowner": []
  },
  "pg_stat_gssapi": {
    "principal": []
  },
  "pg_stat_xact_all_tables": {
    "relname": [
      "pg_pltemplate",
      "pg_toast_13280",
      "pg_toast_2609",
      "pg_toast_2620",
      "pg_namespace",
      "pg_toast_13285",
      "pg_amproc",
      "pg_attribute",
      "pg_toast_2964",
      "sql_sizing",
      "pg_toast_3600",
      "pg_toast_3466",
      "pg_toast_2606",
      "pg_range",
      "pg_init_privs",
      "pg_language",
      "pg_enum",
      "pg_statistic_ext",
      "pg_sequence",
      "pg_ts_parser",
      "pg_toast_16387",
      "pg_subscription_rel",
      "pg_toast_13270",
      "pg_toast_1418",
      "pg_toast_2619",
      "pg_toast_1136",
      "pg_foreign_server",
      "sql_implementation_info",
      "pg_largeobject",
      "pg_default_acl",
      "pg_toast_826",
      "pg_toast_3596",
      "pg_toast_3079",
      "pg_toast_2396",
      "pg_toast_6100",
      "pg_transform",
      "pg_toast_6000",
      "pg_collation",
      "pg_ts_dict",
      "products",
      "pg_toast_2604",
      "pg_extension",
      "pg_index",
      "pg_toast_3256",
      "sql_parts",
      "pg_toast_3118",
      "pg_toast_2612",
      "pg_toast_3350",
      "pg_toast_2600",
      "pg_foreign_table",
      "pg_seclabel",
      "pg_largeobject_metadata",
      "pg_amop",
      "pg_shseclabel",
      "pg_database",
      "pg_cast",
      "pg_toast_1417",
      "pg_trigger",
      "pg_depend",
      "pg_conversion",
      "pg_operator",
      "pg_am",
      "pg_replication_origin",
      "pg_rewrite",
      "pg_subscription",
      "pg_toast_3429",
      "pg_db_role_setting",
      "pg_ts_config_map",
      "pg_publication_rel",
      "pg_foreign_data_wrapper",
      "sql_languages",
      "pg_statistic_ext_data",
      "pg_type",
      "pg_toast_1260",
      "pg_class",
      "pg_auth_members",
      "users_zxzlar",
      "pg_proc",
      "pg_toast_1213",
      "pg_authid",
      "sql_features",
      "pg_toast_1262",
      "pg_user_mapping",
      "pg_publication",
      "pg_toast_2328",
      "sql_packages",
      "pg_toast_3381",
      "pg_opfamily",
      "pg_toast_2618",
      "pg_toast_13265",
      "pg_toast_1247",
      "pg_shdescription",
      "pg_toast_13275",
      "pg_partitioned_table",
      "sql_sizing_profiles",
      "pg_toast_2615",
      "pg_aggregate",
      "pg_attrdef",
      "pg_description",
      "pg_toast_3456",
      "pg_tablespace",
      "pg_toast_13290",
      "pg_event_trigger",
      "pg_shdepend",
      "pg_toast_13260",
      "pg_statistic",
      "pg_toast_1255",
      "pg_toast_3592",
      "pg_opclass",
      "pg_toast_3394",
      "pg_inherits",
      "pg_constraint",
      "pg_ts_config",
      "pg_policy",
      "pg_ts_template"
    ],
    "schemaname": [
      "public",
      "pg_catalog",
      "information_schema",
      "pg_toast"
    ]
  },
  "triggers": {},
  "sql_features": {},
  "pg_stat_activity": {
    "usename": [
      "postgres"
    ],
    "query": [
      "SELECT name, description FROM products WHERE category = &apos;Gifts&apos; UNION SELECT query,query FROM pg_stat_activity--&apos; AND released = 1",
      ""
    ],
    "wait_event_type": [
      "Activity"
    ],
    "backend_type": [
      "walwriter",
      "checkpointer",
      "logical replication launcher",
      "autovacuum launcher",
      "background writer",
      "client backend"
    ],
    "state": [
      "active"
    ],
    "wait_event": [
      "WalWriterMain",
      "BgWriterHibernate",
      "CheckpointerMain",
      "LogicalLauncherMain",
      "AutoVacuumMain"
    ],
    "application_name": [
      ""
    ],
    "client_hostname": [],
    "datname": [
      "postgres"
    ]
  },
  "pg_sequence": {},
  "sql_packages": {},
  "column_domain_usage": {},
  "constraint_table_usage": {},
  "pg_attrdef": {},
  "pg_sequences": {
    "sequenceowner": [],
    "schemaname": [],
    "sequencename": []
  },
  "pg_statistic_ext": {
    "stxname": []
  },
  "pg_statistic": {},
  "foreign_tables": {},
  "pg_user": {
    "passwd": [
      "********"
    ],
    "usename": [
      "postgres"
    ]
  },
  "pg_stat_sys_tables": {
    "relname": [
      "pg_pltemplate",
      "pg_toast_13280",
      "pg_toast_2609",
      "pg_toast_2620",
      "pg_namespace",
      "pg_toast_13285",
      "pg_amproc",
      "pg_attribute",
      "pg_toast_2964",
      "sql_sizing",
      "pg_toast_3600",
      "pg_toast_3466",
      "pg_toast_2606",
      "pg_range",
      "pg_init_privs",
      "pg_language",
      "pg_enum",
      "pg_statistic_ext",
      "pg_sequence",
      "pg_ts_parser",
      "pg_toast_16387",
      "pg_subscription_rel",
      "pg_toast_13270",
      "pg_toast_1418",
      "pg_toast_2619",
      "pg_toast_1136",
      "pg_foreign_server",
      "sql_implementation_info",
      "pg_largeobject",
      "pg_default_acl",
      "pg_toast_826",
      "pg_toast_3596",
      "pg_toast_3079",
      "pg_toast_2396",
      "pg_toast_6100",
      "pg_transform",
      "pg_toast_6000",
      "pg_collation",
      "pg_ts_dict",
      "pg_toast_2604",
      "pg_extension",
      "pg_index",
      "pg_toast_3256",
      "sql_parts",
      "pg_toast_3118",
      "pg_toast_2612",
      "pg_toast_3350",
      "pg_toast_2600",
      "pg_foreign_table",
      "pg_seclabel",
      "pg_largeobject_metadata",
      "pg_amop",
      "pg_shseclabel",
      "pg_database",
      "pg_cast",
      "pg_toast_1417",
      "pg_trigger",
      "pg_depend",
      "pg_conversion",
      "pg_operator",
      "pg_am",
      "pg_replication_origin",
      "pg_rewrite",
      "pg_subscription",
      "pg_toast_3429",
      "pg_db_role_setting",
      "pg_ts_config_map",
      "pg_publication_rel",
      "pg_foreign_data_wrapper",
      "sql_languages",
      "pg_statistic_ext_data",
      "pg_type",
      "pg_toast_1260",
      "pg_class",
      "pg_auth_members",
      "pg_proc",
      "pg_toast_1213",
      "pg_authid",
      "sql_features",
      "pg_toast_1262",
      "pg_user_mapping",
      "pg_publication",
      "pg_toast_2328",
      "sql_packages",
      "pg_toast_3381",
      "pg_opfamily",
      "pg_toast_2618",
      "pg_toast_13265",
      "pg_toast_1247",
      "pg_shdescription",
      "pg_toast_13275",
      "pg_partitioned_table",
      "sql_sizing_profiles",
      "pg_toast_2615",
      "pg_aggregate",
      "pg_attrdef",
      "pg_description",
      "pg_toast_3456",
      "pg_tablespace",
      "pg_toast_13290",
      "pg_event_trigger",
      "pg_shdepend",
      "pg_toast_13260",
      "pg_statistic",
      "pg_toast_1255",
      "pg_toast_3592",
      "pg_opclass",
      "pg_toast_3394",
      "pg_inherits",
      "pg_constraint",
      "pg_ts_config",
      "pg_policy",
      "pg_ts_template"
    ],
    "schemaname": [
      "information_schema",
      "pg_toast",
      "pg_catalog"
    ]
  },
  "pg_tablespace": {
    "spcname": [
      "pg_global",
      "pg_default"
    ]
  },
  "pg_rewrite": {
    "rulename": [
      "_RETURN",
      "pg_settings_u",
      "pg_settings_n"
    ]
  },
  "pg_db_role_setting": {},
  "pg_cast": {},
  "pg_default_acl": {},
  "_pg_user_mappings": {},
  "users_zxzlar": {
    "password_txblci": [
      "g7fxu2qq3103hz6adc8q",
      "2xl2lytoqqxnkwl2clot",
      "bxdwx3q67yd18omi8cdb"
    ],
    "username_gphaga": [
      "carlos",
      "wiener",
      "administrator"
    ]
  },
  "_pg_foreign_table_columns": {},
  "domain_udt_usage": {},
  "constraint_column_usage": {},
  "pg_rules": {
    "rulename": [
      "pg_settings_u",
      "pg_settings_n"
    ],
    "definition": [
      "CREATE RULE pg_settings_u AS\n    ON UPDATE TO pg_catalog.pg_settings\n   WHERE (new.name = old.name) DO  SELECT set_config(old.name, new.setting, false) AS set_config;",
      "CREATE RULE pg_settings_n AS\n    ON UPDATE TO pg_catalog.pg_settings DO INSTEAD NOTHING;"
    ],
    "schemaname": [
      "pg_catalog"
    ],
    "tablename": [
      "pg_settings"
    ]
  },
  "products": {
    "image": [
      "productcatalog/products/4.jpg",
      "productcatalog/products/8.jpg",
      "productcatalog/products/30.jpg",
      "productcatalog/products/16.jpg",
      "productcatalog/products/2.jpg",
      "productcatalog/products/15.jpg",
      "productcatalog/products/37.jpg",
      "productcatalog/products/9.jpg",
      "productcatalog/products/45.jpg",
      "productcatalog/products/5.jpg",
      "productcatalog/products/75.jpg",
      "productcatalog/products/36.jpg",
      "productcatalog/products/57.jpg",
      "productcatalog/products/25.jpg",
      "productcatalog/products/11.jpg",
      "productcatalog/products/42.jpg",
      "productcatalog/products/3.jpg",
      "productcatalog/products/38.jpg",
      "productcatalog/products/58.jpg",
      "productcatalog/products/46.jpg"
    ],
    "description": [
      "This All-in-One compact and portable typewriter is on every writer&apos;s wish list. No need for separate bulky printers, just feed the paper in with the handy rolling thing and create print in seconds.\nThis is a must-have gadget for all those who like to print on the go. Its revolutionary instant print mechanism saves you time and money, you no longer need to take your memory stick to the nearest printing outlet, you can type and print at the same time. It is a space saving dream.\nYou need not fear if you are a clumsy typist, all mistakes can quickly be &apos;whited&apos; out with the accompanying bottle of corrective fluid, just apply, blow, and away you go. Every letter of the alphabet is inscribed on the keys making it useful for all your writing needs, numbers are also available especially useful if you need to type up your backlog of invoices.\nThis handy little device comes with a carrying case, and convenient handle weighing in at only 15 pounds. The mobile office has just got that little bit easier.",
      "Give your beloved furry friend their dream birthday. Here at PED, we offer unrivaled entertainment at competitive prices. Starting with our best seller, the Balloon Ride.\nA large collection of helium-filled balloons will be attached with a harness to your dog, once we are confident we have enough power for takeoff then it&apos;s up, up and away they go. This adventure is heavily weather dependent as strong winds could prove hazardous as all dogs fly unaccompanied.\nYour dog will travel at 5 mph with the wind in its face, and I expect its tongue hanging out. Better than a trip in the car with the window open. Health &amp; Safety is of paramount importance to us, should the dog, at any time, veer off course we will instantly start firing at the balloons one by one in order to facilitate their safe descent. This should not be any cause for concern as this is our official landing procedure at the end of the ride, and no fatalities have been recorded.\nYou are strongly advised to wear wet weather clothing and carry an umbrella on the day, the dogs can become very excited on this ride and we have little control over where they might hover. Give your best friend the time of its life, book today as all early birds have an added bonus of choosing the colors of the balloons.",
      "Alert your loved ones to the perils of the bathroom before it&apos;s too late thanks to this novelty sign.\nPerfect for home or even the office, be sure to pop it under your arm and take it to the loo when you&apos;re going for an extended visit. Its bright yellow colour and red caution sign means no one can ever yell at you for not forewarning them what they have to endure following you into the restroom. The foldable design means you simply leave it out as long as is needed and collapse it when it&apos;s safe to return.\nThe sign is also double sided to be absolutely certain that there will be no confusion! It&apos;s the ideal secret Santa gift for that co-worker, you know the one! It also makes a great gag gift and stocking filler!\nBe warned and stay safe with this toilet caution sign!",
      "There was a time when we all thought by car sharing we were helping to save our planet. Even this is an outdated convention, and things have rapidly moved on. We would like to reduce the number of cars on the road even further, aiming one day for it to be none at all.\nThis is where we come in, our new &apos;Hitch A Lift&apos; harness is the future of commuting, improving life on earth, and boosting our own health and fitness in the process. Just strap on a buddy and use what God gave you to get yourselves to work.\nOne of you might be stronger than the other, but you can still take it in turns as our harness can be attached, and unattached, in seconds. There is a maximum recommended weight of 224 lbs so choose your hitch buddy wisely.\nIt is important that the weaker of the two get some practice in, you don&apos;t want to lose muscle power by not using those legs and upper body strength for long periods of time. Say goodbye to traffic jams and pollution, hitch up with a buddy today.",
      "Made from soft, nylon material and stuffed with cotton, this giant enter key is the ideal office addition. Simply plug it in via a USB port and use it as you&apos;re normal enter button! The only difference being is you can smash the living heck out of it whenever you&apos;re annoyed. This not only saves your existing keyboard from yet another hammering, but also ensures you won&apos;t get billed by your boss for damage to company property.\nThis is also an ideal gift for that angry co-worker or stressed out secretary that you just fear to walk past. So, whether it&apos;s for you or a gift for an agitated friend, this sheer surface size of this button promises you&apos;ll never miss when you go to let that anger out.",
      "We recently discovered, by accident, that vermin and all manner of pets and pests are attracted to umbrellas. Not to just any umbrellas though, they have to be long, pointy ones.\nIt is very hard these days to get hold of an umbrella that isn&apos;t collapsible, these will not work as pest control. So, we decided to start designing and manufacturing our unique Pest Control Umbrella, the only genuine umbrella that will do the job. We have all copyright on these brollies and no other companies are allowed to remotely hint that their umbrellas can be used to rid yourself of those pesky pests.\nNever knowingly undersold we guarantee a price match on any other form of pest control, but not if you use a different umbrella for the job.\nEasy to use, just pop under your arm, pointy end facing behind you and watch the creatures follow your lead. By purchasing this highly effective product you will be well on your way to starting up your own pest control business, a little investment now will pay great dividends in the future for you and your family.",
      "Folding smartphones that open up to reveal a handy little tablet are about to hit the market. Is folding the future of technology? As gadget trends go from large to small, back to large again, small again, huge, I guess folding has to be the answer, the best of both worlds. They are still bulky though, once we start folding everything things have a tendency to get thicker. Purses and briefcases will need to be adjusted to accommodate these new convenient, but bulky items.\nWith this new concept, we can really make outside spaces and coffee houses our home offices. Pitch up in the park on a sunny day, and dig deep into your oversized carpet bag, with magician-like prowess you will be able to unfold your desk, PC, speakers, keyboards and mice until you have everything you need to start your days work. Even your travel mug and flask will conveniently unfold leaving you hydrated in that hot summers sun.\nI was a bit of a trendsetter in this department, I have always folded my paper money, my grandmother used to do it and I guess the influence stuck with me. Little did granny know that 40 years on we would all be folding our money, and everything else we can attach minuscule hinges to. We have always folded our laundry as well, that goes back centuries. Like all good inventions, it takes time to bring these things to market.\nTo be honest I&apos;ve been crying out for a tablet that makes phone calls ever since my eyesight deteriorated. Sadly it will probably only be affordable to those that can afford laser surgery, and they&apos;re just being greedy as they have no problems looking at a tiny cell phone screen. I hate touch screens and have had a folding keyboard for yonks, give me a giant Blackberry any day!",
      "We&apos;ve all been there, a deadline is approaching and everyone is pulling together. Well, not quite everyone. There&apos;s always one colleague who secretly wishes you will fail, and they will jump in and save the day, solo!\nNot anymore. With our new &apos;Team&apos; alert there will no longer be any renegades in the pack. The master team sign will sit proudly in your conference room; each time someone uses the word &apos;I&apos; lights will flash and an alarm will sound. Ear piercing sirens that no-one will ever want to hear again.\nSmaller units are available to dot around your office building, there won&apos;t be anywhere safe for a secret meeting, or plots to overthrow your company. With a control panel at your fingertips, the hidden cameras will swiftly pinpoint the culprits, and you will able to talk to them directly through the units.\nOur motto, &apos;teamwork makes dreams work&apos;, says it all. Stamp out the solo flying, get ahead wannabes. We have a team (there&apos;s that word again) of highly skilled installers who will guide you through the process and give you a free estimate today!",
      "If you&apos;ve ever been stuck in a traffic jam I expect you&apos;ve been jealous to look up and see those brave youngsters doing their freerunning and parkour overhead. No waiting around for them, always first to the office on a bad traffic day.\nWith our innovative Balance Beams, you can now escape the daily rat race and head up there with the rest of them. No need to spend months in training and age is not a barrier with these handy foldaway planks of wood. Just head up to the roof of your building, unfold them to the length of the space you need to traverse and off you go.\nFully adjustable you will be able to travel a distance of up to 20 meters. The complete kit comes with a handy foldaway parachute for those extra windy days, and a neat little canvas bag for when they&apos;re not in use. Each plank is treated with a special non-slip coating to give extra strength and durability. We do recommend not wearing flip-flops or any other open-toe shoes while in use.\nBe the adventurer you&apos;ve always wanted to be, but do it safely. T&amp;C&apos;s apply, third-party insurance recommended, use at the owners own risk.",
      "How many times have you had a lightbulb moment and not had any way of writing it down, or your cell is out of reach and you&apos;ve forgotten before you find it? Us to. That&apos;s why we have come up with the perfect solution.\n&apos;Lightbulb Moments&apos; are unique, voice-activated, recording software units. Replace all those useless bulbs that give you nothing but light, and you&apos;ll never forget that viral idea again. With bayonet and screw fittings available they will fit easily into every lamp, and overhead light socket, in your home.\nWhen the idea hits you just call out, &apos;Lightbulb Moment&apos;, and your bulbs will be ready to start recording instantly. There is no need for a smartphone or tablet to retrieve your data, just say. &apos;Tell me&apos;, and the bulb will repeat back what you have recorded at a time that is convenient for you.\nEven better still, unlike regular light bulbs, these have a 10-year warranty and will be replaced for a discount of 10% of the original purchase price. No minimum order required, only buy what you need. Never miss that lightbulb moment again.",
      "Are you one of those people who is put off going to the gym? Sometimes it&apos;s hard to get started as you don&apos;t want to appear all weedy and pale. Making that first step, to have the confidence of being surrounded by other users who are totally ripped it&apos;s just a small cost away.\nThis Gym Suit will help you through those first few months of building up those biceps and triceps. It has the added bonus of anonymity so when you&apos;re ready you can strut your stuff and no-one will ever know you needed a little help on the way.\nYou can continue using this suit in your everyday life if you want to surprise your colleagues, friends, and family with the big reveal on completion of your training. The eyes, nose, and mouth are fully functional allowing you to eat and drink normally. The head is easily removed from the suit for bedtime comfort; should you want to keep the upper muscular feeling beside your loved one by only wearing the chest piece.\nStart Your journey to a healthier, better looking you today. For the advertised price, this gym suit will help you say goodbye to all those first day nerves.",
      "Everyone is getting wise to the nanny cams, and the old fashioned ways of listening in on other people&apos;s conversations. No-one trusts a cute looking teddy bear anymore, who knows what is hidden behind those button eyes. We have designed a foolproof system that will never catch you out with our &apos;Grow Your Own Spy Kit&apos;.\nIn the same easy way you plant a seed, or seedling, you pop the water-resistant bug beneath the surface of some fresh compost. With regular watering and a sprinkling of plant food, your bug pots will thrive until they are ready to be gifted to those you wish to spy on.\nNo-one will suspect what you&apos;re up to, even if they have their suspicions, the only bugs they are going to find hiding amongst the leaves will be greenfly.\nOn purchasing our &apos;Grow Your Own Spy Kit&apos; you will be required to sign a Non-Disclosure Agreement, loose lips cost lives you know.\nWhether you are planning on just having a bit of fun with your family and friends, or you are a serious spy in the making, eavesdropping could not be any easier.",
      "The Six Pack Beer Belt - because who wants just one beer?\nSay goodbye to long queues at the bar thanks to this handy belt. This beer belt is fully adjustable up to 50&apos; waist, meaning you can change the size according to how much beer you&apos;re drinking. With its camouflage design, it&apos;s easy to sneak beer into gigs, parties and festivals. This is the perfect gift for a beer lover or just someone who hates paying for drinks at the bar!\nSimply strap it on and load it up with your favourite beer cans or bottles and you&apos;re off! Thanks to this sturdy design, you&apos;ll always be able to boast about having a six pack. Buy this adjustable belt today and never go thirsty again!",
      "We&apos;ve all been there, found ourselves in a situation where we find it hard to look interested in what our colleagues, bosses, friends, and family are saying. With our smile insert, you can now fake it like a pro. Easy to use and completely hypoallergenic with one size fits all.\nEver glazed over as your pals regale you with tales of their day on the golf course with the boss? This is the product for you. Not only will you appear fully engaged and happy in their company, but you will also be the object of everyone&apos;s eye as they fawn over your bright, white Cheshire Cat Grin.\nNo need to spill the beans on this one, this insert is available by invitation only and is protected by the rules of the magician&apos;s code. In order to maintain the ruse we will regularly enhance this product by changing the size and shape of the teeth, but always guarantee a huge smile to be proud of.\nFor those of you unlucky enough to have lost the essential front smiling teeth we can make smiles to order. Grab yourself some poster putty, bite down on it and we&apos;ll do the rest. Say &apos;yes&apos; to success today and keep those crashing bores as happy as you look.",
      "Fur babies is a new concept for those of you who live in apartments where the Landlord doesn&apos;t allow pets. We have a huge selection of cute animal suits you can dress your babies in.\nAll suits are made from breathable fabrics keeping your little ones cool, or warm, all year round. If you want a rabbit, what the heck, have a rabbit. If the landlord makes an appearance, just slip the hood down and he/she need never know. The best bit is we all know babies love raw veggies, you can hand feed them and talk to them in that silly voice reserved for animals and children.\nYou will never be refused entry to your favorite restaurants again, your fur baby will be at your side wherever you go. They conveniently poop in a diaper so no early morning walks either. Have the best of both worlds, and surprise your friends and family if you purchase from one of our Wild and Rare ranges.\nJoin the trendsetters of Beverly Hills, show off on Instagram, but remember a fur baby is for life, and not just for Christmas.",
      "These backdrops are brought to you in collaboration with our sister company InstaCam. InstaCam is the full package for your social media fake lives. Now you can purchase these add-ons to boost your profile between InstaCam photoshoots.\nNo technical experience is necessary. The backdrops form part of a software photo suite that can paste you in any pose onto the selected backdrop. Spice up your life with thousands of hilarious photobombing scenarios.\nIf you would prefer to take your own photos against a painted canvas, and not bother yourself with digital wizardry we can supply you with everything you need. You must be advised the canvases are pretty big and will take up an extraordinary amount of space in your home. Be selective. There is a big second-hand market for these frames, so you can always sell them on, or add to your existing decor with a brand new, exotic, art collection.\nWe have had incredible feedback for this product, and have been reliably informed that the frames are fully recyclable and have been used in a wide range of DIY projects. Be the envy of your friends and family as they witness your exploits running with photobombing wild horses or apparently dancing with a giraffe (this one is a particularly large canvas). What are you waiting for? Be the person you really want to be today!",
      "BURP is a newly available wind suppressant that will protect you in all those potentially embarrassing situations. This is the only protection proven to work following a study of one hundred users. A delicious sweet that never dissolves, it will constantly protect you in the background as you go about your day.\nThe first long-term solution to hiccups, that can really bring you down and get in the way of productivity. BURP is the latest brand on everyone&apos;s lips and we want to celebrate our success with you by offering you peace of mind, and a money back guarantee if your wind isn&apos;t kept in check.\nBURP&apos;s ultra-sensitive technology can also detect when wind is on its way, you never need to get caught out again, the sweet releases extra chemicals to identify the problem area and hit the spot before the wind can work its way up to your mouth. With zero sugar we ensure your teeth won&apos;t suffer while using our product, if anything your smile will be bigger and brighter as all the stress leaves your body (1 out of 8 users agree).",
      "We are delighted to introduce you to our new, state of the art, home office. ZZZZZZ Bed is a revolutionary space-saving concept for those of you struggling to fit everything into your tiny home. But it&apos;s not just about its useful integration in your existing room, it&apos;s also about the convenience it offers in your work and leisure time.\nPicture this, you are halfway through your working day and it&apos;s time for a well-earned nap. You will be able to save time by moving your work to one side, as you lie back and drift off without interrupting the natural flow of the day. When you&apos;ve had your power nap, and are ready to get back to it everything is there waiting for you.\nNothing can offer you a work-life balance like the ZZZZZZ bed can. Sleep in comfort when you need to, whatever time of day it is. Wake up and work any time sleep is getting the better of you, your office will always be at your fingertips. Call us today for a free quote and to discuss any of our innovative add-ons you will wonder how you ever lived without",
      "Giant Pillow Thing - Because, why not?\nHave you ever been sat at home or in the office and thought, I&apos;d much rather sit in something that a team of Gurkha guides couldn&apos;t find me in? Well, look no further than this enormous, luxury pillow. It&apos;s ideal for car parks, open air fields, unused basements and big living rooms. Simply drag it in with your team of weight lifters and hide from your loved ones for days. This is the perfect product to lounge in comfort in front of the TV on, have a family reunion in, or land on after jumping out of a plane.",
      "The Lazy Dog is brought to you by the same people who invented the wheel. Do you become frustrated when your small dog just can&apos;t keep up the pace, or stubbornly sits and gives up walking altogether? If the answer is yes, then The Lazy Dog is for you!\nAs easy to fit as a harness these remote controlled owl wings are a must have for any dog lover. As soon as your pooch has taken its last step of the day just snap the wings into place and click the red &apos;flapping&apos; button on your handheld remote. After a few seconds, your furry friend will be off the ground and up, up and away.\nOnce at a safe height, WARNING: BEWARE OF LOW HANGING BRANCHES, click the blue button to initiate cruise control. The wings have inbuilt cameras so you can see what your dog sees. When clicking the black button your dog can swoop down and gain speed in the &apos;fake chasing rabbits&apos; mode. This function is used at the owner&apos;s risk as it uses a lot of power, and if the battery pack dies a nasty accident could occur.\nCarrying your pooch has become a thing of the past. With The Lazy Dog, the dog park will become a place to enjoy again. You can also purchase an aviator hat and goggles, extra protection and peace of mind for you and your pooch."
    ],
    "category": [
      "Pets",
      "Lifestyle",
      "Corporate gifts",
      "Accessories",
      "Tech gifts"
    ],
    "name": [
      "Lightbulb Moments",
      "Hitch A Lift",
      "Folding Gadgets",
      "The Lazy Dog",
      "Cheshire Cat Grin",
      "All-in-One Typewriter",
      "Pet Experience Days",
      "Giant Pillow Thing",
      "Grow Your Own Spy Kit",
      "Gym Suit",
      "Photobomb Backdrops",
      "Fur Babies",
      "Balance Beams",
      "ZZZZZZ Bed - Your New Home Office",
      "The Giant Enter Key",
      "BURP Protection",
      "There is No &apos;I&apos; in Team",
      "Pest Control Umbrella",
      "Six Pack Beer Belt",
      "Caution Sign"
    ]
  },
  "pg_statio_sys_sequences": {
    "relname": [],
    "schemaname": []
  },
  "pg_shdescription": {
    "description": [
      "default administrative connection database",
      "default template for new databases",
      "unmodifiable empty database"
    ]
  },
  "table_constraints": {},
  "column_privileges": {},
  "pg_statio_user_sequences": {
    "relname": [],
    "schemaname": []
  },
  "pg_seclabel": {
    "provider": [],
    "label": []
  },
  "pg_largeobject_metadata": {},
  "sql_sizing_profiles": {},
  "foreign_data_wrapper_options": {},
  "element_types": {},
  "pg_subscription_rel": {},
  "pg_statistic_ext_data": {},
  "view_column_usage": {},
  "administrable_role_authorizations": {},
  "pg_event_trigger": {
    "evtevent": [],
    "evtname": []
  },
  "check_constraints": {},
  "pg_auth_members": {},
  "pg_language": {
    "lanname": [
      "plpgsql",
      "c",
      "sql",
      "internal"
    ]
  },
  "pg_policies": {
    "schemaname": [],
    "with_check": [],
    "tablename": [],
    "policyname": [],
    "qual": [],
    "cmd": [],
    "permissive": []
  },
  "pg_statio_user_tables": {
    "relname": [
      "users_zxzlar",
      "products"
    ],
    "schemaname": [
      "public"
    ]
  },
  "parameters": {},
  "pg_conversion": {
    "conname": [
      "utf8_to_windows_1256",
      "utf8_to_windows_1253",
      "utf8_to_big5",
      "iso_8859_2_to_mic",
      "windows_1250_to_mic",
      "utf8_to_windows_1250",
      "iso_8859_3_to_mic",
      "iso_8859_1_to_utf8",
      "iso_8859_5_to_mic",
      "utf8_to_iso_8859_16",
      "iso_8859_14_to_utf8",
      "windows_1251_to_iso_8859_5",
      "iso_8859_16_to_utf8",
      "iso_8859_4_to_utf8",
      "gb18030_to_utf8",
      "iso_8859_13_to_utf8",
      "uhc_to_utf8",
      "iso_8859_10_to_utf8",
      "utf8_to_euc_jp",
      "utf8_to_iso_8859_2",
      "windows_1251_to_utf8",
      "windows_874_to_utf8",
      "utf8_to_windows_1257",
      "mic_to_iso_8859_4",
      "windows_1250_to_iso_8859_2",
      "mic_to_iso_8859_5",
      "johab_to_utf8",
      "euc_tw_to_utf8",
      "utf8_to_iso_8859_5",
      "utf8_to_windows_1258",
      "utf8_to_gb18030",
      "windows_1252_to_utf8",
      "windows_1254_to_utf8",
      "windows_1250_to_utf8",
      "utf8_to_iso_8859_8",
      "ascii_to_mic",
      "utf8_to_iso_8859_13",
      "mic_to_iso_8859_1",
      "euc_jp_to_mic",
      "utf8_to_uhc",
      "iso_8859_7_to_utf8",
      "windows_1253_to_utf8",
      "sjis_to_mic",
      "windows_866_to_mic",
      "utf8_to_shift_jis_2004",
      "utf8_to_windows_874",
      "euc_jis_2004_to_utf8",
      "utf8_to_iso_8859_14",
      "iso_8859_5_to_windows_1251",
      "utf8_to_sjis",
      "euc_jp_to_utf8",
      "windows_866_to_windows_1251",
      "mic_to_euc_jp",
      "utf8_to_koi8_r",
      "windows_866_to_koi8_r",
      "windows_1258_to_utf8",
      "mic_to_big5",
      "mic_to_iso_8859_3",
      "windows_866_to_iso_8859_5",
      "utf8_to_euc_tw",
      "utf8_to_iso_8859_7",
      "shift_jis_2004_to_euc_jis_2004",
      "utf8_to_windows_1251",
      "utf8_to_euc_jis_2004",
      "koi8_r_to_windows_1251",
      "utf8_to_iso_8859_6",
      "mic_to_koi8_r",
      "big5_to_utf8",
      "utf8_to_gbk",
      "euc_cn_to_utf8",
      "mic_to_windows_1251",
      "windows_1251_to_windows_866",
      "utf8_to_koi8_u",
      "koi8_u_to_utf8",
      "windows_866_to_utf8",
      "iso_8859_4_to_mic",
      "sjis_to_utf8",
      "utf8_to_iso_8859_3",
      "mic_to_windows_866",
      "iso_8859_3_to_utf8",
      "windows_1251_to_mic",
      "utf8_to_iso_8859_9",
      "euc_cn_to_mic",
      "koi8_r_to_windows_866",
      "euc_tw_to_mic",
      "windows_1251_to_koi8_r",
      "utf8_to_johab",
      "koi8_r_to_utf8",
      "euc_jis_2004_to_shift_jis_2004",
      "iso_8859_8_to_utf8",
      "mic_to_iso_8859_2",
      "utf8_to_iso_8859_10",
      "big5_to_mic",
      "utf8_to_windows_1255",
      "iso_8859_6_to_utf8",
      "iso_8859_5_to_utf8",
      "windows_1255_to_utf8",
      "windows_1257_to_utf8",
      "mic_to_euc_kr",
      "utf8_to_windows_866",
      "iso_8859_5_to_windows_866",
      "euc_tw_to_big5",
      "koi8_r_to_mic",
      "shift_jis_2004_to_utf8",
      "iso_8859_5_to_koi8_r",
      "iso_8859_9_to_utf8",
      "big5_to_euc_tw",
      "euc_jp_to_sjis",
      "utf8_to_iso_8859_15",
      "utf8_to_iso_8859_4",
      "sjis_to_euc_jp",
      "gbk_to_utf8",
      "utf8_to_ascii",
      "utf8_to_windows_1252",
      "utf8_to_euc_kr",
      "euc_kr_to_utf8",
      "koi8_r_to_iso_8859_5",
      "windows_1256_to_utf8",
      "mic_to_euc_tw",
      "mic_to_windows_1250",
      "euc_kr_to_mic",
      "mic_to_sjis",
      "utf8_to_iso_8859_1",
      "utf8_to_euc_cn",
      "mic_to_ascii",
      "mic_to_euc_cn",
      "iso_8859_2_to_windows_1250",
      "iso_8859_2_to_utf8",
      "utf8_to_windows_1254",
      "iso_8859_1_to_mic",
      "ascii_to_utf8",
      "iso_8859_15_to_utf8"
    ]
  },
  "pg_trigger": {
    "tgnewtable": [],
    "tgoldtable": [],
    "tgname": []
  },
  "pg_range": {},
  "columns": {},
  "pg_pltemplate": {
    "tmplvalidator": [
      "plpython_validator",
      "plpgsql_validator",
      "plpython2_validator",
      "plpython3_validator",
      "plperl_validator",
      "plperlu_validator"
    ],
    "tmplinline": [
      "plpython2_inline_handler",
      "plperl_inline_handler",
      "plpgsql_inline_handler",
      "plperlu_inline_handler",
      "plpython_inline_handler",
      "plpython3_inline_handler"
    ],
    "tmpllibrary": [
      "$libdir/plpython2",
      "$libdir/plperl",
      "$libdir/plpgsql",
      "$libdir/plpython3",
      "$libdir/pltcl"
    ],
    "tmplname": [
      "plperlu",
      "plpgsql",
      "plpythonu",
      "plpython2u",
      "plpython3u",
      "pltcl",
      "plperl",
      "pltclu"
    ],
    "tmplhandler": [
      "plperl_call_handler",
      "pltcl_call_handler",
      "plpython_call_handler",
      "plpython3_call_handler",
      "plpython2_call_handler",
      "plpgsql_call_handler",
      "plperlu_call_handler",
      "pltclu_call_handler"
    ]
  },
  "pg_stat_subscription": {
    "subname": []
  },
  "pg_attribute": {
    "attname": [
      "last_autovacuum",
      "relispopulated",
      "result_cast_as_locator",
      "ordering_routine_schema",
      "statistics_name",
      "srvversion",
      "proname",
      "opcowner",
      "schema",
      "member",
      "line_number",
      "routine_definition",
      "evtevent",
      "tmplhandler",
      "parameter_mode",
      "inhparent",
      "typdefault",
      "backend_xid",
      "integer_value",
      "amname",
      "checkpoints_req",
      "is_trigger_deletable",
      "relnamespace",
      "condeferred",
      "objnamespace",
      "last_failed_wal",
      "extrelocatable",
      "comment",
      "collctype",
      "amprocfamily",
      "tgrelid",
      "trftosql",
      "proargnames",
      "is_trigger_updatable",
      "table_schema",
      "constraint_catalog",
      "collencoding",
      "boot_val",
      "stanumbers2",
      "checkpoint_write_time",
      "aggfinalextra",
      "aggserialfn",
      "lanname",
      "local_id",
      "backend_type",
      "cmd",
      "result_cast_numeric_scale",
      "passwd",
      "table_catalog",
      "toast_blks_read",
      "srvoptions",
      "objtype",
      "buffers_checkpoint",
      "last_value",
      "relacl",
      "database",
      "atthasmissing",
      "domain_catalog",
      "latest_end_time",
      "staop2",
      "view_schema",
      "extversion",
      "nspacl",
      "identity_generation",
      "datetime_precision",
      "datctype",
      "opfnamespace",
      "is_updatable",
      "idx_scan",
      "castcontext",
      "implementation_info_name",
      "lockers_total",
      "temp_bytes",
      "n_tup_ins",
      "blocks_total",
      "mapdict",
      "privtype",
      "encoding",
      "conninfo",
      "dictname",
      "collation_name",
      "fdwoptions",
      "attfdwoptions",
      "opfowner",
      "character_maximum_length",
      "catalog_name",
      "character_repertoire",
      "pubname",
      "hasindexes",
      "external_name",
      "stavalues4",
      "attribute_udt_schema",
      "foreign_data_wrapper_language",
      "is_instantiable",
      "laninline",
      "ordering_routine_catalog",
      "rngsubdiff",
      "attbyval",
      "blks_hit",
      "umuser",
      "write_lag",
      "source",
      "prslextype",
      "type_udt_schema",
      "srsubid",
      "sync_state",
      "ev_enabled",
      "xmax",
      "castfunc",
      "indcollation",
      "typarray",
      "last_analyze",
      "routine_schema",
      "spcowner",
      "replay_lsn",
      "heap_blks_vacuumed",
      "cmax",
      "result_cast_numeric_precision",
      "ftoptions",
      "slot_name",
      "conflicts",
      "seqcache",
      "typcategory",
      "oprright",
      "conbin",
      "aggkind",
      "is_grantable",
      "condefault",
      "wait_event_type",
      "tidx_blks_read",
      "attislocal",
      "min_val",
      "unique_constraint_name",
      "enumsortorder",
      "scope_catalog",
      "event_object_table",
      "transaction",
      "aggtranstype",
      "authorization_identifier",
      "result_cast_type_udt_catalog",
      "refobjid",
      "archived_count",
      "local_lsn",
      "setconfig",
      "character_set_catalog",
      "opcname",
      "attstorage",
      "srvacl",
      "amopsortfamily",
      "sourceline",
      "pubinsert",
      "cfgparser",
      "character_value",
      "mapseqno",
      "object_name",
      "rolname",
      "tablename",
      "external_id",
      "confupdtype",
      "buffers_alloc",
      "collname",
      "indclass",
      "heap_blks_total",
      "last_msg_send_time",
      "adnum",
      "reference_generation",
      "umserver",
      "is_dst",
      "checkpoint_sync_time",
      "foreign_table_catalog",
      "trigger_name",
      "cache_size",
      "tmplinit",
      "state_change",
      "tginitdeferred",
      "seqtypid",
      "stacoll2",
      "sequence_schema",
      "indexrelname",
      "sql_data_access",
      "attnotnull",
      "typisdefined",
      "relhasindex",
      "provolatile",
      "relminmxid",
      "most_common_freqs",
      "gss_authenticated",
      "attgenerated",
      "relam",
      "constraint_type",
      "confkey",
      "principal",
      "backend_start",
      "sequence_name",
      "amtype",
      "domain_default",
      "restart_lsn",
      "stanumbers5",
      "heap_blks_hit",
      "self_referencing_column_name",
      "ftserver",
      "relispartition",
      "reltype",
      "name",
      "dtd_identifier",
      "action_reference_old_table",
      "srvid",
      "indoption",
      "last_altered",
      "ev_action",
      "stavalues2",
      "fastpath",
      "result_cast_scope_schema",
      "short_desc",
      "phase",
      "subsynccommit",
      "relid",
      "relrowsecurity",
      "data_type",
      "relfilenode",
      "interval_type",
      "staop4",
      "attcacheoff",
      "seqmin",
      "comments",
      "typlen",
      "typndims",
      "lanpltrusted",
      "relrewrite",
      "atthasdef",
      "is_deterministic",
      "domain_name",
      "type_udt_catalog",
      "constraint_name",
      "numeric_precision_radix",
      "cmin",
      "action_condition",
      "pronargdefaults",
      "collection_type_identifier",
      "relreplident",
      "typnotnull",
      "seqincrement",
      "aggminvtransfn",
      "amopfamily",
      "attribute_default",
      "issuer_dn",
      "subdbid",
      "address",
      "aggcombinefn",
      "typmodin",
      "lanacl",
      "external_language",
      "most_common_elem_freqs",
      "options",
      "ispopulated",
      "receive_start_lsn",
      "polpermissive",
      "num_dead_tuples",
      "relowner",
      "foreign_table_schema",
      "tuples_total",
      "trftype",
      "tableowner",
      "abbrev",
      "objsubid",
      "funcname",
      "relnatts",
      "stawidth",
      "sql_language_programming_language",
      "xact_rollback",
      "reloptions",
      "rngcanonical",
      "owner",
      "sizing_name",
      "atttypmod",
      "castsource",
      "delete_rule",
      "reply_time",
      "inhrelid",
      "specific_name",
      "id",
      "proargtypes",
      "tup_updated",
      "seq_tup_read",
      "active_pid",
      "constraint_schema",
      "pronargs",
      "useconfig",
      "prepare_time",
      "new_savepoint_level",
      "umid",
      "partitions_total",
      "prolang",
      "as_locator",
      "stxddependencies",
      "library_name",
      "toast_blks_hit",
      "seqrelid",
      "default_character_set_catalog",
      "routine_body",
      "atttypid",
      "datoid",
      "amproclefttype",
      "attmissingval",
      "initprivs",
      "amoprighttype",
      "numeric_precision",
      "buffers_clean",
      "proowner",
      "typreceive",
      "loid",
      "ordering_routine_name",
      "defaclacl",
      "ev_type",
      "bits",
      "opcintype",
      "oprkind",
      "lockers_done",
      "stxoid",
      "indisreplident",
      "result_cast_collation_catalog",
      "refobjsubid",
      "stadistinct",
      "wait_event",
      "last_vacuum",
      "stacoll4",
      "setting",
      "cluster_index_relid",
      "subowner",
      "proretset",
      "aggfinalmodify",
      "client_port",
      "most_common_vals",
      "most_common_base_freqs",
      "heap_blks_scanned",
      "cfgnamespace",
      "subslotname",
      "password_txblci",
      "user_defined_type_name",
      "srvtype",
      "proconfig",
      "typispreferred",
      "attrelid",
      "proacl",
      "object_schema",
      "unit",
      "maximum_cardinality",
      "grolist",
      "client_hostname",
      "correlation",
      "identity_maximum",
      "tup_fetched",
      "stakind1",
      "table_name",
      "rngtypid",
      "histogram_bounds",
      "amopstrategy",
      "lanvalidator",
      "stxrelid",
      "security_type",
      "confl_deadlock",
      "typacl",
      "received_lsn",
      "chunk_data",
      "command",
      "routine_catalog",
      "action_statement",
      "evttags",
      "deptype",
      "index_rebuild_count",
      "initially_deferred",
      "admin_option",
      "aggdeserialfn",
      "increment_by",
      "oprjoin",
      "unique_constraint_schema",
      "idx_blks_hit",
      "agginitval",
      "action_order",
      "oprnamespace",
      "pronamespace",
      "type",
      "datfrozenxid",
      "conforencoding",
      "adrelid",
      "tmplname",
      "confl_bufferpin",
      "auth_method",
      "most_common_val_nulls",
      "fdwhandler",
      "to_sql_specific_catalog",
      "extra_desc",
      "aggtransfn",
      "spcname",
      "installed_version",
      "collisdeterministic",
      "cfgowner",
      "stanumbers4",
      "indexrelid",
      "datconnlimit",
      "lanispl",
      "staattnum",
      "prstoken",
      "relkind",
      "dicttemplate",
      "staop3",
      "max_dead_tuples",
      "oprcode",
      "cfgname",
      "usename",
      "extname",
      "module_schema",
      "minimum_value",
      "datminmxid",
      "prsnamespace",
      "stacoll1",
      "confdeltype",
      "tableoid",
      "catalog_xmin",
      "is_typed",
      "schemaname",
      "subid",
      "attlen",
      "last_autoanalyze",
      "viewowner",
      "sequenceowner",
      "refclassid",
      "attribute_udt_catalog",
      "indpred",
      "hasrules",
      "foreign_data_wrapper_name",
      "latest_end_lsn",
      "application_name",
      "status",
      "opcdefault",
      "is_insertable_into",
      "amprocrighttype",
      "option_value",
      "foreign_server_name",
      "objid",
      "vartype",
      "typdelim",
      "aggsortop",
      "object_catalog",
      "prorettype",
      "tgnewtable",
      "inhseqno",
      "attnum",
      "lomowner",
      "is_trigger_insertable_into",
      "enforced",
      "proargmodes",
      "polrelid",
      "stakind3",
      "calls",
      "form_of_use",
      "staop1",
      "statement",
      "tgconstrrelid",
      "tmpltrusted",
      "pageno",
      "oprcanmerge",
      "compression",
      "query_start",
      "is_nullable",
      "buffers_backend_fsync",
      "sql_language_source",
      "xmin",
      "dictnamespace",
      "foreign_data_wrapper_catalog",
      "is_instead",
      "result_cast_type_udt_schema",
      "conffeqop",
      "roname",
      "blks_read",
      "routine_name",
      "feature_id",
      "castmethod",
      "stanullfrac",
      "prsname",
      "self_time",
      "stxdmcv",
      "numbackends",
      "seqcycle",
      "proallargtypes",
      "userepl",
      "aggmfinalfn",
      "typname",
      "typowner",
      "proargdefaults",
      "character_set_schema",
      "chunk_id",
      "aggnumdirectargs",
      "generation_expression",
      "aggmfinalextra",
      "aggtransspace",
      "n_mod_since_analyze",
      "typstorage",
      "provider",
      "nspname",
      "index_relid",
      "partclass",
      "partitions_done",
      "prpubid",
      "relpartbound",
      "relfrozenxid",
      "oprresult",
      "max_val",
      "aggmtranstype",
      "module_name",
      "action_orientation",
      "conppeqop",
      "inherited",
      "rolcreatedb",
      "relpersistence",
      "tgqual",
      "ref_dtd_identifier",
      "user_defined_type_category",
      "indisprimary",
      "relhastriggers",
      "tmpllibrary",
      "matviewowner",
      "rolcanlogin",
      "last_msg_receipt_time",
      "defaclobjtype",
      "match_option",
      "stavalues3",
      "stxnamespace",
      "vacuum_count",
      "umoptions",
      "released",
      "action_reference_new_row",
      "rowsecurity",
      "attnames",
      "cycle",
      "reltoastrelid",
      "required_value",
      "roles",
      "confl_lock",
      "cycle_option",
      "relhasrules",
      "result_cast_from_data_type",
      "rngcollation",
      "interval_precision",
      "client_dn",
      "is_identity",
      "datallowconn",
      "max_dynamic_result_sets",
      "confmatchtype",
      "fdwname",
      "classid",
      "tmplinline",
      "rating",
      "coninhcount",
      "sql_language_year",
      "amhandler",
      "attstattarget",
      "active",
      "netmask",
      "defaclnamespace",
      "is_scrollable",
      "subenabled",
      "object_type",
      "xact_start",
      "data",
      "oprowner",
      "schema_name",
      "is_null_call",
      "typmodout",
      "identity_minimum",
      "stavalues1",
      "trffromsql",
      "srsublsn",
      "srsubstate",
      "tmplvalidator",
      "confl_tablespace",
      "typsend",
      "pubtruncate",
      "rolvaliduntil",
      "tgname",
      "evtname",
      "encrypted",
      "replay_lag",
      "extowner",
      "state",
      "pubowner",
      "polname",
      "plugin",
      "action_reference_new_table",
      "autoanalyze_count",
      "privilege_type",
      "enumvals",
      "conislocal",
      "subname",
      "spcacl",
      "requires",
      "typalign",
      "reloftype",
      "default_character_set_schema",
      "nspowner",
      "opfmethod",
      "created",
      "conkey",
      "parameter_style",
      "policyname",
      "last_archived_wal",
      "tup_inserted",
      "foreign_table_name",
      "chunk_seq",
      "pubupdate",
      "setdatabase",
      "oprrest",
      "profile_id",
      "result_cast_numeric_precision_radix",
      "sequence_catalog",
      "blk_write_time",
      "result_cast_scope_name",
      "heap_tuples_written",
      "autovacuum_count",
      "price",
      "protrftypes",
      "classoid",
      "source_dtd_identifier",
      "datcollate",
      "result_cast_char_set_schema",
      "staop5",
      "datid",
      "option_name",
      "attname",
      "typbyval",
      "context",
      "datistemplate",
      "datlastsysoid",
      "is_derived_reference_attribute",
      "indkey",
      "most_common_elems",
      "stxdndistinct",
      "module_catalog",
      "oprcanhash",
      "gid",
      "indisexclusion",
      "is_verified_by",
      "typnamespace",
      "rolpassword",
      "polroles",
      "superuser",
      "tmplacl",
      "parameter_default",
      "typdefaultbin",
      "position_in_unique_constraint",
      "amopopr",
      "failed_count",
      "result_cast_char_max_length",
      "is_result",
      "evtowner",
      "rolreplication",
      "dependencies",
      "ordinal_position",
      "tgfoid",
      "current_locker_pid",
      "n_distinct",
      "tmpldbacreate",
      "grantor",
      "typrelid",
      "tgisinternal",
      "indisready",
      "role_name",
      "grantee",
      "amopmethod",
      "usecreatedb",
      "idx_tup_fetch",
      "definition",
      "spcoptions",
      "relhassubclass",
      "ev_qual",
      "collprovider",
      "srvname",
      "rolconfig",
      "proparallel",
      "stavalues5",
      "virtualxid",
      "aggmfinalmodify",
      "oprcom",
      "connoinherit",
      "view_name",
      "fdwacl",
      "foreign_server_type",
      "total_time",
      "implementation_info_id",
      "applied",
      "conproc",
      "sent_lsn",
      "conrelid",
      "heap_blks_read",
      "oprnegate",
      "temp_files",
      "fdwowner",
      "amprocnum",
      "result_cast_type_udt_name",
      "result_cast_scope_catalog",
      "tmplnamespace",
      "default_collate_name",
      "qual",
      "schema_level_routine",
      "result_cast_char_set_catalog",
      "is_deferrable",
      "setrole",
      "maximum_value",
      "transactionid",
      "max_value",
      "xact_commit",
      "indexprs",
      "opckeytype",
      "sub_feature_name",
      "prokind",
      "collation_catalog",
      "min_value",
      "stats_reset",
      "opcfamily",
      "enumtypid",
      "n_live_tup",
      "stanumbers1",
      "column_name",
      "indcheckxmin",
      "attndims",
      "trigger_catalog",
      "buffers_backend",
      "sourcefile",
      "adbin",
      "attribute_name",
      "reference_type",
      "statistics_owner",
      "udt_name",
      "stxowner",
      "client_serial",
      "aggminitval",
      "oid",
      "roident",
      "seq_scan",
      "typanalyze",
      "polqual",
      "stakind4",
      "aggfnoid",
      "datname",
      "ev_class",
      "typelem",
      "typinput",
      "rolsuper",
      "n_dead_tup",
      "conname",
      "view_catalog",
      "udt_catalog",
      "datacl",
      "relchecks",
      "virtualtransaction",
      "stxname",
      "oprleft",
      "identity_start",
      "tgdeferrable",
      "aggfinalfn",
      "username_gphaga",
      "n_tup_upd",
      "is_holdable",
      "ftrelid",
      "hastriggers",
      "connamespace",
      "conexclop",
      "received_tli",
      "extnamespace",
      "casttarget",
      "tuples_done",
      "error",
      "sender_port",
      "prosecdef",
      "relisshared",
      "default_collate_catalog",
      "usesysid",
      "fdwvalidator",
      "idx_blks_read",
      "stainherit",
      "result_cast_collation_schema",
      "maxwritten_clean",
      "prepared",
      "result_cast_interval_precision",
      "indrelid",
      "provariadic",
      "sql_language_binding_style",
      "usebypassrls",
      "attinhcount",
      "funcid",
      "event_object_catalog",
      "result_cast_interval_type",
      "conindid",
      "creation_time",
      "collversion",
      "collowner",
      "starelid",
      "confl_snapshot",
      "index_vacuum_count",
      "ordering_category",
      "stacoll5",
      "relpages",
      "sql_language_integrity",
      "dictinitoption",
      "condeferrable",
      "flush_lag",
      "attacl",
      "elem_count_histogram",
      "probin",
      "polwithcheck",
      "pubdelete",
      "feature_name",
      "collation_schema",
      "sql_language_implementation",
      "seqstart",
      "attcollation",
      "tgconstrindid",
      "specific_schema",
      "seqno",
      "convalidated",
      "specific_catalog",
      "extcondition",
      "client_addr",
      "transform_type",
      "is_final",
      "amoppurpose",
      "start_value",
      "partexprs",
      "relocatable",
      "is_binary",
      "parameter_name",
      "indisunique",
      "viewname",
      "lanplcallfoid",
      "srvowner",
      "ordering_form",
      "roleid",
      "objoid",
      "user_defined_type_schema",
      "backend_xmin",
      "cipher",
      "type_udt_name",
      "permissive",
      "label",
      "groname",
      "contoencoding",
      "relforcerowsecurity",
      "polcmd",
      "is_generated",
      "objname",
      "n_tup_del",
      "tgconstraint",
      "tgoldtable",
      "action_timing",
      "result_cast_maximum_cardinality",
      "result_cast_char_octet_length",
      "collcollate",
      "tgnargs",
      "scope_name",
      "trflang",
      "foreign_server_catalog",
      "image",
      "action_reference_old_row",
      "opfname",
      "numeric_scale",
      "sql_path",
      "is_udt_dependent",
      "result_cast_collation_name",
      "pid",
      "parameter_types",
      "event_object_schema",
      "sequencename",
      "indexdef",
      "tablespace",
      "typtype",
      "schema_owner",
      "domain_schema",
      "conparentid",
      "lanowner",
      "evtenabled",
      "indimmediate",
      "stxkeys",
      "to_sql_specific_name",
      "installed",
      "prosrc",
      "relallvisible",
      "page",
      "commit_action",
      "ssl",
      "usesuper",
      "indislive",
      "locktype",
      "heap_tuples_scanned",
      "rngsubtype",
      "check_option",
      "relname",
      "ctid",
      "rolconnlimit",
      "identity_cycle",
      "with_check",
      "prorows",
      "enumlabel",
      "check_clause",
      "is_user_defined_cast",
      "last_archived_time",
      "blk_read_time",
      "query",
      "tgattr",
      "result_cast_dtd_identifier",
      "rolcreaterole",
      "stakind2",
      "grosysid",
      "default_version",
      "event_object_column",
      "flush_lsn",
      "granted",
      "tuple",
      "pending_restart",
      "relation",
      "description",
      "table_type",
      "typcollation",
      "tup_deleted",
      "prosupport",
      "user_name",
      "attoptions",
      "proisstrict",
      "prsheadline",
      "typbasetype",
      "default_character_set_name",
      "idx_tup_read",
      "unique_constraint_catalog",
      "statistics_schemaname",
      "typtypmod",
      "blocks_done",
      "last_failed_time",
      "confirmed_flush_lsn",
      "puballtables",
      "is_supported",
      "deadlocks",
      "aggmtransfn",
      "srvfdw",
      "foreign_server_version",
      "rngsubopc",
      "supported_value",
      "checksum_failures",
      "partattrs",
      "evtfoid",
      "dictowner",
      "rulename",
      "contype",
      "dattablespace",
      "slot_type",
      "remote_lsn",
      "sender_host",
      "version",
      "character_set_name",
      "tmpllexize",
      "amproc",
      "from_sql",
      "reltuples",
      "indnatts",
      "character_octet_length",
      "tgenabled",
      "stanumbers3",
      "opcmethod",
      "dependent_column",
      "oprname",
      "reltablespace",
      "attidentity",
      "update_rule",
      "extconfig",
      "n_tup_hot_upd",
      "increment",
      "defaclrole",
      "attalign",
      "subpublications",
      "partstrat",
      "partrelid",
      "prsstart",
      "view_definition",
      "subconninfo",
      "indisvalid",
      "matviewname",
      "prrelid",
      "result_cast_datetime_precision",
      "indnkeyatts",
      "default_collate_schema",
      "avg_width",
      "group_name",
      "is_implicitly_invocable",
      "attisdropped",
      "seqmax",
      "contypid",
      "checkpoints_timed",
      "stxkind",
      "pad_attribute",
      "receive_start_tli",
      "maptokentype",
      "is_self_referencing",
      "mapcfg",
      "column_default",
      "identity_increment",
      "aggmtransspace",
      "trigger_schema",
      "scope_schema",
      "user_defined_type_catalog",
      "indexname",
      "sub_feature_id",
      "mode",
      "tgargs",
      "udt_schema",
      "confrelid",
      "opcnamespace",
      "sizing_id",
      "rolinherit",
      "tgtype",
      "category",
      "analyze_count",
      "kinds",
      "tup_returned",
      "temporary",
      "datdba",
      "checksum_last_failure",
      "routine_type",
      "tidx_blks_hit",
      "srrelid",
      "result_cast_char_set_name",
      "sync_priority",
      "write_lsn",
      "rolbypassrls",
      "amoplefttype",
      "lomacl",
      "attribute_udt_name",
      "collnamespace",
      "conowner",
      "reset_val",
      "to_sql_specific_schema",
      "stakind5",
      "partnatts",
      "prsend",
      "null_frac",
      "indisclustered",
      "event_manipulation",
      "with_hierarchy",
      "partdefid",
      "typoutput",
      "partcollation",
      "conpfeqop",
      "valuntil",
      "utc_offset",
      "dbid",
      "proleakproof",
      "procost",
      "sql_language_conformance",
      "stacoll3"
    ]
  },
  "pg_stat_xact_user_functions": {
    "schemaname": [],
    "funcname": []
  },
  "view_routine_usage": {},
  "pg_stat_database": {
    "datname": [
      "template1",
      "template0",
      "postgres"
    ]
  },
  "pg_locks": {
    "locktype": [
      "virtualxid",
      "relation"
    ],
    "mode": [
      "ExclusiveLock",
      "AccessShareLock"
    ],
    "virtualtransaction": [
      "3/3312"
    ],
    "virtualxid": [
      "3/3316"
    ]
  },
  "pg_stat_wal_receiver": {
    "status": [],
    "slot_name": [],
    "conninfo": [],
    "sender_host": []
  },
  "pg_prepared_xacts": {
    "database": [],
    "owner": [],
    "gid": []
  },
  "routine_privileges": {},
  "pg_operator": {
    "oprname": [
      "&gt;=",
      "-&gt;&gt;",
      "&gt;&gt;",
      "&gt;^",
      "&lt;",
      "&lt;&lt;=",
      "*",
      "&lt;&lt;|",
      "*&gt;",
      "!~~",
      "#&gt;&gt;",
      "/",
      "-|-",
      "?-|",
      "?&amp;",
      "~=",
      "~",
      "?",
      "&lt;^",
      "?#",
      "&amp;",
      "?-",
      "~&gt;=~",
      "&amp;&gt;",
      "!",
      "&lt;-&gt;",
      "?|",
      "#-",
      "*&lt;",
      "~~*",
      "~&gt;~",
      "!!",
      "#",
      "~&lt;~",
      "=",
      "@",
      "##",
      "*&gt;=",
      "|&gt;&gt;",
      "&amp;&amp;",
      "@?",
      "&lt;=",
      "~~",
      "@&gt;",
      "||",
      "&gt;",
      "*=",
      "&gt;&gt;=",
      "||/",
      "-&gt;",
      "^",
      "%",
      "@@@",
      "&lt;@",
      "~*",
      "!~~*",
      "*&lt;&gt;",
      "?||",
      "&lt;&gt;",
      "&amp;&lt;",
      "|&amp;&gt;",
      "&lt;&lt;",
      "#&gt;",
      "+",
      "&amp;&lt;|",
      "@@",
      "*&lt;=",
      "!~*",
      "|",
      "~&lt;=~",
      "-",
      "|/",
      "!~",
      "^@",
      "@-@"
    ]
  },
  "view_table_usage": {},
  "pg_shdepend": {},
  "pg_enum": {
    "enumlabel": []
  },
  "pg_description": {
    "description": [
      "conversion for MULE_INTERNAL to BIG5",
      "Fulah (Latin, Burkina Faso)",
      "timestamp of last replay xact",
      "is adjacent to",
      "monetary amounts, $d,ddd.cc",
      "English (Tonga)",
      "conversion for LATIN6 to UTF8",
      "tablespace location",
      "Serbian (Latin, Montenegro)",
      "maximum value of all integer input values",
      "area of a closed path",
      "English (Jamaica)",
      "configuration for swedish language",
      "conversion for UTF8 to LATIN4",
      "Meru",
      "convert an int4 range to canonical form",
      "length of string in specified encoding",
      "Chakma (India)",
      "double-precision floating point number, 8-byte storage",
      "get transaction Id and commit timestamp of latest transaction commit",
      "convert date and time with time zone to timestamp with time zone",
      "Wolof (Senegal)",
      "json object aggregate final function",
      "Luo (Kenya)",
      "statistics: checkpoint time spent synchronizing buffers to disk, in milliseconds",
      "statistics: reset collected statistics for a single table or index in the current database",
      "statistics: number of tuples read by seqscan",
      "Afrikaans (South Africa)",
      "tangent, degrees",
      "sequence last value",
      "join selectivity of regex match",
      "English (St. Helena)",
      "SP-GiST support for quad tree and k-d tree over point",
      "Oromo (Kenya)",
      "pseudo-type for the result of a tablesample method function",
      "convert box to polygon",
      "generate headline from json",
      "get json array element",
      "char(length), blank-padded string, fixed storage length",
      "Basque (Spain)",
      "implementation of ~ operator",
      "configuration for finnish language",
      "build a json object from pairwise key/value inputs",
      "convert float8 to float4",
      "convert macaddr8 to macaddr",
      "standard POSIX collation",
      "get identification of SQL object for pg_get_object_address()",
      "convert timestamp to timestamp with time zone",
      "conversion for UTF8 to LATIN8",
      "conversion for UTF8 to ISO-8859-7",
      "sequence current value",
      "not equal by area",
      "Northern Luri (Iran)",
      "aggregate final function",
      "conversion for ISO-8859-5 to KOI8R",
      "convert jsonb to int4",
      "matches LIKE expression, case-insensitive",
      "determine if a string is well formed XML",
      "restriction selectivity of exact prefix",
      "Asturian (Spain)",
      "view partition tree tables",
      "internal conversion function for UTF8 to SJIS",
      "add/update ACL item",
      "source text of a rule",
      "statistics: number of function calls in current transaction",
      "population variance of numeric input values (square of the population standard deviation)",
      "date and time with time zone",
      "conversion for UTF8 to EUC_CN",
      "convert text to date",
      "point within closed path, or point on open path",
      "conversion for UTF8 to LATIN2",
      "is supernet",
      "slope between points",
      "Odia",
      "list objects dropped by the current command",
      "boolean-and aggregate",
      "Fulah (Latin, Liberia)",
      "create a replication origin",
      "all keys exist",
      "set byte",
      "pseudo-type representing an internal data structure",
      "conversion for MULE_INTERNAL to EUC_JP",
      "Portuguese (Brazil)",
      "range intersection",
      "current user privilege on server by server name",
      "Nyankole",
      "Akan",
      "Zarma",
      "postmaster start time",
      "English (Christmas Island)",
      "arctangent, degrees",
      "horizontal",
      "collation of the argument; implementation of the COLLATION FOR expression",
      "geometric path &apos;(pt1,...)&apos;",
      "nearest integer &gt;= value",
      "Dutch (Belgium)",
      "convert text to name",
      "English (Zimbabwe)",
      "Spanish (Peru)",
      "implementation of ~&gt;=~ operator",
      "current user privilege on server by server oid",
      "read text from a file",
      "conversion for UHC to UTF8",
      "maximum value of all float8 input values",
      "intersect",
      "Tachelhit (Tifinagh)",
      "Russian (Kyrgyzstan)",
      "Afrikaans (Namibia)",
      "format float4 to text",
      "add points (translate)",
      "conversion for JOHAB to UTF8",
      "statistics: last manual analyze time for a table",
      "encoding name of current database",
      "convert UNIX epoch to timestamptz",
      "implementation of @-@ operator",
      "French (Mayotte)",
      "number of lexemes",
      "snowball stemmer for nepali language",
      "less than",
      "Yoruba",
      "less-equal-greater based on byte images",
      "current user privilege on any column by rel oid",
      "user privilege on function by username, function oid",
      "internal conversion function for UTF8 to GB18030",
      "SHA-256 hash",
      "is right of",
      "implementation of = operator",
      "Cantonese",
      "replace all occurrences in string of old_substr with new_substr",
      "French (Canada)",
      "deprecated, use &lt;@ instead",
      "GIN array support (obsolete)",
      "implementation of # operator",
      "convert int4 to numeric",
      "close path",
      "statistics: number of tuples updated in current transaction",
      "sine",
      "user privilege on foreign data wrapper by user oid, foreign data wrapper oid",
      "statistics: number of dead tuples",
      "statistics: deadlocks detected in database",
      "planner support for timestamp length coercion",
      "convert bitstring to int8",
      "Somali (Djibouti)",
      "referential integrity ON DELETE NO ACTION",
      "current user privilege on tablespace by tablespace name",
      "horizontally aligned",
      "Serbian (Cyrillic, Montenegro)",
      "Bulgarian (Bulgaria)",
      "BRIN inclusion support",
      "current user privilege on sequence by seq name",
      "Rombo",
      "join selectivity of &lt; and related operators on scalar datatypes",
      "convert tsvector to array of lexemes",
      "exponentiation",
      "French (Chad)",
      "copy a logical replication slot, changing temporality and plugin",
      "French (French Polynesia)",
      "array lower dimension",
      "maximum value of all money input values",
      "Kako",
      "concatenate",
      "remove any occurrences of an element from an array",
      "convert role name to regrole",
      "variable-length string, no limit specified",
      "implementation of -|- operator",
      "conversion for EUC_JIS_2004 to UTF8",
      "conversion for UTF8 to WIN1258",
      "conversion for GBK to UTF8",
      "trunc(x/y)",
      "English (Hong Kong SAR China)",
      "Serbian (Latin, Bosnia &amp; Herzegovina)",
      "overlaps or is left of",
      "Icelandic (Iceland)",
      "internal conversion function for WIN1250 to LATIN2",
      "English (U.S. Virgin Islands)",
      "bitwise shift right",
      "restriction selectivity for range operators",
      "pseudo-type for the result of a language handler function",
      "join selectivity of NOT LIKE",
      "statistics: last auto vacuum time for a table",
      "arccosine, degrees",
      "bitstring length",
      "Uzbek (Cyrillic, Uzbekistan)",
      "build an empty json array",
      "Duala",
      "Spanish (Mexico)",
      "greater than or equal",
      "get array of PIDs of sessions blocking specified backend PID from acquiring a safe snapshot",
      "aggregate transition function",
      "network part of address",
      "convert polygon to path",
      "implementation of -&gt;&gt; operator",
      "English (Micronesia)",
      "Western Frisian (Netherlands)",
      "French (Congo - Brazzaville)",
      "argument list of a function",
      "hash index access method handler",
      "user privilege on sequence by username, seq name",
      "Soga (Uganda)",
      "Cantonese (Simplified)",
      "convert timestamp with time zone to time with time zone",
      "show address octets only",
      "English (Cayman Islands)",
      "SP-GiST support for radix tree over text",
      "conversion for EUC_TW to MULE_INTERNAL",
      "pg_controldata recovery state information as a function",
      "implementation of || operator",
      "Yiddish",
      "maximum value of all text input values",
      "convert boolean to text",
      "Tigrinya (Ethiopia)",
      "snowball stemmer for danish language",
      "Macedonian",
      "sample variance of bigint input values (square of the sample standard deviation)",
      "truncate timestamp to specified units",
      "Yoruba (Benin)",
      "length in bits",
      "is the range&apos;s upper bound inclusive?",
      "Is JIT compilation available in this session?",
      "Icelandic",
      "return the next oid for a system table",
      "convert int8 to oid",
      "Spanish (Nicaragua)",
      "internal conversion function for WIN1251 to MULE_INTERNAL",
      "Portuguese (Portugal)",
      "select statement of a view with pretty-print option",
      "internal conversion function for ISO-8859-5 to WIN866",
      "number of decimal digits in the fractional part",
      "map rows from cursor to XML",
      "planner support for numeric length coercion",
      "pseudo-type representing a polymorphic base type that is not an array",
      "maximum value of all inet input values",
      "btree index access method handler",
      "continuous distribution percentile",
      "French (St. Pierre &amp; Miquelon)",
      "English (Montserrat)",
      "get the prepared statements for this session",
      "output money amount as words",
      "convert circle to 12-vertex polygon",
      "statistics: number of manual vacuums for a table",
      "configuration for dutch language",
      "Assamese (India)",
      "distance between endpoints",
      "range of timestamps with time zone",
      "sum as numeric across all numeric input values",
      "statistics: number of blocks fetched in current transaction",
      "partition key description",
      "Nepali",
      "sum as numeric across all bigint input values",
      "Luba-Katanga",
      "constraint description",
      "PostgreSQL LSN datatype",
      "sample standard deviation of float8 input values",
      "internal conversion function for MULE_INTERNAL to EUC_TW",
      "user privilege on column by user oid, rel name, col attnum",
      "Zulu",
      "large object unlink (delete)",
      "statistics: number of tuples fetched by idxscan",
      "configuration for nepali language",
      "Arabic (Morocco)",
      "current user privilege on function by function oid",
      "emit a textual logical decoding message",
      "ispell dictionary",
      "unary plus",
      "restriction selectivity for network operators",
      "internal conversion function for WIN866 to MULE_INTERNAL",
      "implementation of &amp; operator",
      "Swedish (Finland)",
      "Walser (Switzerland)",
      "internal conversion function for EUC_JP to SJIS",
      "convert proname to regproc",
      "minimum value of all interval input values",
      "implementation of !~~* operator",
      "statistics: database ID of backend",
      "get jsonb array element",
      "implementation of !! operator",
      "statistics: number of buffers written by the bgwriter during checkpoints",
      "Arabic (Lebanon)",
      "restriction selectivity of tsvector @@ tsquery",
      "range of bigints",
      "Manx",
      "show pg_hba.conf rules",
      "build a jsonb array from any inputs",
      "Fulah (Latin, Guinea-Bissau)",
      "trigger for automatic update of tsvector column",
      "pseudo-type representing any type",
      "join selectivity of = and related operators",
      "hyperbolic tangent",
      "Bodo (India)",
      "convert date to timestamp",
      "fractional rank within partition",
      "view two-phase transactions",
      "French (Tunisia)",
      "conversion for UTF8 to WIN1250",
      "adjust timestamptz precision",
      "Belarusian (Belarus)",
      "broadcast address of network",
      "degrees to radians",
      "large object seek",
      "sample standard deviation of float4 input values",
      "English (Madagascar)",
      "expand array to set of rows",
      "internal conversion function for EUC_JP to UTF8",
      "population variance of integer input values (square of the population standard deviation)",
      "conversion for UTF8 to LATIN5",
      "population variance of float4 input values (square of the population standard deviation)",
      "restriction selectivity of = and related operators",
      "does not match regular expression, case-sensitive",
      "get the channels that the current backend listens to",
      "Nuer",
      "internal conversion function for WIN1251 to KOI8R",
      "Tatar (Russia)",
      "Latvian",
      "Central Kurdish (Iraq)",
      "row-oriented heap table access method handler",
      "Welsh",
      "Kabuverdianu (Cape Verde)",
      "Portuguese (Equatorial Guinea)",
      "convert date to timestamp with time zone",
      "Arabic (Palestinian Territories)",
      "get an individual replication origin&apos;s replication progress",
      "abbreviated display of inet value",
      "Kalenjin",
      "Chechen",
      "format int4 to text",
      "Rwa",
      "Indonesian (Indonesia)",
      "Serbian (Cyrillic, Kosovo)",
      "French (Mali)",
      "conversion for ISO-8859-5 to MULE_INTERNAL",
      "Teso",
      "construct interval",
      "conversion for LATIN7 to UTF8",
      "matches regular expression, case-insensitive",
      "convert polygon to circle",
      "append element onto end of array",
      "Set part of a jsonb",
      "convert box to circle",
      "statistics: timestamp of the current statistics snapshot",
      "list available extensions",
      "filenode identifier of relation",
      "find first match for regexp",
      "convert a date range to canonical form",
      "peek at binary changes from replication slot",
      "greater than",
      "current wal flush location",
      "Bodo",
      "MACADDR8 manufacturer fields",
      "export a snapshot",
      "trigger description",
      "Spanish (Guatemala)",
      "abbreviated display of cidr value",
      "map query result and structure to XML and XML Schema",
      "maximum value of all anyarray input values",
      "hash a range",
      "internal conversion function for MULE_INTERNAL to EUC_KR",
      "user privilege on database by user oid, database oid",
      "truncate large object",
      "internal conversion function for UTF8 to KOI8R",
      "convert float4 to int2",
      "configuration for italian language",
      "Interlingua (World)",
      "English (Sierra Leone)",
      "internal conversion function for UTF8 to EUC_JP",
      "implementation of #- operator",
      "Friulian (Italy)",
      "German (Belgium)",
      "convert char to int4",
      "is table visible in search path?",
      "SQL-language functions",
      "Kwasio",
      "concatenate array elements, using delimiter and null string, into text",
      "extract field from date",
      "Albanian (Kosovo)",
      "the average (arithmetic mean) as numeric of all integer values",
      "for use by pg_upgrade",
      "user privilege on tablespace by username, tablespace name",
      "convert text to regclass",
      "convert time to time with time zone",
      "Thai",
      "wal filename and byte offset, given a wal location",
      "latest tid of a tuple",
      "convert int8 to bitstring",
      "statistics: tuples fetched for database",
      "true if server is in online backup",
      "conversion for EUC_CN to UTF8",
      "Koyraboro Senni",
      "cumulative distribution of hypothetical row",
      "Gusii (Kenya)",
      "snowball stemmer for indonesian language",
      "Chinese (Traditional, Taiwan)",
      "Arabic (Israel)",
      "average of the independent variable (sum(X)/N)",
      "Bosnian (Latin, Bosnia &amp; Herzegovina)",
      "statistics: start time for current backend session",
      "internal conversion function for SQL_ASCII to UTF8",
      "Machame",
      "population standard deviation of smallint input values",
      "population variance of smallint input values (square of the population standard deviation)",
      "maximum value of all interval input values",
      "statistics: user ID of backend",
      "database&apos;s default collation",
      "quote a possibly-null data value for usage in a querystring",
      "IP address/netmask, host address, netmask optional",
      "internal conversion function for WIN to UTF8",
      "statistics of tsvector column",
      "pseudo-type representing a polymorphic base type that is an enum",
      "terminate a server process",
      "configuration for portuguese language",
      "get current tsearch configuration",
      "English (Belize)",
      "English (Vanuatu)",
      "Nama (Namibia)",
      "write data at offset",
      "statistics: total execution time of function, in milliseconds",
      "French (Equatorial Guinea)",
      "Urdu",
      "conversion for MULE_INTERNAL to SJIS",
      "Masai (Kenya)",
      "statistics: number of function calls",
      "Cantonese (Traditional)",
      "send a notification event",
      "get record fields from a json object",
      "current user privilege on database by database oid",
      "implementation of | operator",
      "Koyra Chiini (Mali)",
      "nearest integer &lt;= value",
      "sum as float4 across all float4 input values",
      "German (Germany)",
      "value truncated to &apos;scale&apos;",
      "internal conversion function for LATIN4 to MULE_INTERNAL",
      "Bosnian (Cyrillic)",
      "French (Belgium)",
      "snowball stemmer for portuguese language",
      "copy a physical replication slot, changing temporality",
      "adjust timestamp to new time zone",
      "bitwise-or bigint aggregate",
      "English (Guam)",
      "internal conversion function for MULE_INTERNAL to EUC_JP",
      "French (Algeria)",
      "internal conversion function for SQL_ASCII to MULE_INTERNAL",
      "implementation of ?|| operator",
      "configuration for danish language",
      "Sinhala",
      "Armenian (Armenia)",
      "decrement, ignores second argument",
      "English (Canada)",
      "Faroese",
      "Filipino",
      "Italian (Vatican City)",
      "multiple continuous percentiles",
      "sample variance of float8 input values (square of the sample standard deviation)",
      "convert timestamp with time zone to timestamp",
      "Somali (Kenya)",
      "does not match LIKE expression, case-insensitive",
      "configuration for indonesian language",
      "get jsonb object field",
      "Slovenian (Slovenia)",
      "historical alias for stddev_samp",
      "French (French Guiana)",
      "Sakha (Russia)",
      "English (Mauritius)",
      "Nama",
      "adjust char() to typmod length",
      "conversion for WIN866 to MULE_INTERNAL",
      "Lower Sorbian",
      "Masai (Tanzania)",
      "internal conversion function for UTF8 to EUC_TW",
      "internal conversion function for UTF8 to KOI8U",
      "Makhuwa-Meetto (Mozambique)",
      "user privilege on language by user oid, language name",
      "convert int4 to money",
      "concatenate name and oid",
      "conversion for BIG5 to EUC_TW",
      "Maltese (Malta)",
      "Kabyle",
      "conversion for EUC_JP to MULE_INTERNAL",
      "statistics: address of client connected to backend",
      "registered text search configuration",
      "arctangent, two arguments, degrees",
      "Mundang",
      "convert jsonb to int8",
      "Chinese (Simplified, Hong Kong SAR China)",
      "Turkmen (Turkmenistan)",
      "English (Singapore)",
      "Arabic (Kuwait)",
      "Chinese (Traditional, Hong Kong SAR China)",
      "join selectivity of LIKE",
      "internal conversion function for UTF8 to SQL_ASCII",
      "population standard deviation of float8 input values",
      "French (Martinique)",
      "French (Switzerland)",
      "English (Uganda)",
      "array dimensions",
      "implementation of &lt;&lt;= operator",
      "current user privilege on sequence by seq oid",
      "implementation of @ operator",
      "configuration for romanian language",
      "Fulah (Latin, Cameroon)",
      "length",
      "internal conversion function for GB18030 to UTF8",
      "perpendicular",
      "transform string values from jsonb to tsvector",
      "statistics: number of blocks found in cache",
      "delete given lexemes",
      "Welsh (United Kingdom)",
      "Ngiemboon (Cameroon)",
      "box width",
      "Bafia",
      "delete lexeme",
      "internal conversion function for WIN866 to KOI8R",
      "map cursor structure to XML Schema",
      "French (Syria)",
      "implementation of ^ operator",
      "pseudo-type for the result of an index AM handler function",
      "current user privilege on any column by rel name",
      "convert int8 number to hex",
      "French (Vanuatu)",
      "get description for table column",
      "French (Togo)",
      "standard C collation",
      "relevance",
      "Yangben",
      "less-equal-greater",
      "conversion for UTF8 to EUC_JIS_2004",
      "release shared advisory lock",
      "Swahili (Tanzania)",
      "less than or equal",
      "North Ndebele (Zimbabwe)",
      "English (Marshall Islands)",
      "conversion for LATIN9 to UTF8",
      "internal conversion function for UTF8 to SHIFT_JIS_2004",
      "Vunjo (Tanzania)",
      "bitwise shift left",
      "Hausa (Ghana)",
      "German (Liechtenstein)",
      "delete array element",
      "Malagasy",
      "convert char(n) to name",
      "conversion for EUC_KR to UTF8",
      "English (Isle of Man)",
      "get jsonb object field as text",
      "divide",
      "English (United States, Computer)",
      "Kashmiri",
      "statistics: number of auto analyzes for a table",
      "setup the transaction&apos;s origin lsn and timestamp",
      "Pashto",
      "snowball stemmer for hungarian language",
      "arccosine",
      "delete object fields",
      "Finnish",
      "convert LIKE pattern to use backslash escapes",
      "statistics: number of tuples fetched by idxscan in current transaction",
      "configure session to maintain replication progress tracking for the passed in origin",
      "bitwise-and bit aggregate",
      "Konkani",
      "Indonesian",
      "statistics: number of live tuples",
      "aggregate inputs into jsonb object",
      "Tamil",
      "hyperbolic cosine",
      "conversion for EUC_TW to UTF8",
      "SHOW X as a function",
      "convert type name to regtype",
      "population standard deviation of bigint input values",
      "get description for object id and shared catalog name",
      "English (British Indian Ocean Territory)",
      "internal conversion function for EUC_JIS_2004 to UTF8",
      "user privilege on server by username, server name",
      "English (Sweden)",
      "add",
      "divide (rotate/scale path)",
      "reference to cursor (portal name)",
      "implementation of ~&lt;~ operator",
      "trigger description with pretty-print option",
      "conversion for WIN1255 to UTF8",
      "conversion for SHIFT_JIS_2004 to UTF8",
      "Vietnamese (Vietnam)",
      "English (Eswatini)",
      "Slovak",
      "bucket number of operand given a sorted array of bucket lower bounds",
      "maximum value of all tid input values",
      "Lower Sorbian (Germany)",
      "trim spaces from right end of string",
      "Spanish (Cuba)",
      "GIN array support",
      "multivariate MCV list",
      "sample variance of integer input values (square of the sample standard deviation)",
      "Dutch (Netherlands)",
      "Central Atlas Tamazight (Morocco)",
      "single-precision floating point number, 4-byte storage",
      "configuration for arabic language",
      "numrange constructor",
      "Central Atlas Tamazight",
      "French (Haiti)",
      "conversion for UTF8 to LATIN6",
      "get OIDs of tables in a publication",
      "Spanish (Ecuador)",
      "get OID of current session&apos;s temp schema, if any",
      "fetch the Nth following row value",
      "adjust time with time zone precision",
      "planner support for generate_series",
      "obtain shared advisory lock if available",
      "statistics: number of tuples inserted in current transaction",
      "snowball stemmer for lithuanian language",
      "Embu",
      "Kyrgyz (Kyrgyzstan)",
      "configuration for norwegian language",
      "sum as bigint across all smallint input values",
      "is below (allows touching)",
      "sine, degrees",
      "Japanese (Japan)",
      "Italian (Italy)",
      "registered operator",
      "implementation of &gt;&gt; operator",
      "statistics: number of bytes in temporary files written",
      "Arabic (Sudan)",
      "conversion for LATIN4 to UTF8",
      "convert jsonb to numeric",
      "get machine-parseable identification of SQL object",
      "Inari Sami (Finland)",
      "json aggregate final function",
      "Hungarian",
      "restriction selectivity of &lt;&gt; and related operators",
      "int4range constructor",
      "get the available time zone names",
      "is text search template visible in search path?",
      "Sango",
      "current user privilege on column by rel name, col attnum",
      "array subscripts generator",
      "implementation of !~* operator",
      "snowball stemmer for dutch language",
      "Fulah (Latin, Niger)",
      "convert int8 to numeric",
      "convert float8 to int4",
      "French (Senegal)",
      "SHOW ALL as a function",
      "key value pairs of a json object",
      "access control list",
      "French (Wallis &amp; Futuna)",
      "set sequence value and is_called status",
      "distance between",
      "statistics: recovery conflicts in database caused by shared buffer pin",
      "English (Cameroon)",
      "configuration for french language",
      "Czech (Czechia)",
      "convert char(n) to text",
      "convert classname to regclass",
      "MACADDR manufacturer fields",
      "registered role",
      "bounding box of two boxes",
      "user privilege on role by user oid, role name",
      "referential integrity ON DELETE SET NULL",
      "conversion for UTF8 to SJIS",
      "elements of jsonb array",
      "Kalaallisut",
      "Inari Sami",
      "referential integrity ON DELETE SET DEFAULT",
      "number of input rows",
      "smaller of two",
      "NOT tsquery",
      "view system lock information",
      "internal conversion function for LATIN2 to WIN1250",
      "array cardinality",
      "internal conversion function for UTF8 to LATIN1",
      "English (Tokelau)",
      "pseudo-type for the result of an FDW handler function",
      "user privilege on column by user oid, rel oid, col name",
      "snowball stemmer for norwegian language",
      "tstzrange constructor",
      "restriction selectivity of LIKE",
      "Kikuyu",
      "get value from json as text with path elements",
      "snowball stemmer for spanish language",
      "bitwise exclusive or",
      "determine if a string is well formed XML document",
      "Romanian",
      "Akan (Ghana)",
      "statistics: number of tuples changed since last analyze",
      "oid of replica identity index if any",
      "statistics: tuples inserted in database",
      "Kabuverdianu",
      "English (Anguilla)",
      "minimum value of all float4 input values",
      "elements of a jsonb array",
      "Aghem",
      "convert int4 to int8",
      "Malay (Brunei)",
      "snowball stemmer for finnish language",
      "Central Kurdish",
      "minimum value of all numeric input values",
      "split string by pattern",
      "cotangent",
      "maximum value of all timestamp with time zone input values",
      "French (Luxembourg)",
      "Tajik (Tajikistan)",
      "Kannada",
      "import collations from operating system",
      "Javanese (Indonesia)",
      "sample variance of smallint input values (square of the sample standard deviation)",
      "convert timestamp to time",
      "referential integrity ON UPDATE SET NULL",
      "Igbo",
      "sample variance of numeric input values (square of the sample standard deviation)",
      "internal conversion function for KOI8R to ISO-8859-5",
      "Tajik",
      "Punjabi (Arabic)",
      "multiply points (scale/rotate)",
      "SHA-384 hash",
      "population standard deviation of integer input values",
      "implementation of ||/ operator",
      "int8range constructor",
      "configuration for spanish language",
      "subtract (translate path)",
      "Ngomba (Cameroon)",
      "less than or equal by length",
      "English (Bermuda)",
      "negate",
      "implementation of ^@ operator",
      "user privilege on relation by user oid, rel oid",
      "bitwise and",
      "get jsonb object keys",
      "statistics: tuples deleted in database",
      "Ossetic (Russia)",
      "Malayalam (India)",
      "get set of records with fields from a json array of objects",
      "implementation of ~&lt;=~ operator",
      "conversion for MULE_INTERNAL to LATIN3",
      "gin index access method handler",
      "truncate to integer",
      "conversion for WIN1250 to MULE_INTERNAL",
      "implementation of ?| operator",
      "Irish",
      "Persian (Iran)",
      "Colognian",
      "is text search dictionary visible in search path?",
      "pseudo-type for the result of a trigger function",
      "constraint description with pretty-print option",
      "Azerbaijani",
      "convert numeric to int4",
      "Assamese",
      "Javanese",
      "convert name to text",
      "French (Guadeloupe)",
      "subtract point from box (translate)",
      "internal conversion function for WIN1250 to MULE_INTERNAL",
      "implementation of ~~* operator",
      "Russian",
      "English (Burundi)",
      "statistics: reset collected statistics for a single function in the current database",
      "current user privilege on relation by rel name",
      "referential integrity ON UPDATE CASCADE",
      "Shambala",
      "implementation of @&gt; operator",
      "get value from json with path elements",
      "center of",
      "list DDL actions being executed by the current command",
      "bitwise-or smallint aggregate",
      "Ewondo (Cameroon)",
      "Scottish Gaelic (United Kingdom)",
      "implementation of &lt;-&gt; operator",
      "Cantonese (Simplified, China)",
      "join selectivity of NOT ILIKE",
      "get set of in-progress txids in snapshot",
      "Arabic (Western Sahara)",
      "aggregate input into a json object",
      "aggregate input into jsonb",
      "sample standard deviation of bigint input values",
      "conversion for WIN1250 to UTF8",
      "internal type for passing CollectedCommand",
      "Shambala (Tanzania)",
      "French (Comoros)",
      "Catalan (Spain)",
      "conversion for KOI8R to MULE_INTERNAL",
      "statistics: current backend PID",
      "implementation of !~ operator",
      "German",
      "convert int2 to float4",
      "bitwise-and smallint aggregate",
      "Sindhi (Pakistan)",
      "statistics: number of tuples hot updated",
      "large object position (64 bit)",
      "Rundi (Burundi)",
      "Spanish (Equatorial Guinea)",
      "convert int8 to float8",
      "Italian (Switzerland)",
      "y-intercept of the least-squares-fit linear equation determined by the (X, Y) pairs",
      "quote a data value for usage in a querystring",
      "get OID-based object address from name/args arrays",
      "planner support for network_sub/superset",
      "Spanish (Latin America)",
      "Lithuanian (Lithuania)",
      "increment by one",
      "Arabic (Saudi Arabia)",
      "conversion for WIN1251 to KOI8R",
      "Estonian",
      "Northern Luri (Iraq)",
      "Armenian",
      "statistics: block write time, in milliseconds",
      "French (Morocco)",
      "implementation of ! operator",
      "conversion for EUC_JP to SJIS",
      "extract portion of string",
      "Rwa (Tanzania)",
      "internal conversion function for BIG5 to EUC_TW",
      "Russian (Kazakhstan)",
      "large object open",
      "French (Burundi)",
      "Persian",
      "view members of a multixactid",
      "French (Burkina Faso)",
      "open path",
      "English (Lesotho)",
      "internal conversion function for EUC_CN to MULE_INTERNAL",
      "user privilege on column by user oid, rel oid, col attnum",
      "configuration for lithuanian language",
      "conversion for KOI8R to WIN1251",
      "Faroese (Faroe Islands)",
      "internal conversion function for KOI8R to WIN1251",
      "get value from jsonb as text with path elements",
      "cosine, degrees",
      "internal conversion function for EUC_KR to MULE_INTERNAL",
      "Makonde",
      "format text message",
      "convert numeric to money",
      "Czech",
      "internal conversion function for MULE_INTERNAL to ISO-8859-5",
      "conversion for UTF8 to LATIN7",
      "sum as interval across all interval input values",
      "OR-concatenate",
      "test XML value against XPath expression",
      "conversion for LATIN3 to UTF8",
      "set 7th bit in macaddr8",
      "format interval to text",
      "arctangent",
      "GiST tsquery support (obsolete)",
      "system catalog schema",
      "conversion for SQL_ASCII to UTF8",
      "internal conversion function for LATIN3 to MULE_INTERNAL",
      "internal conversion function for MULE_INTERNAL to LATIN2",
      "the smallest range which includes both of the given ranges",
      "brin: desummarize page range",
      "aggregate serial function",
      "brin index access method handler",
      "Lingala (Central African Republic)",
      "Bambara",
      "Interlingua",
      "join selectivity for array-containment operators",
      "convert text to char",
      "Arabic (Syria)",
      "Catalan (France)",
      "equal by area",
      "identical",
      "implementation of / operator",
      "extended statistics object description",
      "time of day",
      "convert a size in human-readable format with size units into bytes",
      "factorial",
      "is supernet or equal",
      "overlaps or is below",
      "join selectivity of exact prefix",
      "non-persistent series generator",
      "statistics: transactions rolled back",
      "Dzongkha (Bhutan)",
      "fetch the Nth preceding row value with default",
      "implementation of ~* operator",
      "Fulah (Latin, Sierra Leone)",
      "Uyghur (China)",
      "rotate log file",
      "statistics: number of backend requested checkpoints started by the bgwriter",
      "Polish",
      "statistics: when last checksum failure was detected in database",
      "planner support for textregexeq",
      "larger of two",
      "conversion for UTF8 to KOI8R",
      "map table structure to XML Schema",
      "greater than by area",
      "statistics: number of temporary files written",
      "Swiss German",
      "Serbian (Latin)",
      "convert macaddr to macaddr8",
      "user privilege on any column by user oid, rel name",
      "Turkish (Cyprus)",
      "arctangent, two arguments",
      "key exists",
      "statistics: blocks fetched for database",
      "statistics: number of manual analyzes for a table",
      "restriction selectivity of case-insensitive regex non-match",
      "statistics: checksum failures detected in database",
      "radians to degrees",
      "extract field from timestamp with time zone",
      "English (Puerto Rico)",
      "determine if a string is well formed XML content",
      "Spanish (El Salvador)",
      "conversion for UTF8 to LATIN10",
      "length of json array",
      "deparse an encoded expression",
      "query representation for text search",
      "Spanish (Costa Rica)",
      "user privilege on server by user oid, server oid",
      "convert float8 to numeric",
      "Chechen (Russia)",
      "convert point and radius to circle",
      "user privilege on server by username, server oid",
      "create a physical replication slot",
      "map table contents to XML",
      "current statement time",
      "SP-GiST support",
      "sleep until the specified time",
      "French (Djibouti)",
      "Galician (Spain)",
      "conversion for UTF8 to UHC",
      "maximum value of all time input values",
      "fetch the Nth following row value with default",
      "test property of an index column",
      "is statistics object visible in search path?",
      "Teso (Uganda)",
      "list of files in the archive_status directory",
      "implementation of -&gt; operator",
      "implementation of *&gt; operator",
      "round to nearest integer",
      "current user name",
      "hash partition CHECK constraint",
      "user privilege on function by user oid, function name",
      "PostgreSQL version string",
      "conversion for EUC_JIS_2004 to SHIFT_JIS_2004",
      "remove object fields with null values from json",
      "boolean-or aggregate",
      "Vietnamese",
      "conversion for UTF8 to LATIN9",
      "statistics: number of auto vacuums for a table",
      "conversion for UTF8 to WIN866",
      "Nepali (Nepal)",
      "pg_controldata general state information as a function",
      "convert bitstring to int4",
      "deparse an encoded expression with pretty-print option",
      "English (Antigua &amp; Barbuda)",
      "length of jsonb array",
      "trigger to suppress updates when new and old records match",
      "Chinese (Simplified, Singapore)",
      "conversion for UTF8 to LATIN3",
      "Catalan (Italy)",
      "convert x, y to point",
      "Portuguese (Macao SAR China)",
      "French (Rwanda)",
      "French (Central African Republic)",
      "quote a literal for usage in a querystring",
      "is subnet or equal",
      "historical alias for var_samp",
      "conversion for GB18030 to UTF8",
      "restriction selectivity of NOT ILIKE",
      "statistics: port number of client connected to backend",
      "convert int8 to int4",
      "finite interval?",
      "Bangla (Bangladesh)",
      "Burmese",
      "internal conversion function for MULE_INTERNAL to EUC_CN",
      "Sangu (Tanzania)",
      "implementation of &lt;&gt; operator",
      "configuration for tamil language",
      "Ganda",
      "conversion for KOI8U to UTF8",
      "statistics: discard current transaction&apos;s statistics snapshot",
      "maximum octet length of a character in given encoding",
      "Quechua (Peru)",
      "view ancestors of the partition",
      "dynamically-loaded C functions",
      "user privilege on database by username, database oid",
      "Arabic (Djibouti)",
      "partition constraint description",
      "statistics: last manual vacuum time for a table",
      "get bit",
      "sample standard deviation of smallint input values",
      "English (Fiji)",
      "Danish (Greenland)",
      "Spanish (Argentina)",
      "current wal write location",
      "generate headline from jsonb",
      "statistics: number of buffer allocations",
      "intersection point",
      "bitwise-or integer aggregate",
      "correlation coefficient",
      "box intersection",
      "not identical",
      "Spanish (Puerto Rico)",
      "Chinese",
      "conversion for MULE_INTERNAL to EUC_TW",
      "number of points",
      "adjust varchar() to typmod length",
      "Duala (Cameroon)",
      "Korean (South Korea)",
      "concatenate values with separators",
      "format timestamp to text",
      "change netmask of inet",
      "statistics: number of buffers written by the bgwriter for cleaning dirty buffers",
      "Kashmiri (India)",
      "English (Guyana)",
      "statistics: recovery conflicts in database caused by buffer deadlock",
      "replace text using regexp",
      "map array to json",
      "cancel a server process&apos; current query",
      "restriction selectivity of regex match",
      "implementation of &lt;&lt;| operator",
      "Vai (Latin, Liberia)",
      "implementation of &gt; operator",
      "fetch the Nth preceding row value",
      "conversion for SJIS to EUC_JP",
      "pg_config binary as a function",
      "English (Gambia)",
      "internal conversion function for ISO-8859-5 to WIN1251",
      "Luba-Katanga (Congo - Kinshasa)",
      "format numeric to text",
      "rewrite tsquery",
      "Kinyarwanda",
      "conversion for SJIS to MULE_INTERNAL",
      "adjust time with time zone to new zone",
      "English (Niue)",
      "adjust bit() to typmod length",
      "promote standby server",
      "inet address of the server",
      "English (Kiribati)",
      "Vunjo",
      "cotangent, degrees",
      "convert proname to regprocedure",
      "Tigrinya (Eritrea)",
      "statistics: number of scans done for table/index",
      "total disk space usage for the specified database",
      "implementation of &lt;&lt; operator",
      "float8 difference of two timestamp values",
      "get OIDs of databases in a tablespace",
      "Luyia (Kenya)",
      "get json array element as text",
      "English (India)",
      "Arabic (Algeria)",
      "Langi (Tanzania)",
      "Vai",
      "spgist index access method handler",
      "Kannada (India)",
      "multiply box by point (scale)",
      "-32 thousand to 32 thousand, 2-byte storage",
      "conversion for UTF8 to ISO-8859-6",
      "BRIN minmax support",
      "truncate interval to specified units",
      "user privilege on type by user oid, type oid",
      "is below",
      "map database contents to XML",
      "maximum value of all numeric input values",
      "Bulgarian",
      "difference in bytes, given two wal locations",
      "Kamba (Kenya)",
      "function argument default",
      "Serbian (Cyrillic, Serbia)",
      "Chiga",
      "current user privilege on role by role name",
      "internal conversion function for LATIN1 to MULE_INTERNAL",
      "user privilege on function by username, function name",
      "Spanish (Belize)",
      "conversion for UTF8 to EUC_KR",
      "current user privilege on language by language oid",
      "configuration for german language",
      "fetch the preceding row value",
      "convert int8 to money",
      "SP-GiST support for quad tree over point",
      "conversion for ISO-8859-6 to UTF8",
      "simple configuration",
      "minimum value of all bigint input values",
      "concatenate aggregate input into a bytea",
      "date and time",
      "Russian (Ukraine)",
      "statistics: number of times the bgwriter stopped processing when it had written too many buffers while cleaning",
      "trim spaces from both ends of string",
      "intervals overlap?",
      "internal conversion function for EUC_TW to MULE_INTERNAL",
      "convert numeric to float8",
      "pseudo-type representing a polymorphic base type that is a range",
      "is function visible in search path?",
      "conversion for UTF8 to EUC_TW",
      "less than by length",
      "conversion for WIN866 to ISO-8859-5",
      "Chiga (Uganda)",
      "Sinhala (Sri Lanka)",
      "Chinese (Simplified, China)",
      "English (Finland)",
      "Arabic (Comoros)",
      "French (Monaco)",
      "Spanish",
      "internal conversion function for EUC_KR to UTF8",
      "English (Cyprus)",
      "internal conversion function for MULE_INTERNAL to WIN866",
      "Uzbek (Latin)",
      "is collation visible in search path?",
      "truncate large object (64 bit)",
      "copy a logical replication slot",
      "configuration load time",
      "map schema contents to XML",
      "Arabic (Iraq)",
      "Tongan",
      "Arabic (Egypt)",
      "trim spaces from left end of string",
      "name of the current database",
      "discrete percentile",
      "join selectivity of &lt;= and related operators on scalar datatypes",
      "row number within partition",
      "implementation of ?-| operator",
      "internal conversion function for ISO-8859 2-16 to UTF8",
      "convert jsonb to float8",
      "map text array of key value pairs to jsonb object",
      "current user privilege on language by language name",
      "get jsonb array element as text",
      "implementation of *&lt;= operator",
      "convert time and date to timestamp",
      "obtain exclusive advisory lock",
      "Tasawaq",
      "PL/pgSQL procedural language",
      "user privilege on type by username, type name",
      "sample standard deviation of numeric input values",
      "set sequence value",
      "Portuguese (Angola)",
      "finite date?",
      "convert float8 to int8",
      "row security for current context active on table by table name",
      "read large object from offset for length",
      "user privilege on type by user oid, type name",
      "map schema structure to XML Schema",
      "Northern Sami (Sweden)",
      "conversion for BIG5 to MULE_INTERNAL",
      "drop replication origin identified by its name",
      "convert point to empty box",
      "convert numeric to int2",
      "Russian (Russia)",
      "Aghem (Cameroon)",
      "construct timestamp with time zone",
      "English (Slovenia)",
      "Upper Sorbian (Germany)",
      "English (Malaysia)",
      "change netmask of cidr",
      "Taita (Kenya)",
      "Ossetic",
      "increment",
      "Greek (Greece)",
      "XML content",
      "natural exponential (e^x)",
      "Catalan",
      "convert a numeric to a human readable text using size units",
      "float8 difference of two int4 values",
      "C-style string",
      "is above (allows touching)",
      "GIN tsvector support (obsolete)",
      "Serbian (Latin, Kosovo)",
      "advance logical replication slot",
      "statistics: information about WAL archiver",
      "Malay (Singapore)",
      "current user privilege on column by rel oid, col attnum",
      "matches LIKE expression",
      "map database contents and structure to XML and XML Schema",
      "Vai (Vai)",
      "show real useful query for GiST index",
      "planner support for interval length coercion",
      "emit a binary logical decoding message",
      "Swiss German (Liechtenstein)",
      "Uzbek (Arabic)",
      "details about MCV list items",
      "English (Palau)",
      "Somali",
      "arcsine, degrees",
      "Turkish",
      "Spanish (Uruguay)",
      "maximum value of all timestamp input values",
      "snowball stemmer for tamil language",
      "transform specified values from json to tsvector",
      "is the range empty?",
      "Dutch (Caribbean Netherlands)",
      "user privilege on sequence by user oid, seq name",
      "concatenate values",
      "minimum value of all bpchar input values",
      "statistics: number of buffers written by backends",
      "array upper dimension",
      "Uzbek (Latin, Uzbekistan)",
      "random value",
      "Nuer (South Sudan)",
      "debug function for text search configuration",
      "implementation of &lt; operator",
      "Azerbaijani (Latin)",
      "implementation of * operator",
      "implementation of &gt;^ operator",
      "Japanese",
      "is contained by",
      "Serbian (Cyrillic, Bosnia &amp; Herzegovina)",
      "Bafia (Cameroon)",
      "sum of path segment lengths",
      "convert int2 to float8",
      "encode text from encoding to ASCII text",
      "conversion for WIN1253 to UTF8",
      "statistics: number of tuples deleted",
      "English (Tanzania)",
      "English (World)",
      "implementation of ?# operator",
      "set up a logical replication slot",
      "current user privilege on relation by rel oid",
      "replace any occurrences of an element in an array",
      "clean up GIN pending list",
      "Fulah (Latin, Ghana)",
      "convert char to char(n)",
      "English (St. Vincent &amp; Grenadines)",
      "French (St. Martin)",
      "minimum value of all timestamp with time zone input values",
      "implementation of &gt;= operator",
      "JSON stored as text",
      "the average (arithmetic mean) as float8 of all float4 values",
      "split string by field_sep and return field_num",
      "built-in functions",
      "convert int2 to int4",
      "total disk space usage for the specified tablespace",
      "server&apos;s port number for this connection",
      "current user privilege on foreign data wrapper by foreign data wrapper name",
      "statistics: blocks found in cache for database",
      "large object export",
      "return name of given index build phase",
      "Xhosa (South Africa)",
      "minimum value of all timestamp input values",
      "conversion for EUC_CN to MULE_INTERNAL",
      "English (Botswana)",
      "current user privilege on tablespace by tablespace oid",
      "upper bound of range",
      "restriction selectivity for array-containment operators",
      "I/O",
      "subtract points (translate)",
      "Sangu",
      "Punjabi (Arabic, Pakistan)",
      "Langi",
      "Ewe (Togo)",
      "release exclusive advisory lock",
      "time of day with time zone",
      "sequence next value",
      "Cherokee",
      "subtract",
      "json aggregate transition function",
      "user privilege on sequence by username, seq oid",
      "English (Switzerland)",
      "Quechua",
      "minimum value of all time with time zone input values",
      "Quechua (Ecuador)",
      "statistics: tuples updated in database",
      "json object aggregate transition function",
      "adjust numeric to typmod precision/scale",
      "jsonpath query first item",
      "SYSTEM tablesample method handler",
      "large object import",
      "is left of",
      "b-tree index access method",
      "divide box by point (scale)",
      "hyperbolic sine",
      "English (Seychelles)",
      "English (Dominica)",
      "conversion for UTF8 to EUC_JP",
      "Azerbaijani (Latin, Azerbaijan)",
      "statistics: recovery conflicts in database caused by snapshot expiry",
      "conversion for LATIN4 to MULE_INTERNAL",
      "Dutch (Aruba)",
      "English (Liberia)",
      "convert char to text",
      "large object close",
      "Bemba",
      "extract text matching regular expression",
      "range typanalyze",
      "convert SQL99 regexp pattern to POSIX style",
      "convert float4 to float8",
      "Arabic (Libya)",
      "date difference from today preserving months and years",
      "returns whether a relation can be part of a publication",
      "German (Austria)",
      "statistics: number of timed checkpoints started by the bgwriter",
      "statistics: information about currently active replication",
      "user privilege on role by user oid, role oid",
      "user privilege on column by user oid, rel name, col name",
      "read text from a file - old version for adminpack 1.0",
      "French (Benin)",
      "convert int4 to bitstring",
      "number of nodes",
      "Hausa",
      "planner support for varchar length coercion",
      "convert numeric to float4",
      "current transaction time",
      "(block, offset), physical location of tuple",
      "is conversion visible in search path?",
      "object identifier(oid), maximum 4 billion",
      "hash",
      "Hebrew (Israel)",
      "English (Ireland)",
      "Cornish",
      "geometric polygon &apos;(pt1,...)&apos;",
      "network IP address/netmask, network address",
      "pseudo-type representing a polymorphic array type",
      "English (Malawi)",
      "convert int2 to numeric",
      "Italian",
      "construct time",
      "conversion for WIN874 to UTF8",
      "Masai",
      "Tibetan",
      "multiply",
      "Cornish (United Kingdom)",
      "current user privilege on role by role oid",
      "implementation of ?- operator",
      "copy a logical replication slot, changing temporality",
      "cosine",
      "English (Jersey)",
      "statistics: number of tuples deleted in current transaction",
      "user privilege on foreign data wrapper by username, foreign data wrapper oid",
      "index description (full create statement or single expression) with pretty-print option",
      "is txid visible in snapshot?",
      "Samburu",
      "normalize one word by dictionary",
      "gist index access method handler",
      "BERNOULLI tablesample method handler",
      "convert varchar to name",
      "extract field from time with time zone",
      "Dutch",
      "Lingala (Congo - Brazzaville)",
      "pseudo-type for the result of a function with no real result",
      "join selectivity for network operators",
      "implementation of &lt;@ operator",
      "synonym dictionary: replace word by its synonym",
      "implementation of ## operator",
      "row security for current context active on table by table oid",
      "transform to tsquery",
      "Low German (Germany)",
      "conversion for MULE_INTERNAL to SQL_ASCII",
      "Wolof",
      "internal conversion function for SHIFT_JIS_2004 to EUC_JIS_2004",
      "aggregate deserial function",
      "Persian (Afghanistan)",
      "join selectivity of case-insensitive regex non-match",
      "convert an int8 range to canonical form",
      "Oromo",
      "referential integrity ON UPDATE NO ACTION",
      "current trigger depth",
      "Tachelhit (Latin)",
      "create new large object with given content",
      "sum of path segments",
      "minimum value of all float8 input values",
      "wal filename, given a wal location",
      "expand tsvector to set of rows",
      "@ &lt;number&gt; &lt;units&gt;, time interval",
      "Tachelhit (Tifinagh, Morocco)",
      "statistics: recovery conflicts in database caused by relation lock",
      "Zulu (South Africa)",
      "SP-GiST support for quad tree over polygons",
      "Ewe",
      "population variance of float8 input values (square of the population standard deviation)",
      "internal conversion function for EUC_JIS_2004 to SHIFT_JIS_2004",
      "Gujarati (India)",
      "SHA-224 hash",
      "Koyraboro Senni (Mali)",
      "internal conversion function for SJIS to MULE_INTERNAL",
      "convert jsonb to float4",
      "Spanish (Brazil)",
      "integer rank with gaps",
      "Sichuan Yi",
      "registered operator (with args)",
      "promote groups of 30 days to numbers of months",
      "validate an operator class",
      "client&apos;s port number for this connection",
      "is the range&apos;s lower bound inclusive?",
      "conversion for UTF8 to ISO-8859-8",
      "Danish",
      "evaluate XPath expression",
      "convert int4 to boolean",
      "fixed-length bit string",
      "internal conversion function for MULE_INTERNAL to LATIN3",
      "rotate log file - old version for adminpack 1.0",
      "is text search parser visible in search path?",
      "Fulah (Latin, Guinea)",
      "convert jsonb to int2",
      "Esperanto",
      "Gusii",
      "map row to json",
      "current user privilege on column by rel oid, col name",
      "first value of the input enum type",
      "integer rank without gaps",
      "Irish (United Kingdom)",
      "Hungarian (Hungary)",
      "restriction selectivity of NOT LIKE",
      "get top-most partition root parent",
      "Tachelhit (Latin, Morocco)",
      "Kyrgyz",
      "Polish (Poland)",
      "reload configuration files",
      "modulus",
      "value rounded to &apos;scale&apos; of zero",
      "disk space usage for the main fork of the specified table or index",
      "minimum value of all oid input values",
      "float8 difference of two numeric values",
      "result type of a function",
      "array constructor with value",
      "SP-GiST support for quad tree over range",
      "French (Mauritania)",
      "teardown configured replication progress tracking",
      "Punjabi (Gurmukhi)",
      "conversion for WIN866 to KOI8R",
      "convert text to timestamp with time zone",
      "less than or equal by area",
      "phrase-concatenate",
      "user privilege on any column by user oid, rel oid",
      "user privilege on column by username, rel name, col name",
      "Yiddish (World)",
      "internal conversion function for SJIS to UTF8",
      "txid snapshot",
      "JSON path",
      "get xmin of snapshot",
      "jsonpath match",
      "range difference",
      "conversion for UTF8 to LATIN1",
      "English (Europe)",
      "list files in the log directory",
      "transform string values from json to tsvector",
      "English (Barbados)",
      "build tsvector from array of lexemes",
      "Kalaallisut (Greenland)",
      "natural logarithm",
      "GiST tsquery support",
      "internal conversion function for SHIFT_JIS_2004 to UTF8",
      "right-pad string to length",
      "date",
      "Oromo (Ethiopia)",
      "the average (arithmetic mean) as numeric of all numeric values",
      "snowball stemmer for arabic language",
      "Cebuano",
      "user privilege on schema by user oid, schema oid",
      "statistics: number of tuples read by seqscan in current transaction",
      "statistics: number of tuples inserted",
      "deprecated, use ! instead",
      "type of the argument",
      "bucket number of operand in equal-width histogram",
      "Korean",
      "convert ACL item array to table, primarily for use by information schema",
      "English (Cocos [Keeling] Islands)",
      "convert interval to time",
      "user privilege on database by user oid, database name",
      "Albanian (North Macedonia)",
      "Ukrainian (Ukraine)",
      "snowball stemmer for english language",
      "implementation of |&gt;&gt; operator",
      "Albanian",
      "statistics: block read time, in milliseconds",
      "Asu (Tanzania)",
      "area of circle",
      "Kako (Cameroon)",
      "Yangben (Cameroon)",
      "Odia (India)",
      "SP-GiST support for k-d tree over point",
      "Slovenian",
      "delete path",
      "returns an array of offsets of some value in array",
      "Xhosa",
      "English (Northern Mariana Islands)",
      "UUID datatype",
      "English (United Kingdom)",
      "Tamil (Sri Lanka)",
      "referential integrity ON DELETE RESTRICT",
      "Turkmen",
      "lseg on line",
      "registered namespace",
      "boolean, &apos;true&apos;/&apos;false&apos;",
      "format a type oid and atttypmod to canonical SQL",
      "restriction selectivity of &gt;= and related operators on scalar datatypes",
      "convert oid to int8",
      "implementation of &lt;^ operator",
      "maximum value of all bpchar input values",
      "implementation of !~~ operator",
      "split rows into N groups",
      "text representation for text search",
      "fractional row number within partition",
      "Tamil (Singapore)",
      "restriction selectivity of regex non-match",
      "user privilege on language by user oid, language oid",
      "English (Falkland Islands)",
      "user privilege on database by username, database name",
      "true if wal replay is paused",
      "commit status of transaction",
      "statistics: information about WAL receiver",
      "conversion for MULE_INTERNAL to LATIN2",
      "conversion for LATIN2 to UTF8",
      "return reason code for table getting rewritten",
      "internal conversion function for MULE_INTERNAL to BIG5",
      "restriction selectivity for area-comparison operators",
      "implementation of ~= operator",
      "split delimited text into text[]",
      "range union",
      "planner support for varbit length coercion",
      "PI",
      "remove object fields with null values from jsonb",
      "extract the last n characters",
      "inverse hyperbolic tangent",
      "conversion for LATIN8 to UTF8",
      "Arabic (Qatar)",
      "fetch the Nth row value",
      "netmask of address",
      "position of sub-bitstring",
      "Tigrinya",
      "French (Guinea)",
      "list an extension&apos;s version update paths",
      "Bemba (Zambia)",
      "concatenate XML values",
      "map text arrays of keys and values to json object",
      "conversion for ISO-8859-5 to UTF8",
      "Faroese (Denmark)",
      "get parser&apos;s token types",
      "implementation of *&lt; operator",
      "the average (arithmetic mean) as numeric of all bigint values",
      "Swahili (Kenya)",
      "English (Malta)",
      "tsvector typanalyze",
      "statistics: number of blocks fetched",
      "release all advisory locks",
      "Chinese (Simplified, Macao SAR China)",
      "English (Norfolk Island)",
      "conversion for SJIS to UTF8",
      "internal conversion function for LATIN1 to UTF8",
      "Hawaiian",
      "restriction selectivity of &lt;= and related operators on scalar datatypes",
      "internal conversion function for BIG5 to MULE_INTERNAL",
      "conversion for WIN1257 to UTF8",
      "prepare for taking an online backup",
      "Filipino (Philippines)",
      "obtain exclusive advisory lock if available",
      "English (Philippines)",
      "SET X as a function",
      "Basque",
      "current user privilege on function by function name",
      "get the type of a json value",
      "conversion for UTF8 to WIN1253",
      "concatenate aggregate input into an array",
      "Yoruba (Nigeria)",
      "list all files in a directory",
      "maximum value of all date input values",
      "Georgian (Georgia)",
      "internal conversion function for WIN1251 to ISO-8859-5",
      "truncate timestamp with time zone to specified units",
      "Azerbaijani (Cyrillic, Azerbaijan)",
      "English (United Arab Emirates)",
      "Jola-Fonyi (Senegal)",
      "user privilege on schema by username, schema name",
      "value rounded to &apos;scale&apos;",
      "Arabic (Tunisia)",
      "English (Pitcairn Islands)",
      "convert int4 to float8",
      "Lakota (United States)",
      "convert string with specified source encoding name",
      "build a json array from any inputs",
      "Hausa (Nigeria)",
      "deprecated, use @&gt; instead",
      "extract text matching SQL99 regular expression",
      "French (France)",
      "convert circle to box",
      "Lakota",
      "get actual version of collation from operating system",
      "set given weight for given lexemes",
      "average of the dependent variable (sum(Y)/N)",
      "Machame (Tanzania)",
      "Sena (Mozambique)",
      "Walser",
      "implementation of *&gt;= operator",
      "returns an offset of value in array with start index",
      "current date and time - increments during transactions",
      "Luyia",
      "implementation of + operator",
      "geometric circle &apos;(center,radius)&apos;",
      "GIN support",
      "user privilege on schema by user oid, schema name",
      "user privilege on relation by username, rel oid",
      "text search match",
      "format timestamp with time zone to text",
      "varchar(length), non-blank-padded string, variable storage length",
      "minimum value of all time input values",
      "path closed?",
      "point inside box",
      "Bosnian (Cyrillic, Bosnia &amp; Herzegovina)",
      "implementation of |&amp;&gt; operator",
      "truncate timestamp with time zone to specified units in specified time zone",
      "user privilege on tablespace by user oid, tablespace oid",
      "planner support for time length coercion",
      "extract field from interval",
      "hash index access method",
      "trim selected characters from left end of string",
      "perform a non-validating parse of a character string to produce an XML value",
      "Fulah (Latin, Nigeria)",
      "join selectivity for containment comparison operators",
      "Quechua (Bolivia)",
      "conversion for KOI8R to ISO-8859-5",
      "create a named restore point",
      "internal conversion function for UTF8 to GBK",
      "replicate string n times",
      "convert float4 to numeric",
      "convert polygon to bounding box",
      "conversion for LATIN1 to UTF8",
      "the average (arithmetic mean) as interval of all interval values",
      "Spanish (Philippines)",
      "variable-length bit string",
      "snowball stemmer for french language",
      "English (Kenya)",
      "transaction id",
      "bytes required to store the value, perhaps with compression",
      "conversion for UTF8 to KOI8U",
      "Lithuanian",
      "English (Gibraltar)",
      "conversion for UTF8 to WIN1255",
      "Rombo (Tanzania)",
      "Northern Luri",
      "range of timestamps without time zone",
      "large object create",
      "Ngiemboon",
      "Arabic",
      "array of oids, used in system tables",
      "~18 digit integer, 8-byte storage",
      "internal conversion function for UTF8 to WIN",
      "jsonpath query wrapped into array",
      "Greek",
      "conversion for ISO-8859-5 to WIN866",
      "internal conversion function for MULE_INTERNAL to SJIS",
      "Burmese (Myanmar [Burma])",
      "convert time with time zone and date to timestamp with time zone",
      "Bosnian (Latin)",
      "get value from jsonb with path elements",
      "tangent",
      "minimum value of all date input values",
      "strip position information",
      "disk space usage for all indexes attached to the specified table",
      "French (Niger)",
      "delete lexemes that do not have one of the given weights",
      "base 10 logarithm",
      "copy a physical replication slot",
      "internal conversion function for WIN866 to WIN1251",
      "Vai (Latin)",
      "set bit",
      "geometric point &apos;(x, y)&apos;",
      "square root",
      "list of SQL keywords",
      "English (St. Kitts &amp; Nevis)",
      "generate XML comment",
      "implementation of &amp;&gt; operator",
      "Punjabi (Gurmukhi, India)",
      "make ACL item",
      "block range index (BRIN) access method",
      "elements of json array",
      "conversion for LATIN10 to UTF8",
      "starts with",
      "greater than or equal by area",
      "English (St. Lucia)",
      "Fulah (Latin, Senegal)",
      "snowball stemmer",
      "English (Papua New Guinea)",
      "range of dates",
      "statistics: number of backend buffer writes that did their own fsync",
      "definition of a function",
      "Lingala (Congo - Kinshasa)",
      "Croatian (Croatia)",
      "Chakma",
      "convert ascii-encoded text string into bytea value",
      "Arabic (World)",
      "English (Australia)",
      "Punjabi",
      "conversion for MULE_INTERNAL to KOI8R",
      "get binary changes from replication slot",
      "jsonpath exists test",
      "the average (arithmetic mean) as numeric of all smallint values",
      "configuration for hungarian language",
      "array typanalyze",
      "does not match LIKE expression",
      "English (Trinidad &amp; Tobago)",
      "internal conversion function for KOI8U to UTF8",
      "Latvian (Latvia)",
      "translate the replication origin&apos;s name to its id",
      "transform to tsvector",
      "construct timestamp",
      "Arabic (Somalia)",
      "internal conversion function for UHC to UTF8",
      "French (New Caledonia)",
      "switch to new wal file",
      "English (Rwanda)",
      "conversion for MULE_INTERNAL to WIN1251",
      "conversion for UTF8 to WIN1254",
      "current user privilege on type by type name",
      "get the fraction of the asynchronous notification queue currently in use",
      "statistics: start time for current query of backend",
      "internal conversion function for SJIS to EUC_JP",
      "current schema search list",
      "the average (arithmetic mean) as float8 of all float8 values",
      "English (Macao SAR China)",
      "Low German (Netherlands)",
      "increment, ignores second argument",
      "German (Italy)",
      "statistics: transactions committed",
      "Uyghur",
      "internal conversion function for LATIN2 to MULE_INTERNAL",
      "implementation of &gt;&gt;= operator",
      "conversion for WIN1251 to MULE_INTERNAL",
      "pseudo-type for the result of an event trigger function",
      "statistics: current query of backend",
      "Tasawaq (Niger)",
      "minimum value of all tid input values",
      "Malayalam",
      "Dzongkha",
      "adjust varbit() to typmod length",
      "Ossetic (Georgia)",
      "map a set of characters appearing in string",
      "current user privilege on database by database name",
      "sample covariance",
      "internal conversion function for UTF8 to EUC_KR",
      "internal conversion function for EUC_JP to MULE_INTERNAL",
      "Lao",
      "Ganda (Uganda)",
      "single character",
      "value truncated to &apos;scale&apos; of zero",
      "read entire large object",
      "Esperanto (World)",
      "English (Sint Maarten)",
      "deprecated, use current_user instead",
      "Arabic (Jordan)",
      "Somali (Somalia)",
      "statistics: last auto analyze time for a table",
      "maximum value of all smallint input values",
      "Tamil (Malaysia)",
      "implementation of &amp;&lt;| operator",
      "internal conversion function for WIN866 to ISO-8859-5",
      "user privilege on tablespace by username, tablespace oid",
      "thesaurus dictionary: phrase by phrase substitution",
      "maximum value of all time with time zone input values",
      "English (Turks &amp; Caicos Islands)",
      "conversion for MULE_INTERNAL to LATIN1",
      "internal conversion function for MULE_INTERNAL to LATIN4",
      "convert name to char(n)",
      "sum as money across all money input values",
      "serialize an XML value to a character string",
      "Spanish (Dominican Republic)",
      "GiST index access method",
      "Amharic (Ethiopia)",
      "registered type",
      "prepend element onto front of array",
      "number of input rows in which both expressions are not null",
      "Romansh",
      "conversion for UTF8 to WIN1257",
      "restriction selectivity of &lt; and related operators on scalar datatypes",
      "Tibetan (China)",
      "convert operator name to regoper",
      "statistics: information about progress of backends running maintenance command",
      "statistics: last reset for the bgwriter",
      "read bytea from a file",
      "Shona",
      "Standard Moroccan Tamazight (Morocco)",
      "statistics: number of backends in database",
      "maximum value of all bigint input values",
      "Breton (France)",
      "conversion for MULE_INTERNAL to WIN866",
      "current value from last used sequence",
      "resume wal replay, if it was paused",
      "finish taking an online backup",
      "English (U.S. Outlying Islands)",
      "Basaa",
      "get json object field",
      "Swedish (Sweden)",
      "Bena",
      "Luxembourgish",
      "French (Cameroon)",
      "convert time to interval",
      "Catalan (Andorra)",
      "multiply (rotate/scale path)",
      "configuration for irish language",
      "Sakha",
      "find match(es) for regexp",
      "session user name",
      "Spanish (Chile)",
      "deprecated, use @@ instead",
      "convert time with time zone to time",
      "SP-GiST support for quad tree over box",
      "conversion for SQL_ASCII to MULE_INTERNAL",
      "Telugu",
      "snowball stemmer for german language",
      "Bangla (India)",
      "Swahili",
      "get xmax of snapshot",
      "join selectivity of case-insensitive regex match",
      "geometric line",
      "internal conversion function for UTF8 to EUC_CN",
      "character length",
      "Tongan (Tonga)",
      "snowball stemmer for irish language",
      "Arabic (South Sudan)",
      "convert namespace name to regnamespace",
      "Northern Sami",
      "English (Namibia)",
      "Portuguese (Cape Verde)",
      "sum as bigint across all integer input values",
      "Serbian",
      "configuration for turkish language",
      "internal conversion function for UTF8 to EUC_JIS_2004",
      "conversion for KOI8R to UTF8",
      "conversion for UTF8 to WIN874",
      "parse qualified identifier to array of identifiers",
      "Fulah (Latin)",
      "convert operator name to regoperator",
      "Hawaiian (United States)",
      "capitalize each word",
      "MD5 hash",
      "Tamil (India)",
      "Teso (Kenya)",
      "array length",
      "conversion for WIN1251 to ISO-8859-5",
      "adjust timestamp precision",
      "extract field from time",
      "get byte",
      "Chinese (Traditional, Macao SAR China)",
      "implementation of &amp;&lt; operator",
      "name of sequence for a serial column",
      "deprecated, use two-argument form instead",
      "join selectivity of &lt;&gt; and related operators",
      "pg_controldata init state information as a function",
      "greater than or equal by length",
      "Urdu (Pakistan)",
      "Malagasy (Madagascar)",
      "English (Israel)",
      "conversion for WIN1252 to UTF8",
      "Sena",
      "statistics: start time for backend&apos;s current transaction",
      "internal conversion function for UTF8 to JOHAB",
      "range of numerics",
      "convert date and time to timestamp with time zone",
      "absolute value",
      "pseudo-type representing any composite type",
      "internal conversion function for EUC_TW to BIG5",
      "English (Netherlands)",
      "show config file settings",
      "English (Zambia)",
      "any key exists",
      "Telugu (India)",
      "uppercase",
      "remove ACL item",
      "Fulah (Latin, Gambia)",
      "Kwasio (Cameroon)",
      "identity argument list of a function",
      "implementation of ~&gt;~ operator",
      "get json object keys",
      "Malay (Malaysia)",
      "Luxembourgish (Luxembourg)",
      "Portuguese (Mozambique)",
      "minimum value of all integer input values",
      "convert points to box",
      "list files in the pgsql_tmp directory",
      "get set of records with fields from a jsonb array of objects",
      "range of integers",
      "Arabic (United Arab Emirates)",
      "Khmer (Cambodia)",
      "sample variance of float4 input values (square of the sample standard deviation)",
      "Arabic (Oman)",
      "get record fields from a jsonb object",
      "registered procedure (with args)",
      "user privilege on column by username, rel oid, col attnum",
      "user privilege on any column by username, rel name",
      "radius of circle",
      "last wal replay location",
      "statistics: information about subscription",
      "conversion for MULE_INTERNAL to EUC_KR",
      "overlaps",
      "internal conversion function for GBK to UTF8",
      "jsonb object aggregate final function",
      "user privilege on column by username, rel oid, col name",
      "user privilege on column by username, rel name, col attnum",
      "current user privilege on foreign data wrapper by foreign data wrapper oid",
      "user privilege on function by user oid, function oid",
      "conversion for UTF8 to SHIFT_JIS_2004",
      "encode text from DB encoding to ASCII text",
      "convert timestamp with time zone to date",
      "get the open cursors for this session",
      "Ukrainian",
      "Morisyen",
      "Norwegian Nynorsk",
      "planner support for textlike",
      "bitwise or",
      "test property of an index",
      "sum of squares of the independent variable (sum(X^2) - sum(X)^2/N)",
      "Upper Sorbian",
      "Turkish (Turkey)",
      "Kazakh (Kazakhstan)",
      "internal conversion function for MULE_INTERNAL to KOI8R",
      "peek at changes from replication slot",
      "statistics: recovery conflicts in database",
      "date difference preserving months and years",
      "construct date",
      "conversion for MULE_INTERNAL to WIN1250",
      "Greek (Cyprus)",
      "adjust time precision",
      "Spanish (Ceuta &amp; Melilla)",
      "implementation of - operator",
      "English (Germany)",
      "convert string with specified encoding names",
      "conversion for WIN1256 to UTF8",
      "convert vertex count and circle to polygon",
      "conversion for WIN1251 to WIN866",
      "user privilege on schema by username, schema oid",
      "is a column updatable",
      "format float8 to text",
      "tsrange constructor",
      "GiST tsvector support (obsolete)",
      "Rundi",
      "Sichuan Yi (China)",
      "statistics: self execution time of function in current transaction, in milliseconds",
      "Western Frisian",
      "variable-length string, binary values escaped",
      "file path of relation",
      "test XML value against XPath expression, with namespace support",
      "English (Bahamas)",
      "fetch the following row value",
      "Konkani (India)",
      "point on line",
      "planner support for texticlike",
      "English (Sudan)",
      "heap table access method",
      "make tsquery",
      "jsonpath exists",
      "Swedish",
      "convert float4 to int4",
      "Tibetan (India)",
      "snowball stemmer for italian language",
      "float8 difference of two int8 values",
      "statistics: currently active backend IDs",
      "user privilege on tablespace by user oid, tablespace name",
      "range of the given enum type, as an ordered array",
      "advance replication origin to specific location",
      "promote groups of 24 hours to numbers of days",
      "greater than by length",
      "Spanish (United States)",
      "debug function for current text search configuration",
      "quote a possibly-null literal for usage in a querystring",
      "simple dictionary: just lower case and check for stopword",
      "convert text to numeric",
      "substitute portion of string",
      "conversion for EUC_KR to MULE_INTERNAL",
      "convert numeric to int8",
      "internal conversion function for KOI8R to UTF8",
      "overlaps (is subnet or supernet)",
      "Samburu (Kenya)",
      "Portuguese (Switzerland)",
      "add (translate path)",
      "Mundang (Cameroon)",
      "convert float4 to int8",
      "implementation of &lt;= operator",
      "minimum value of all money input values",
      "statistics: reset collected statistics shared across the cluster",
      "convert string with specified destination encoding name",
      "jsonb object aggregate transition function",
      "relation OID for filenode and tablespace",
      "restriction selectivity of &gt; and related operators on scalar datatypes",
      "get array of PIDs of sessions blocking specified backend PID from acquiring a heavyweight lock",
      "get current snapshot",
      "convert timestamp to date",
      "logarithm base m of n",
      "multivariate dependencies",
      "box area",
      "conversion for WIN866 to UTF8",
      "list available extension versions",
      "get the type of a jsonb value",
      "overlaps or is right of",
      "convert timestamp with time zone to time",
      "source text of a rule with pretty-print option",
      "get the replication progress of the current session",
      "return Oid of the table getting rewritten",
      "disk space usage for the specified fork of a table or index",
      "conversion for LATIN2 to MULE_INTERNAL",
      "conversion for MULE_INTERNAL to EUC_CN",
      "decrement",
      "Kikuyu (Kenya)",
      "sleep for the specified interval",
      "generate headline",
      "map schema contents and structure to XML and XML Schema",
      "implementation of % operator",
      "diameter of circle",
      "map table contents and structure to XML and XML Schema",
      "Colognian (Germany)",
      "minus",
      "63-byte type for storing system identifiers",
      "minimum value of all smallint input values",
      "SHOW X as a function, optionally no error for missing variable",
      "French (Congo - Kinshasa)",
      "box diagonal",
      "English (Nauru)",
      "address family (4 for IPv4, 6 for IPv6)",
      "Manx (Isle of Man)",
      "Makhuwa-Meetto",
      "Kalenjin (Kenya)",
      "join selectivity of regex non-match",
      "Marathi (India)",
      "default word parser",
      "user privilege on language by username, language oid",
      "Bangla",
      "extract the first n characters",
      "Arabic (Mauritania)",
      "drop a replication slot",
      "English (Diego Garcia)",
      "English (Belgium)",
      "statistics: tuples returned for database",
      "sign of value",
      "promote groups of 24 hours to numbers of days and promote groups of 30 days to numbers of months",
      "is a replication origin configured in this session",
      "Korean (North Korea)",
      "join selectivity for position-comparison operators",
      "Galician",
      "convert int2 to int8",
      "internal conversion function for WIN1251 to WIN866",
      "get information about file",
      "convert encoding name to encoding id",
      "pause wal replay",
      "conversion for EUC_TW to BIG5",
      "English (Denmark)",
      "fetch the last row value",
      "get changes from replication slot",
      "snowball stemmer for turkish language",
      "GiST tsvector support",
      "Cebuano (Philippines)",
      "snowball stemmer for russian language",
      "Kazakh",
      "key value pairs of a jsonb object",
      "statistics: number of tuples updated",
      "sample standard deviation of integer input values",
      "conversion for UTF8 to WIN1252",
      "user privilege on relation by username, rel name",
      "Ewe (Ghana)",
      "user privilege on foreign data wrapper by username, foreign data wrapper name",
      "matches regular expression, case-sensitive",
      "conversion for LATIN2 to WIN1250",
      "English (South Sudan)",
      "Chinese (Traditional)",
      "get commit timestamp of a transaction",
      "float8 difference of two timestamp with time zone values",
      "conversion for UTF8 to SQL_ASCII",
      "German (Luxembourg)",
      "geometric line segment &apos;(pt1,pt2)&apos;",
      "referential integrity ON DELETE CASCADE",
      "convert date and time to timestamp",
      "Ewondo",
      "Swahili (Uganda)",
      "is subnet",
      "join selectivity of &gt;= and related operators on scalar datatypes",
      "Hausa (Niger)",
      "is text search configuration visible in search path?",
      "minimum value of all text values",
      "concatenate aggregate input into a string",
      "Somali (Ethiopia)",
      "join selectivity of &gt; and related operators on scalar datatypes",
      "last value of the input enum type",
      "Slovak (Slovakia)",
      "convert int4 number to hex",
      "age of a multi-transaction ID, in multi-transactions before current multi-transaction",
      "convert int4 to int2",
      "Soga",
      "English",
      "Serbian (Cyrillic)",
      "pseudo-type representing an undetermined type",
      "list of files in the WAL directory",
      "Amharic",
      "large object seek (64 bit)",
      "map text array of key value pairs to json object",
      "divide points (scale/rotate)",
      "Irish (Ireland)",
      "English (Guernsey)",
      "show hardwired default privileges, primarily for use by the information schema",
      "sequence parameters, for use by information schema",
      "registered class",
      "conversion for ISO-8859-5 to WIN1251",
      "build a jsonb object from pairwise key/value inputs",
      "Spanish (Panama)",
      "conversion for UTF8 to GBK",
      "Arabic (Chad)",
      "map array to json with optional pretty printing",
      "Unknown language",
      "Lingala (Angola)",
      "conversion for ISO-8859-8 to UTF8",
      "select statement of a view",
      "statistics: information about currently active backends",
      "geometric box &apos;(lower left,upper right)&apos;",
      "vertically aligned",
      "inverse hyperbolic cosine",
      "get the currently executing query",
      "AND-concatenate",
      "is above",
      "conversion for MULE_INTERNAL to LATIN4",
      "disk space usage for the specified table, including TOAST, free space and visibility map",
      "jsonb aggregate final function",
      "statistics: wait event on which backend is currently waiting",
      "Zarma (Niger)",
      "minimum value of all inet input values",
      "conversion for WIN1254 to UTF8",
      "Central Kurdish (Iran)",
      "Insert value into a jsonb",
      "internal conversion function for EUC_CN to UTF8",
      "statistics: number of blocks found in cache in current transaction",
      "Dutch (Sint Maarten)",
      "sum as float8 across all float8 input values",
      "large object read",
      "left-pad string to length",
      "GIN tsvector support",
      "most common value",
      "returns an offset of value in array",
      "internal conversion function for KOI8R to WIN866",
      "Marathi",
      "conversion for WIN1258 to UTF8",
      "snowball stemmer for romanian language",
      "build an empty jsonb array",
      "configuration for english language",
      "Portuguese (Guinea-Bissau)",
      "Pashto (Pakistan)",
      "conversion for WIN1251 to UTF8",
      "Georgian",
      "Spanish (Spain)",
      "evaluate XPath expression, with namespaces support",
      "Spanish (Canary Islands)",
      "numeric(precision, decimal), arbitrary precision number",
      "internal conversion function for MULE_INTERNAL to WIN1251",
      "Uzbek (Arabic, Afghanistan)",
      "Vai (Vai, Liberia)",
      "conversion for UTF8 to GB18030",
      "implementation of *&lt;&gt; operator",
      "Shona (Zimbabwe)",
      "join selectivity of tsvector @@ tsquery",
      "statistics: total execution time of function in current transaction, in milliseconds",
      "convert inet to cidr",
      "Macedonian (North Macedonia)",
      "string representing an internal node tree",
      "hostmask of address",
      "restriction selectivity for containment comparison operators",
      "Swiss German (France)",
      "maximum value of all enum input values",
      "Spanish (Colombia)",
      "internal conversion function for JOHAB to UTF8",
      "Bambara (Mali)",
      "current wal insert location",
      "German (Switzerland)",
      "current user privilege on schema by schema oid",
      "extract portion of bitstring",
      "English (British Virgin Islands)",
      "validate an XML value",
      "Kurdish (Turkey)",
      "current logging collector file location",
      "parallel",
      "transform specified values from jsonb to tsvector",
      "reverse text",
      "implementation of ~~ operator",
      "format int8 to text",
      "position of substring",
      "show all parts of inet/cidr value",
      "Luo",
      "convert money to numeric",
      "internal conversion function for MULE_INTERNAL to SQL_ASCII",
      "maximum value of all float4 input values",
      "is operator visible in search path?",
      "convert points to line segment",
      "conversion for SHIFT_JIS_2004 to EUC_JIS_2004",
      "quote an identifier for usage in a querystring",
      "set given weight for whole tsvector",
      "-2 billion to 2 billion integer, 4-byte storage",
      "test property of an index access method",
      "internal conversion function for BIG5 to UTF8",
      "Romanian (Moldova)",
      "conversion for LATIN3 to MULE_INTERNAL",
      "Dutch (Suriname)",
      "snowball stemmer for swedish language",
      "Thai (Thailand)",
      "reserved schema for TOAST tables",
      "bitwise-and integer aggregate",
      "conversion for ISO-8859-7 to UTF8",
      "Italian (San Marino)",
      "Portuguese (Luxembourg)",
      "bitwise-and bigint aggregate",
      "Arabic (Bahrain)",
      "internal conversion function for MULE_INTERNAL to WIN1250",
      "English (Pakistan)",
      "select statement of a view with pretty-printing and specified line wrapping",
      "Maori (New Zealand)",
      "join selectivity of ILIKE",
      "Hindi",
      "conversion for EUC_JP to UTF8",
      "range between the two given enum values, as an ordered array",
      "print type names of oidvector field",
      "English (Grenada)",
      "deferred UNIQUE constraint check",
      "planner support for texticregexeq",
      "implementation of ? operator",
      "SP-GiST index access method",
      "sum of products of independent times dependent variable (sum(X*Y) - sum(X) * sum(Y)/N)",
      "English (United States)",
      "statistics: PID of backend",
      "Meru (Kenya)",
      "inet address of the client",
      "adjust interval precision",
      "Northern Sami (Finland)",
      "fetch the first row value",
      "Afrikaans",
      "Danish (Denmark)",
      "current user privilege on type by type oid",
      "sort support",
      "Swahili (Congo - Kinshasa)",
      "internal conversion function for UTF8 to UHC",
      "is schema another session&apos;s temp schema?",
      "XX:XX:XX:XX:XX:XX, MAC address",
      "sleep for the specified time in seconds",
      "Norwegian Nynorsk (Norway)",
      "total disk space usage for the specified table and associated indexes",
      "configuration for russian language",
      "Makonde (Tanzania)",
      "index description",
      "French (Madagascar)",
      "Spanish (Venezuela)",
      "get current transaction ID",
      "Malay",
      "Swiss German (Switzerland)",
      "referential integrity ON UPDATE SET DEFAULT",
      "conversion for UTF8 to BIG5",
      "Cantonese (Traditional, Hong Kong SAR China)",
      "trim selected characters from right end of string",
      "Low German",
      "command identifier type, sequence in transaction id",
      "is the range&apos;s upper bound infinite?",
      "internal conversion function for ISO-8859-5 to MULE_INTERNAL",
      "isolationtester support function",
      "Morisyen (Mauritius)",
      "diagonal of",
      "Romanian (Romania)",
      "finite timestamp?",
      "square of the correlation coefficient",
      "conversion for WIN866 to WIN1251",
      "minimum value of all anyarray input values",
      "true if server is in recovery",
      "Fulah",
      "Chakma (Bangladesh)",
      "Bena (Tanzania)",
      "convert encoding id to encoding name",
      "minimum value of all enum input values",
      "Lingala",
      "statistics: number of tuples hot updated in current transaction",
      "referential integrity FOREIGN KEY ... REFERENCES",
      "map row to json with optional pretty printing",
      "Spanish (Paraguay)",
      "is opclass visible in search path?",
      "Tatar",
      "Kamba",
      "pg_controldata checkpoint state information as a function",
      "Portuguese",
      "Breton",
      "English (Ghana)",
      "statistics: last reset for a database",
      "map input to jsonb",
      "current user privilege on column by rel name, col name",
      "start time of an online backup",
      "large object write",
      "map database structure to XML Schema",
      "implementation of ?&amp; operator",
      "Finnish (Finland)",
      "user privilege on type by username, type oid",
      "get description for object id and catalog name",
      "convert bytea value into some ascii-only text string",
      "implementation of &amp;&amp; operator",
      "English (Austria)",
      "Northern Sami (Norway)",
      "registered text search dictionary",
      "user privilege on foreign data wrapper by user oid, foreign data wrapper name",
      "not equal",
      "obtain shared advisory lock",
      "Croatian (Bosnia &amp; Herzegovina)",
      "conversion for UTF8 to WIN1256",
      "reset the transaction&apos;s origin lsn and timestamp",
      "same as",
      "Romansh (Switzerland)",
      "North Ndebele",
      "Spanish (Honduras)",
      "convert int4 to float4",
      "role name by OID (with fallback)",
      "less than by area",
      "count the number of non-NULL arguments",
      "arcsine",
      "Pashto (Afghanistan)",
      "Khmer",
      "restriction selectivity of case-insensitive regex match",
      "English (New Zealand)",
      "internal conversion function for ISO-8859-5 to KOI8R",
      "multiple discrete percentiles",
      "Friulian",
      "English (American Samoa)",
      "Kinyarwanda (Rwanda)",
      "convert boolean to int4",
      "get the available time zone abbreviations",
      "rank of hypothetical row without gaps",
      "GIN index access method",
      "construct line from points",
      "English (Solomon Islands)",
      "path open?",
      "Gujarati",
      "XX:XX:XX:XX:XX:XX:XX:XX, MAC address",
      "user privilege on server by user oid, server name",
      "convert float8 to int2",
      "population standard deviation of float4 input values",
      "conversion for MULE_INTERNAL to ISO-8859-5",
      "statistics: recovery conflicts in database caused by drop tablespace",
      "convert int8 to float4",
      "brin: standalone scan new table pages",
      "Kabyle (Algeria)",
      "Cherokee (United States)",
      "population standard deviation of numeric input values",
      "Russian (Moldova)",
      "is the range&apos;s lower bound infinite?",
      "the smallest network which includes both of the given networks",
      "sum of squares of the dependent variable (sum(Y^2) - sum(Y)^2/N)",
      "overlaps or is above",
      "GiST support",
      "internal conversion function for UTF8 to BIG5",
      "internal conversion function for KOI8R to MULE_INTERNAL",
      "map query result to XML",
      "Arabic (Yemen)",
      "Mongolian (Mongolia)",
      "conversion for KOI8R to WIN866",
      "does not match regular expression, case-insensitive",
      "bitwise-or bit aggregate",
      "implementation of |/ operator",
      "float8 difference of two date values",
      "concatenate array elements, using delimiter, into text",
      "deprecated, use &amp;&amp; instead",
      "is type visible in search path?",
      "aggregate combine function",
      "English (Cook Islands)",
      "fractional rank of hypothetical row",
      "jsonpath query",
      "user privilege on any column by username, rel oid",
      "Russian (Belarus)",
      "restriction selectivity of ILIKE",
      "Belarusian",
      "Koyra Chiini",
      "get identification of SQL object",
      "Basaa (Cameroon)",
      "Igbo (Nigeria)",
      "lower bound of range",
      "Croatian",
      "Binary JSON",
      "Albanian (Albania)",
      "implementation of @@ operator",
      "population covariance",
      "French (Mauritius)",
      "(internal)",
      "daterange constructor",
      "Asturian",
      "convert int8 to int2",
      "array of int2, used in system tables",
      "conversion for LATIN5 to UTF8",
      "multivariate ndistinct coefficients",
      "Lao (Laos)",
      "Sango (Central African Republic)",
      "restriction selectivity for position-comparison operators",
      "Hebrew",
      "Hindi (India)",
      "information about replication slots currently in use",
      "Embu (Kenya)",
      "bitwise not",
      "number of input rows for which the input expression is not null",
      "aggregate input into json",
      "are the addresses from the same family?",
      "user privilege on role by username, role name",
      "Serbian (Latin, Serbia)",
      "Azerbaijani (Cyrillic)",
      "inverse hyperbolic sine",
      "Sindhi",
      "equal",
      "number of array dimensions",
      "current user privilege on schema by schema name",
      "convert first char to int4",
      "rank of hypothetical row",
      "Mongolian",
      "split delimited text into text[], with null string",
      "Maltese",
      "Tachelhit",
      "user privilege on language by username, language name",
      "map query result structure to XML Schema",
      "convert a long int to a human readable text using size units",
      "lowercase",
      "French (Gabon)",
      "GiST index internal text representation for text search",
      "Standard Moroccan Tamazight",
      "Portuguese (Timor-Leste)",
      "Nyankole (Uganda)",
      "conversion for WIN1250 to LATIN2",
      "statistics: checkpoint time spent writing buffers to disk, in milliseconds",
      "Mazanderani (Iran)",
      "internal conversion function for UTF8 to ISO-8859 2-16",
      "English (South Africa)",
      "Nepali (India)",
      "SHA-512 hash",
      "conversion for UTF8 to WIN1251",
      "Fulah (Latin, Mauritania)",
      "statistics: self execution time of function, in milliseconds",
      "convert jsonb to boolean",
      "Urdu (India)",
      "user privilege on sequence by user oid, seq oid",
      "build an empty jsonb object",
      "statistics: wait event type on which backend is currently waiting",
      "maximum value of all oid input values",
      "build an empty json object",
      "set random seed",
      "join selectivity for area-comparison operators",
      "is a relation insertable/updatable/deletable",
      "Chinese (Simplified)",
      "phrase-concatenate with distance",
      "Ngomba",
      "Kurdish",
      "convert name to varchar",
      "Mazanderani",
      "trim selected characters from both ends of string",
      "French",
      "convert int4 to char",
      "user privilege on relation by user oid, rel name",
      "jsonb aggregate transition function",
      "slope of the least-squares-fit linear equation determined by the (X, Y) pairs",
      "Indented text from jsonb",
      "obsolete, deprecated pseudo-type",
      "Uzbek",
      "get json object field as text",
      "user privilege on role by username, role oid",
      "pseudo-type representing a polymorphic base type",
      "netmask length",
      "Taita",
      "registered procedure",
      "delete object field",
      "Jola-Fonyi",
      "octet length",
      "statistics: number of scans done for table/index in current transaction",
      "Spanish (Bolivia)",
      "implementation of @? operator",
      "I/O typmod",
      "parse text to tokens",
      "internal conversion function for EUC_TW to UTF8",
      "large object position",
      "planner support for array_unnest",
      "English (Eritrea)",
      "window RANGE support",
      "convert path to polygon",
      "current clock time",
      "trim both ends of string",
      "Estonian (Estonia)",
      "age of a transaction ID, in transactions before current transaction",
      "Bosnian",
      "conversion for LATIN1 to MULE_INTERNAL",
      "is opfamily visible in search path?",
      "closest point to A on B",
      "cube root",
      "map input to json",
      "vertical",
      "count the number of NULL arguments",
      "Scottish Gaelic",
      "Maori",
      "referential integrity ON UPDATE RESTRICT",
      "statistics: reset collected statistics for current database",
      "English (Samoa)",
      "French (Seychelles)",
      "population variance of bigint input values (square of the population standard deviation)",
      "Asu",
      "box height",
      "current schema name",
      "standard public schema",
      "conversion for BIG5 to UTF8",
      "contains",
      "conversion for UTF8 to ISO-8859-5",
      "Uzbek (Cyrillic)",
      "implementation of *= operator",
      "convert generic options array to name/value table",
      "internal conversion function for MULE_INTERNAL to LATIN1",
      "English (Tuvalu)",
      "substitute portion of bitstring",
      "Arabic (Eritrea)",
      "English (Nigeria)",
      "extract field from timestamp",
      "get progress for all replication origins",
      "SP-GiST support for quad tree over 2-D types represented by their bounding boxes",
      "conversion for UTF8 to JOHAB",
      "flag an extension&apos;s table contents to be emitted by pg_dump",
      "add point to box (translate)"
    ]
  },
  "table_privileges": {},
  "pg_statio_sys_tables": {
    "relname": [
      "pg_pltemplate",
      "pg_toast_13280",
      "pg_toast_2620",
      "pg_toast_13285",
      "pg_namespace",
      "pg_toast_2609",
      "pg_amproc",
      "pg_attribute",
      "pg_toast_2964",
      "sql_sizing",
      "pg_toast_3600",
      "pg_toast_3466",
      "pg_init_privs",
      "pg_range",
      "pg_toast_2606",
      "pg_language",
      "pg_enum",
      "pg_statistic_ext",
      "pg_sequence",
      "pg_ts_parser",
      "pg_subscription_rel",
      "pg_toast_16387",
      "pg_toast_13270",
      "pg_toast_1418",
      "pg_toast_1136",
      "pg_foreign_server",
      "pg_toast_2619",
      "sql_implementation_info",
      "pg_largeobject",
      "pg_default_acl",
      "pg_toast_826",
      "pg_toast_3596",
      "pg_toast_3079",
      "pg_toast_2396",
      "pg_toast_6100",
      "pg_transform",
      "pg_toast_6000",
      "pg_collation",
      "pg_ts_dict",
      "pg_toast_2604",
      "pg_extension",
      "pg_index",
      "pg_toast_3256",
      "pg_toast_2612",
      "sql_parts",
      "pg_toast_3118",
      "pg_toast_3350",
      "pg_toast_2600",
      "pg_foreign_table",
      "pg_seclabel",
      "pg_largeobject_metadata",
      "pg_shseclabel",
      "pg_amop",
      "pg_database",
      "pg_cast",
      "pg_toast_1417",
      "pg_trigger",
      "pg_depend",
      "pg_conversion",
      "pg_operator",
      "pg_am",
      "pg_replication_origin",
      "pg_rewrite",
      "pg_toast_3429",
      "pg_subscription",
      "pg_db_role_setting",
      "pg_ts_config_map",
      "pg_publication_rel",
      "pg_foreign_data_wrapper",
      "sql_languages",
      "pg_statistic_ext_data",
      "pg_type",
      "pg_toast_1260",
      "pg_class",
      "pg_auth_members",
      "pg_proc",
      "pg_toast_1213",
      "pg_authid",
      "sql_features",
      "pg_toast_1262",
      "pg_user_mapping",
      "pg_publication",
      "pg_toast_2328",
      "sql_packages",
      "pg_opfamily",
      "pg_toast_3381",
      "pg_toast_13265",
      "pg_toast_2618",
      "pg_toast_1247",
      "pg_toast_13275",
      "pg_shdescription",
      "pg_toast_2615",
      "sql_sizing_profiles",
      "pg_partitioned_table",
      "pg_aggregate",
      "pg_attrdef",
      "pg_description",
      "pg_toast_3456",
      "pg_toast_13290",
      "pg_tablespace",
      "pg_event_trigger",
      "pg_shdepend",
      "pg_toast_13260",
      "pg_toast_1255",
      "pg_statistic",
      "pg_toast_3592",
      "pg_opclass",
      "pg_toast_3394",
      "pg_inherits",
      "pg_constraint",
      "pg_ts_config",
      "pg_policy",
      "pg_ts_template"
    ],
    "schemaname": [
      "information_schema",
      "pg_toast",
      "pg_catalog"
    ]
  },
  "domains": {},
  "pg_hba_file_rules": {
    "netmask": [
      "255.255.255.255",
      "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff"
    ],
    "auth_method": [
      "md5",
      "peer"
    ],
    "address": [
      "::1",
      "127.0.0.1"
    ],
    "error": [],
    "type": [
      "host",
      "local"
    ]
  },
  "transforms": {},
  "pg_config": {
    "setting": [
      "&apos;--build=x86_64-linux-gnu&apos; &apos;--prefix=/usr&apos; &apos;--includedir=/usr/include&apos; &apos;--mandir=/usr/share/man&apos; &apos;--infodir=/usr/share/info&apos; &apos;--sysconfdir=/etc&apos; &apos;--localstatedir=/var&apos; &apos;--disable-silent-rules&apos; &apos;--libdir=/usr/lib/x86_64-linux-gnu&apos; &apos;--libexecdir=/usr/lib/x86_64-linux-gnu&apos; &apos;--disable-maintainer-mode&apos; &apos;--disable-dependency-tracking&apos; &apos;--with-icu&apos; &apos;--with-tcl&apos; &apos;--with-perl&apos; &apos;--with-python&apos; &apos;--with-pam&apos; &apos;--with-openssl&apos; &apos;--with-libxml&apos; &apos;--with-libxslt&apos; &apos;PYTHON=/usr/bin/python3&apos; &apos;--mandir=/usr/share/postgresql/12/man&apos; &apos;--docdir=/usr/share/doc/postgresql-doc-12&apos; &apos;--sysconfdir=/etc/postgresql-common&apos; &apos;--datarootdir=/usr/share/&apos; &apos;--datadir=/usr/share/postgresql/12&apos; &apos;--bindir=/usr/lib/postgresql/12/bin&apos; &apos;--libdir=/usr/lib/x86_64-linux-gnu/&apos; &apos;--libexecdir=/usr/lib/postgresql/&apos; &apos;--includedir=/usr/include/postgresql/&apos; &apos;--with-extra-version= (Ubuntu 12.11-0ubuntu0.20.04.1)&apos; &apos;--enable-nls&apos; &apos;--enable-integer-datetimes&apos; &apos;--enable-thread-safety&apos; &apos;--enable-tap-tests&apos; &apos;--enable-debug&apos; &apos;--enable-dtrace&apos; &apos;--disable-rpath&apos; &apos;--with-uuid=e2fs&apos; &apos;--with-gnu-ld&apos; &apos;--with-pgport=5432&apos; &apos;--with-system-tzdata=/usr/share/zoneinfo&apos; &apos;--with-llvm&apos; &apos;LLVM_CONFIG=/usr/bin/llvm-config-10&apos; &apos;CLANG=/usr/bin/clang-10&apos; &apos;--with-systemd&apos; &apos;--with-selinux&apos; &apos;MKDIR_P=/bin/mkdir -p&apos; &apos;TAR=/bin/tar&apos; &apos;CFLAGS=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -fno-omit-frame-pointer&apos; &apos;LDFLAGS=-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now&apos; &apos;--with-gssapi&apos; &apos;--with-ldap&apos; &apos;--with-includes=/usr/include/mit-krb5&apos; &apos;--with-libs=/usr/lib/mit-krb5&apos; &apos;--with-libs=/usr/lib/x86_64-linux-gnu/mit-krb5&apos; &apos;build_alias=x86_64-linux-gnu&apos; &apos;CPPFLAGS=-Wdate-time -D_FORTIFY_SOURCE=2&apos; &apos;CXXFLAGS=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security&apos;",
      "",
      "-Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -Wno-format-truncation -Wno-stringop-truncation -g -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -fno-omit-frame-pointer",
      "/usr/include/postgresql/12/server",
      "gcc",
      "PostgreSQL 12.11 (Ubuntu 12.11-0ubuntu0.20.04.1)",
      "/usr/lib/postgresql/12/lib",
      "/usr/share/postgresql/12",
      "-lpgcommon -lpgport -lpthread -lselinux -lxslt -lxml2 -lpam -lssl -lcrypto -lgssapi_krb5 -lz -ledit -lrt -lcrypt -ldl -lm ",
      "/usr/lib/postgresql/12/bin",
      "/usr/lib/x86_64-linux-gnu",
      "/usr/share/locale",
      "/etc/postgresql-common",
      "/usr/share/postgresql/12/man",
      "/usr/share/doc/postgresql-doc-12",
      "-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -L/usr/lib/llvm-10/lib -L/usr/lib/x86_64-linux-gnu/mit-krb5 -Wl,--as-needed",
      "/usr/lib/postgresql/12/lib/pgxs/src/makefiles/pgxs.mk",
      "-fPIC",
      "/usr/include/postgresql",
      "-Wdate-time -D_FORTIFY_SOURCE=2 -D_GNU_SOURCE -I/usr/include/libxml2 -I/usr/include/mit-krb5"
    ],
    "name": [
      "INCLUDEDIR",
      "PKGINCLUDEDIR",
      "LDFLAGS_EX",
      "LDFLAGS",
      "CPPFLAGS",
      "CC",
      "MANDIR",
      "LIBS",
      "CONFIGURE",
      "CFLAGS",
      "VERSION",
      "PGXS",
      "HTMLDIR",
      "PKGLIBDIR",
      "LIBDIR",
      "BINDIR",
      "SHAREDIR",
      "DOCDIR",
      "SYSCONFDIR",
      "INCLUDEDIR-SERVER",
      "CFLAGS_SL",
      "LDFLAGS_SL",
      "LOCALEDIR"
    ]
  },
  "pg_foreign_table": {},
  "sql_languages": {},
  "pg_roles": {
    "rolpassword": [
      "********"
    ],
    "rolname": [
      "pg_signal_backend",
      "pg_read_all_settings",
      "pg_write_server_files",
      "pg_execute_server_program",
      "pg_read_all_stats",
      "postgres",
      "pg_stat_scan_tables",
      "pg_monitor",
      "pg_read_server_files"
    ]
  },
  "column_column_usage": {},
  "pg_statio_all_tables": {
    "relname": [
      "pg_pltemplate",
      "pg_toast_13280",
      "pg_toast_2620",
      "pg_toast_13285",
      "pg_namespace",
      "pg_toast_2609",
      "pg_amproc",
      "pg_attribute",
      "pg_toast_2964",
      "sql_sizing",
      "pg_toast_3600",
      "pg_toast_3466",
      "pg_init_privs",
      "pg_range",
      "pg_toast_2606",
      "pg_language",
      "pg_enum",
      "pg_statistic_ext",
      "pg_sequence",
      "pg_ts_parser",
      "pg_subscription_rel",
      "pg_toast_16387",
      "pg_toast_13270",
      "pg_toast_1418",
      "pg_toast_1136",
      "pg_foreign_server",
      "pg_toast_2619",
      "sql_implementation_info",
      "pg_largeobject",
      "pg_default_acl",
      "pg_toast_826",
      "pg_toast_3596",
      "pg_toast_3079",
      "pg_toast_2396",
      "pg_toast_6100",
      "pg_transform",
      "pg_toast_6000",
      "pg_collation",
      "pg_ts_dict",
      "pg_toast_2604",
      "pg_extension",
      "products",
      "pg_index",
      "pg_toast_3256",
      "pg_toast_2612",
      "sql_parts",
      "pg_toast_3118",
      "pg_toast_3350",
      "pg_toast_2600",
      "pg_foreign_table",
      "pg_seclabel",
      "pg_largeobject_metadata",
      "pg_shseclabel",
      "pg_amop",
      "pg_database",
      "pg_cast",
      "pg_toast_1417",
      "pg_trigger",
      "pg_depend",
      "pg_conversion",
      "pg_operator",
      "pg_am",
      "pg_replication_origin",
      "pg_rewrite",
      "pg_toast_3429",
      "pg_subscription",
      "pg_db_role_setting",
      "pg_ts_config_map",
      "pg_publication_rel",
      "pg_foreign_data_wrapper",
      "sql_languages",
      "pg_statistic_ext_data",
      "pg_type",
      "pg_toast_1260",
      "pg_class",
      "pg_auth_members",
      "users_zxzlar",
      "pg_proc",
      "pg_toast_1213",
      "pg_authid",
      "sql_features",
      "pg_toast_1262",
      "pg_user_mapping",
      "pg_publication",
      "pg_toast_2328",
      "sql_packages",
      "pg_opfamily",
      "pg_toast_3381",
      "pg_toast_13265",
      "pg_toast_2618",
      "pg_toast_1247",
      "pg_toast_13275",
      "pg_shdescription",
      "pg_toast_2615",
      "sql_sizing_profiles",
      "pg_partitioned_table",
      "pg_aggregate",
      "pg_attrdef",
      "pg_description",
      "pg_toast_3456",
      "pg_toast_13290",
      "pg_tablespace",
      "pg_event_trigger",
      "pg_shdepend",
      "pg_toast_13260",
      "pg_toast_1255",
      "pg_statistic",
      "pg_toast_3592",
      "pg_opclass",
      "pg_toast_3394",
      "pg_inherits",
      "pg_constraint",
      "pg_ts_config",
      "pg_policy",
      "pg_ts_template"
    ],
    "schemaname": [
      "public",
      "pg_catalog",
      "information_schema",
      "pg_toast"
    ]
  },
  "pg_opclass": {
    "opcname": [
      "varbit_minmax_ops",
      "poly_ops",
      "date_minmax_ops",
      "box_ops",
      "name_ops",
      "macaddr_ops",
      "box_inclusion_ops",
      "bit_ops",
      "varchar_ops",
      "pg_lsn_ops",
      "numeric_minmax_ops",
      "inet_inclusion_ops",
      "tid_ops",
      "range_ops",
      "varchar_pattern_ops",
      "jsonb_ops",
      "bytea_minmax_ops",
      "bool_ops",
      "tsvector_ops",
      "text_pattern_ops",
      "enum_ops",
      "timetz_ops",
      "macaddr8_ops",
      "tsquery_ops",
      "cidr_ops",
      "int8_minmax_ops",
      "array_ops",
      "float8_ops",
      "bit_minmax_ops",
      "time_minmax_ops",
      "bytea_ops",
      "range_inclusion_ops",
      "char_ops",
      "name_minmax_ops",
      "bpchar_pattern_ops",
      "macaddr_minmax_ops",
      "int4_minmax_ops",
      "oid_ops",
      "timestamp_minmax_ops",
      "timestamp_ops",
      "tid_minmax_ops",
      "record_image_ops",
      "float8_minmax_ops",
      "inet_ops",
      "aclitem_ops",
      "cid_ops",
      "timestamptz_minmax_ops",
      "macaddr8_minmax_ops",
      "float4_ops",
      "circle_ops",
      "uuid_minmax_ops",
      "interval_ops",
      "date_ops",
      "quad_point_ops",
      "interval_minmax_ops",
      "record_ops",
      "float4_minmax_ops",
      "bpchar_ops",
      "jsonb_path_ops",
      "timestamptz_ops",
      "inet_minmax_ops",
      "pg_lsn_minmax_ops",
      "numeric_ops",
      "int8_ops",
      "int2_ops",
      "int2_minmax_ops",
      "char_minmax_ops",
      "timetz_minmax_ops",
      "int4_ops",
      "oid_minmax_ops",
      "text_ops",
      "time_ops",
      "money_ops",
      "varbit_ops",
      "text_minmax_ops",
      "kd_point_ops",
      "point_ops",
      "xid_ops",
      "oidvector_ops",
      "uuid_ops",
      "bpchar_minmax_ops"
    ]
  },
  "foreign_servers": {},
  "pg_collation": {
    "collcollate": [
      "mk-MK",
      "ru-RU",
      "sr-Latn-BA",
      "te",
      "vai-Vaii",
      "bg",
      "qu-PE",
      "ar-YE",
      "ar-KM",
      "pt-GQ",
      "yi-001",
      "rof-TZ",
      "vai-Latn",
      "om",
      "ii",
      "fr-BE",
      "en-IL",
      "teo-UG",
      "en-BW",
      "mi-NZ",
      "fil-PH",
      "en-SE",
      "bem-ZM",
      "en-UM",
      "haw-US",
      "en-MG",
      "km-KH",
      "ff-Latn-SN",
      "so-KE",
      "bm",
      "zu-ZA",
      "dje-NE",
      "fr-DJ",
      "en-TT",
      "ar-MR",
      "kk",
      "cy-GB",
      "ti-ET",
      "bez",
      "zh-Hans-CN",
      "teo",
      "en-BZ",
      "tt-RU",
      "sw-CD",
      "cgg-UG",
      "ar-PS",
      "yo",
      "so-ET",
      "mzn",
      "es-BO",
      "jv-ID",
      "en-TC",
      "dyo-SN",
      "en-TO",
      "lg",
      "ff-Latn-SL",
      "und",
      "en-NA",
      "nnh-CM",
      "nn-NO",
      "xog-UG",
      "zh-Hant-TW",
      "fa-AF",
      "zh-Hant-MO",
      "chr",
      "sd-PK",
      "bn-IN",
      "kde",
      "fr-TD",
      "gsw-CH",
      "sw-TZ",
      "fr-PF",
      "id",
      "mg-MG",
      "sr-Cyrl-RS",
      "es-UY",
      "kn",
      "guz-KE",
      "en-SB",
      "kea-CV",
      "lb",
      "el-CY",
      "af",
      "sr-Cyrl-BA",
      "rwk-TZ",
      "my",
      "en-CY",
      "sl",
      "en-NU",
      "en-SZ",
      "et",
      "en-SH",
      "it-SM",
      "agq",
      "uk-UA",
      "ko",
      "en-ZM",
      "en-US",
      "ti",
      "ru-MD",
      "fr-YT",
      "ga-IE",
      "ceb",
      "sah-RU",
      "ses-ML",
      "tg",
      "fr-BI",
      "fr-SN",
      "nd",
      "sl-SI",
      "ar-SO",
      "es-EA",
      "wae-CH",
      "ksh",
      "mgh",
      "az",
      "es-SV",
      "pt-CV",
      "qu",
      "ce",
      "ca-ES",
      "ru-KG",
      "eu-ES",
      "ksb",
      "twq-NE",
      "en-SX",
      "fr-MQ",
      "nb-SJ",
      "ta-LK",
      "naq-NA",
      "ps",
      "gsw",
      "fr-CI",
      "ee",
      "fr-SY",
      "ee-GH",
      "fr-MG",
      "ka-GE",
      "en-GG",
      "kw",
      "en-VG",
      "mua-CM",
      "ro-RO",
      "to",
      "luo-KE",
      "ne",
      "en-JE",
      "nl-SX",
      "si-LK",
      "hu-HU",
      "bn-BD",
      "sr-Cyrl",
      "es-PR",
      "ko-KP",
      "es-PA",
      "bg-BG",
      "ia-001",
      "ar-001",
      "en-CH",
      "es-PH",
      "guz",
      "ewo-CM",
      "hi",
      "jgo",
      "bn",
      "fo-DK",
      "khq-ML",
      "en-RW",
      "kea",
      "en-MY",
      "vai-Vaii-LR",
      "da",
      "kam-KE",
      "en-FJ",
      "se-NO",
      "jv",
      "fr-PM",
      "zh-Hans-MO",
      "da-DK",
      "hy",
      "en-DM",
      "ms-SG",
      "ar-JO",
      "yav-CM",
      "sq-XK",
      "ckb-IR",
      "ar-MA",
      "ta-IN",
      "en-FM",
      "tg-TJ",
      "sq-AL",
      "vun-TZ",
      "vun",
      "en-IM",
      "hr",
      "vi-VN",
      "fr-BJ",
      "hi-IN",
      "en-ER",
      "sbp",
      "de-LI",
      "nus-SS",
      "en-IO",
      "fr-VU",
      "zh-Hant-HK",
      "ms-MY",
      "ga-GB",
      "bm-ML",
      "uz-Latn",
      "br",
      "pt",
      "km",
      "uz",
      "mn-MN",
      "ar-QA",
      "yo-BJ",
      "nl",
      "yi",
      "se-SE",
      "qu-EC",
      "dz-BT",
      "wae",
      "luy-KE",
      "bs-Cyrl",
      "az-Cyrl",
      "ku",
      "he-IL",
      "en-SI",
      "en-TK",
      "ff-Latn-GW",
      "ksf-CM",
      "ff-Latn-NG",
      "en-VU",
      "en-PR",
      "id-ID",
      "uz-Latn-UZ",
      "kln",
      "ne-IN",
      "as",
      "sv-FI",
      "ku-TR",
      "es-NI",
      "kab",
      "ha-NE",
      "en-TZ",
      "en-NG",
      "lu",
      "naq",
      "hr-BA",
      "yue",
      "pt-AO",
      "kw-GB",
      "ks-IN",
      "mer",
      "fr-MF",
      "is-IS",
      "sr-Cyrl-XK",
      "zh-Hant",
      "vai-Latn-LR",
      "ur",
      "pt-BR",
      "lkt-US",
      "en-AS",
      "en-PW",
      "en-AG",
      "fr-GQ",
      "ig",
      "rn-BI",
      "en-GY",
      "en-001",
      "yue-Hant",
      "pa",
      "ta-SG",
      "es-CU",
      "it-VA",
      "si",
      "fr-MR",
      "es-PY",
      "hr-HR",
      "gd",
      "ff-Latn-NE",
      "en-MS",
      "so-DJ",
      "lu-CD",
      "en-WS",
      "seh",
      "kok-IN",
      "nl-NL",
      "nus",
      "gl-ES",
      "da-GL",
      "gsw-FR",
      "fo",
      "kk-KZ",
      "en-KN",
      "lb-LU",
      "en-MP",
      "ky",
      "en-MU",
      "en-MO",
      "fr-TN",
      "ta",
      "fr-MC",
      "fy-NL",
      "te-IN",
      "pl-PL",
      "ur-IN",
      "et-EE",
      "hu",
      "zh-Hans-HK",
      "luo",
      "en-PG",
      "ar-SD",
      "pt-MO",
      "mi",
      "eo",
      "as-IN",
      "ckb-IQ",
      "lrc-IR",
      "ar-SY",
      "ru-UA",
      "bs-Cyrl-BA",
      "en-IN",
      "",
      "ce-RU",
      "en-NL",
      "vai",
      "en-ZW",
      "fr-BL",
      "nyn",
      "dua",
      "lt",
      "ar-IQ",
      "es-ES",
      "kkj-CM",
      "os-RU",
      "de-CH",
      "fil",
      "en-GD",
      "ar-IL",
      "ms",
      "fr-CA",
      "en-BM",
      "en-DE",
      "fr-LU",
      "ewo",
      "ak",
      "en-CX",
      "de",
      "fr-GN",
      "bs",
      "tr-CY",
      "fr-WF",
      "pt-ST",
      "or-IN",
      "it",
      "fr-TG",
      "nyn-UG",
      "nn",
      "sv-AX",
      "am",
      "kl-GL",
      "sr",
      "ka",
      "ar-DJ",
      "sr-Latn-RS",
      "ast-ES",
      "mgo",
      "brx-IN",
      "br-FR",
      "en-KY",
      "twq",
      "en-AT",
      "ast",
      "kok",
      "pa-Arab",
      "fr-GP",
      "ccp-IN",
      "ti-ER",
      "jmc-TZ",
      "ru-KZ",
      "nb",
      "fr-GF",
      "C.UTF-8",
      "POSIX",
      "pt-TL",
      "ky-KG",
      "ar-TN",
      "C",
      "mk",
      "sg-CF",
      "kn-IN",
      "sw-KE",
      "brx",
      "ar-OM",
      "nl-SR",
      "fr-HT",
      "ur-PK",
      "rw",
      "ug-CN",
      "rw-RW",
      "mt-MT",
      "en-KE",
      "pt-PT",
      "ki-KE",
      "dz",
      "fr-NE",
      "en-PK",
      "kab-DZ",
      "fur",
      "en-HK",
      "pa-Guru-IN",
      "khq",
      "ja-JP",
      "yav",
      "agq-CM",
      "tr",
      "fr-BF",
      "rwk",
      "ig-NG",
      "es-CO",
      "en-BI",
      "ar-BH",
      "shi-Latn-MA",
      "mas-TZ",
      "ln",
      "en-SG",
      "eo-001",
      "en-UG",
      "mas",
      "ko-KR",
      "ccp-BD",
      "de-DE",
      "sv-SE",
      "ha-NG",
      "xog",
      "az-Latn",
      "ff-Latn-GH",
      "en-CM",
      "en-150",
      "ms-BN",
      "nl-BE",
      "es-VE",
      "az-Cyrl-AZ",
      "ar-ER",
      "en-GH",
      "mr-IN",
      "it-CH",
      "es-AR",
      "ar-AE",
      "en-ZA",
      "de-BE",
      "en-NR",
      "en-MH",
      "en-SS",
      "ff-Latn-GN",
      "fa-IR",
      "cs",
      "sr-Latn",
      "kde-TZ",
      "fr",
      "mgh-MZ",
      "ar-SA",
      "gv",
      "sg",
      "tzm",
      "en-BB",
      "lag",
      "fr-RE",
      "ki",
      "dsb-DE",
      "en-LR",
      "uz-Arab-AF",
      "pa-Arab-PK",
      "sw",
      "en-FI",
      "luy",
      "ff-Latn",
      "mfe",
      "bs-Latn-BA",
      "lv",
      "dyo",
      "de-IT",
      "shi-Latn",
      "lo",
      "zh-Hans",
      "en-BE",
      "en-AU",
      "lo-LA",
      "uz-Cyrl-UZ",
      "shi",
      "yue-Hans",
      "it-IT",
      "ff-Latn-GM",
      "sr-Cyrl-ME",
      "ro-MD",
      "my-MM",
      "en-VC",
      "ceb-PH",
      "ps-AF",
      "el",
      "fr-CF",
      "en-MW",
      "tzm-MA",
      "af-NA",
      "en-SC",
      "fa",
      "ha-GH",
      "en-PN",
      "pt-GW",
      "az-Latn-AZ",
      "ln-CF",
      "ga",
      "de-AT",
      "ses",
      "en-SD",
      "ckb",
      "jmc",
      "ln-AO",
      "bem",
      "fy",
      "sah",
      "bo-CN",
      "nb-NO",
      "zu",
      "be",
      "om-KE",
      "ar-KW",
      "pt-MZ",
      "bas",
      "hsb",
      "sk",
      "fi",
      "dsb",
      "sbp-TZ",
      "nds",
      "mas-KE",
      "es-BZ",
      "nds-DE",
      "es-BR",
      "en-VI",
      "en-GI",
      "so-SO",
      "ru",
      "sq-MK",
      "hsb-DE",
      "ff-Latn-MR",
      "ml",
      "lg-UG",
      "en-FK",
      "sq",
      "es-PE",
      "wo",
      "mt",
      "sr-Latn-ME",
      "ar-EH",
      "bs-Latn",
      "es",
      "ca-FR",
      "en-BS",
      "se-FI",
      "saq",
      "ee-TG",
      "ug",
      "sw-UG",
      "en-CA",
      "zh-Hans-SG",
      "ar-LY",
      "seh-MZ",
      "teo-KE",
      "nmg",
      "mer-KE",
      "ccp",
      "gsw-LI",
      "en-NZ",
      "eu",
      "es-MX",
      "yo-NG",
      "kl",
      "he",
      "am-ET",
      "mgo-CM",
      "is",
      "en-US-u-va-posix",
      "sd",
      "nnh",
      "lag-TZ",
      "vi",
      "ta-MY",
      "mfe-MU",
      "so",
      "en-DG",
      "zh",
      "kam",
      "tt",
      "lkt",
      "en-AI",
      "ps-PK",
      "cy",
      "ksb-TZ",
      "es-EC",
      "th",
      "se",
      "dua-CM",
      "es-HN",
      "rn",
      "dje",
      "sv",
      "en-IE",
      "ar-SS",
      "yue-Hans-CN",
      "kkj",
      "lrc",
      "dav-KE",
      "mua",
      "en-NF",
      "om-ET",
      "ks",
      "sn",
      "asa-TZ",
      "chr-US",
      "cs-CZ",
      "sk-SK",
      "ff-Latn-CM",
      "fr-GA",
      "bez-TZ",
      "bas-CM",
      "jgo-CM",
      "shi-Tfng-MA",
      "nl-AW",
      "gv-IM",
      "es-DO",
      "fr-FR",
      "zgh-MA",
      "gl",
      "lt-LT",
      "fr-CG",
      "en-GB",
      "fr-NC",
      "ksh-DE",
      "pt-CH",
      "en-LS",
      "gu",
      "ii-CN",
      "es-GT",
      "ca-IT",
      "uk",
      "es-CL",
      "en-PH",
      "en-AE",
      "el-GR",
      "ln-CG",
      "fr-CD",
      "ha",
      "ebu-KE",
      "rof",
      "ca-AD",
      "ak-GH",
      "ff-Latn-LR",
      "es-419",
      "en-LC",
      "yue-Hant-HK",
      "nds-NL",
      "ff-Latn-BF",
      "en-MT",
      "en-DK",
      "wo-SN",
      "ff",
      "uz-Cyrl",
      "pa-Guru",
      "or",
      "bo-IN",
      "nl-BQ",
      "ebu",
      "en",
      "nd-ZW",
      "en-GU",
      "fr-MU",
      "mzn-IR",
      "fr-MA",
      "smn-FI",
      "ru-BY",
      "rm-CH",
      "es-GQ",
      "zgh",
      "mg",
      "haw",
      "uz-Arab",
      "fr-ML",
      "fr-RW",
      "sr-Latn-XK",
      "kln-KE",
      "fr-CM",
      "nl-CW",
      "qu-BO",
      "hy-AM",
      "ia",
      "nmg-CM",
      "fr-KM",
      "ml-IN",
      "ar-LB",
      "fr-SC",
      "en-JM",
      "be-BY",
      "to-TO",
      "fr-DZ",
      "ne-NP",
      "sn-ZW",
      "xh-ZA",
      "mn",
      "gu-IN",
      "ksf",
      "tk-TM",
      "shi-Tfng",
      "de-LU",
      "ar-EG",
      "fi-FI",
      "fr-CH",
      "os-GE",
      "pt-LU",
      "os",
      "en-CC",
      "tk",
      "dav",
      "mr",
      "pl",
      "xh",
      "es-US",
      "ar-TD",
      "es-CR",
      "en-CK",
      "en-GM",
      "gd-GB",
      "ln-CD",
      "ro",
      "fo-FO",
      "ja",
      "es-IC",
      "en-KI",
      "lrc-IQ",
      "en-SL",
      "asa",
      "ca",
      "saq-KE",
      "rm",
      "lv-LV",
      "cgg",
      "en-TV",
      "bo",
      "ar-DZ",
      "th-TH",
      "ar",
      "af-ZA",
      "tr-TR",
      "fur-IT",
      "smn"
    ],
    "collname": [
      "en-VI-x-icu",
      "vai-Vaii-x-icu",
      "it-CH-x-icu",
      "fi-FI-x-icu",
      "ast-x-icu",
      "bo-CN-x-icu",
      "ar-BH-x-icu",
      "ar-DZ-x-icu",
      "kab-DZ-x-icu",
      "mzn-IR-x-icu",
      "khq-ML-x-icu",
      "es-AR-x-icu",
      "dje-NE-x-icu",
      "es-DO-x-icu",
      "wo-SN-x-icu",
      "fil-PH-x-icu",
      "en-VG-x-icu",
      "bo-IN-x-icu",
      "fr-GA-x-icu",
      "bas-CM-x-icu",
      "en-TC-x-icu",
      "kn-x-icu",
      "fr-MA-x-icu",
      "fur-x-icu",
      "yue-Hans-CN-x-icu",
      "nl-AW-x-icu",
      "en-ER-x-icu",
      "nds-NL-x-icu",
      "mk-MK-x-icu",
      "en-JE-x-icu",
      "am-ET-x-icu",
      "fr-HT-x-icu",
      "or-x-icu",
      "en-SS-x-icu",
      "luy-x-icu",
      "en-BE-x-icu",
      "sr-Cyrl-RS-x-icu",
      "cs-x-icu",
      "sw-x-icu",
      "en-KN-x-icu",
      "es-419-x-icu",
      "sg-CF-x-icu",
      "dav-KE-x-icu",
      "ak-x-icu",
      "ta-IN-x-icu",
      "en-PH-x-icu",
      "uz-x-icu",
      "sr-Cyrl-ME-x-icu",
      "jv-x-icu",
      "ru-KG-x-icu",
      "om-x-icu",
      "pt-MO-x-icu",
      "kde-x-icu",
      "ca-FR-x-icu",
      "ccp-BD-x-icu",
      "ff-Latn-GN-x-icu",
      "be-x-icu",
      "xog-UG-x-icu",
      "lu-CD-x-icu",
      "en-BS-x-icu",
      "gv-IM-x-icu",
      "xh-ZA-x-icu",
      "ff-Latn-CM-x-icu",
      "so-SO-x-icu",
      "sr-Latn-x-icu",
      "en-SL-x-icu",
      "yav-CM-x-icu",
      "fi-x-icu",
      "fr-CF-x-icu",
      "en-SI-x-icu",
      "nl-BQ-x-icu",
      "nn-NO-x-icu",
      "si-x-icu",
      "de-LU-x-icu",
      "zh-Hans-x-icu",
      "gu-x-icu",
      "en-MP-x-icu",
      "vi-VN-x-icu",
      "zh-Hant-MO-x-icu",
      "fr-BJ-x-icu",
      "jmc-TZ-x-icu",
      "fr-CM-x-icu",
      "ebu-KE-x-icu",
      "dz-x-icu",
      "pt-GQ-x-icu",
      "ln-CD-x-icu",
      "lag-TZ-x-icu",
      "fy-x-icu",
      "ar-IQ-x-icu",
      "en-150-x-icu",
      "tg-x-icu",
      "nb-SJ-x-icu",
      "en-LS-x-icu",
      "pt-CH-x-icu",
      "ko-KP-x-icu",
      "os-GE-x-icu",
      "smn-x-icu",
      "vi-x-icu",
      "fo-DK-x-icu",
      "bem-x-icu",
      "bo-x-icu",
      "rof-TZ-x-icu",
      "ru-UA-x-icu",
      "fr-MF-x-icu",
      "es-BZ-x-icu",
      "seh-x-icu",
      "tr-CY-x-icu",
      "mi-x-icu",
      "hy-AM-x-icu",
      "kw-GB-x-icu",
      "fa-x-icu",
      "en-CX-x-icu",
      "lv-x-icu",
      "ff-Latn-GW-x-icu",
      "sw-UG-x-icu",
      "pt-ST-x-icu",
      "mas-TZ-x-icu",
      "fr-TG-x-icu",
      "ml-x-icu",
      "fr-VU-x-icu",
      "fr-MC-x-icu",
      "uz-Arab-AF-x-icu",
      "wo-x-icu",
      "ar-SY-x-icu",
      "yo-BJ-x-icu",
      "ja-x-icu",
      "fr-BF-x-icu",
      "fr-SC-x-icu",
      "ee-GH-x-icu",
      "ia-x-icu",
      "fr-YT-x-icu",
      "kam-KE-x-icu",
      "en-SB-x-icu",
      "vun-x-icu",
      "ro-RO-x-icu",
      "en-MT-x-icu",
      "kkj-CM-x-icu",
      "bn-IN-x-icu",
      "kam-x-icu",
      "ar-IL-x-icu",
      "tr-x-icu",
      "fo-FO-x-icu",
      "kk-KZ-x-icu",
      "af-NA-x-icu",
      "ro-x-icu",
      "gsw-x-icu",
      "sr-Cyrl-XK-x-icu",
      "ti-ET-x-icu",
      "ur-x-icu",
      "zh-Hans-MO-x-icu",
      "el-x-icu",
      "bs-Latn-x-icu",
      "bs-Latn-BA-x-icu",
      "ro-MD-x-icu",
      "en-MW-x-icu",
      "az-Latn-x-icu",
      "ar-001-x-icu",
      "kea-x-icu",
      "luy-KE-x-icu",
      "pl-x-icu",
      "os-x-icu",
      "ucs_basic",
      "pa-Guru-IN-x-icu",
      "ky-KG-x-icu",
      "rm-x-icu",
      "uz-Latn-x-icu",
      "fa-AF-x-icu",
      "zu-x-icu",
      "en-SC-x-icu",
      "sv-AX-x-icu",
      "et-x-icu",
      "sr-Latn-RS-x-icu",
      "rm-CH-x-icu",
      "en-NU-x-icu",
      "dyo-SN-x-icu",
      "wae-x-icu",
      "qu-EC-x-icu",
      "en-BI-x-icu",
      "en-LR-x-icu",
      "en-HK-x-icu",
      "fr-TN-x-icu",
      "brx-x-icu",
      "es-MX-x-icu",
      "en-IM-x-icu",
      "yue-Hans-x-icu",
      "en-MH-x-icu",
      "en-FM-x-icu",
      "ar-SA-x-icu",
      "luo-x-icu",
      "lkt-x-icu",
      "en-GH-x-icu",
      "da-GL-x-icu",
      "es-GT-x-icu",
      "de-AT-x-icu",
      "ksb-TZ-x-icu",
      "zh-x-icu",
      "lkt-US-x-icu",
      "khq-x-icu",
      "pa-Guru-x-icu",
      "it-IT-x-icu",
      "ar-LY-x-icu",
      "vai-Latn-x-icu",
      "so-DJ-x-icu",
      "kde-TZ-x-icu",
      "cgg-UG-x-icu",
      "nl-CW-x-icu",
      "en-CK-x-icu",
      "ar-SS-x-icu",
      "mas-x-icu",
      "nn-x-icu",
      "sah-RU-x-icu",
      "bs-x-icu",
      "lb-LU-x-icu",
      "zgh-MA-x-icu",
      "de-IT-x-icu",
      "bn-x-icu",
      "es-US-x-icu",
      "ksb-x-icu",
      "ko-KR-x-icu",
      "km-x-icu",
      "yo-x-icu",
      "ast-ES-x-icu",
      "fr-ML-x-icu",
      "az-Latn-AZ-x-icu",
      "en-CM-x-icu",
      "en-AI-x-icu",
      "ur-IN-x-icu",
      "ku-TR-x-icu",
      "sk-x-icu",
      "ewo-CM-x-icu",
      "vai-Vaii-LR-x-icu",
      "kl-x-icu",
      "ru-x-icu",
      "sg-x-icu",
      "bg-BG-x-icu",
      "en-TV-x-icu",
      "mzn-x-icu",
      "mt-MT-x-icu",
      "de-DE-x-icu",
      "is-IS-x-icu",
      "rwk-TZ-x-icu",
      "en-US-x-icu",
      "sr-Latn-ME-x-icu",
      "zh-Hans-CN-x-icu",
      "ga-IE-x-icu",
      "yo-NG-x-icu",
      "yi-001-x-icu",
      "fr-CD-x-icu",
      "ur-PK-x-icu",
      "ms-SG-x-icu",
      "da-x-icu",
      "ug-x-icu",
      "ps-PK-x-icu",
      "nnh-CM-x-icu",
      "dua-x-icu",
      "kln-x-icu",
      "ee-x-icu",
      "es-IC-x-icu",
      "luo-KE-x-icu",
      "ms-x-icu",
      "es-EC-x-icu",
      "es-NI-x-icu",
      "bez-TZ-x-icu",
      "ff-Latn-GH-x-icu",
      "en-US-u-va-posix-x-icu",
      "en-CA-x-icu",
      "fr-KM-x-icu",
      "ar-QA-x-icu",
      "nmg-CM-x-icu",
      "hsb-x-icu",
      "es-CO-x-icu",
      "ar-LB-x-icu",
      "ln-AO-x-icu",
      "te-IN-x-icu",
      "bn-BD-x-icu",
      "os-RU-x-icu",
      "fr-GP-x-icu",
      "naq-NA-x-icu",
      "ha-NE-x-icu",
      "en-FI-x-icu",
      "fr-LU-x-icu",
      "en-NL-x-icu",
      "ar-x-icu",
      "es-UY-x-icu",
      "kok-IN-x-icu",
      "und-x-icu",
      "en-GG-x-icu",
      "bem-ZM-x-icu",
      "ar-MA-x-icu",
      "lg-UG-x-icu",
      "rn-BI-x-icu",
      "br-FR-x-icu",
      "sd-PK-x-icu",
      "lu-x-icu",
      "ewo-x-icu",
      "ar-SO-x-icu",
      "nd-x-icu",
      "sk-SK-x-icu",
      "fr-NC-x-icu",
      "en-UM-x-icu",
      "en-TK-x-icu",
      "mua-CM-x-icu",
      "xh-x-icu",
      "chr-US-x-icu",
      "ks-IN-x-icu",
      "de-LI-x-icu",
      "zh-Hans-HK-x-icu",
      "ta-SG-x-icu",
      "guz-x-icu",
      "pt-BR-x-icu",
      "en-VU-x-icu",
      "mfe-x-icu",
      "ff-Latn-BF-x-icu",
      "eu-ES-x-icu",
      "af-ZA-x-icu",
      "haw-x-icu",
      "bg-x-icu",
      "es-PR-x-icu",
      "eo-x-icu",
      "en-JM-x-icu",
      "fr-FR-x-icu",
      "ebu-x-icu",
      "ml-IN-x-icu",
      "ga-x-icu",
      "sw-CD-x-icu",
      "en-BB-x-icu",
      "sq-MK-x-icu",
      "es-PH-x-icu",
      "pt-AO-x-icu",
      "brx-IN-x-icu",
      "om-KE-x-icu",
      "shi-Latn-MA-x-icu",
      "en-PR-x-icu",
      "vai-x-icu",
      "en-FK-x-icu",
      "en-NG-x-icu",
      "yav-x-icu",
      "sl-x-icu",
      "fr-MQ-x-icu",
      "en-BW-x-icu",
      "eo-001-x-icu",
      "ru-KZ-x-icu",
      "nl-x-icu",
      "ug-CN-x-icu",
      "mer-KE-x-icu",
      "gl-x-icu",
      "ne-NP-x-icu",
      "qu-BO-x-icu",
      "fr-MR-x-icu",
      "en-NR-x-icu",
      "dz-BT-x-icu",
      "pa-Arab-PK-x-icu",
      "mua-x-icu",
      "rw-x-icu",
      "shi-Tfng-MA-x-icu",
      "en-BM-x-icu",
      "sv-x-icu",
      "ig-NG-x-icu",
      "ff-Latn-LR-x-icu",
      "es-CU-x-icu",
      "dsb-DE-x-icu",
      "sl-SI-x-icu",
      "en-DE-x-icu",
      "en-BZ-x-icu",
      "so-ET-x-icu",
      "it-VA-x-icu",
      "ta-LK-x-icu",
      "te-x-icu",
      "en-NA-x-icu",
      "fr-MU-x-icu",
      "kkj-x-icu",
      "se-FI-x-icu",
      "th-TH-x-icu",
      "nds-DE-x-icu",
      "am-x-icu",
      "zu-ZA-x-icu",
      "ta-MY-x-icu",
      "en-MG-x-icu",
      "en-AG-x-icu",
      "lg-x-icu",
      "kn-IN-x-icu",
      "ak-GH-x-icu",
      "it-x-icu",
      "en-PW-x-icu",
      "ar-MR-x-icu",
      "ckb-IQ-x-icu",
      "ne-x-icu",
      "fr-SY-x-icu",
      "zh-Hant-x-icu",
      "bs-Cyrl-x-icu",
      "C.UTF-8",
      "POSIX",
      "ha-GH-x-icu",
      "en-IL-x-icu",
      "C",
      "be-BY-x-icu",
      "en-AS-x-icu",
      "twq-NE-x-icu",
      "kw-x-icu",
      "ar-YE-x-icu",
      "kk-x-icu",
      "gsw-CH-x-icu",
      "twq-x-icu",
      "mt-x-icu",
      "zh-Hant-HK-x-icu",
      "jmc-x-icu",
      "hy-x-icu",
      "jv-ID-x-icu",
      "he-x-icu",
      "en-KY-x-icu",
      "se-x-icu",
      "ff-Latn-NG-x-icu",
      "lo-x-icu",
      "fr-CG-x-icu",
      "yue-Hant-HK-x-icu",
      "zh-Hant-TW-x-icu",
      "en-VC-x-icu",
      "cs-CZ-x-icu",
      "pt-MZ-x-icu",
      "en-PK-x-icu",
      "en-AU-x-icu",
      "lrc-IR-x-icu",
      "nl-NL-x-icu",
      "to-TO-x-icu",
      "fr-CA-x-icu",
      "mgo-x-icu",
      "shi-Tfng-x-icu",
      "en-IN-x-icu",
      "en-PG-x-icu",
      "default",
      "gl-ES-x-icu",
      "ha-NG-x-icu",
      "en-001-x-icu",
      "ia-001-x-icu",
      "ii-CN-x-icu",
      "cy-GB-x-icu",
      "ta-x-icu",
      "ka-GE-x-icu",
      "pa-Arab-x-icu",
      "ku-x-icu",
      "ff-Latn-GM-x-icu",
      "ca-IT-x-icu",
      "ksf-x-icu",
      "km-KH-x-icu",
      "sv-SE-x-icu",
      "az-Cyrl-AZ-x-icu",
      "mr-IN-x-icu",
      "en-GB-x-icu",
      "ar-KW-x-icu",
      "lt-x-icu",
      "sv-FI-x-icu",
      "fr-x-icu",
      "uz-Cyrl-x-icu",
      "rof-x-icu",
      "mgh-MZ-x-icu",
      "lb-x-icu",
      "fr-DJ-x-icu",
      "es-SV-x-icu",
      "ses-ML-x-icu",
      "en-MU-x-icu",
      "en-ZW-x-icu",
      "ne-IN-x-icu",
      "saq-x-icu",
      "hi-IN-x-icu",
      "asa-x-icu",
      "nus-SS-x-icu",
      "chr-x-icu",
      "ckb-IR-x-icu",
      "uz-Arab-x-icu",
      "pl-PL-x-icu",
      "sn-x-icu",
      "hu-x-icu",
      "es-PE-x-icu",
      "en-x-icu",
      "en-PN-x-icu",
      "ru-MD-x-icu",
      "el-GR-x-icu",
      "ar-AE-x-icu",
      "es-CL-x-icu",
      "qu-PE-x-icu",
      "as-x-icu",
      "is-x-icu",
      "es-x-icu",
      "es-BO-x-icu",
      "ff-Latn-SL-x-icu",
      "id-ID-x-icu",
      "ja-JP-x-icu",
      "fr-MG-x-icu",
      "sq-x-icu",
      "seh-MZ-x-icu",
      "mg-MG-x-icu",
      "en-UG-x-icu",
      "ru-BY-x-icu",
      "en-ZA-x-icu",
      "tk-TM-x-icu",
      "my-MM-x-icu",
      "pt-CV-x-icu",
      "sw-KE-x-icu",
      "fy-NL-x-icu",
      "fr-NE-x-icu",
      "rwk-x-icu",
      "el-CY-x-icu",
      "ceb-x-icu",
      "ki-x-icu",
      "bs-Cyrl-BA-x-icu",
      "fil-x-icu",
      "en-SZ-x-icu",
      "gd-x-icu",
      "gsw-LI-x-icu",
      "en-AE-x-icu",
      "it-SM-x-icu",
      "hi-x-icu",
      "tt-RU-x-icu",
      "sbp-TZ-x-icu",
      "fr-GQ-x-icu",
      "es-BR-x-icu",
      "az-Cyrl-x-icu",
      "ar-KM-x-icu",
      "ar-EH-x-icu",
      "ms-MY-x-icu",
      "ar-PS-x-icu",
      "pt-PT-x-icu",
      "sq-XK-x-icu",
      "ln-CF-x-icu",
      "nus-x-icu",
      "sd-x-icu",
      "or-IN-x-icu",
      "ko-x-icu",
      "ha-x-icu",
      "en-DM-x-icu",
      "vun-TZ-x-icu",
      "mer-x-icu",
      "ln-x-icu",
      "haw-US-x-icu",
      "en-NZ-x-icu",
      "hr-BA-x-icu",
      "yue-Hant-x-icu",
      "se-SE-x-icu",
      "fr-GN-x-icu",
      "fo-x-icu",
      "guz-KE-x-icu",
      "yue-x-icu",
      "ce-x-icu",
      "ca-x-icu",
      "ccp-x-icu",
      "ceb-PH-x-icu",
      "lo-LA-x-icu",
      "kab-x-icu",
      "en-CC-x-icu",
      "nb-x-icu",
      "az-x-icu",
      "en-SH-x-icu",
      "es-PY-x-icu",
      "mn-MN-x-icu",
      "sah-x-icu",
      "en-SE-x-icu",
      "th-x-icu",
      "qu-x-icu",
      "lrc-x-icu",
      "en-MO-x-icu",
      "gu-IN-x-icu",
      "ru-RU-x-icu",
      "fr-RW-x-icu",
      "es-EA-x-icu",
      "tt-x-icu",
      "ses-x-icu",
      "nmg-x-icu",
      "so-x-icu",
      "ms-BN-x-icu",
      "fa-IR-x-icu",
      "dyo-x-icu",
      "ps-x-icu",
      "mr-x-icu",
      "hu-HU-x-icu",
      "es-VE-x-icu",
      "en-GD-x-icu",
      "sr-Cyrl-BA-x-icu",
      "jgo-CM-x-icu",
      "dje-x-icu",
      "ce-RU-x-icu",
      "ki-KE-x-icu",
      "fr-GF-x-icu",
      "tzm-x-icu",
      "teo-KE-x-icu",
      "bez-x-icu",
      "om-ET-x-icu",
      "ln-CG-x-icu",
      "tg-TJ-x-icu",
      "ff-Latn-MR-x-icu",
      "fr-WF-x-icu",
      "wae-CH-x-icu",
      "fr-TD-x-icu",
      "af-x-icu",
      "en-IO-x-icu",
      "mn-x-icu",
      "kea-CV-x-icu",
      "pt-GW-x-icu",
      "mas-KE-x-icu",
      "en-CH-x-icu",
      "dua-CM-x-icu",
      "uz-Cyrl-UZ-x-icu",
      "sr-x-icu",
      "fr-CH-x-icu",
      "saq-KE-x-icu",
      "sw-TZ-x-icu",
      "nl-SX-x-icu",
      "rn-x-icu",
      "vai-Latn-LR-x-icu",
      "sr-Latn-BA-x-icu",
      "mgo-CM-x-icu",
      "br-x-icu",
      "shi-Latn-x-icu",
      "nl-BE-x-icu",
      "en-TT-x-icu",
      "de-x-icu",
      "mi-NZ-x-icu",
      "es-CR-x-icu",
      "my-x-icu",
      "gd-GB-x-icu",
      "en-WS-x-icu",
      "cgg-x-icu",
      "en-MS-x-icu",
      "en-GU-x-icu",
      "en-KI-x-icu",
      "kl-GL-x-icu",
      "de-BE-x-icu",
      "asa-TZ-x-icu",
      "nnh-x-icu",
      "en-GY-x-icu",
      "lrc-IQ-x-icu",
      "pa-x-icu",
      "en-GI-x-icu",
      "ff-Latn-SN-x-icu",
      "en-CY-x-icu",
      "dav-x-icu",
      "ig-x-icu",
      "id-x-icu",
      "ar-OM-x-icu",
      "agq-x-icu",
      "hsb-DE-x-icu",
      "dsb-x-icu",
      "fr-DZ-x-icu",
      "teo-x-icu",
      "ar-JO-x-icu",
      "ps-AF-x-icu",
      "ff-Latn-NE-x-icu",
      "es-HN-x-icu",
      "gv-x-icu",
      "ksh-x-icu",
      "nd-ZW-x-icu",
      "en-LC-x-icu",
      "ee-TG-x-icu",
      "ar-DJ-x-icu",
      "si-LK-x-icu",
      "fr-BE-x-icu",
      "ti-ER-x-icu",
      "nb-NO-x-icu",
      "ksh-DE-x-icu",
      "zh-Hans-SG-x-icu",
      "fr-BI-x-icu",
      "to-x-icu",
      "sbp-x-icu",
      "da-DK-x-icu",
      "en-NF-x-icu",
      "lag-x-icu",
      "lv-LV-x-icu",
      "xog-x-icu",
      "sr-Cyrl-x-icu",
      "rw-RW-x-icu",
      "en-SD-x-icu",
      "fr-RE-x-icu",
      "teo-UG-x-icu",
      "en-ZM-x-icu",
      "se-NO-x-icu",
      "pt-TL-x-icu",
      "uk-UA-x-icu",
      "ka-x-icu",
      "hr-HR-x-icu",
      "ff-Latn-x-icu",
      "tk-x-icu",
      "smn-FI-x-icu",
      "ca-AD-x-icu",
      "pt-LU-x-icu",
      "en-GM-x-icu",
      "en-FJ-x-icu",
      "nl-SR-x-icu",
      "nyn-x-icu",
      "de-CH-x-icu",
      "fr-PF-x-icu",
      "et-EE-x-icu",
      "tr-TR-x-icu",
      "eu-x-icu",
      "ar-TN-x-icu",
      "lt-LT-x-icu",
      "es-ES-x-icu",
      "en-SX-x-icu",
      "ar-EG-x-icu",
      "so-KE-x-icu",
      "en-MY-x-icu",
      "en-TO-x-icu",
      "bm-ML-x-icu",
      "fr-BL-x-icu",
      "ccp-IN-x-icu",
      "zgh-x-icu",
      "shi-x-icu",
      "ky-x-icu",
      "ks-x-icu",
      "mfe-MU-x-icu",
      "bm-x-icu",
      "yi-x-icu",
      "sr-Latn-XK-x-icu",
      "ar-ER-x-icu",
      "nds-x-icu",
      "ksf-CM-x-icu",
      "he-IL-x-icu",
      "ga-GB-x-icu",
      "fr-PM-x-icu",
      "pt-x-icu",
      "en-RW-x-icu",
      "bas-x-icu",
      "en-KE-x-icu",
      "mgh-x-icu",
      "es-PA-x-icu",
      "ckb-x-icu",
      "ar-SD-x-icu",
      "fur-IT-x-icu",
      "sn-ZW-x-icu",
      "fr-SN-x-icu",
      "uk-x-icu",
      "es-GQ-x-icu",
      "fr-CI-x-icu",
      "mg-x-icu",
      "ar-TD-x-icu",
      "en-AT-x-icu",
      "gsw-FR-x-icu",
      "naq-x-icu",
      "mk-x-icu",
      "tzm-MA-x-icu",
      "nyn-UG-x-icu",
      "uz-Latn-UZ-x-icu",
      "ca-ES-x-icu",
      "sq-AL-x-icu",
      "en-IE-x-icu",
      "jgo-x-icu",
      "ii-x-icu",
      "ff-x-icu",
      "hr-x-icu",
      "agq-CM-x-icu",
      "en-TZ-x-icu",
      "as-IN-x-icu",
      "ti-x-icu",
      "en-SG-x-icu",
      "en-DK-x-icu",
      "kln-KE-x-icu",
      "kok-x-icu",
      "en-DG-x-icu",
      "cy-x-icu"
    ],
    "collversion": [
      "153.14",
      "153.14.36.8"
    ],
    "collctype": [
      "mk-MK",
      "ru-RU",
      "sr-Latn-BA",
      "te",
      "vai-Vaii",
      "bg",
      "qu-PE",
      "ar-YE",
      "ar-KM",
      "pt-GQ",
      "yi-001",
      "rof-TZ",
      "vai-Latn",
      "om",
      "ii",
      "fr-BE",
      "en-IL",
      "teo-UG",
      "en-BW",
      "mi-NZ",
      "fil-PH",
      "en-SE",
      "bem-ZM",
      "en-UM",
      "haw-US",
      "en-MG",
      "km-KH",
      "ff-Latn-SN",
      "so-KE",
      "bm",
      "zu-ZA",
      "dje-NE",
      "fr-DJ",
      "en-TT",
      "ar-MR",
      "kk",
      "cy-GB",
      "ti-ET",
      "bez",
      "zh-Hans-CN",
      "teo",
      "en-BZ",
      "tt-RU",
      "sw-CD",
      "cgg-UG",
      "ar-PS",
      "yo",
      "so-ET",
      "mzn",
      "es-BO",
      "jv-ID",
      "en-TC",
      "dyo-SN",
      "en-TO",
      "lg",
      "ff-Latn-SL",
      "und",
      "en-NA",
      "nnh-CM",
      "nn-NO",
      "xog-UG",
      "zh-Hant-TW",
      "fa-AF",
      "zh-Hant-MO",
      "chr",
      "sd-PK",
      "bn-IN",
      "kde",
      "fr-TD",
      "gsw-CH",
      "sw-TZ",
      "fr-PF",
      "id",
      "mg-MG",
      "sr-Cyrl-RS",
      "es-UY",
      "kn",
      "guz-KE",
      "en-SB",
      "kea-CV",
      "lb",
      "el-CY",
      "af",
      "sr-Cyrl-BA",
      "rwk-TZ",
      "my",
      "en-CY",
      "sl",
      "en-NU",
      "en-SZ",
      "et",
      "en-SH",
      "it-SM",
      "agq",
      "uk-UA",
      "ko",
      "en-ZM",
      "en-US",
      "ti",
      "ru-MD",
      "fr-YT",
      "ga-IE",
      "ceb",
      "sah-RU",
      "ses-ML",
      "tg",
      "fr-BI",
      "fr-SN",
      "nd",
      "sl-SI",
      "ar-SO",
      "es-EA",
      "wae-CH",
      "ksh",
      "mgh",
      "az",
      "es-SV",
      "pt-CV",
      "qu",
      "ce",
      "ca-ES",
      "ru-KG",
      "eu-ES",
      "ksb",
      "twq-NE",
      "en-SX",
      "fr-MQ",
      "nb-SJ",
      "ta-LK",
      "naq-NA",
      "ps",
      "gsw",
      "fr-CI",
      "ee",
      "fr-SY",
      "ee-GH",
      "fr-MG",
      "ka-GE",
      "en-GG",
      "kw",
      "en-VG",
      "mua-CM",
      "ro-RO",
      "to",
      "luo-KE",
      "ne",
      "en-JE",
      "nl-SX",
      "si-LK",
      "hu-HU",
      "bn-BD",
      "sr-Cyrl",
      "es-PR",
      "ko-KP",
      "es-PA",
      "bg-BG",
      "ia-001",
      "ar-001",
      "en-CH",
      "es-PH",
      "guz",
      "ewo-CM",
      "hi",
      "jgo",
      "bn",
      "fo-DK",
      "khq-ML",
      "en-RW",
      "kea",
      "en-MY",
      "vai-Vaii-LR",
      "da",
      "kam-KE",
      "en-FJ",
      "se-NO",
      "jv",
      "fr-PM",
      "zh-Hans-MO",
      "da-DK",
      "hy",
      "en-DM",
      "ms-SG",
      "ar-JO",
      "yav-CM",
      "sq-XK",
      "ckb-IR",
      "ar-MA",
      "ta-IN",
      "en-FM",
      "tg-TJ",
      "sq-AL",
      "vun-TZ",
      "vun",
      "en-IM",
      "hr",
      "vi-VN",
      "fr-BJ",
      "hi-IN",
      "en-ER",
      "sbp",
      "de-LI",
      "nus-SS",
      "en-IO",
      "fr-VU",
      "zh-Hant-HK",
      "ms-MY",
      "ga-GB",
      "bm-ML",
      "uz-Latn",
      "br",
      "pt",
      "km",
      "uz",
      "mn-MN",
      "ar-QA",
      "yo-BJ",
      "nl",
      "yi",
      "se-SE",
      "qu-EC",
      "dz-BT",
      "wae",
      "luy-KE",
      "bs-Cyrl",
      "az-Cyrl",
      "ku",
      "he-IL",
      "en-SI",
      "en-TK",
      "ff-Latn-GW",
      "ksf-CM",
      "ff-Latn-NG",
      "en-VU",
      "en-PR",
      "id-ID",
      "uz-Latn-UZ",
      "kln",
      "ne-IN",
      "as",
      "sv-FI",
      "ku-TR",
      "es-NI",
      "kab",
      "ha-NE",
      "en-TZ",
      "en-NG",
      "lu",
      "naq",
      "hr-BA",
      "yue",
      "pt-AO",
      "kw-GB",
      "ks-IN",
      "mer",
      "fr-MF",
      "is-IS",
      "sr-Cyrl-XK",
      "zh-Hant",
      "vai-Latn-LR",
      "ur",
      "pt-BR",
      "lkt-US",
      "en-AS",
      "en-PW",
      "en-AG",
      "fr-GQ",
      "ig",
      "rn-BI",
      "en-GY",
      "en-001",
      "yue-Hant",
      "pa",
      "ta-SG",
      "es-CU",
      "it-VA",
      "si",
      "fr-MR",
      "es-PY",
      "hr-HR",
      "gd",
      "ff-Latn-NE",
      "en-MS",
      "so-DJ",
      "lu-CD",
      "en-WS",
      "seh",
      "kok-IN",
      "nl-NL",
      "nus",
      "gl-ES",
      "da-GL",
      "gsw-FR",
      "fo",
      "kk-KZ",
      "en-KN",
      "lb-LU",
      "en-MP",
      "ky",
      "en-MU",
      "en-MO",
      "fr-TN",
      "ta",
      "fr-MC",
      "fy-NL",
      "te-IN",
      "pl-PL",
      "ur-IN",
      "et-EE",
      "hu",
      "zh-Hans-HK",
      "luo",
      "en-PG",
      "ar-SD",
      "pt-MO",
      "mi",
      "eo",
      "as-IN",
      "ckb-IQ",
      "lrc-IR",
      "ar-SY",
      "ru-UA",
      "bs-Cyrl-BA",
      "en-IN",
      "",
      "ce-RU",
      "en-NL",
      "vai",
      "en-ZW",
      "fr-BL",
      "nyn",
      "dua",
      "lt",
      "ar-IQ",
      "es-ES",
      "kkj-CM",
      "os-RU",
      "de-CH",
      "fil",
      "en-GD",
      "ar-IL",
      "ms",
      "fr-CA",
      "en-BM",
      "en-DE",
      "fr-LU",
      "ewo",
      "ak",
      "en-CX",
      "de",
      "fr-GN",
      "bs",
      "tr-CY",
      "fr-WF",
      "pt-ST",
      "or-IN",
      "it",
      "fr-TG",
      "nyn-UG",
      "nn",
      "sv-AX",
      "am",
      "kl-GL",
      "sr",
      "ka",
      "ar-DJ",
      "sr-Latn-RS",
      "ast-ES",
      "mgo",
      "brx-IN",
      "br-FR",
      "en-KY",
      "twq",
      "en-AT",
      "ast",
      "kok",
      "pa-Arab",
      "fr-GP",
      "ccp-IN",
      "ti-ER",
      "jmc-TZ",
      "ru-KZ",
      "nb",
      "fr-GF",
      "C.UTF-8",
      "POSIX",
      "pt-TL",
      "ky-KG",
      "ar-TN",
      "C",
      "mk",
      "sg-CF",
      "kn-IN",
      "sw-KE",
      "brx",
      "ar-OM",
      "nl-SR",
      "fr-HT",
      "ur-PK",
      "rw",
      "ug-CN",
      "rw-RW",
      "mt-MT",
      "en-KE",
      "pt-PT",
      "ki-KE",
      "dz",
      "fr-NE",
      "en-PK",
      "kab-DZ",
      "fur",
      "en-HK",
      "pa-Guru-IN",
      "khq",
      "ja-JP",
      "yav",
      "agq-CM",
      "tr",
      "fr-BF",
      "rwk",
      "ig-NG",
      "es-CO",
      "en-BI",
      "ar-BH",
      "shi-Latn-MA",
      "mas-TZ",
      "ln",
      "en-SG",
      "eo-001",
      "en-UG",
      "mas",
      "ko-KR",
      "ccp-BD",
      "de-DE",
      "sv-SE",
      "ha-NG",
      "xog",
      "az-Latn",
      "ff-Latn-GH",
      "en-CM",
      "en-150",
      "ms-BN",
      "nl-BE",
      "es-VE",
      "az-Cyrl-AZ",
      "ar-ER",
      "en-GH",
      "mr-IN",
      "it-CH",
      "es-AR",
      "ar-AE",
      "en-ZA",
      "de-BE",
      "en-NR",
      "en-MH",
      "en-SS",
      "ff-Latn-GN",
      "fa-IR",
      "cs",
      "sr-Latn",
      "kde-TZ",
      "fr",
      "mgh-MZ",
      "ar-SA",
      "gv",
      "sg",
      "tzm",
      "en-BB",
      "lag",
      "fr-RE",
      "ki",
      "dsb-DE",
      "en-LR",
      "uz-Arab-AF",
      "pa-Arab-PK",
      "sw",
      "en-FI",
      "luy",
      "ff-Latn",
      "mfe",
      "bs-Latn-BA",
      "lv",
      "dyo",
      "de-IT",
      "shi-Latn",
      "lo",
      "zh-Hans",
      "en-BE",
      "en-AU",
      "lo-LA",
      "uz-Cyrl-UZ",
      "shi",
      "yue-Hans",
      "it-IT",
      "ff-Latn-GM",
      "sr-Cyrl-ME",
      "ro-MD",
      "my-MM",
      "en-VC",
      "ceb-PH",
      "ps-AF",
      "el",
      "fr-CF",
      "en-MW",
      "tzm-MA",
      "af-NA",
      "en-SC",
      "fa",
      "ha-GH",
      "en-PN",
      "pt-GW",
      "az-Latn-AZ",
      "ln-CF",
      "ga",
      "de-AT",
      "ses",
      "en-SD",
      "ckb",
      "jmc",
      "ln-AO",
      "bem",
      "fy",
      "sah",
      "bo-CN",
      "nb-NO",
      "zu",
      "be",
      "om-KE",
      "ar-KW",
      "pt-MZ",
      "bas",
      "hsb",
      "sk",
      "fi",
      "dsb",
      "sbp-TZ",
      "nds",
      "mas-KE",
      "es-BZ",
      "nds-DE",
      "es-BR",
      "en-VI",
      "en-GI",
      "so-SO",
      "ru",
      "sq-MK",
      "hsb-DE",
      "ff-Latn-MR",
      "ml",
      "lg-UG",
      "en-FK",
      "sq",
      "es-PE",
      "wo",
      "mt",
      "sr-Latn-ME",
      "ar-EH",
      "bs-Latn",
      "es",
      "ca-FR",
      "en-BS",
      "se-FI",
      "saq",
      "ee-TG",
      "ug",
      "sw-UG",
      "en-CA",
      "zh-Hans-SG",
      "ar-LY",
      "seh-MZ",
      "teo-KE",
      "nmg",
      "mer-KE",
      "ccp",
      "gsw-LI",
      "en-NZ",
      "eu",
      "es-MX",
      "yo-NG",
      "kl",
      "he",
      "am-ET",
      "mgo-CM",
      "is",
      "en-US-u-va-posix",
      "sd",
      "nnh",
      "lag-TZ",
      "vi",
      "ta-MY",
      "mfe-MU",
      "so",
      "en-DG",
      "zh",
      "kam",
      "tt",
      "lkt",
      "en-AI",
      "ps-PK",
      "cy",
      "ksb-TZ",
      "es-EC",
      "th",
      "se",
      "dua-CM",
      "es-HN",
      "rn",
      "dje",
      "sv",
      "en-IE",
      "ar-SS",
      "yue-Hans-CN",
      "kkj",
      "lrc",
      "dav-KE",
      "mua",
      "en-NF",
      "om-ET",
      "ks",
      "sn",
      "asa-TZ",
      "chr-US",
      "cs-CZ",
      "sk-SK",
      "ff-Latn-CM",
      "fr-GA",
      "bez-TZ",
      "bas-CM",
      "jgo-CM",
      "shi-Tfng-MA",
      "nl-AW",
      "gv-IM",
      "es-DO",
      "fr-FR",
      "zgh-MA",
      "gl",
      "lt-LT",
      "fr-CG",
      "en-GB",
      "fr-NC",
      "ksh-DE",
      "pt-CH",
      "en-LS",
      "gu",
      "ii-CN",
      "es-GT",
      "ca-IT",
      "uk",
      "es-CL",
      "en-PH",
      "en-AE",
      "el-GR",
      "ln-CG",
      "fr-CD",
      "ha",
      "ebu-KE",
      "rof",
      "ca-AD",
      "ak-GH",
      "ff-Latn-LR",
      "es-419",
      "en-LC",
      "yue-Hant-HK",
      "nds-NL",
      "ff-Latn-BF",
      "en-MT",
      "en-DK",
      "wo-SN",
      "ff",
      "uz-Cyrl",
      "pa-Guru",
      "or",
      "bo-IN",
      "nl-BQ",
      "ebu",
      "en",
      "nd-ZW",
      "en-GU",
      "fr-MU",
      "mzn-IR",
      "fr-MA",
      "smn-FI",
      "ru-BY",
      "rm-CH",
      "es-GQ",
      "zgh",
      "mg",
      "haw",
      "uz-Arab",
      "fr-ML",
      "fr-RW",
      "sr-Latn-XK",
      "kln-KE",
      "fr-CM",
      "nl-CW",
      "qu-BO",
      "hy-AM",
      "ia",
      "nmg-CM",
      "fr-KM",
      "ml-IN",
      "ar-LB",
      "fr-SC",
      "en-JM",
      "be-BY",
      "to-TO",
      "fr-DZ",
      "ne-NP",
      "sn-ZW",
      "xh-ZA",
      "mn",
      "gu-IN",
      "ksf",
      "tk-TM",
      "shi-Tfng",
      "de-LU",
      "ar-EG",
      "fi-FI",
      "fr-CH",
      "os-GE",
      "pt-LU",
      "os",
      "en-CC",
      "tk",
      "dav",
      "mr",
      "pl",
      "xh",
      "es-US",
      "ar-TD",
      "es-CR",
      "en-CK",
      "en-GM",
      "gd-GB",
      "ln-CD",
      "ro",
      "fo-FO",
      "ja",
      "es-IC",
      "en-KI",
      "lrc-IQ",
      "en-SL",
      "asa",
      "ca",
      "saq-KE",
      "rm",
      "lv-LV",
      "cgg",
      "en-TV",
      "bo",
      "ar-DZ",
      "th-TH",
      "ar",
      "af-ZA",
      "tr-TR",
      "fur-IT",
      "smn"
    ]
  },
  "pg_settings": {
    "sourcefile": [
      "/etc/postgresql/12/main/postgresql.conf"
    ],
    "min_val": [
      "64",
      "-15",
      "1048576",
      "100000",
      "25",
      "1024",
      "16",
      "1.5",
      "32",
      "-2147483648",
      "10000",
      "100",
      "0",
      "2",
      "10",
      "131072",
      "8192",
      "-1",
      "30",
      "1",
      "120011",
      "63"
    ],
    "extra_desc": [
      "If more than this total of pages and tuples in the same relation are locked by a connection, those locks are replaced by a relation-level lock.",
      "When turned on, expressions of the form expr = NULL (or NULL = expr) are treated as expr IS NULL, that is, they return true if expr evaluates to the null value, and false otherwise. The correct behavior of expr = NULL is to always return null (unknown).",
      "When turned on, unquoted NULL in an array input value means a null value; otherwise it is taken literally.",
      "When enabled, row security will be applied to all users.",
      "This much memory can be used by each internal sort operation and hash table before switching to temporary disk files.",
      "Unix-domain sockets use the usual Unix file system permission set. The parameter value is expected to be a numeric mode specification in the form accepted by the chmod and umask system calls. (To use the customary octal format the number must start with a 0 (zero).)",
      "Valid values are combinations of &quot;stderr&quot;, &quot;syslog&quot;, &quot;csvlog&quot;, and &quot;eventlog&quot;, depending on the platform.",
      "Zero prints all queries. -1 turns this feature off.",
      "If possible, run query using a parallel worker and with parallel restrictions.",
      "The owning user of the socket is always the user that starts the server.",
      "Skips privilege checks when reading or modifying large objects, for compatibility with PostgreSQL releases prior to 9.0.",
      "The server will use the fsync() system call in several places to make sure that updates are physically written to disk. This insures that a database cluster will recover to a consistent state after an operating system or hardware crash.",
      "Should gather nodes also run subplans, or just gather tuples?",
      "Zero logs all files. The default is -1 (turning this feature off).",
      "Can be specified as relative to the data directory or as absolute path.",
      "Table scans will be skipped if their constraints guarantee that no rows match the query.",
      "This affects real, double precision, and geometric data types. A zero or negative parameter value is added to the standard number of digits (FLT_DIG or DBL_DIG as appropriate). Any value greater than zero selects precise output mode.",
      "-1 disables optimization.",
      "-1 disables inlining.",
      "A value of -1 disables this feature.",
      "Also controls interpretation of ambiguous date inputs.",
      "For RAID arrays, this should be approximately the number of drive spindles in the array.",
      "-1 disables JIT compilation.",
      "Each level includes all the levels that follow it. The later the level, the fewer messages are sent.",
      "-1 means no limit.",
      "This applies to table columns that have not had a column-specific target set via ALTER TABLE SET STATISTICS.",
      "Prepared statements can have custom and generic plans, and the planner will attempt to choose which is better.  This can be set to override the default behavior.",
      "That is, the total size of the caches (kernel cache and shared buffers) used for PostgreSQL data files. This is measured in disk pages, which are normally 8 kB each.",
      "It does not prevent updating the indexes, so it is safe to use.  The worst consequence is slowness.",
      "A page write in process during an operating system crash might be only partially written to disk.  During recovery, the row changes stored in WAL are not enough to recover.  This option writes pages when first modified after a checkpoint to WAL so full recovery is possible.",
      "The shared lock table is sized on the assumption that at most max_locks_per_transaction * max_connections distinct objects will need to be locked at any one time.",
      "A value of 0 uses the system default.",
      "If the planner estimates that it will read a number of index pages too small to reach this limit, a parallel scan will not be considered.",
      "Enables the collection of information on the currently executing command of each session, along with the time at which that command began execution.",
      "By default, connection logs only show the IP address of the connecting host. If you want them to show the host name you can turn this on, but depending on your host name resolution setup it might impose a non-negligible performance penalty.",
      "If blank, no prefix is used.",
      "Zero selects a suitable default value.",
      "The parameter value is expected to be a numeric mode specification in the form accepted by the chmod and umask system calls. (To use the customary octal format the number must start with a 0 (zero).)",
      "A value of 0 turns off the timeout.",
      "An empty string selects the database&apos;s default tablespace.",
      "The planner will merge subqueries into upper queries if the resulting FROM list would have no more than this many items.",
      "Write a message to the server log if checkpoints caused by the filling of checkpoint segment files happens more frequently than this number of seconds. Zero turns off the warning.",
      "If more than this number of tuples on the same page are locked by a connection, those locks are replaced by a page-level lock.",
      "The planner will flatten explicit JOIN constructs into lists of FROM items whenever a list of no more than this many items would result.",
      "Zero prints all actions. -1 turns autovacuum logging off.",
      "This algorithm attempts to do planning without exhaustive searching.",
      "This allows attaching a debugger to the process.",
      "The shared predicate lock table is sized on the assumption that at most max_pred_locks_per_transaction * max_connections distinct objects will need to be locked at any one time.",
      "If a dynamically loadable module needs to be opened and the specified name does not have a directory component (i.e., the name does not contain a slash), the system will search this path for the specified file.",
      "Full-page images will be logged for all data blocks and cross-checked against the results of WAL replay.",
      "Detection of a checksum failure normally causes PostgreSQL to report an error, aborting the current transaction. Setting ignore_checksum_failure to true causes the system to ignore the failure (but still report a warning), and continue processing. This behavior could cause crashes or other serious problems. Only has an effect if checksums are enabled.",
      "If the planner estimates that it will read a number of table pages too small to reach this limit, a parallel scan will not be considered.",
      "Detection of a damaged page header normally causes PostgreSQL to report an error, aborting the current transaction. Setting zero_damaged_pages to true causes the system to instead report a warning, zero out the damaged page, and continue processing. This behavior will destroy data, namely all the rows on the damaged page.",
      "Enables updating of the process title every time a new SQL command is received by the server.",
      "Allows the query planner and executor to compare partition bounds to conditions in the query to determine which partitions must be scanned.",
      "Logs all statements from a fraction of transactions. Use a value between 0.0 (never log) and 1.0 (log all statements for all transactions).",
      "This controls the number of consecutive keepalive retransmits that can be lost before a connection is considered dead. A value of 0 uses the system default.",
      "This includes operations such as VACUUM and CREATE INDEX.",
      "The parameter value is a numeric mode specification in the form accepted by the chmod and umask system calls. (To use the customary octal format the number must start with a 0 (zero).)"
    ],
    "name": [
      "bonjour_name",
      "escape_string_warning",
      "autovacuum_analyze_scale_factor",
      "from_collapse_limit",
      "backend_flush_after",
      "trace_notify",
      "lock_timeout",
      "max_function_args",
      "log_filename",
      "work_mem",
      "max_identifier_length",
      "syslog_sequence_numbers",
      "autovacuum_multixact_freeze_max_age",
      "wal_consistency_checking",
      "server_version",
      "min_parallel_index_scan_size",
      "enable_tidscan",
      "wal_compression",
      "ident_file",
      "ssl_ciphers",
      "recovery_target_time",
      "server_version_num",
      "array_nulls",
      "full_page_writes",
      "log_hostname",
      "trace_sort",
      "commit_delay",
      "geqo_selection_bias",
      "enable_hashagg",
      "ssl_ca_file",
      "krb_caseins_users",
      "restart_after_crash",
      "primary_conninfo",
      "wal_keep_segments",
      "archive_command",
      "vacuum_cost_page_hit",
      "deadlock_timeout",
      "debug_print_rewritten",
      "autovacuum_freeze_max_age",
      "max_files_per_process",
      "checkpoint_flush_after",
      "ssl_cert_file",
      "bytea_output",
      "geqo_seed",
      "wal_retrieve_retry_interval",
      "geqo_effort",
      "checkpoint_warning",
      "track_activities",
      "parallel_setup_cost",
      "timezone_abbreviations",
      "vacuum_freeze_table_age",
      "track_io_timing",
      "autovacuum_vacuum_cost_limit",
      "vacuum_cost_page_miss",
      "log_rotation_age",
      "ssl_crl_file",
      "autovacuum",
      "superuser_reserved_connections",
      "wal_writer_flush_after",
      "data_directory_mode",
      "wal_buffers",
      "parallel_tuple_cost",
      "max_pred_locks_per_transaction",
      "log_file_mode",
      "geqo_generations",
      "syslog_facility",
      "default_transaction_deferrable",
      "maintenance_work_mem",
      "commit_siblings",
      "recovery_target_timeline",
      "pre_auth_delay",
      "min_wal_size",
      "allow_system_table_mods",
      "vacuum_multixact_freeze_table_age",
      "autovacuum_naptime",
      "log_destination",
      "wal_receiver_timeout",
      "cpu_operator_cost",
      "ssl_ecdh_curve",
      "ssl_prefer_server_ciphers",
      "shared_buffers",
      "autovacuum_vacuum_scale_factor",
      "gin_fuzzy_search_limit",
      "log_error_verbosity",
      "dynamic_shared_memory_type",
      "recovery_target",
      "cpu_index_tuple_cost",
      "post_auth_delay",
      "debug_print_parse",
      "integer_datetimes",
      "max_stack_depth",
      "trace_recovery_messages",
      "vacuum_cleanup_index_scale_factor",
      "enable_partitionwise_aggregate",
      "tcp_keepalives_interval",
      "cursor_tuple_fraction",
      "max_worker_processes",
      "restore_command",
      "primary_slot_name",
      "hba_file",
      "log_disconnections",
      "tcp_user_timeout",
      "enable_material",
      "tcp_keepalives_idle",
      "search_path",
      "log_duration",
      "max_index_keys",
      "lc_messages",
      "force_parallel_mode",
      "debug_print_plan",
      "min_parallel_table_scan_size",
      "enable_partition_pruning",
      "join_collapse_limit",
      "huge_pages",
      "recovery_target_inclusive",
      "vacuum_cost_page_dirty",
      "max_sync_workers_per_subscription",
      "enable_hashjoin",
      "wal_writer_delay",
      "geqo_threshold",
      "event_source",
      "row_security",
      "logging_collector",
      "geqo",
      "log_min_messages",
      "lc_ctype",
      "ignore_system_indexes",
      "ignore_checksum_failure",
      "default_statistics_target",
      "temp_buffers",
      "transaction_read_only",
      "standard_conforming_strings",
      "log_replication_commands",
      "track_functions",
      "max_standby_streaming_delay",
      "config_file",
      "archive_timeout",
      "idle_in_transaction_session_timeout",
      "wal_sync_method",
      "enable_indexonlyscan",
      "log_min_duration_statement",
      "default_table_access_method",
      "max_pred_locks_per_page",
      "effective_io_concurrency",
      "vacuum_freeze_min_age",
      "max_locks_per_transaction",
      "log_timezone",
      "transform_null_equals",
      "debug_assertions",
      "bgwriter_flush_after",
      "recovery_end_command",
      "zero_damaged_pages",
      "track_activity_query_size",
      "archive_cleanup_command",
      "recovery_target_name",
      "xmloption",
      "lc_time",
      "DateStyle",
      "external_pid_file",
      "cluster_name",
      "local_preload_libraries",
      "max_replication_slots",
      "default_tablespace",
      "seq_page_cost",
      "log_lock_waits",
      "effective_cache_size",
      "unix_socket_group",
      "max_parallel_workers_per_gather",
      "geqo_pool_size",
      "jit_optimize_above_cost",
      "lc_collate",
      "dynamic_library_path",
      "lc_numeric",
      "constraint_exclusion",
      "jit_expressions",
      "ssl_key_file",
      "checkpoint_timeout",
      "session_preload_libraries",
      "ssl_min_protocol_version",
      "cpu_tuple_cost",
      "vacuum_cost_delay",
      "unix_socket_permissions",
      "autovacuum_vacuum_cost_delay",
      "operator_precedence_warning",
      "enable_sort",
      "jit_debugging_support",
      "tcp_keepalives_count",
      "enable_parallel_append",
      "recovery_min_apply_delay",
      "lo_compat_privileges",
      "transaction_deferrable",
      "wal_receiver_status_interval",
      "log_parser_stats",
      "segment_size",
      "statement_timeout",
      "max_prepared_transactions",
      "max_logical_replication_workers",
      "log_transaction_sample_rate",
      "ssl_passphrase_command_supports_reload",
      "vacuum_multixact_freeze_min_age",
      "hot_standby_feedback",
      "enable_bitmapscan",
      "log_statement",
      "server_encoding",
      "max_parallel_workers",
      "temp_tablespaces",
      "random_page_cost",
      "block_size",
      "ssl_max_protocol_version",
      "stats_temp_directory",
      "track_counts",
      "ssl",
      "data_sync_retry",
      "default_text_search_config",
      "vacuum_defer_cleanup_age",
      "log_statement_stats",
      "shared_preload_libraries",
      "password_encryption",
      "wal_block_size",
      "max_standby_archive_delay",
      "bgwriter_lru_maxpages",
      "krb_server_keyfile",
      "log_rotation_size",
      "syslog_split_messages",
      "ssl_dh_params_file",
      "promote_trigger_file",
      "enable_parallel_hash",
      "shared_memory_type",
      "recovery_target_xid",
      "syslog_ident",
      "default_transaction_read_only",
      "extra_float_digits",
      "enable_nestloop",
      "jit_profiling_support",
      "gin_pending_list_limit",
      "archive_mode",
      "transaction_isolation",
      "autovacuum_work_mem",
      "client_min_messages",
      "max_wal_size",
      "max_connections",
      "wal_level",
      "recovery_target_lsn",
      "enable_seqscan",
      "unix_socket_directories",
      "plan_cache_mode",
      "fsync",
      "autovacuum_analyze_threshold",
      "ssl_library",
      "synchronize_seqscans",
      "IntervalStyle",
      "jit_inline_above_cost",
      "default_transaction_isolation",
      "port",
      "log_checkpoints",
      "max_parallel_maintenance_workers",
      "listen_addresses",
      "db_user_namespace",
      "authentication_timeout",
      "application_name",
      "wal_sender_timeout",
      "session_replication_role",
      "data_directory",
      "vacuum_cost_limit",
      "jit_provider",
      "check_function_bodies",
      "exit_on_error",
      "synchronous_standby_names",
      "log_autovacuum_min_duration",
      "debug_pretty_print",
      "autovacuum_max_workers",
      "jit_dump_bitcode",
      "wal_segment_size",
      "log_planner_stats",
      "enable_indexscan",
      "old_snapshot_threshold",
      "wal_init_zero",
      "log_executor_stats",
      "backslash_quote",
      "enable_gathermerge",
      "log_line_prefix",
      "synchronous_commit",
      "log_connections",
      "quote_all_identifiers",
      "wal_log_hints",
      "max_pred_locks_per_relation",
      "jit",
      "update_process_title",
      "max_wal_senders",
      "jit_above_cost",
      "track_commit_timestamp",
      "data_checksums",
      "log_temp_files",
      "log_min_error_statement",
      "log_truncate_on_rotation",
      "lc_monetary",
      "log_directory",
      "enable_mergejoin",
      "checkpoint_completion_target",
      "parallel_leader_participation",
      "bonjour",
      "hot_standby",
      "autovacuum_vacuum_threshold",
      "bgwriter_lru_multiplier",
      "bgwriter_delay",
      "xmlbinary",
      "temp_file_limit",
      "client_encoding",
      "TimeZone",
      "wal_recycle",
      "jit_tuple_deforming",
      "enable_partitionwise_join",
      "recovery_target_action",
      "ssl_passphrase_command"
    ],
    "reset_val": [
      "5",
      "30000",
      "mmap",
      "heap",
      "%m [%p] %q%u@%d ",
      "4",
      "128",
      "notice",
      "64",
      "0.0025",
      "&quot;$user&quot;, public",
      "/etc/ssl/private/ssl-cert-snakeoil.key",
      "100000",
      "content",
      "/etc/postgresql/12/main/pg_ident.conf",
      "/var/run/postgresql",
      "60000",
      "3",
      "1440",
      "posix",
      "4096",
      "12.11 (Ubuntu 12.11-0ubuntu0.20.04.1)",
      "2048",
      "1024",
      "20",
      "off",
      "FILE:/etc/postgresql-common/krb5.keytab",
      "511",
      "stderr",
      "pg_catalog.english",
      "0.005",
      "PostgreSQL",
      "C.UTF-8",
      "C",
      "log",
      "512",
      "default",
      "32",
      "OpenSSL",
      "postgresql-%Y-%m-%d_%H%M%S.log",
      "origin",
      "HIGH:MEDIUM:+3DES:!aNULL",
      "hex",
      "prime256v1",
      "partition",
      "150000000",
      "auto",
      "ISO, MDY",
      "error",
      "5000000",
      "md5",
      "on",
      "pause",
      "Default",
      "/var/lib/postgresql/12/main",
      "none",
      "UTF8",
      "replica",
      "fdatasync",
      "/var/run/postgresql/12-main.pid",
      "80",
      "400000000",
      "/etc/postgresql/12/main/pg_hba.conf",
      "100",
      "524288",
      "8",
      "0",
      "12",
      "/var/run/postgresql/12-main.pg_stat_tmp",
      "300",
      "0.5",
      "Etc/UTC",
      "0.1",
      "2",
      "$libdir",
      "try",
      "warning",
      "",
      "0.01",
      "postgres",
      "base64",
      "0.2",
      "60",
      "10",
      "500000",
      "384",
      "safe_encoding",
      "/etc/postgresql/12/main/postgresql.conf",
      "1000",
      "131072",
      "5432",
      "latest",
      "8192",
      "50000000",
      "50",
      "localhost",
      "12/main",
      "read committed",
      "5000",
      "-1",
      "10240",
      "16777216",
      "-2",
      "30",
      "1",
      "/etc/ssl/certs/ssl-cert-snakeoil.pem",
      "200",
      "llvmjit",
      "16384",
      "120011",
      "200000000",
      "65536",
      "local0",
      "TLSv1",
      "448",
      "SQL_ASCII",
      "63"
    ],
    "context": [
      "internal",
      "superuser-backend",
      "superuser",
      "sighup",
      "user",
      "backend",
      "postmaster"
    ],
    "category": [
      "Connections and Authentication / SSL",
      "Resource Usage / Background Writer",
      "Lock Management",
      "Reporting and Logging / Where to Log",
      "Preset Options",
      "Version and Platform Compatibility / Previous PostgreSQL Versions",
      "Statistics / Monitoring",
      "Resource Usage / Kernel Resources",
      "Replication / Master Server",
      "Connections and Authentication / Authentication",
      "Error Handling",
      "Replication",
      "Write-Ahead Log / Checkpoints",
      "Replication / Standby Servers",
      "Write-Ahead Log / Recovery Target",
      "Developer Options",
      "Statistics / Query and Index Statistics Collector",
      "Query Tuning / Planner Cost Constants",
      "Reporting and Logging / What to Log",
      "Autovacuum",
      "Client Connection Defaults / Statement Behavior",
      "Query Tuning / Other Planner Options",
      "Resource Usage / Cost-Based Vacuum Delay",
      "Process Title",
      "Resource Usage / Asynchronous Behavior",
      "File Locations",
      "Client Connection Defaults / Shared Library Preloading",
      "Resource Usage / Disk",
      "Replication / Subscribers",
      "Replication / Sending Servers",
      "Write-Ahead Log / Settings",
      "Query Tuning / Planner Method Configuration",
      "Resource Usage / Memory",
      "Client Connection Defaults / Other Defaults",
      "Reporting and Logging / When to Log",
      "Client Connection Defaults / Locale and Formatting",
      "Connections and Authentication / Connection Settings",
      "Write-Ahead Log / Archive Recovery",
      "Write-Ahead Log / Archiving",
      "Version and Platform Compatibility / Other Platforms and Clients",
      "Query Tuning / Genetic Query Optimizer"
    ],
    "source": [
      "configuration file",
      "default",
      "client",
      "session",
      "environment variable",
      "override"
    ],
    "unit": [
      "MB",
      "B",
      "kB",
      "s",
      "min",
      "ms",
      "8kB"
    ],
    "setting": [
      "5",
      "30000",
      "mmap",
      "heap",
      "%m [%p] %q%u@%d ",
      "4",
      "128",
      "notice",
      "64",
      "0.0025",
      "&quot;$user&quot;, public",
      "/etc/ssl/private/ssl-cert-snakeoil.key",
      "100000",
      "content",
      "/etc/postgresql/12/main/pg_ident.conf",
      "/var/run/postgresql",
      "60000",
      "3",
      "1440",
      "posix",
      "4096",
      "12.11 (Ubuntu 12.11-0ubuntu0.20.04.1)",
      "2048",
      "1024",
      "20",
      "off",
      "FILE:/etc/postgresql-common/krb5.keytab",
      "stderr",
      "pg_catalog.english",
      "0.005",
      "PostgreSQL",
      "C.UTF-8",
      "C",
      "9",
      "log",
      "512",
      "default",
      "32",
      "OpenSSL",
      "postgresql-%Y-%m-%d_%H%M%S.log",
      "origin",
      "HIGH:MEDIUM:+3DES:!aNULL",
      "0600",
      "hex",
      "prime256v1",
      "partition",
      "(disabled)",
      "150000000",
      "auto",
      "ISO, MDY",
      "error",
      "5000000",
      "md5",
      "on",
      "pause",
      "Default",
      "/var/lib/postgresql/12/main",
      "none",
      "UTF8",
      "replica",
      "fdatasync",
      "/var/run/postgresql/12-main.pid",
      "80",
      "400000000",
      "/etc/postgresql/12/main/pg_hba.conf",
      "100",
      "524288",
      "8",
      "0",
      "12",
      "/var/run/postgresql/12-main.pg_stat_tmp",
      "7200",
      "300",
      "0.5",
      "Etc/UTC",
      "0.1",
      "2",
      "$libdir",
      "try",
      "warning",
      "",
      "0.01",
      "postgres",
      "base64",
      "0777",
      "0.2",
      "60",
      "10",
      "500000",
      "safe_encoding",
      "/etc/postgresql/12/main/postgresql.conf",
      "1000",
      "75",
      "131072",
      "5432",
      "latest",
      "8192",
      "50000000",
      "50",
      "localhost",
      "12/main",
      "read committed",
      "5000",
      "-1",
      "10240",
      "16777216",
      "-2",
      "0700",
      "30",
      "1",
      "/etc/ssl/certs/ssl-cert-snakeoil.pem",
      "200",
      "llvmjit",
      "16384",
      "120011",
      "200000000",
      "65536",
      "local0",
      "TLSv1",
      "SQL_ASCII",
      "63"
    ],
    "boot_val": [
      "5",
      "30000",
      "mmap",
      "heap",
      "4",
      "128",
      "notice",
      "64",
      "0.0025",
      "&quot;$user&quot;, public",
      "100000",
      "content",
      "/var/run/postgresql",
      "server.crt",
      "60000",
      "3",
      "1440",
      "posix",
      "4096",
      "12.11 (Ubuntu 12.11-0ubuntu0.20.04.1)",
      "1024",
      "20",
      "off",
      "FILE:/etc/postgresql-common/krb5.keytab",
      "511",
      "stderr",
      "0.005",
      "PostgreSQL",
      "C",
      "log",
      "default",
      "32",
      "OpenSSL",
      "postgresql-%Y-%m-%d_%H%M%S.log",
      "origin",
      "HIGH:MEDIUM:+3DES:!aNULL",
      "hex",
      "prime256v1",
      "partition",
      "150000000",
      "%m [%p] ",
      "auto",
      "ISO, MDY",
      "error",
      "5000000",
      "md5",
      "on",
      "pause",
      "none",
      "replica",
      "fdatasync",
      "80",
      "400000000",
      "100",
      "524288",
      "8",
      "0",
      "pg_catalog.simple",
      "server.key",
      "12",
      "300",
      "0.5",
      "0.1",
      "2",
      "$libdir",
      "try",
      "warning",
      "",
      "0.01",
      "postgres",
      "base64",
      "GMT",
      "0.2",
      "60",
      "10",
      "500000",
      "384",
      "safe_encoding",
      "1000",
      "131072",
      "5432",
      "latest",
      "8192",
      "50000000",
      "50",
      "localhost",
      "read committed",
      "5000",
      "-1",
      "10240",
      "16777216",
      "-2",
      "30",
      "1",
      "pg_stat_tmp",
      "200",
      "llvmjit",
      "120011",
      "200000000",
      "65536",
      "local0",
      "TLSv1",
      "448",
      "SQL_ASCII",
      "63"
    ],
    "short_desc": [
      "Sets the maximum number of parallel processes per executor node.",
      "Specifies a file name whose presence ends recovery in the standby.",
      "Sets the FROM-list size beyond which subqueries are not collapsed.",
      "Sets the locale for formatting numbers.",
      "Forces a switch to the next WAL file if a new file has not been started within N seconds.",
      "Selects the shared memory implementation used for the main shared memory region.",
      "Time before a snapshot is too old to read pages changed after the snapshot was taken.",
      "Shows the number of pages per disk file.",
      "Enables the planner to use constraints to optimize queries.",
      "Enables partitionwise join.",
      "Sets the maximum allowed duration of any wait for a lock.",
      "Sets the tablespace(s) to use for temporary tables and sort files.",
      "Sets the minimum execution time above which autovacuum actions will be logged.",
      "Sets the time to wait on a lock before checking for deadlock.",
      "Sets the minimum SSL/TLS protocol version to use.",
      "Sets the application name used to identify PostgreSQL messages in the event log.",
      "Number of transactions by which VACUUM and HOT cleanup should be deferred, if any.",
      "Enables the planner&apos;s use of materialization.",
      "Sets the minimum amount of table data for a parallel scan.",
      "Sets the minimum size to shrink the WAL to.",
      "Sets the list of allowed SSL ciphers.",
      "Number of synchronous standbys and list of names of potential synchronous ones.",
      "Enables the planner&apos;s use of hash join plans.",
      "Maximum number of logical replication worker processes.",
      "Write out LLVM bitcode to facilitate JIT debugging.",
      "Indents parse and plan tree displays.",
      "Allows archiving of WAL files using archive_command.",
      "Shows the collation order locale.",
      "Sets the owning group of the Unix-domain socket.",
      "Sets the default deferrable status of new transactions.",
      "Sets the minimum execution time above which statements will be logged.",
      "Sets the maximum number of temporary buffers used by each session.",
      "Register JIT compiled function with debugger.",
      "Sets the maximum interval between WAL receiver status reports to the sending server.",
      "Logs each query&apos;s rewritten parse tree.",
      "Vacuum cost for a page not found in the buffer cache.",
      "Sets the default statistics target.",
      "Vacuum cost delay in milliseconds, for autovacuum.",
      "Sets the named restore point up to which recovery will proceed.",
      "Set the fraction of transactions to log for new transactions.",
      "Sets the current transaction&apos;s read-only status.",
      "Datetimes are integer based.",
      "Enable synchronized sequential scans.",
      "Sets the minimum amount of index data for a parallel scan.",
      "Truncate existing log files of same name during log rotation.",
      "Sets the destination directory for log files.",
      "Sets the path for dynamically loadable modules.",
      "Time between issuing TCP keepalives.",
      "Collects information about executing commands.",
      "Enables the planner&apos;s use of explicit sort steps.",
      "Causes &apos;...&apos; strings to treat backslashes literally.",
      "Enables the planner&apos;s use of hashed aggregation plans.",
      "GEQO: number of iterations of the algorithm.",
      "Shows the block size in the write ahead log.",
      "Sets the file name pattern for log files.",
      "Sets the number of WAL files held for standby servers.",
      "Sets the time zone for displaying and interpreting time stamps.",
      "Sets the name of the replication slot to use on the sending server.",
      "Enables the planner&apos;s use of TID scan plans.",
      "Sets the Bonjour service name.",
      "Enables the planner&apos;s use of gather merge plans.",
      "Logs the duration of each completed SQL statement.",
      "Enables advertising the server via Bonjour.",
      "Sets default text search configuration.",
      "Causes all statements generating error at or above this level to be logged.",
      "Sets the threshold of FROM items beyond which GEQO is used.",
      "Vacuum cost delay in milliseconds.",
      "Shows the maximum identifier length.",
      "Whether to defer a read-only serializable transaction until it can be executed with no possible serialization failures.",
      "Recycles WAL files by renaming them.",
      "Vacuum cost for a page dirtied by vacuum.",
      "Terminate session on any error.",
      "Sets the maximum number of predicate locks per transaction.",
      "Minimum age at which VACUUM should freeze a table row.",
      "Writes parser performance statistics to the server log.",
      "Treats &quot;expr=NULL&quot; as &quot;expr IS NULL&quot;.",
      "Enable row security.",
      "Sets the time stamp up to which recovery will proceed.",
      "Give priority to server ciphersuite order.",
      "Enables the planner&apos;s use of sequential-scan plans.",
      "Time between TCP keepalive retransmits.",
      "Sets the maximum number of simultaneously running WAL sender processes.",
      "Shows the character classification and case conversion locale.",
      "Number of simultaneous requests that can be handled efficiently by the disk subsystem.",
      "Writes planner performance statistics to the server log.",
      "Controls information prefixed to each log line.",
      "Minimum age at which VACUUM should freeze a MultiXactId in a table row.",
      "Sets the maximum number of simultaneously prepared transactions.",
      "Sets the locale for formatting monetary amounts.",
      "Sets the maximum number of parallel workers that can be active at one time.",
      "Multiple of the average buffer usage to free per round.",
      "Sets whether XML data in implicit parsing and serialization operations is to be considered as documents or content fragments.",
      "Compresses full-page writes written in WAL file.",
      "Collects timing statistics for database I/O activity.",
      "Sets the server&apos;s &quot;hba&quot; configuration file.",
      "Sets the server&apos;s &quot;ident&quot; configuration file.",
      "GEQO: effort is used to set the default for other GEQO parameters.",
      "Sets the directories where Unix-domain sockets will be created.",
      "Number of tuple inserts prior to index cleanup as a fraction of reltuples.",
      "Register JIT compiled function with perf profiler.",
      "Sets the maximum number of predicate-locked pages and tuples per relation.",
      "Enables SSL connections.",
      "Sets the planner&apos;s estimate of the fraction of a cursor&apos;s rows that will be retrieved.",
      "Maximum number of concurrent worker processes.",
      "GEQO: number of individuals in the population.",
      "Time between WAL flushes performed in the WAL writer.",
      "Writes the postmaster PID to the specified file.",
      "Sets the planner&apos;s assumption about the total size of the data caches.",
      "Location of the SSL server private key file.",
      "Shows the maximum number of function arguments.",
      "Background writer sleep time between rounds.",
      "Sets the location of the Kerberos server key file.",
      "Writes zeroes to new WAL files before first use.",
      "Enables the planner&apos;s use of merge join plans.",
      "Sets the maximum memory to be used for query workspaces.",
      "Automatic log file rotation will occur after N minutes.",
      "Location of the SSL server certificate file.",
      "Number of pages after which previously performed writes are flushed to disk.",
      "Sets the server&apos;s main configuration file.",
      "Sets the action to perform upon reaching the recovery target.",
      "Sets the output format for bytea.",
      "Split messages sent to syslog by lines and to fit into 1024 bytes.",
      "Collects function-level statistics on database activity.",
      "Logs the host name in the connection logs.",
      "Shows the size of write ahead log segments.",
      "Sets the shell command that will be called to archive a WAL file.",
      "Sets the maximum time to wait for WAL replication.",
      "GEQO: seed for random path selection.",
      "Background writer maximum number of LRU pages to flush per round.",
      "Writes full pages to WAL when first modified after a checkpoint.",
      "Automatic log file rotation will occur after N kilobytes.",
      "Minimum number of tuple updates or deletes prior to vacuum.",
      "Enables the planner&apos;s use of parallel hash plans.",
      "Sets the planner&apos;s estimate of the cost of passing each tuple (row) from worker to master backend.",
      "Vacuum cost amount available before napping.",
      "Sets the shell command that will retrieve an archived WAL file.",
      "Selects a file of time zone abbreviations.",
      "Sets the maximum size of the pending list for GIN index.",
      "Logs end of a session, including duration.",
      "Sets the maximum memory to be used for maintenance operations.",
      "Sets the delay in microseconds between transaction commit and flushing WAL to disk.",
      "Use of huge pages on Linux or Windows.",
      "Shows the size of a disk block.",
      "Sets the file permissions for log files.",
      "Sets the maximum number of concurrent connections.",
      "Writes executor performance statistics to the server log.",
      "Reinitialize server after backend crash.",
      "Enables logging of recovery-related debugging information.",
      "Sets the minimum delay for applying changes during recovery.",
      "When generating SQL fragments, quote all identifiers.",
      "Sets the minimum concurrent open transactions before performing commit_delay.",
      "Allows feedback from a hot standby to the primary that will avoid query conflicts.",
      "Enables the planner&apos;s use of index-scan plans.",
      "Sets the curve to use for ECDH.",
      "Sets the maximum allowed duration of any statement.",
      "Sets the number of disk-page buffers in shared memory for WAL.",
      "Sets the verbosity of logged messages.",
      "Sets the program name used to identify PostgreSQL messages in syslog.",
      "Warn about backslash escapes in ordinary string literals.",
      "Logs each query&apos;s parse tree.",
      "Age at which to autovacuum a table to prevent transaction ID wraparound.",
      "Sets the shell command that will be executed at every restart point.",
      "Sets the shell command that will be executed once at the end of recovery.",
      "Log the use of temporary files larger than this number of kilobytes.",
      "Shows the server version as an integer.",
      "Start a subprocess to capture stderr output and/or csvlogs into log files.",
      "Sets the message levels that are logged.",
      "Allow JIT compilation of tuple deforming.",
      "Enables genetic query optimization.",
      "Sets the default table access method for new tables.",
      "Maximum number of table synchronization workers per subscription.",
      "Shows the maximum number of index keys.",
      "Sets whether Kerberos and GSSAPI user names should be treated as case-insensitive.",
      "Location of the SSL certificate revocation list file.",
      "Shows whether the running server has assertion checks enabled.",
      "Multixact age at which to autovacuum a table to prevent multixact wraparound.",
      "Enables per-database user names.",
      "Sets the transaction isolation level of each new transaction.",
      "Logs long lock waits.",
      "Controls whether Gather and Gather Merge also run subplans.",
      "Sets the current transaction&apos;s synchronization level.",
      "Sets the maximum memory to be used by each autovacuum worker process.",
      "Collects statistics on database activity.",
      "Enables the planner&apos;s use of nested-loop join plans.",
      "Sets the server (database) character set encoding.",
      "Sets the maximum number of simultaneously running autovacuum worker processes.",
      "Vacuum cost amount available before napping, for autovacuum.",
      "Sets the application name to be reported in statistics and logs.",
      "Location of the SSL certificate authority file.",
      "Enables warnings if checkpoint segments are filled more frequently than this.",
      "Lists shared libraries to preload into each backend.",
      "TCP user timeout.",
      "Sets the number of shared memory buffers used by the server.",
      "Lists shared libraries to preload into server.",
      "Sets the time to wait before retrying to retrieve WAL after a failed attempt.",
      "Sets the default tablespace to create tables and indexes in.",
      "Sets the number of connection slots reserved for superusers.",
      "Sets the maximum allowed duration of any idling transaction.",
      "Sets whether to include or exclude transaction with recovery target.",
      "Command to obtain passphrases for SSL.",
      "Enables backward compatibility mode for privilege checks on large objects.",
      "Enables plan-time and run-time partition pruning.",
      "Sets the current transaction&apos;s isolation level.",
      "Minimum number of tuple inserts, updates, or deletes prior to analyze.",
      "Age at which VACUUM should scan whole table to freeze tuples.",
      "Also use ssl_passphrase_command during server reload.",
      "Sets the connection string to be used to connect to the sending server.",
      "JIT provider to use.",
      "Disables reading from system indexes.",
      "Logs each checkpoint.",
      "Time spent flushing dirty buffers during checkpoint, as fraction of checkpoint interval.",
      "Sets the LSN of the write-ahead log location up to which recovery will proceed.",
      "Waits N seconds on connection startup after authentication.",
      "Sets the maximum number of locks per transaction.",
      "Lists unprivileged shared libraries to preload into each backend.",
      "Sets the planner&apos;s estimate of the cost of a sequentially fetched disk page.",
      "Enable input of NULL elements in arrays.",
      "Sets the client&apos;s character set encoding.",
      "Sets the host name or IP address(es) to listen to.",
      "Vacuum cost for a page found in the buffer cache.",
      "Sets the default read-only status of new transactions.",
      "Sets the session&apos;s behavior for triggers and rewrite rules.",
      "Sets the FROM-list size beyond which JOIN constructs are not flattened.",
      "Sets the maximum allowed result for exact search by GIN.",
      "Sets the planner&apos;s estimate of the cost of processing each index entry during an index scan.",
      "Sets the syslog &quot;facility&quot; to be used when syslog enabled.",
      "Sets the server&apos;s data directory.",
      "Enables the planner&apos;s use of bitmap-scan plans.",
      "Selects the method used for forcing WAL updates to disk.",
      "Sets the maximum allowed time to complete client authentication.",
      "Emit a warning for constructs that changed meaning since PostgreSQL 9.4.",
      "Continues processing past damaged page headers.",
      "Perform JIT compilation if query is more expensive.",
      "Set to &quot;immediate&quot; to end recovery as soon as a consistent state is reached.",
      "Allows modifications of the structure of system tables.",
      "Whether to continue running after a failure to sync data files.",
      "Writes full pages to WAL when first modified after a checkpoint, even for a non-critical modification.",
      "Sets the access permissions of the Unix-domain socket.",
      "Waits N seconds on connection startup before authentication.",
      "Sets the maximum wait time to receive data from the sending server.",
      "Generates debugging output for LISTEN and NOTIFY.",
      "Logs each successful connection.",
      "Writes temporary statistics files to the specified directory.",
      "Controls the planner&apos;s selection of custom or generic plan.",
      "Collects transaction commit time.",
      "Set the level of information written to the WAL.",
      "Logs each query&apos;s execution plan.",
      "Sets the maximum delay before canceling queries when a hot standby server is processing archived WAL data.",
      "Sets the maximum number of predicate-locked tuples per page.",
      "Sets the planner&apos;s estimate of the cost of starting up worker processes for parallel query.",
      "Sets the planner&apos;s estimate of the cost of processing each operator or function call.",
      "Sets the maximum number of simultaneously open files for each server process.",
      "Selects the dynamic shared memory implementation used.",
      "Location of the SSL DH parameters file.",
      "Sets the maximum number of parallel processes per maintenance operation.",
      "Updates the process title to show the active SQL command.",
      "Writes cumulative performance statistics to the server log.",
      "Sets the maximum time between automatic WAL checkpoints.",
      "Sets the number of digits displayed for floating-point values.",
      "Enables the planner&apos;s use of index-only-scan plans.",
      "Sets the name of the cluster, which is included in the process title.",
      "Sets the maximum SSL/TLS protocol version to use.",
      "Sets the time zone to use in log messages.",
      "GEQO: selective pressure within the population.",
      "Multixact age at which VACUUM should scan whole table to freeze tuples.",
      "Sets the WAL size that triggers a checkpoint.",
      "Sets the maximum delay before canceling queries when a hot standby server is processing streamed WAL data.",
      "Shows the server version.",
      "Sets the destination for server log output.",
      "Specifies the timeline to recover into.",
      "Enables the planner&apos;s use of parallel append plans.",
      "Check function bodies during CREATE FUNCTION.",
      "Maximum number of TCP keepalive retransmits.",
      "Sets the display format for interval values.",
      "Allow JIT compilation of expressions.",
      "Shows whether data checksums are turned on for this cluster.",
      "Sets the type of statements logged.",
      "Continues processing after a checksum failure.",
      "Sets the display format for date and time values.",
      "Sets the WAL resource managers for which WAL consistency checks are done.",
      "Name of the SSL library.",
      "Sets the transaction ID up to which recovery will proceed.",
      "Enables partitionwise aggregation and grouping.",
      "Allow JIT compilation.",
      "Limits the total size of all temporary files used by each process.",
      "Sets the locale for formatting date and time values.",
      "Starts the autovacuum subprocess.",
      "Sets the message levels that are sent to the client.",
      "Sets whether &quot;\\&apos;&quot; is allowed in string literals.",
      "Chooses the algorithm for encrypting passwords.",
      "Perform JIT inlining if query is more expensive.",
      "Forces use of parallel query facilities.",
      "Time to sleep between autovacuum runs.",
      "Sets the maximum stack depth, in kilobytes.",
      "Add sequence number to syslog messages to avoid duplicate suppression.",
      "Emit information about resource usage in sorting.",
      "Sets the TCP port the server listens on.",
      "Sets the maximum number of simultaneously defined replication slots.",
      "Sets the size reserved for pg_stat_activity.query, in bytes.",
      "Amount of WAL written out by WAL writer that triggers a flush.",
      "Optimize JITed functions if query is more expensive.",
      "Mode of the data directory.",
      "Sets the planner&apos;s estimate of the cost of processing each tuple (row).",
      "Number of tuple inserts, updates, or deletes prior to analyze as a fraction of reltuples.",
      "Sets how binary values are to be encoded in XML.",
      "Sets the schema search order for names that are not schema-qualified.",
      "Number of tuple updates or deletes prior to vacuum as a fraction of reltuples.",
      "Sets the planner&apos;s estimate of the cost of a nonsequentially fetched disk page.",
      "Sets the language in which messages are displayed.",
      "Logs each replication command.",
      "Allows connections and queries during recovery.",
      "Forces synchronization of updates to disk."
    ],
    "max_val": [
      "2097151",
      "100000",
      "35791394",
      "3",
      "1024",
      "511",
      "2147",
      "32",
      "1.79769e+308",
      "1e+10",
      "86400",
      "262143",
      "2147483647",
      "2000000000",
      "2147483",
      "102400",
      "10000",
      "1000000",
      "100",
      "600",
      "715827882",
      "65535",
      "2",
      "1000000000",
      "60",
      "10",
      "1073741824",
      "1000",
      "131072",
      "8192",
      "1",
      "120011",
      "256",
      "1073741823",
      "63"
    ],
    "vartype": [
      "bool",
      "string",
      "real",
      "enum",
      "integer"
    ]
  },
  "character_sets": {},
  "pg_class": {
    "relname": [
      "pg_toast_2609",
      "pg_constraint_oid_index",
      "udt_privileges",
      "pg_amproc",
      "sql_sizing",
      "pg_init_privs",
      "pg_index_indexrelid_index",
      "pg_amop_opr_fam_index",
      "routines",
      "pg_language",
      "column_udt_usage",
      "pg_toast_3592_index",
      "pg_statio_sys_sequences",
      "pg_amproc_fam_proc_index",
      "schemata",
      "pg_publication_tables",
      "pg_toast_1418",
      "sql_implementation_info",
      "pg_foreign_server",
      "pg_trigger_tgconstraint_index",
      "pg_largeobject",
      "column_column_usage",
      "routine_privileges",
      "key_column_usage",
      "pg_transform_type_lang_index",
      "pg_operator_oprname_l_r_n_index",
      "pg_enum_oid_index",
      "pg_toast_6000",
      "pg_ts_dict",
      "pg_stat_database",
      "pg_trigger_tgrelid_tgname_index",
      "pg_group",
      "pg_toast_13285_index",
      "pg_file_settings",
      "pg_statio_user_indexes",
      "pg_largeobject_metadata",
      "check_constraint_routine_usage",
      "pg_ts_parser_oid_index",
      "pg_shseclabel",
      "pg_toast_3118_index",
      "pg_partitioned_table_partrelid_index",
      "_pg_foreign_data_wrappers",
      "attributes",
      "pg_toast_1417_index",
      "pg_replication_origin",
      "pg_ts_dict_oid_index",
      "pg_stat_sys_indexes",
      "pg_timezone_abbrevs",
      "pg_rules",
      "pg_toast_1418_index",
      "pg_authid_oid_index",
      "pg_ts_config_map",
      "pg_language_oid_index",
      "pg_foreign_data_wrapper",
      "pg_matviews",
      "pg_collation_oid_index",
      "role_usage_grants",
      "pg_class",
      "pg_toast_13270_index",
      "pg_auth_members_member_role_index",
      "pg_toast_6000_index",
      "pg_subscription_oid_index",
      "pg_conversion_name_nsp_index",
      "pg_stat_user_indexes",
      "pg_user_mapping",
      "pg_cast_oid_index",
      "pg_publication",
      "pg_stat_user_functions",
      "pg_operator_oid_index",
      "pg_stat_archiver",
      "sql_packages",
      "pg_default_acl_oid_index",
      "pg_toast_13265",
      "user_defined_types",
      "sql_sizing_profiles",
      "pg_toast_13265_index",
      "pg_extension_oid_index",
      "pg_cursors",
      "parameters",
      "pg_toast_6100_index",
      "pg_toast_1260_index",
      "pg_toast_1247_index",
      "pg_toast_2615_index",
      "pg_statio_all_indexes",
      "pg_ts_config_oid_index",
      "pg_init_privs_o_c_o_index",
      "pg_toast_3456",
      "pg_ts_dict_dictname_index",
      "role_column_grants",
      "pg_toast_13260",
      "pg_publication_pubname_index",
      "pg_toast_13280_index",
      "pg_toast_3394",
      "pg_toast_3079_index",
      "pg_inherits",
      "pg_policy",
      "pg_policy_oid_index",
      "domain_constraints",
      "pg_stat_ssl",
      "pg_stat_progress_vacuum",
      "pg_toast_2396_index",
      "pg_toast_13280",
      "pg_statio_sys_tables",
      "pg_stat_database_conflicts",
      "pg_subscription_subname_index",
      "pg_db_role_setting_databaseid_rol_index",
      "pg_opfamily_am_name_nsp_index",
      "pg_attribute",
      "pg_conversion_default_index",
      "collations",
      "pg_statistic_relid_att_inh_index",
      "pg_toast_3600",
      "foreign_table_options",
      "pg_prepared_statements",
      "pg_range_rngtypid_index",
      "pg_toast_1255_index",
      "pg_toast_3596_index",
      "pg_stat_all_indexes",
      "pg_sequence",
      "pg_ts_parser",
      "pg_toast_3456_index",
      "pg_available_extension_versions",
      "pg_toast_16387",
      "pg_amop_oid_index",
      "pg_policy_polrelid_polname_index",
      "pg_database_oid_index",
      "pg_toast_13275_index",
      "pg_toast_826",
      "foreign_tables",
      "pg_tables",
      "pg_toast_2620_index",
      "user_mappings",
      "pg_event_trigger_evtname_index",
      "pg_stat_xact_all_tables",
      "pg_statistic_ext_name_index",
      "pg_transform",
      "pg_foreign_server_oid_index",
      "pg_ts_template_oid_index",
      "pg_toast_2604",
      "pg_stat_progress_create_index",
      "pg_toast_2964_index",
      "sql_parts",
      "pg_stats",
      "referential_constraints",
      "pg_toast_3350",
      "pg_foreign_table",
      "pg_replication_origin_roiident_index",
      "pg_statio_user_tables",
      "pg_cast",
      "pg_database_datname_index",
      "triggered_update_columns",
      "pg_policies",
      "products_pkey",
      "pg_foreign_data_wrapper_name_index",
      "pg_statistic_ext_relid_index",
      "pg_toast_2328_index",
      "pg_operator",
      "pg_stats_ext",
      "pg_amproc_oid_index",
      "pg_am_oid_index",
      "_pg_foreign_tables",
      "pg_ts_config_map_index",
      "pg_stat_gssapi",
      "pg_subscription",
      "pg_toast_3429",
      "pg_toast_3466_index",
      "pg_publication_rel",
      "pg_statistic_ext_data_stxoid_index",
      "sql_languages",
      "pg_stat_xact_user_tables",
      "view_routine_usage",
      "pg_largeobject_loid_pn_index",
      "pg_enum_typid_label_index",
      "pg_toast_1213",
      "pg_foreign_server_name_index",
      "pg_statio_sys_indexes",
      "pg_authid",
      "pg_collation_name_enc_nsp_index",
      "pg_toast_1262",
      "table_constraints",
      "pg_toast_2618_index",
      "pg_replication_origin_roname_index",
      "pg_authid_rolname_index",
      "pg_views",
      "pg_cast_source_target_index",
      "pg_toast_2618",
      "pg_rewrite_rel_rulename_index",
      "pg_proc_oid_index",
      "pg_toast_1247",
      "foreign_server_options",
      "pg_toast_13275",
      "user_mapping_options",
      "pg_partitioned_table",
      "character_sets",
      "table_privileges",
      "pg_toast_2606_index",
      "pg_attrdef",
      "pg_toast_13290",
      "pg_shdepend",
      "enabled_roles",
      "pg_toast_3350_index",
      "administrable_role_authorizations",
      "pg_stat_replication",
      "role_routine_grants",
      "pg_hba_file_rules",
      "pg_pltemplate",
      "pg_attrdef_adrelid_adnum_index",
      "pg_toast_13285",
      "pg_toast_2620",
      "pg_toast_2609_index",
      "pg_roles",
      "pg_rewrite_oid_index",
      "pg_toast_13260_index",
      "sequences",
      "pg_class_relname_nsp_index",
      "pg_toast_13290_index",
      "pg_foreign_data_wrapper_oid_index",
      "pg_aggregate_fnoid_index",
      "_pg_foreign_servers",
      "pg_toast_1262_index",
      "pg_opclass_am_name_nsp_index",
      "pg_constraint_conparentid_index",
      "pg_stat_bgwriter",
      "pg_toast_826_index",
      "pg_subscription_rel",
      "pg_seclabel_object_index",
      "pg_toast_1136",
      "pg_default_acl",
      "pg_toast_1136_index",
      "pg_opclass_oid_index",
      "pg_largeobject_metadata_oid_index",
      "pg_toast_3596",
      "role_table_grants",
      "pg_stat_all_tables",
      "pg_foreign_table_relid_index",
      "information_schema_catalog_name",
      "pg_stat_user_tables",
      "pg_toast_2396",
      "pg_toast_6100",
      "pg_stat_wal_receiver",
      "pg_description_o_c_o_index",
      "pg_class_oid_index",
      "pg_extension",
      "pg_attrdef_oid_index",
      "pg_index",
      "pg_depend_depender_index",
      "view_column_usage",
      "foreign_data_wrapper_options",
      "pg_stat_activity",
      "pg_config",
      "pg_stat_xact_user_functions",
      "pg_seclabel",
      "pg_toast_2619_index",
      "pg_toast_3381_index",
      "pg_publication_rel_oid_index",
      "pg_amop",
      "pg_pltemplate_name_index",
      "constraint_column_usage",
      "pg_am_name_index",
      "pg_toast_1417",
      "pg_index_indrelid_index",
      "foreign_data_wrappers",
      "pg_depend",
      "pg_sequence_seqrelid_index",
      "pg_publication_oid_index",
      "pg_rewrite",
      "pg_type",
      "pg_ts_parser_prsname_index",
      "users_zxzlar",
      "_pg_user_mappings",
      "pg_user_mapping_user_server_index",
      "pg_available_extensions",
      "pg_toast_3600_index",
      "pg_trigger_oid_index",
      "pg_opfamily_oid_index",
      "sql_features",
      "pg_toast_3394_index",
      "tables",
      "pg_conversion_oid_index",
      "pg_shadow",
      "pg_toast_2328",
      "pg_toast_3381",
      "pg_tablespace_oid_index",
      "pg_shdescription",
      "pg_toast_2615",
      "columns",
      "column_domain_usage",
      "pg_toast_2612_index",
      "pg_tablespace",
      "pg_replication_origin_status",
      "collation_character_set_applicability",
      "pg_shdescription_o_c_index",
      "pg_toast_1255",
      "pg_statistic_ext_oid_index",
      "pg_toast_16387_index",
      "constraint_table_usage",
      "pg_opclass",
      "transforms",
      "pg_publication_rel_prrelid_prpubid_index",
      "pg_ts_config",
      "foreign_servers",
      "pg_statio_all_tables",
      "pg_namespace",
      "pg_extension_name_index",
      "pg_ts_template_tmplname_index",
      "pg_stat_subscription",
      "pg_depend_reference_index",
      "pg_toast_2964",
      "pg_class_tblspc_relfilenode_index",
      "pg_inherits_relid_seqno_index",
      "pg_constraint_conname_nsp_index",
      "pg_range",
      "pg_toast_3466",
      "pg_toast_2606",
      "pg_inherits_parent_index",
      "pg_enum",
      "pg_sequences",
      "pg_statistic_ext",
      "applicable_roles",
      "pg_timezone_names",
      "pg_auth_members_role_member_index",
      "pg_indexes",
      "pg_shdepend_reference_index",
      "pg_enum_typid_sortorder_index",
      "view_table_usage",
      "pg_toast_13270",
      "pg_ts_config_cfgname_index",
      "pg_toast_2619",
      "pg_transform_oid_index",
      "pg_attribute_relid_attnum_index",
      "role_udt_grants",
      "pg_toast_3079",
      "pg_constraint_conrelid_contypid_conname_index",
      "pg_language_name_index",
      "views",
      "pg_collation",
      "products",
      "pg_toast_3256_index",
      "pg_type_typname_nsp_index",
      "pg_amop_fam_strat_index",
      "pg_toast_3256",
      "column_options",
      "domains",
      "pg_toast_2612",
      "pg_toast_3118",
      "data_type_privileges",
      "pg_toast_2600",
      "pg_prepared_xacts",
      "column_privileges",
      "pg_database",
      "pg_toast_2600_index",
      "pg_trigger",
      "pg_attribute_relid_attnam_index",
      "pg_conversion",
      "pg_toast_1213_index",
      "pg_am",
      "domain_udt_usage",
      "usage_privileges",
      "pg_db_role_setting",
      "pg_shseclabel_object_index",
      "pg_toast_2604_index",
      "pg_stat_sys_tables",
      "pg_statistic_ext_data",
      "pg_toast_1260",
      "pg_auth_members",
      "pg_proc",
      "_pg_foreign_table_columns",
      "pg_seclabels",
      "pg_user_mappings",
      "pg_constraint_contypid_index",
      "check_constraints",
      "triggers",
      "pg_opfamily",
      "pg_default_acl_role_nsp_obj_index",
      "pg_namespace_nspname_index",
      "element_types",
      "pg_subscription_rel_srrelid_srsubid_index",
      "pg_statio_user_sequences",
      "pg_user",
      "pg_event_trigger_oid_index",
      "pg_tablespace_spcname_index",
      "pg_shdepend_depender_index",
      "pg_locks",
      "pg_aggregate",
      "pg_replication_slots",
      "pg_user_mapping_oid_index",
      "pg_proc_proname_args_nsp_index",
      "pg_description",
      "pg_settings",
      "pg_type_oid_index",
      "pg_stat_progress_cluster",
      "pg_namespace_oid_index",
      "pg_toast_3429_index",
      "pg_event_trigger",
      "pg_statistic",
      "pg_toast_3592",
      "pg_stat_xact_sys_tables",
      "pg_constraint",
      "pg_ts_template",
      "pg_statio_all_sequences"
    ]
  },
  "pg_type": {
    "typdefault": [
      "CURRENT_TIMESTAMP(2)"
    ],
    "typname": [
      "pg_ts_template",
      "pg_statio_all_sequences",
      "_regtype",
      "pg_toast_2609",
      "_tstzrange",
      "_bytea",
      "box",
      "udt_privileges",
      "pg_amproc",
      "cid",
      "sql_sizing",
      "pg_init_privs",
      "routines",
      "pg_language",
      "_name",
      "column_udt_usage",
      "pg_ddl_command",
      "pg_statio_sys_sequences",
      "cidr",
      "_line",
      "schemata",
      "macaddr8",
      "cstring",
      "pg_publication_tables",
      "_tsvector",
      "anynonarray",
      "date",
      "pg_toast_1418",
      "sql_implementation_info",
      "pg_foreign_server",
      "int4",
      "pg_largeobject",
      "_circle",
      "oidvector",
      "column_column_usage",
      "_timetz",
      "routine_privileges",
      "timestamp",
      "key_column_usage",
      "tid",
      "pg_toast_6000",
      "pg_ts_dict",
      "tsquery",
      "pg_stat_database",
      "pg_group",
      "pg_file_settings",
      "pg_statio_user_indexes",
      "pg_largeobject_metadata",
      "check_constraint_routine_usage",
      "_tsrange",
      "pg_shseclabel",
      "varchar",
      "_numeric",
      "tstzrange",
      "_pg_foreign_data_wrappers",
      "attributes",
      "_macaddr8",
      "pg_replication_origin",
      "_products",
      "pg_stat_sys_indexes",
      "pg_timezone_abbrevs",
      "pg_rules",
      "pg_ts_config_map",
      "language_handler",
      "aclitem",
      "pg_foreign_data_wrapper",
      "pg_matviews",
      "role_usage_grants",
      "_box",
      "pg_class",
      "_cidr",
      "pg_stat_user_indexes",
      "timestamptz",
      "_bit",
      "pg_ndistinct",
      "pg_user_mapping",
      "_pg_lsn",
      "pg_publication",
      "pg_stat_user_functions",
      "pg_stat_archiver",
      "sql_packages",
      "daterange",
      "pg_toast_13265",
      "_regdictionary",
      "_numrange",
      "time",
      "_regclass",
      "user_defined_types",
      "sql_sizing_profiles",
      "_json",
      "varbit",
      "pg_cursors",
      "parameters",
      "_character_data",
      "pg_statio_all_indexes",
      "pg_toast_3456",
      "role_column_grants",
      "pg_toast_13260",
      "_regconfig",
      "_regnamespace",
      "_regrole",
      "pg_toast_3394",
      "pg_inherits",
      "pg_policy",
      "domain_constraints",
      "pg_stat_ssl",
      "pg_stat_progress_vacuum",
      "pg_toast_13280",
      "pg_statio_sys_tables",
      "pg_stat_database_conflicts",
      "interval",
      "refcursor",
      "pg_attribute",
      "collations",
      "pg_toast_3600",
      "_uuid",
      "pg_node_tree",
      "foreign_table_options",
      "pg_prepared_statements",
      "bpchar",
      "any",
      "regprocedure",
      "pg_stat_all_indexes",
      "pg_sequence",
      "pg_ts_parser",
      "pg_available_extension_versions",
      "pg_toast_16387",
      "_tid",
      "_int8range",
      "regclass",
      "unknown",
      "_regprocedure",
      "pg_toast_826",
      "foreign_tables",
      "pg_tables",
      "uuid",
      "float8",
      "user_mappings",
      "jsonb",
      "pg_stat_xact_all_tables",
      "pg_transform",
      "pg_toast_2604",
      "int4range",
      "_timestamp",
      "pg_stat_progress_create_index",
      "sql_parts",
      "pg_stats",
      "referential_constraints",
      "pg_toast_3350",
      "_path",
      "pg_foreign_table",
      "tsrange",
      "pg_statio_user_tables",
      "pg_cast",
      "macaddr",
      "polygon",
      "triggered_update_columns",
      "pg_policies",
      "int2",
      "_cardinal_number",
      "opaque",
      "pg_operator",
      "_text",
      "pg_stats_ext",
      "numeric",
      "_pg_foreign_tables",
      "_yes_or_no",
      "pg_stat_gssapi",
      "pg_toast_3429",
      "pg_subscription",
      "pg_publication_rel",
      "sql_languages",
      "_cstring",
      "pg_stat_xact_user_tables",
      "view_routine_usage",
      "_interval",
      "internal",
      "pg_toast_1213",
      "pg_statio_sys_indexes",
      "pg_authid",
      "pg_toast_1262",
      "name",
      "_aclitem",
      "table_constraints",
      "pg_views",
      "_int8",
      "pg_toast_2618",
      "pg_toast_1247",
      "_int4range",
      "foreign_server_options",
      "pg_toast_13275",
      "user_mapping_options",
      "pg_partitioned_table",
      "_tsquery",
      "pg_mcv_list",
      "character_sets",
      "table_privileges",
      "line",
      "pg_attrdef",
      "_inet",
      "_timestamptz",
      "pg_toast_13290",
      "pg_shdepend",
      "bit",
      "enabled_roles",
      "pg_lsn",
      "administrable_role_authorizations",
      "pg_stat_replication",
      "_regoperator",
      "role_routine_grants",
      "pg_hba_file_rules",
      "pg_pltemplate",
      "pg_toast_13285",
      "pg_toast_2620",
      "regtype",
      "time_stamp",
      "json",
      "point",
      "txid_snapshot",
      "pg_roles",
      "_lseg",
      "sequences",
      "lseg",
      "char",
      "fdw_handler",
      "_pg_foreign_servers",
      "pg_stat_bgwriter",
      "pg_subscription_rel",
      "void",
      "regconfig",
      "_jsonb",
      "pg_toast_1136",
      "trigger",
      "tsvector",
      "pg_default_acl",
      "regnamespace",
      "pg_toast_3596",
      "role_table_grants",
      "pg_stat_all_tables",
      "information_schema_catalog_name",
      "pg_stat_user_tables",
      "pg_toast_2396",
      "oid",
      "pg_toast_6100",
      "anyarray",
      "anyelement",
      "_time_stamp",
      "pg_stat_wal_receiver",
      "pg_extension",
      "pg_index",
      "anyenum",
      "view_column_usage",
      "foreign_data_wrapper_options",
      "pg_stat_activity",
      "pg_config",
      "_jsonpath",
      "pg_stat_xact_user_functions",
      "_regoper",
      "_regproc",
      "record",
      "pg_seclabel",
      "xid",
      "money",
      "pg_amop",
      "circle",
      "_daterange",
      "constraint_column_usage",
      "pg_toast_1417",
      "yes_or_no",
      "foreign_data_wrappers",
      "pg_depend",
      "_bpchar",
      "numrange",
      "pg_rewrite",
      "_varchar",
      "regdictionary",
      "float4",
      "pg_type",
      "users_zxzlar",
      "index_am_handler",
      "_pg_user_mappings",
      "regproc",
      "pg_available_extensions",
      "_int2",
      "sql_features",
      "xml",
      "tables",
      "pg_shadow",
      "pg_toast_2328",
      "anyrange",
      "pg_toast_3381",
      "_refcursor",
      "pg_shdescription",
      "_xid",
      "pg_toast_2615",
      "columns",
      "column_domain_usage",
      "_time",
      "_int4",
      "pg_replication_origin_status",
      "pg_tablespace",
      "int2vector",
      "collation_character_set_applicability",
      "pg_toast_1255",
      "constraint_table_usage",
      "pg_opclass",
      "inet",
      "path",
      "transforms",
      "pg_ts_config",
      "_users_zxzlar",
      "foreign_servers",
      "_char",
      "_bool",
      "pg_statio_all_tables",
      "pg_namespace",
      "cardinal_number",
      "pg_dependencies",
      "pg_stat_subscription",
      "pg_toast_2964",
      "sql_identifier",
      "pg_toast_3466",
      "pg_toast_2606",
      "pg_range",
      "_float4",
      "_polygon",
      "tsm_handler",
      "pg_enum",
      "pg_sequences",
      "pg_statistic_ext",
      "applicable_roles",
      "pg_timezone_names",
      "pg_indexes",
      "_money",
      "_xml",
      "view_table_usage",
      "pg_toast_13270",
      "pg_toast_2619",
      "_cid",
      "text",
      "role_udt_grants",
      "_varbit",
      "pg_toast_3079",
      "views",
      "event_trigger",
      "pg_collation",
      "products",
      "table_am_handler",
      "character_data",
      "gtsvector",
      "regoper",
      "pg_toast_3256",
      "column_options",
      "domains",
      "pg_toast_2612",
      "pg_toast_3118",
      "data_type_privileges",
      "pg_toast_2600",
      "bytea",
      "pg_prepared_xacts",
      "_float8",
      "column_privileges",
      "_txid_snapshot",
      "_sql_identifier",
      "pg_database",
      "_oidvector",
      "pg_trigger",
      "pg_conversion",
      "_gtsvector",
      "int8range",
      "pg_am",
      "domain_udt_usage",
      "usage_privileges",
      "pg_db_role_setting",
      "timetz",
      "regrole",
      "pg_stat_sys_tables",
      "pg_statistic_ext_data",
      "jsonpath",
      "_oid",
      "pg_toast_1260",
      "pg_auth_members",
      "_point",
      "_macaddr",
      "pg_proc",
      "_pg_foreign_table_columns",
      "pg_user_mappings",
      "pg_seclabels",
      "regoperator",
      "check_constraints",
      "triggers",
      "pg_opfamily",
      "element_types",
      "int8",
      "pg_statio_user_sequences",
      "pg_user",
      "bool",
      "pg_locks",
      "pg_aggregate",
      "_int2vector",
      "_record",
      "pg_replication_slots",
      "_date",
      "pg_settings",
      "pg_description",
      "pg_stat_progress_cluster",
      "pg_event_trigger",
      "pg_statistic",
      "pg_toast_3592",
      "pg_stat_xact_sys_tables",
      "pg_constraint"
    ]
  },
  "pg_amproc": {},
  "_pg_foreign_data_wrappers": {},
  "routines": {},
  "pg_ts_config": {
    "cfgname": [
      "portuguese",
      "french",
      "norwegian",
      "turkish",
      "dutch",
      "simple",
      "spanish",
      "italian",
      "irish",
      "hungarian",
      "english",
      "tamil",
      "indonesian",
      "finnish",
      "german",
      "romanian",
      "lithuanian",
      "arabic",
      "swedish",
      "russian",
      "nepali",
      "danish"
    ]
  },
  "pg_index": {},
  "pg_group": {
    "groname": [
      "pg_signal_backend",
      "pg_read_all_settings",
      "pg_write_server_files",
      "pg_execute_server_program",
      "pg_read_all_stats",
      "pg_stat_scan_tables",
      "pg_monitor",
      "pg_read_server_files"
    ]
  },
  "pg_constraint": {
    "conname": [
      "products_pkey",
      "yes_or_no_check",
      "cardinal_number_domain_check"
    ]
  },
  "domain_constraints": {},
  "pg_cursors": {
    "name": [
      ""
    ],
    "statement": [
      "SELECT name, description FROM products WHERE category = &apos;Gifts&apos; UNION SELECT statement,statement FROM pg_cursors--&apos; AND released = 1"
    ]
  },
  "pg_policy": {
    "polname": []
  },
  "pg_foreign_data_wrapper": {
    "fdwname": []
  },
  "pg_replication_origin_status": {
    "external_id": []
  },
  "information_schema_catalog_name": {},
  "pg_statio_user_indexes": {
    "schemaname": [
      "public"
    ],
    "indexrelname": [
      "products_pkey"
    ],
    "relname": [
      "products"
    ]
  },
  "pg_tables": {
    "tablespace": [
      "pg_global"
    ],
    "schemaname": [
      "public",
      "pg_catalog",
      "information_schema"
    ],
    "tablename": [
      "pg_namespace",
      "pg_amproc",
      "pg_attribute",
      "sql_sizing",
      "pg_range",
      "pg_init_privs",
      "pg_language",
      "pg_enum",
      "pg_statistic_ext",
      "pg_sequence",
      "pg_ts_parser",
      "pg_subscription_rel",
      "sql_implementation_info",
      "pg_foreign_server",
      "pg_default_acl",
      "pg_largeobject",
      "pg_transform",
      "pg_collation",
      "pg_ts_dict",
      "pg_extension",
      "products",
      "pg_index",
      "sql_parts",
      "pg_foreign_table",
      "pg_seclabel",
      "pg_largeobject_metadata",
      "pg_shseclabel",
      "pg_amop",
      "pg_database",
      "pg_cast",
      "pg_trigger",
      "pg_depend",
      "pg_conversion",
      "pg_operator",
      "pg_am",
      "pg_replication_origin",
      "pg_rewrite",
      "pg_subscription",
      "pg_db_role_setting",
      "pg_ts_config_map",
      "pg_publication_rel",
      "sql_languages",
      "pg_foreign_data_wrapper",
      "pg_statistic_ext_data",
      "pg_type",
      "pg_class",
      "pg_auth_members",
      "users_zxzlar",
      "pg_proc",
      "sql_features",
      "pg_authid",
      "pg_user_mapping",
      "pg_publication",
      "sql_packages",
      "pg_opfamily",
      "pg_shdescription",
      "sql_sizing_profiles",
      "pg_partitioned_table",
      "pg_aggregate",
      "pg_attrdef",
      "pg_description",
      "pg_tablespace",
      "pg_shdepend",
      "pg_event_trigger",
      "pg_statistic",
      "pg_opclass",
      "pg_inherits",
      "pg_constraint",
      "pg_ts_config",
      "pg_policy",
      "pg_ts_template",
      "pg_pltemplate"
    ],
    "tableowner": [
      "postgres"
    ]
  },
  "pg_ts_config_map": {},
  "pg_file_settings": {
    "sourcefile": [
      "/etc/postgresql/12/main/postgresql.conf"
    ],
    "setting": [
      "%m [%p] %q%u@%d ",
      "/etc/ssl/private/ssl-cert-snakeoil.key",
      "/etc/postgresql/12/main/pg_ident.conf",
      "/var/run/postgresql",
      "posix",
      "iso, mdy",
      "pg_catalog.english",
      "C.UTF-8",
      "128MB",
      "on",
      "/var/lib/postgresql/12/main",
      "/var/run/postgresql/12-main.pid",
      "/etc/postgresql/12/main/pg_hba.conf",
      "100",
      "80MB",
      "/var/run/postgresql/12-main.pg_stat_tmp",
      "Etc/UTC",
      "5432",
      "12/main",
      "/etc/ssl/certs/ssl-cert-snakeoil.pem",
      "1GB"
    ],
    "error": [],
    "name": [
      "ident_file",
      "ssl_cert_file",
      "min_wal_size",
      "shared_buffers",
      "dynamic_shared_memory_type",
      "datestyle",
      "hba_file",
      "lc_messages",
      "log_timezone",
      "lc_time",
      "external_pid_file",
      "cluster_name",
      "lc_numeric",
      "ssl_key_file",
      "stats_temp_directory",
      "ssl",
      "default_text_search_config",
      "max_wal_size",
      "max_connections",
      "unix_socket_directories",
      "port",
      "data_directory",
      "log_line_prefix",
      "lc_monetary",
      "timezone"
    ]
  },
  "usage_privileges": {},
  "pg_statio_sys_indexes": {
    "schemaname": [
      "pg_catalog",
      "pg_toast"
    ],
    "indexrelname": [
      "pg_constraint_oid_index",
      "pg_toast_2609_index",
      "pg_rewrite_oid_index",
      "pg_toast_13260_index",
      "pg_index_indexrelid_index",
      "pg_class_relname_nsp_index",
      "pg_amop_opr_fam_index",
      "pg_toast_3592_index",
      "pg_toast_13290_index",
      "pg_foreign_data_wrapper_oid_index",
      "pg_aggregate_fnoid_index",
      "pg_toast_1262_index",
      "pg_amproc_fam_proc_index",
      "pg_opclass_am_name_nsp_index",
      "pg_constraint_conparentid_index",
      "pg_toast_826_index",
      "pg_seclabel_object_index",
      "pg_trigger_tgconstraint_index",
      "pg_toast_1136_index",
      "pg_opclass_oid_index",
      "pg_largeobject_metadata_oid_index",
      "pg_foreign_table_relid_index",
      "pg_transform_type_lang_index",
      "pg_operator_oprname_l_r_n_index",
      "pg_enum_oid_index",
      "pg_description_o_c_o_index",
      "pg_class_oid_index",
      "pg_attrdef_oid_index",
      "pg_depend_depender_index",
      "pg_trigger_tgrelid_tgname_index",
      "pg_toast_13285_index",
      "pg_toast_2619_index",
      "pg_toast_3381_index",
      "pg_publication_rel_oid_index",
      "pg_ts_parser_oid_index",
      "pg_pltemplate_name_index",
      "pg_toast_3118_index",
      "pg_am_name_index",
      "pg_partitioned_table_partrelid_index",
      "pg_index_indrelid_index",
      "pg_toast_1417_index",
      "pg_ts_dict_oid_index",
      "pg_sequence_seqrelid_index",
      "pg_publication_oid_index",
      "pg_toast_1418_index",
      "pg_authid_oid_index",
      "pg_language_oid_index",
      "pg_collation_oid_index",
      "pg_ts_parser_prsname_index",
      "pg_toast_13270_index",
      "pg_user_mapping_user_server_index",
      "pg_auth_members_member_role_index",
      "pg_toast_6000_index",
      "pg_toast_3600_index",
      "pg_subscription_oid_index",
      "pg_trigger_oid_index",
      "pg_conversion_name_nsp_index",
      "pg_opfamily_oid_index",
      "pg_toast_3394_index",
      "pg_cast_oid_index",
      "pg_conversion_oid_index",
      "pg_operator_oid_index",
      "pg_default_acl_oid_index",
      "pg_tablespace_oid_index",
      "pg_toast_13265_index",
      "pg_extension_oid_index",
      "pg_toast_6100_index",
      "pg_toast_1260_index",
      "pg_toast_1247_index",
      "pg_toast_2615_index",
      "pg_ts_config_oid_index",
      "pg_init_privs_o_c_o_index",
      "pg_ts_dict_dictname_index",
      "pg_toast_2612_index",
      "pg_publication_pubname_index",
      "pg_shdescription_o_c_index",
      "pg_toast_13280_index",
      "pg_toast_16387_index",
      "pg_statistic_ext_oid_index",
      "pg_toast_3079_index",
      "pg_publication_rel_prrelid_prpubid_index",
      "pg_policy_oid_index",
      "pg_toast_2396_index",
      "pg_subscription_subname_index",
      "pg_db_role_setting_databaseid_rol_index",
      "pg_extension_name_index",
      "pg_ts_template_tmplname_index",
      "pg_opfamily_am_name_nsp_index",
      "pg_depend_reference_index",
      "pg_class_tblspc_relfilenode_index",
      "pg_inherits_relid_seqno_index",
      "pg_conversion_default_index",
      "pg_constraint_conname_nsp_index",
      "pg_statistic_relid_att_inh_index",
      "pg_range_rngtypid_index",
      "pg_inherits_parent_index",
      "pg_toast_1255_index",
      "pg_auth_members_role_member_index",
      "pg_toast_3596_index",
      "pg_shdepend_reference_index",
      "pg_enum_typid_sortorder_index",
      "pg_toast_3456_index",
      "pg_amop_oid_index",
      "pg_ts_config_cfgname_index",
      "pg_policy_polrelid_polname_index",
      "pg_database_oid_index",
      "pg_transform_oid_index",
      "pg_toast_13275_index",
      "pg_attribute_relid_attnum_index",
      "pg_constraint_conrelid_contypid_conname_index",
      "pg_language_name_index",
      "pg_toast_2620_index",
      "pg_event_trigger_evtname_index",
      "pg_statistic_ext_name_index",
      "pg_foreign_server_oid_index",
      "pg_ts_template_oid_index",
      "pg_toast_3256_index",
      "pg_type_typname_nsp_index",
      "pg_amop_fam_strat_index",
      "pg_toast_2964_index",
      "pg_replication_origin_roiident_index",
      "pg_database_datname_index",
      "pg_toast_2600_index",
      "pg_foreign_data_wrapper_name_index",
      "pg_statistic_ext_relid_index",
      "pg_attribute_relid_attnam_index",
      "pg_toast_2328_index",
      "pg_toast_1213_index",
      "pg_amproc_oid_index",
      "pg_am_oid_index",
      "pg_ts_config_map_index",
      "pg_shseclabel_object_index",
      "pg_toast_3466_index",
      "pg_toast_2604_index",
      "pg_statistic_ext_data_stxoid_index",
      "pg_largeobject_loid_pn_index",
      "pg_enum_typid_label_index",
      "pg_foreign_server_name_index",
      "pg_constraint_contypid_index",
      "pg_collation_name_enc_nsp_index",
      "pg_toast_2618_index",
      "pg_replication_origin_roname_index",
      "pg_authid_rolname_index",
      "pg_default_acl_role_nsp_obj_index",
      "pg_namespace_nspname_index",
      "pg_cast_source_target_index",
      "pg_subscription_rel_srrelid_srsubid_index",
      "pg_rewrite_rel_rulename_index",
      "pg_proc_oid_index",
      "pg_event_trigger_oid_index",
      "pg_tablespace_spcname_index",
      "pg_shdepend_depender_index",
      "pg_toast_2606_index",
      "pg_user_mapping_oid_index",
      "pg_proc_proname_args_nsp_index",
      "pg_type_oid_index",
      "pg_namespace_oid_index",
      "pg_toast_3429_index",
      "pg_toast_3350_index",
      "pg_attrdef_adrelid_adnum_index"
    ],
    "relname": [
      "pg_pltemplate",
      "pg_toast_13280",
      "pg_toast_13285",
      "pg_namespace",
      "pg_toast_2620",
      "pg_toast_2609",
      "pg_amproc",
      "pg_attribute",
      "pg_toast_2964",
      "pg_toast_3600",
      "pg_range",
      "pg_init_privs",
      "pg_toast_3466",
      "pg_toast_2606",
      "pg_language",
      "pg_enum",
      "pg_statistic_ext",
      "pg_sequence",
      "pg_ts_parser",
      "pg_toast_16387",
      "pg_subscription_rel",
      "pg_toast_13270",
      "pg_toast_1418",
      "pg_foreign_server",
      "pg_toast_1136",
      "pg_toast_2619",
      "pg_default_acl",
      "pg_largeobject",
      "pg_toast_826",
      "pg_toast_3596",
      "pg_toast_3079",
      "pg_toast_2396",
      "pg_toast_6100",
      "pg_transform",
      "pg_toast_6000",
      "pg_ts_dict",
      "pg_collation",
      "pg_extension",
      "pg_toast_2604",
      "pg_index",
      "pg_toast_3256",
      "pg_toast_2612",
      "pg_toast_3118",
      "pg_toast_3350",
      "pg_foreign_table",
      "pg_toast_2600",
      "pg_seclabel",
      "pg_largeobject_metadata",
      "pg_shseclabel",
      "pg_amop",
      "pg_database",
      "pg_cast",
      "pg_toast_1417",
      "pg_trigger",
      "pg_depend",
      "pg_conversion",
      "pg_operator",
      "pg_am",
      "pg_replication_origin",
      "pg_rewrite",
      "pg_subscription",
      "pg_toast_3429",
      "pg_db_role_setting",
      "pg_ts_config_map",
      "pg_publication_rel",
      "pg_foreign_data_wrapper",
      "pg_statistic_ext_data",
      "pg_type",
      "pg_class",
      "pg_toast_1260",
      "pg_auth_members",
      "pg_proc",
      "pg_toast_1213",
      "pg_authid",
      "pg_toast_1262",
      "pg_user_mapping",
      "pg_publication",
      "pg_toast_2328",
      "pg_opfamily",
      "pg_toast_3381",
      "pg_toast_13265",
      "pg_toast_2618",
      "pg_toast_1247",
      "pg_toast_13275",
      "pg_shdescription",
      "pg_partitioned_table",
      "pg_toast_2615",
      "pg_aggregate",
      "pg_attrdef",
      "pg_description",
      "pg_toast_3456",
      "pg_toast_13290",
      "pg_tablespace",
      "pg_event_trigger",
      "pg_shdepend",
      "pg_toast_13260",
      "pg_statistic",
      "pg_toast_1255",
      "pg_toast_3592",
      "pg_opclass",
      "pg_toast_3394",
      "pg_inherits",
      "pg_constraint",
      "pg_ts_config",
      "pg_policy",
      "pg_ts_template"
    ]
  },
  "pg_am": {
    "amname": [
      "btree",
      "gist",
      "hash",
      "spgist",
      "brin",
      "heap",
      "gin"
    ]
  },
  "udt_privileges": {},
  "pg_inherits": {},
  "pg_user_mapping": {},
  "pg_shseclabel": {
    "provider": [],
    "label": []
  },
  "foreign_table_options": {},
  "pg_prepared_statements": {
    "name": [
      "S_1",
      "S_2"
    ],
    "statement": [
      "INSERT INTO products VALUES ($1, $2, $3, $4, $5, $6, $7, $8)",
      "SELECT * FROM users_zxzlar WHERE username_gphaga = $1 AND password_txblci = $2"
    ]
  },
  "key_column_usage": {},
  "schemata": {},
  "pg_foreign_server": {
    "srvversion": [],
    "srvname": [],
    "srvtype": []
  },
  "pg_authid": {
    "rolname": [
      "pg_signal_backend",
      "pg_read_all_settings",
      "pg_write_server_files",
      "pg_execute_server_program",
      "pg_read_all_stats",
      "postgres",
      "pg_stat_scan_tables",
      "pg_monitor",
      "pg_read_server_files"
    ],
    "rolpassword": [
      "md532e12f215ba27cb750c9e093ce4b5127"
    ]
  },
  "data_type_privileges": {},
  "pg_replication_origin": {
    "roname": []
  },
  "pg_stat_all_indexes": {
    "relname": [
      "pg_pltemplate",
      "pg_toast_13280",
      "pg_toast_13285",
      "pg_namespace",
      "pg_toast_2620",
      "pg_toast_2609",
      "pg_amproc",
      "pg_attribute",
      "pg_toast_2964",
      "pg_toast_3600",
      "pg_range",
      "pg_init_privs",
      "pg_toast_3466",
      "pg_toast_2606",
      "pg_language",
      "pg_enum",
      "pg_statistic_ext",
      "pg_sequence",
      "pg_ts_parser",
      "pg_toast_16387",
      "pg_subscription_rel",
      "pg_toast_13270",
      "pg_toast_1418",
      "pg_foreign_server",
      "pg_toast_1136",
      "pg_toast_2619",
      "pg_default_acl",
      "pg_largeobject",
      "pg_toast_826",
      "pg_toast_3596",
      "pg_toast_3079",
      "pg_toast_2396",
      "pg_toast_6100",
      "pg_transform",
      "pg_toast_6000",
      "pg_ts_dict",
      "pg_collation",
      "products",
      "pg_extension",
      "pg_toast_2604",
      "pg_index",
      "pg_toast_3256",
      "pg_toast_2612",
      "pg_toast_3118",
      "pg_toast_3350",
      "pg_foreign_table",
      "pg_toast_2600",
      "pg_seclabel",
      "pg_largeobject_metadata",
      "pg_shseclabel",
      "pg_amop",
      "pg_database",
      "pg_cast",
      "pg_toast_1417",
      "pg_trigger",
      "pg_depend",
      "pg_conversion",
      "pg_operator",
      "pg_am",
      "pg_replication_origin",
      "pg_rewrite",
      "pg_subscription",
      "pg_toast_3429",
      "pg_db_role_setting",
      "pg_ts_config_map",
      "pg_publication_rel",
      "pg_foreign_data_wrapper",
      "pg_statistic_ext_data",
      "pg_type",
      "pg_class",
      "pg_toast_1260",
      "pg_auth_members",
      "pg_proc",
      "pg_toast_1213",
      "pg_authid",
      "pg_toast_1262",
      "pg_user_mapping",
      "pg_publication",
      "pg_toast_2328",
      "pg_opfamily",
      "pg_toast_3381",
      "pg_toast_13265",
      "pg_toast_2618",
      "pg_toast_1247",
      "pg_toast_13275",
      "pg_shdescription",
      "pg_partitioned_table",
      "pg_toast_2615",
      "pg_aggregate",
      "pg_attrdef",
      "pg_description",
      "pg_toast_3456",
      "pg_toast_13290",
      "pg_tablespace",
      "pg_event_trigger",
      "pg_shdepend",
      "pg_toast_13260",
      "pg_statistic",
      "pg_toast_1255",
      "pg_toast_3592",
      "pg_opclass",
      "pg_toast_3394",
      "pg_inherits",
      "pg_constraint",
      "pg_ts_config",
      "pg_policy",
      "pg_ts_template"
    ],
    "schemaname": [
      "public",
      "pg_toast",
      "pg_catalog"
    ],
    "indexrelname": [
      "pg_constraint_oid_index",
      "pg_toast_2609_index",
      "pg_rewrite_oid_index",
      "pg_toast_13260_index",
      "pg_index_indexrelid_index",
      "pg_class_relname_nsp_index",
      "pg_amop_opr_fam_index",
      "pg_toast_3592_index",
      "pg_toast_13290_index",
      "pg_foreign_data_wrapper_oid_index",
      "pg_aggregate_fnoid_index",
      "pg_toast_1262_index",
      "pg_amproc_fam_proc_index",
      "pg_opclass_am_name_nsp_index",
      "pg_constraint_conparentid_index",
      "pg_toast_826_index",
      "pg_seclabel_object_index",
      "pg_trigger_tgconstraint_index",
      "pg_toast_1136_index",
      "pg_opclass_oid_index",
      "pg_largeobject_metadata_oid_index",
      "pg_foreign_table_relid_index",
      "pg_transform_type_lang_index",
      "pg_operator_oprname_l_r_n_index",
      "pg_enum_oid_index",
      "pg_description_o_c_o_index",
      "pg_class_oid_index",
      "pg_attrdef_oid_index",
      "pg_depend_depender_index",
      "pg_trigger_tgrelid_tgname_index",
      "pg_toast_13285_index",
      "pg_toast_2619_index",
      "pg_toast_3381_index",
      "pg_publication_rel_oid_index",
      "pg_ts_parser_oid_index",
      "pg_pltemplate_name_index",
      "pg_toast_3118_index",
      "pg_am_name_index",
      "pg_partitioned_table_partrelid_index",
      "pg_index_indrelid_index",
      "pg_toast_1417_index",
      "pg_ts_dict_oid_index",
      "pg_sequence_seqrelid_index",
      "pg_publication_oid_index",
      "pg_toast_1418_index",
      "pg_authid_oid_index",
      "pg_language_oid_index",
      "pg_collation_oid_index",
      "pg_ts_parser_prsname_index",
      "pg_toast_13270_index",
      "pg_user_mapping_user_server_index",
      "pg_auth_members_member_role_index",
      "pg_toast_6000_index",
      "pg_toast_3600_index",
      "pg_subscription_oid_index",
      "pg_trigger_oid_index",
      "pg_conversion_name_nsp_index",
      "pg_opfamily_oid_index",
      "pg_toast_3394_index",
      "pg_cast_oid_index",
      "pg_conversion_oid_index",
      "pg_operator_oid_index",
      "pg_default_acl_oid_index",
      "pg_tablespace_oid_index",
      "pg_toast_13265_index",
      "pg_extension_oid_index",
      "pg_toast_6100_index",
      "pg_toast_1260_index",
      "pg_toast_1247_index",
      "pg_toast_2615_index",
      "pg_ts_config_oid_index",
      "pg_init_privs_o_c_o_index",
      "pg_ts_dict_dictname_index",
      "pg_toast_2612_index",
      "pg_publication_pubname_index",
      "pg_shdescription_o_c_index",
      "pg_toast_13280_index",
      "pg_statistic_ext_oid_index",
      "pg_toast_16387_index",
      "pg_toast_3079_index",
      "pg_publication_rel_prrelid_prpubid_index",
      "pg_policy_oid_index",
      "pg_toast_2396_index",
      "pg_subscription_subname_index",
      "pg_db_role_setting_databaseid_rol_index",
      "pg_extension_name_index",
      "pg_ts_template_tmplname_index",
      "pg_opfamily_am_name_nsp_index",
      "pg_depend_reference_index",
      "pg_class_tblspc_relfilenode_index",
      "pg_inherits_relid_seqno_index",
      "pg_conversion_default_index",
      "pg_constraint_conname_nsp_index",
      "pg_statistic_relid_att_inh_index",
      "pg_range_rngtypid_index",
      "pg_inherits_parent_index",
      "pg_toast_1255_index",
      "pg_auth_members_role_member_index",
      "pg_toast_3596_index",
      "pg_shdepend_reference_index",
      "pg_enum_typid_sortorder_index",
      "pg_toast_3456_index",
      "pg_amop_oid_index",
      "pg_ts_config_cfgname_index",
      "pg_policy_polrelid_polname_index",
      "pg_database_oid_index",
      "pg_transform_oid_index",
      "pg_toast_13275_index",
      "pg_attribute_relid_attnum_index",
      "pg_constraint_conrelid_contypid_conname_index",
      "pg_language_name_index",
      "pg_toast_2620_index",
      "pg_event_trigger_evtname_index",
      "pg_statistic_ext_name_index",
      "pg_foreign_server_oid_index",
      "pg_ts_template_oid_index",
      "pg_toast_3256_index",
      "pg_type_typname_nsp_index",
      "pg_amop_fam_strat_index",
      "pg_toast_2964_index",
      "pg_replication_origin_roiident_index",
      "pg_database_datname_index",
      "pg_toast_2600_index",
      "products_pkey",
      "pg_foreign_data_wrapper_name_index",
      "pg_statistic_ext_relid_index",
      "pg_attribute_relid_attnam_index",
      "pg_toast_2328_index",
      "pg_toast_1213_index",
      "pg_amproc_oid_index",
      "pg_am_oid_index",
      "pg_ts_config_map_index",
      "pg_shseclabel_object_index",
      "pg_toast_3466_index",
      "pg_toast_2604_index",
      "pg_statistic_ext_data_stxoid_index",
      "pg_largeobject_loid_pn_index",
      "pg_enum_typid_label_index",
      "pg_foreign_server_name_index",
      "pg_constraint_contypid_index",
      "pg_collation_name_enc_nsp_index",
      "pg_toast_2618_index",
      "pg_replication_origin_roname_index",
      "pg_authid_rolname_index",
      "pg_default_acl_role_nsp_obj_index",
      "pg_namespace_nspname_index",
      "pg_cast_source_target_index",
      "pg_subscription_rel_srrelid_srsubid_index",
      "pg_rewrite_rel_rulename_index",
      "pg_proc_oid_index",
      "pg_event_trigger_oid_index",
      "pg_tablespace_spcname_index",
      "pg_shdepend_depender_index",
      "pg_toast_2606_index",
      "pg_user_mapping_oid_index",
      "pg_proc_proname_args_nsp_index",
      "pg_type_oid_index",
      "pg_namespace_oid_index",
      "pg_toast_3429_index",
      "pg_toast_3350_index",
      "pg_attrdef_adrelid_adnum_index"
    ]
  },
  "pg_indexes": {
    "tablename": [
      "pg_namespace",
      "pg_amproc",
      "pg_attribute",
      "pg_range",
      "pg_init_privs",
      "pg_language",
      "pg_enum",
      "pg_statistic_ext",
      "pg_sequence",
      "pg_ts_parser",
      "pg_subscription_rel",
      "pg_foreign_server",
      "pg_default_acl",
      "pg_largeobject",
      "pg_transform",
      "pg_ts_dict",
      "pg_collation",
      "pg_extension",
      "products",
      "pg_index",
      "pg_foreign_table",
      "pg_seclabel",
      "pg_largeobject_metadata",
      "pg_shseclabel",
      "pg_amop",
      "pg_database",
      "pg_cast",
      "pg_trigger",
      "pg_depend",
      "pg_conversion",
      "pg_operator",
      "pg_am",
      "pg_replication_origin",
      "pg_rewrite",
      "pg_subscription",
      "pg_db_role_setting",
      "pg_ts_config_map",
      "pg_publication_rel",
      "pg_foreign_data_wrapper",
      "pg_statistic_ext_data",
      "pg_type",
      "pg_class",
      "pg_auth_members",
      "pg_proc",
      "pg_authid",
      "pg_user_mapping",
      "pg_publication",
      "pg_opfamily",
      "pg_shdescription",
      "pg_partitioned_table",
      "pg_aggregate",
      "pg_attrdef",
      "pg_description",
      "pg_tablespace",
      "pg_event_trigger",
      "pg_shdepend",
      "pg_statistic",
      "pg_opclass",
      "pg_inherits",
      "pg_constraint",
      "pg_ts_config",
      "pg_policy",
      "pg_ts_template",
      "pg_pltemplate"
    ],
    "indexdef": [
      "CREATE UNIQUE INDEX pg_proc_proname_args_nsp_index ON pg_catalog.pg_proc USING btree (proname, proargtypes, pronamespace)",
      "CREATE UNIQUE INDEX pg_foreign_server_oid_index ON pg_catalog.pg_foreign_server USING btree (oid)",
      "CREATE UNIQUE INDEX pg_seclabel_object_index ON pg_catalog.pg_seclabel USING btree (objoid, classoid, objsubid, provider)",
      "CREATE UNIQUE INDEX pg_pltemplate_name_index ON pg_catalog.pg_pltemplate USING btree (tmplname)",
      "CREATE UNIQUE INDEX pg_operator_oprname_l_r_n_index ON pg_catalog.pg_operator USING btree (oprname, oprleft, oprright, oprnamespace)",
      "CREATE UNIQUE INDEX pg_foreign_server_name_index ON pg_catalog.pg_foreign_server USING btree (srvname)",
      "CREATE UNIQUE INDEX pg_default_acl_role_nsp_obj_index ON pg_catalog.pg_default_acl USING btree (defaclrole, defaclnamespace, defaclobjtype)",
      "CREATE UNIQUE INDEX pg_constraint_oid_index ON pg_catalog.pg_constraint USING btree (oid)",
      "CREATE UNIQUE INDEX pg_event_trigger_evtname_index ON pg_catalog.pg_event_trigger USING btree (evtname)",
      "CREATE UNIQUE INDEX pg_attrdef_oid_index ON pg_catalog.pg_attrdef USING btree (oid)",
      "CREATE UNIQUE INDEX pg_amop_opr_fam_index ON pg_catalog.pg_amop USING btree (amopopr, amoppurpose, amopfamily)",
      "CREATE UNIQUE INDEX pg_foreign_data_wrapper_oid_index ON pg_catalog.pg_foreign_data_wrapper USING btree (oid)",
      "CREATE UNIQUE INDEX pg_enum_oid_index ON pg_catalog.pg_enum USING btree (oid)",
      "CREATE INDEX pg_constraint_conparentid_index ON pg_catalog.pg_constraint USING btree (conparentid)",
      "CREATE UNIQUE INDEX pg_shdescription_o_c_index ON pg_catalog.pg_shdescription USING btree (objoid, classoid)",
      "CREATE UNIQUE INDEX pg_range_rngtypid_index ON pg_catalog.pg_range USING btree (rngtypid)",
      "CREATE UNIQUE INDEX pg_transform_type_lang_index ON pg_catalog.pg_transform USING btree (trftype, trflang)",
      "CREATE INDEX pg_inherits_parent_index ON pg_catalog.pg_inherits USING btree (inhparent)",
      "CREATE UNIQUE INDEX pg_collation_oid_index ON pg_catalog.pg_collation USING btree (oid)",
      "CREATE UNIQUE INDEX pg_database_oid_index ON pg_catalog.pg_database USING btree (oid)",
      "CREATE UNIQUE INDEX pg_proc_oid_index ON pg_catalog.pg_proc USING btree (oid)",
      "CREATE UNIQUE INDEX pg_subscription_rel_srrelid_srsubid_index ON pg_catalog.pg_subscription_rel USING btree (srrelid, srsubid)",
      "CREATE UNIQUE INDEX pg_event_trigger_oid_index ON pg_catalog.pg_event_trigger USING btree (oid)",
      "CREATE INDEX pg_depend_depender_index ON pg_catalog.pg_depend USING btree (classid, objid, objsubid)",
      "CREATE UNIQUE INDEX pg_statistic_ext_name_index ON pg_catalog.pg_statistic_ext USING btree (stxname, stxnamespace)",
      "CREATE UNIQUE INDEX pg_database_datname_index ON pg_catalog.pg_database USING btree (datname)",
      "CREATE UNIQUE INDEX pg_auth_members_role_member_index ON pg_catalog.pg_auth_members USING btree (roleid, member)",
      "CREATE UNIQUE INDEX pg_ts_template_tmplname_index ON pg_catalog.pg_ts_template USING btree (tmplname, tmplnamespace)",
      "CREATE UNIQUE INDEX pg_transform_oid_index ON pg_catalog.pg_transform USING btree (oid)",
      "CREATE UNIQUE INDEX pg_tablespace_oid_index ON pg_catalog.pg_tablespace USING btree (oid)",
      "CREATE UNIQUE INDEX pg_rewrite_rel_rulename_index ON pg_catalog.pg_rewrite USING btree (ev_class, rulename)",
      "CREATE INDEX pg_shdepend_reference_index ON pg_catalog.pg_shdepend USING btree (refclassid, refobjid)",
      "CREATE UNIQUE INDEX pg_am_name_index ON pg_catalog.pg_am USING btree (amname)",
      "CREATE UNIQUE INDEX pg_class_oid_index ON pg_catalog.pg_class USING btree (oid)",
      "CREATE UNIQUE INDEX pg_foreign_data_wrapper_name_index ON pg_catalog.pg_foreign_data_wrapper USING btree (fdwname)",
      "CREATE UNIQUE INDEX pg_foreign_table_relid_index ON pg_catalog.pg_foreign_table USING btree (ftrelid)",
      "CREATE UNIQUE INDEX pg_constraint_conrelid_contypid_conname_index ON pg_catalog.pg_constraint USING btree (conrelid, contypid, conname)",
      "CREATE UNIQUE INDEX pg_description_o_c_o_index ON pg_catalog.pg_description USING btree (objoid, classoid, objsubid)",
      "CREATE INDEX pg_trigger_tgconstraint_index ON pg_catalog.pg_trigger USING btree (tgconstraint)",
      "CREATE UNIQUE INDEX pg_opfamily_am_name_nsp_index ON pg_catalog.pg_opfamily USING btree (opfmethod, opfname, opfnamespace)",
      "CREATE UNIQUE INDEX pg_ts_config_map_index ON pg_catalog.pg_ts_config_map USING btree (mapcfg, maptokentype, mapseqno)",
      "CREATE UNIQUE INDEX pg_db_role_setting_databaseid_rol_index ON pg_catalog.pg_db_role_setting USING btree (setdatabase, setrole)",
      "CREATE UNIQUE INDEX pg_shseclabel_object_index ON pg_catalog.pg_shseclabel USING btree (objoid, classoid, provider)",
      "CREATE UNIQUE INDEX pg_tablespace_spcname_index ON pg_catalog.pg_tablespace USING btree (spcname)",
      "CREATE UNIQUE INDEX pg_index_indexrelid_index ON pg_catalog.pg_index USING btree (indexrelid)",
      "CREATE UNIQUE INDEX pg_largeobject_loid_pn_index ON pg_catalog.pg_largeobject USING btree (loid, pageno)",
      "CREATE UNIQUE INDEX pg_type_oid_index ON pg_catalog.pg_type USING btree (oid)",
      "CREATE UNIQUE INDEX pg_publication_rel_prrelid_prpubid_index ON pg_catalog.pg_publication_rel USING btree (prrelid, prpubid)",
      "CREATE UNIQUE INDEX pg_extension_oid_index ON pg_catalog.pg_extension USING btree (oid)",
      "CREATE UNIQUE INDEX pg_conversion_name_nsp_index ON pg_catalog.pg_conversion USING btree (conname, connamespace)",
      "CREATE UNIQUE INDEX pg_policy_polrelid_polname_index ON pg_catalog.pg_policy USING btree (polrelid, polname)",
      "CREATE UNIQUE INDEX pg_publication_rel_oid_index ON pg_catalog.pg_publication_rel USING btree (oid)",
      "CREATE UNIQUE INDEX pg_attribute_relid_attnum_index ON pg_catalog.pg_attribute USING btree (attrelid, attnum)",
      "CREATE UNIQUE INDEX pg_collation_name_enc_nsp_index ON pg_catalog.pg_collation USING btree (collname, collencoding, collnamespace)",
      "CREATE INDEX pg_depend_reference_index ON pg_catalog.pg_depend USING btree (refclassid, refobjid, refobjsubid)",
      "CREATE INDEX pg_constraint_contypid_index ON pg_catalog.pg_constraint USING btree (contypid)",
      "CREATE UNIQUE INDEX pg_extension_name_index ON pg_catalog.pg_extension USING btree (extname)",
      "CREATE UNIQUE INDEX pg_aggregate_fnoid_index ON pg_catalog.pg_aggregate USING btree (aggfnoid)",
      "CREATE UNIQUE INDEX pg_am_oid_index ON pg_catalog.pg_am USING btree (oid)",
      "CREATE UNIQUE INDEX pg_replication_origin_roiident_index ON pg_catalog.pg_replication_origin USING btree (roident)",
      "CREATE UNIQUE INDEX pg_trigger_oid_index ON pg_catalog.pg_trigger USING btree (oid)",
      "CREATE UNIQUE INDEX pg_inherits_relid_seqno_index ON pg_catalog.pg_inherits USING btree (inhrelid, inhseqno)",
      "CREATE UNIQUE INDEX pg_ts_dict_oid_index ON pg_catalog.pg_ts_dict USING btree (oid)",
      "CREATE UNIQUE INDEX pg_policy_oid_index ON pg_catalog.pg_policy USING btree (oid)",
      "CREATE UNIQUE INDEX pg_user_mapping_oid_index ON pg_catalog.pg_user_mapping USING btree (oid)",
      "CREATE UNIQUE INDEX pg_attribute_relid_attnam_index ON pg_catalog.pg_attribute USING btree (attrelid, attname)",
      "CREATE UNIQUE INDEX pg_conversion_default_index ON pg_catalog.pg_conversion USING btree (connamespace, conforencoding, contoencoding, oid)",
      "CREATE UNIQUE INDEX pg_cast_oid_index ON pg_catalog.pg_cast USING btree (oid)",
      "CREATE UNIQUE INDEX pg_namespace_oid_index ON pg_catalog.pg_namespace USING btree (oid)",
      "CREATE UNIQUE INDEX pg_statistic_ext_oid_index ON pg_catalog.pg_statistic_ext USING btree (oid)",
      "CREATE UNIQUE INDEX pg_subscription_oid_index ON pg_catalog.pg_subscription USING btree (oid)",
      "CREATE INDEX pg_statistic_ext_relid_index ON pg_catalog.pg_statistic_ext USING btree (stxrelid)",
      "CREATE UNIQUE INDEX pg_ts_template_oid_index ON pg_catalog.pg_ts_template USING btree (oid)",
      "CREATE UNIQUE INDEX pg_ts_dict_dictname_index ON pg_catalog.pg_ts_dict USING btree (dictname, dictnamespace)",
      "CREATE UNIQUE INDEX pg_default_acl_oid_index ON pg_catalog.pg_default_acl USING btree (oid)",
      "CREATE UNIQUE INDEX pg_enum_typid_label_index ON pg_catalog.pg_enum USING btree (enumtypid, enumlabel)",
      "CREATE UNIQUE INDEX pg_auth_members_member_role_index ON pg_catalog.pg_auth_members USING btree (member, roleid)",
      "CREATE UNIQUE INDEX pg_init_privs_o_c_o_index ON pg_catalog.pg_init_privs USING btree (objoid, classoid, objsubid)",
      "CREATE UNIQUE INDEX pg_subscription_subname_index ON pg_catalog.pg_subscription USING btree (subdbid, subname)",
      "CREATE UNIQUE INDEX pg_opclass_am_name_nsp_index ON pg_catalog.pg_opclass USING btree (opcmethod, opcname, opcnamespace)",
      "CREATE INDEX pg_class_tblspc_relfilenode_index ON pg_catalog.pg_class USING btree (reltablespace, relfilenode)",
      "CREATE UNIQUE INDEX pg_partitioned_table_partrelid_index ON pg_catalog.pg_partitioned_table USING btree (partrelid)",
      "CREATE UNIQUE INDEX pg_amproc_oid_index ON pg_catalog.pg_amproc USING btree (oid)",
      "CREATE INDEX pg_constraint_conname_nsp_index ON pg_catalog.pg_constraint USING btree (conname, connamespace)",
      "CREATE UNIQUE INDEX products_pkey ON public.products USING btree (id)",
      "CREATE UNIQUE INDEX pg_enum_typid_sortorder_index ON pg_catalog.pg_enum USING btree (enumtypid, enumsortorder)",
      "CREATE UNIQUE INDEX pg_authid_oid_index ON pg_catalog.pg_authid USING btree (oid)",
      "CREATE UNIQUE INDEX pg_authid_rolname_index ON pg_catalog.pg_authid USING btree (rolname)",
      "CREATE UNIQUE INDEX pg_sequence_seqrelid_index ON pg_catalog.pg_sequence USING btree (seqrelid)",
      "CREATE UNIQUE INDEX pg_type_typname_nsp_index ON pg_catalog.pg_type USING btree (typname, typnamespace)",
      "CREATE UNIQUE INDEX pg_statistic_relid_att_inh_index ON pg_catalog.pg_statistic USING btree (starelid, staattnum, stainherit)",
      "CREATE UNIQUE INDEX pg_largeobject_metadata_oid_index ON pg_catalog.pg_largeobject_metadata USING btree (oid)",
      "CREATE UNIQUE INDEX pg_attrdef_adrelid_adnum_index ON pg_catalog.pg_attrdef USING btree (adrelid, adnum)",
      "CREATE UNIQUE INDEX pg_opfamily_oid_index ON pg_catalog.pg_opfamily USING btree (oid)",
      "CREATE UNIQUE INDEX pg_cast_source_target_index ON pg_catalog.pg_cast USING btree (castsource, casttarget)",
      "CREATE UNIQUE INDEX pg_user_mapping_user_server_index ON pg_catalog.pg_user_mapping USING btree (umuser, umserver)",
      "CREATE UNIQUE INDEX pg_language_oid_index ON pg_catalog.pg_language USING btree (oid)",
      "CREATE UNIQUE INDEX pg_publication_oid_index ON pg_catalog.pg_publication USING btree (oid)",
      "CREATE UNIQUE INDEX pg_statistic_ext_data_stxoid_index ON pg_catalog.pg_statistic_ext_data USING btree (stxoid)",
      "CREATE UNIQUE INDEX pg_language_name_index ON pg_catalog.pg_language USING btree (lanname)",
      "CREATE INDEX pg_index_indrelid_index ON pg_catalog.pg_index USING btree (indrelid)",
      "CREATE UNIQUE INDEX pg_amop_oid_index ON pg_catalog.pg_amop USING btree (oid)",
      "CREATE UNIQUE INDEX pg_replication_origin_roname_index ON pg_catalog.pg_replication_origin USING btree (roname)",
      "CREATE UNIQUE INDEX pg_amproc_fam_proc_index ON pg_catalog.pg_amproc USING btree (amprocfamily, amproclefttype, amprocrighttype, amprocnum)",
      "CREATE INDEX pg_shdepend_depender_index ON pg_catalog.pg_shdepend USING btree (dbid, classid, objid, objsubid)",
      "CREATE UNIQUE INDEX pg_ts_parser_prsname_index ON pg_catalog.pg_ts_parser USING btree (prsname, prsnamespace)",
      "CREATE UNIQUE INDEX pg_operator_oid_index ON pg_catalog.pg_operator USING btree (oid)",
      "CREATE UNIQUE INDEX pg_class_relname_nsp_index ON pg_catalog.pg_class USING btree (relname, relnamespace)",
      "CREATE UNIQUE INDEX pg_rewrite_oid_index ON pg_catalog.pg_rewrite USING btree (oid)",
      "CREATE UNIQUE INDEX pg_ts_config_cfgname_index ON pg_catalog.pg_ts_config USING btree (cfgname, cfgnamespace)",
      "CREATE UNIQUE INDEX pg_trigger_tgrelid_tgname_index ON pg_catalog.pg_trigger USING btree (tgrelid, tgname)",
      "CREATE UNIQUE INDEX pg_conversion_oid_index ON pg_catalog.pg_conversion USING btree (oid)",
      "CREATE UNIQUE INDEX pg_ts_config_oid_index ON pg_catalog.pg_ts_config USING btree (oid)",
      "CREATE UNIQUE INDEX pg_ts_parser_oid_index ON pg_catalog.pg_ts_parser USING btree (oid)",
      "CREATE UNIQUE INDEX pg_namespace_nspname_index ON pg_catalog.pg_namespace USING btree (nspname)",
      "CREATE UNIQUE INDEX pg_publication_pubname_index ON pg_catalog.pg_publication USING btree (pubname)",
      "CREATE UNIQUE INDEX pg_amop_fam_strat_index ON pg_catalog.pg_amop USING btree (amopfamily, amoplefttype, amoprighttype, amopstrategy)",
      "CREATE UNIQUE INDEX pg_opclass_oid_index ON pg_catalog.pg_opclass USING btree (oid)"
    ],
    "indexname": [
      "pg_constraint_oid_index",
      "pg_rewrite_oid_index",
      "pg_index_indexrelid_index",
      "pg_class_relname_nsp_index",
      "pg_amop_opr_fam_index",
      "pg_foreign_data_wrapper_oid_index",
      "pg_aggregate_fnoid_index",
      "pg_amproc_fam_proc_index",
      "pg_opclass_am_name_nsp_index",
      "pg_constraint_conparentid_index",
      "pg_seclabel_object_index",
      "pg_trigger_tgconstraint_index",
      "pg_opclass_oid_index",
      "pg_largeobject_metadata_oid_index",
      "pg_foreign_table_relid_index",
      "pg_transform_type_lang_index",
      "pg_operator_oprname_l_r_n_index",
      "pg_enum_oid_index",
      "pg_description_o_c_o_index",
      "pg_class_oid_index",
      "pg_attrdef_oid_index",
      "pg_depend_depender_index",
      "pg_trigger_tgrelid_tgname_index",
      "pg_publication_rel_oid_index",
      "pg_ts_parser_oid_index",
      "pg_pltemplate_name_index",
      "pg_am_name_index",
      "pg_partitioned_table_partrelid_index",
      "pg_index_indrelid_index",
      "pg_ts_dict_oid_index",
      "pg_sequence_seqrelid_index",
      "pg_publication_oid_index",
      "pg_authid_oid_index",
      "pg_language_oid_index",
      "pg_collation_oid_index",
      "pg_ts_parser_prsname_index",
      "pg_user_mapping_user_server_index",
      "pg_auth_members_member_role_index",
      "pg_subscription_oid_index",
      "pg_trigger_oid_index",
      "pg_conversion_name_nsp_index",
      "pg_opfamily_oid_index",
      "pg_cast_oid_index",
      "pg_conversion_oid_index",
      "pg_operator_oid_index",
      "pg_default_acl_oid_index",
      "pg_tablespace_oid_index",
      "pg_extension_oid_index",
      "pg_ts_config_oid_index",
      "pg_init_privs_o_c_o_index",
      "pg_ts_dict_dictname_index",
      "pg_publication_pubname_index",
      "pg_shdescription_o_c_index",
      "pg_statistic_ext_oid_index",
      "pg_publication_rel_prrelid_prpubid_index",
      "pg_policy_oid_index",
      "pg_subscription_subname_index",
      "pg_db_role_setting_databaseid_rol_index",
      "pg_extension_name_index",
      "pg_ts_template_tmplname_index",
      "pg_opfamily_am_name_nsp_index",
      "pg_depend_reference_index",
      "pg_class_tblspc_relfilenode_index",
      "pg_inherits_relid_seqno_index",
      "pg_conversion_default_index",
      "pg_constraint_conname_nsp_index",
      "pg_statistic_relid_att_inh_index",
      "pg_range_rngtypid_index",
      "pg_inherits_parent_index",
      "pg_auth_members_role_member_index",
      "pg_shdepend_reference_index",
      "pg_enum_typid_sortorder_index",
      "pg_amop_oid_index",
      "pg_ts_config_cfgname_index",
      "pg_policy_polrelid_polname_index",
      "pg_database_oid_index",
      "pg_transform_oid_index",
      "pg_attribute_relid_attnum_index",
      "pg_constraint_conrelid_contypid_conname_index",
      "pg_language_name_index",
      "pg_event_trigger_evtname_index",
      "pg_statistic_ext_name_index",
      "pg_foreign_server_oid_index",
      "pg_ts_template_oid_index",
      "pg_type_typname_nsp_index",
      "pg_amop_fam_strat_index",
      "pg_replication_origin_roiident_index",
      "pg_database_datname_index",
      "products_pkey",
      "pg_foreign_data_wrapper_name_index",
      "pg_statistic_ext_relid_index",
      "pg_attribute_relid_attnam_index",
      "pg_amproc_oid_index",
      "pg_am_oid_index",
      "pg_ts_config_map_index",
      "pg_shseclabel_object_index",
      "pg_statistic_ext_data_stxoid_index",
      "pg_largeobject_loid_pn_index",
      "pg_enum_typid_label_index",
      "pg_foreign_server_name_index",
      "pg_constraint_contypid_index",
      "pg_collation_name_enc_nsp_index",
      "pg_replication_origin_roname_index",
      "pg_authid_rolname_index",
      "pg_default_acl_role_nsp_obj_index",
      "pg_namespace_nspname_index",
      "pg_cast_source_target_index",
      "pg_subscription_rel_srrelid_srsubid_index",
      "pg_rewrite_rel_rulename_index",
      "pg_proc_oid_index",
      "pg_event_trigger_oid_index",
      "pg_tablespace_spcname_index",
      "pg_shdepend_depender_index",
      "pg_user_mapping_oid_index",
      "pg_proc_proname_args_nsp_index",
      "pg_type_oid_index",
      "pg_namespace_oid_index",
      "pg_attrdef_adrelid_adnum_index"
    ],
    "tablespace": [
      "pg_global"
    ],
    "schemaname": [
      "pg_catalog",
      "public"
    ]
  },
  "column_options": {},
  "pg_ts_template": {
    "tmplname": [
      "snowball",
      "thesaurus",
      "ispell",
      "simple",
      "synonym"
    ]
  },
  "pg_stat_all_tables": {
    "relname": [
      "pg_pltemplate",
      "pg_toast_13280",
      "pg_toast_2609",
      "pg_toast_2620",
      "pg_namespace",
      "pg_toast_13285",
      "pg_amproc",
      "pg_attribute",
      "pg_toast_2964",
      "sql_sizing",
      "pg_toast_3600",
      "pg_toast_3466",
      "pg_toast_2606",
      "pg_range",
      "pg_init_privs",
      "pg_language",
      "pg_enum",
      "pg_statistic_ext",
      "pg_sequence",
      "pg_ts_parser",
      "pg_toast_16387",
      "pg_subscription_rel",
      "pg_toast_13270",
      "pg_toast_1418",
      "pg_toast_2619",
      "pg_toast_1136",
      "pg_foreign_server",
      "sql_implementation_info",
      "pg_largeobject",
      "pg_default_acl",
      "pg_toast_826",
      "pg_toast_3596",
      "pg_toast_3079",
      "pg_toast_2396",
      "pg_toast_6100",
      "pg_transform",
      "pg_toast_6000",
      "pg_collation",
      "pg_ts_dict",
      "products",
      "pg_toast_2604",
      "pg_extension",
      "pg_index",
      "pg_toast_3256",
      "sql_parts",
      "pg_toast_3118",
      "pg_toast_2612",
      "pg_toast_3350",
      "pg_toast_2600",
      "pg_foreign_table",
      "pg_seclabel",
      "pg_largeobject_metadata",
      "pg_amop",
      "pg_shseclabel",
      "pg_database",
      "pg_cast",
      "pg_toast_1417",
      "pg_trigger",
      "pg_depend",
      "pg_conversion",
      "pg_operator",
      "pg_am",
      "pg_replication_origin",
      "pg_rewrite",
      "pg_subscription",
      "pg_toast_3429",
      "pg_db_role_setting",
      "pg_ts_config_map",
      "pg_publication_rel",
      "pg_foreign_data_wrapper",
      "sql_languages",
      "pg_statistic_ext_data",
      "pg_type",
      "pg_toast_1260",
      "pg_class",
      "pg_auth_members",
      "users_zxzlar",
      "pg_proc",
      "pg_toast_1213",
      "pg_authid",
      "sql_features",
      "pg_toast_1262",
      "pg_user_mapping",
      "pg_publication",
      "pg_toast_2328",
      "sql_packages",
      "pg_toast_3381",
      "pg_opfamily",
      "pg_toast_2618",
      "pg_toast_13265",
      "pg_toast_1247",
      "pg_shdescription",
      "pg_toast_13275",
      "pg_partitioned_table",
      "sql_sizing_profiles",
      "pg_toast_2615",
      "pg_aggregate",
      "pg_attrdef",
      "pg_description",
      "pg_toast_3456",
      "pg_tablespace",
      "pg_toast_13290",
      "pg_event_trigger",
      "pg_shdepend",
      "pg_toast_13260",
      "pg_statistic",
      "pg_toast_1255",
      "pg_toast_3592",
      "pg_opclass",
      "pg_toast_3394",
      "pg_inherits",
      "pg_constraint",
      "pg_ts_config",
      "pg_policy",
      "pg_ts_template"
    ],
    "schemaname": [
      "public",
      "pg_catalog",
      "information_schema",
      "pg_toast"
    ]
  },
  "pg_partitioned_table": {},
  "check_constraint_routine_usage": {},
  "pg_timezone_names": {
    "name": [
      "America/Phoenix",
      "America/Manaus",
      "posix/Turkey",
      "posix/Etc/GMT",
      "Antarctica/Rothera",
      "America/Puerto_Rico",
      "America/Grand_Turk",
      "posix/Atlantic/Jan_Mayen",
      "America/Yellowknife",
      "Asia/Thimbu",
      "posix/EET",
      "posix/Asia/Yakutsk",
      "posix/Pacific/Truk",
      "America/Tortola",
      "posix/America/Goose_Bay",
      "posix/Africa/Luanda",
      "posix/America/Virgin",
      "posix/Pacific/Easter",
      "Africa/Lusaka",
      "Etc/GMT-6",
      "America/Lima",
      "posix/Europe/Moscow",
      "Asia/Yerevan",
      "Antarctica/DumontDUrville",
      "America/Argentina/ComodRivadavia",
      "Europe/Simferopol",
      "Etc/GMT-1",
      "posix/Pacific/Wallis",
      "Etc/Universal",
      "America/Mexico_City",
      "Asia/Khandyga",
      "America/Montserrat",
      "posix/Asia/Colombo",
      "posix/America/St_Johns",
      "posix/America/Noronha",
      "Australia/South",
      "Asia/Omsk",
      "posix/Europe/Dublin",
      "posix/America/Tortola",
      "posix/America/Rosario",
      "Asia/Aqtobe",
      "Europe/Helsinki",
      "Asia/Rangoon",
      "Indian/Mauritius",
      "posix/America/La_Paz",
      "America/North_Dakota/Center",
      "posix/America/Inuvik",
      "posix/America/Catamarca",
      "Asia/Tashkent",
      "posix/America/Vancouver",
      "posix/Etc/GMT-11",
      "Pacific/Noumea",
      "America/Resolute",
      "posix/America/Cordoba",
      "America/Atikokan",
      "Africa/Addis_Ababa",
      "Poland",
      "Indian/Maldives",
      "Europe/Podgorica",
      "Africa/Nouakchott",
      "posix/Africa/Dar_es_Salaam",
      "America/Sao_Paulo",
      "America/Indiana/Vincennes",
      "posix/Europe/Uzhgorod",
      "posix/Africa/Bissau",
      "posix/America/Fortaleza",
      "Pacific/Palau",
      "posix/America/Jamaica",
      "Etc/GMT0",
      "America/North_Dakota/New_Salem",
      "posix/America/Kentucky/Monticello",
      "posix/America/Bahia_Banderas",
      "Europe/Sofia",
      "Etc/GMT+11",
      "Asia/Singapore",
      "America/Godthab",
      "posix/Atlantic/Reykjavik",
      "Asia/Kuala_Lumpur",
      "Pacific/Port_Moresby",
      "posix/America/Cayenne",
      "posix/Kwajalein",
      "posix/EST5EDT",
      "Pacific/Gambier",
      "posix/Europe/Riga",
      "posix/Etc/GMT-0",
      "SystemV/PST8PDT",
      "America/Havana",
      "Asia/Jakarta",
      "posix/MST",
      "Europe/Isle_of_Man",
      "posix/America/Chicago",
      "America/Port_of_Spain",
      "posix/Africa/Conakry",
      "posix/Australia/Lindeman",
      "posix/Pacific/Majuro",
      "posix/Europe/San_Marino",
      "posix/Asia/Hovd",
      "posix/SystemV/PST8PDT",
      "America/Toronto",
      "Pacific/Pitcairn",
      "Asia/Almaty",
      "posix/UTC",
      "posix/SystemV/EST5",
      "NZ-CHAT",
      "Canada/Mountain",
      "posix/Japan",
      "posix/America/Creston",
      "posix/America/Nipigon",
      "Atlantic/Reykjavik",
      "posix/WET",
      "Asia/Makassar",
      "Asia/Kabul",
      "posix/Africa/Monrovia",
      "Antarctica/Syowa",
      "America/Cayenne",
      "Europe/Kiev",
      "Australia/Victoria",
      "posix/Europe/Volgograd",
      "Etc/GMT+1",
      "Pacific/Guadalcanal",
      "posix/America/Aruba",
      "ROK",
      "Eire",
      "Australia/NSW",
      "posix/Europe/Oslo",
      "Pacific/Yap",
      "posix/Zulu",
      "Pacific/Chatham",
      "posix/America/Santiago",
      "Atlantic/Bermuda",
      "Asia/Tehran",
      "posix/America/Thule",
      "posix/Asia/Seoul",
      "posix/America/Miquelon",
      "America/Indiana/Petersburg",
      "Mexico/General",
      "Israel",
      "posix/America/Guadeloupe",
      "Europe/Riga",
      "America/Ojinaga",
      "posix/Australia/Darwin",
      "America/Jamaica",
      "Asia/Novokuznetsk",
      "Etc/GMT+0",
      "posix/Asia/Kamchatka",
      "posix/America/Guyana",
      "America/Belem",
      "America/Belize",
      "posix/MET",
      "posix/America/Moncton",
      "Australia/Adelaide",
      "posix/America/Argentina/La_Rioja",
      "SystemV/AST4ADT",
      "America/St_Kitts",
      "America/Eirunepe",
      "America/Nuuk",
      "posix/Etc/GMT-6",
      "posix/America/Indiana/Knox",
      "posix/Africa/Mogadishu",
      "Asia/Novosibirsk",
      "posix/Europe/Lisbon",
      "posix/Etc/Universal",
      "posix/Asia/Qatar",
      "posix/Africa/Libreville",
      "posix/Asia/Phnom_Penh",
      "America/Dawson",
      "Europe/Busingen",
      "posix/Asia/Hong_Kong",
      "America/Kentucky/Louisville",
      "Pacific/Niue",
      "Pacific/Truk",
      "posix/America/Paramaribo",
      "posix/Africa/Casablanca",
      "Australia/North",
      "posix/Africa/Juba",
      "posix/Antarctica/Troll",
      "posix/America/Port-au-Prince",
      "Pacific/Kiritimati",
      "posix/Asia/Brunei",
      "Pacific/Bougainville",
      "Africa/Asmara",
      "Europe/Chisinau",
      "America/Paramaribo",
      "America/Fortaleza",
      "posix/Asia/Damascus",
      "posix/America/Montevideo",
      "Australia/Lindeman",
      "America/Sitka",
      "America/Cayman",
      "posix/Pacific/Kwajalein",
      "posix/CST6CDT",
      "America/Atka",
      "America/La_Paz",
      "Africa/Lubumbashi",
      "posix/America/Grenada",
      "posix/Australia/Perth",
      "posix/Europe/Helsinki",
      "posix/Asia/Dhaka",
      "Factory",
      "posix/Etc/GMT-5",
      "America/Coral_Harbour",
      "America/Santa_Isabel",
      "posix/SystemV/YST9",
      "Pacific/Marquesas",
      "Europe/Prague",
      "Asia/Hebron",
      "posix/Asia/Vientiane",
      "America/Porto_Velho",
      "Australia/Perth",
      "posix/Africa/Mbabane",
      "posix/US/Michigan",
      "posix/Africa/Niamey",
      "posix/Chile/Continental",
      "America/Asuncion",
      "posix/America/Santarem",
      "Cuba",
      "posix/Australia/Broken_Hill",
      "posix/Asia/Macao",
      "Canada/Central",
      "Europe/Brussels",
      "Etc/UCT",
      "posix/Indian/Reunion",
      "Asia/Magadan",
      "America/Goose_Bay",
      "America/Argentina/Cordoba",
      "America/Bogota",
      "posix/Mexico/BajaNorte",
      "Asia/Qostanay",
      "posix/Pacific/Noumea",
      "posix/Asia/Chongqing",
      "Australia/Tasmania",
      "Atlantic/St_Helena",
      "Asia/Amman",
      "Europe/Bucharest",
      "posix/Indian/Mayotte",
      "posix/Pacific/Auckland",
      "US/Alaska",
      "posix/America/Martinique",
      "posix/Asia/Amman",
      "posix/America/North_Dakota/Beulah",
      "Africa/Monrovia",
      "posix/Australia/Queensland",
      "SystemV/EST5EDT",
      "America/Punta_Arenas",
      "Asia/Beirut",
      "posix/Pacific/Gambier",
      "America/Antigua",
      "Brazil/Acre",
      "posix/Pacific/Fakaofo",
      "Asia/Jerusalem",
      "Africa/Ouagadougou",
      "Etc/Greenwich",
      "Indian/Mahe",
      "posix/America/Araguaina",
      "posix/Pacific/Palau",
      "posix/Pacific/Funafuti",
      "UTC",
      "America/Argentina/Catamarca",
      "Asia/Ulan_Bator",
      "posix/Africa/Maseru",
      "Greenwich",
      "Australia/Sydney",
      "posix/Indian/Comoro",
      "Australia/Broken_Hill",
      "America/Cambridge_Bay",
      "Africa/Freetown",
      "Asia/Bangkok",
      "posix/Iran",
      "posix/America/Port_of_Spain",
      "posix/Atlantic/Faroe",
      "Asia/Aden",
      "posix/Pacific/Pago_Pago",
      "posix/Europe/Busingen",
      "America/Tijuana",
      "America/Louisville",
      "posix/Europe/Paris",
      "posix/Europe/Belgrade",
      "posix/Cuba",
      "posix/America/Argentina/Cordoba",
      "posix/America/Cambridge_Bay",
      "posix/America/Matamoros",
      "Etc/GMT",
      "posix/Australia/Currie",
      "posix/America/Detroit",
      "posix/America/Sitka",
      "posix/Pacific/Yap",
      "Etc/GMT-13",
      "posix/Canada/Newfoundland",
      "Europe/Astrakhan",
      "Europe/Nicosia",
      "posix/US/Pacific",
      "EST5EDT",
      "Asia/Tel_Aviv",
      "posix/Europe/Minsk",
      "Pacific/Easter",
      "posix/Etc/GMT+6",
      "posix/Africa/Abidjan",
      "posix/Europe/Zagreb",
      "Singapore",
      "posix/Iceland",
      "posix/SystemV/YST9YDT",
      "posix/America/New_York",
      "Africa/Khartoum",
      "posix/Canada/Central",
      "posix/Indian/Mahe",
      "Asia/Ulaanbaatar",
      "posix/Europe/Monaco",
      "posix/Europe/Isle_of_Man",
      "posix/Etc/GMT-14",
      "posix/Eire",
      "posix/Asia/Singapore",
      "posix/Asia/Aden",
      "Europe/Belfast",
      "America/St_Barthelemy",
      "Atlantic/Madeira",
      "Atlantic/Cape_Verde",
      "posix/Asia/Yangon",
      "posix/America/Thunder_Bay",
      "posix/Indian/Mauritius",
      "posix/Antarctica/Macquarie",
      "GB",
      "America/Thule",
      "posix/Pacific/Tarawa",
      "Europe/Tallinn",
      "America/Cuiaba",
      "posix/Universal",
      "posix/Asia/Hebron",
      "America/Buenos_Aires",
      "America/Virgin",
      "posix/Africa/Lubumbashi",
      "posix/GMT",
      "America/Winnipeg",
      "Africa/Lome",
      "posix/Australia/NSW",
      "Europe/Skopje",
      "America/Chicago",
      "posix/Pacific/Johnston",
      "Europe/Lisbon",
      "Asia/Istanbul",
      "Europe/San_Marino",
      "posix/America/Yakutat",
      "America/Fort_Wayne",
      "posix/Pacific/Niue",
      "Canada/Eastern",
      "America/Dawson_Creek",
      "posix/America/Dawson",
      "Africa/Casablanca",
      "Europe/Guernsey",
      "Asia/Harbin",
      "posix/Pacific/Chuuk",
      "posix/Canada/Mountain",
      "posix/Australia/North",
      "posix/UCT",
      "posix/Africa/Brazzaville",
      "Australia/Hobart",
      "posix/Africa/Asmera",
      "Pacific/Tahiti",
      "Europe/Vienna",
      "America/Miquelon",
      "posix/Pacific/Kiritimati",
      "posix/Asia/Yerevan",
      "America/Catamarca",
      "Africa/Ceuta",
      "Europe/London",
      "Atlantic/Faroe",
      "posix/Australia/Melbourne",
      "posix/Asia/Aqtobe",
      "posix/America/Tijuana",
      "America/Iqaluit",
      "America/Mendoza",
      "posix/Etc/UTC",
      "posix/America/Santa_Isabel",
      "Asia/Chita",
      "posix/Asia/Tomsk",
      "posix/America/Bogota",
      "SystemV/HST10",
      "Europe/Ulyanovsk",
      "posix/America/Dawson_Creek",
      "America/Scoresbysund",
      "Asia/Baghdad",
      "posix/America/Rainy_River",
      "posix/Asia/Qostanay",
      "posix/Africa/Lome",
      "posix/Australia/Sydney",
      "Europe/Moscow",
      "posix/Asia/Kabul",
      "Canada/Atlantic",
      "posix/Etc/GMT-8",
      "posix/Pacific/Efate",
      "posix/America/Argentina/Salta",
      "posix/Portugal",
      "GMT-0",
      "Australia/West",
      "Australia/Currie",
      "America/Bahia",
      "Canada/Yukon",
      "posix/Europe/Athens",
      "America/Denver",
      "posix/America/Blanc-Sablon",
      "Europe/Oslo",
      "posix/Canada/Atlantic",
      "Asia/Bishkek",
      "Pacific/Pago_Pago",
      "posix/Asia/Bishkek",
      "America/Kentucky/Monticello",
      "Etc/GMT-2",
      "posix/Africa/Blantyre",
      "Africa/Harare",
      "posix/Europe/Bucharest",
      "posix/America/Mexico_City",
      "posix/Poland",
      "Australia/Lord_Howe",
      "posix/America/Glace_Bay",
      "posix/Asia/Macau",
      "posix/Antarctica/Vostok",
      "posix/Antarctica/Davis",
      "Asia/Calcutta",
      "Pacific/Efate",
      "posix/Africa/Ceuta",
      "PST8PDT",
      "posix/America/Anguilla",
      "posix/Asia/Ulan_Bator",
      "posix/America/Argentina/Buenos_Aires",
      "US/Central",
      "America/Argentina/Rio_Gallegos",
      "US/Samoa",
      "posix/Etc/GMT+3",
      "Europe/Malta",
      "posix/Africa/Sao_Tome",
      "America/Dominica",
      "posix/America/Phoenix",
      "posix/America/Anchorage",
      "posix/Asia/Jakarta",
      "Asia/Aqtau",
      "America/Knox_IN",
      "posix/Asia/Irkutsk",
      "posix/America/El_Salvador",
      "Asia/Tbilisi",
      "Mexico/BajaNorte",
      "posix/Europe/Guernsey",
      "posix/Europe/Tallinn",
      "Asia/Yangon",
      "posix/Pacific/Wake",
      "posix/Atlantic/South_Georgia",
      "posix/America/Bahia",
      "posix/Australia/Tasmania",
      "posix/Africa/Kinshasa",
      "posix/Africa/Maputo",
      "America/New_York",
      "posix/Pacific/Apia",
      "SystemV/CST6CDT",
      "America/Boa_Vista",
      "America/Monterrey",
      "posix/Asia/Taipei",
      "posix/Pacific/Marquesas",
      "Pacific/Wake",
      "Pacific/Kwajalein",
      "posix/America/Campo_Grande",
      "posix/Europe/Rome",
      "Asia/Nicosia",
      "posix/Etc/UCT",
      "America/Santo_Domingo",
      "posix/America/Shiprock",
      "America/Jujuy",
      "posix/Asia/Katmandu",
      "posix/US/Arizona",
      "America/Martinique",
      "posix/Europe/Sarajevo",
      "US/Pacific",
      "America/St_Vincent",
      "Asia/Saigon",
      "posix/Asia/Atyrau",
      "posix/America/Indianapolis",
      "Pacific/Ponape",
      "America/Santarem",
      "posix/Australia/LHI",
      "posix/Asia/Omsk",
      "posix/America/Panama",
      "posix/Singapore",
      "Europe/Stockholm",
      "Asia/Choibalsan",
      "posix/Europe/Zurich",
      "Pacific/Norfolk",
      "posix/Asia/Ashgabat",
      "posix/America/Argentina/Mendoza",
      "America/Indianapolis",
      "posix/Etc/GMT-2",
      "SystemV/YST9",
      "Atlantic/Canary",
      "posix/CET",
      "Asia/Ust-Nera",
      "posix/Asia/Riyadh",
      "Portugal",
      "posix/Africa/Nairobi",
      "posix/Europe/Andorra",
      "Africa/Juba",
      "posix/SystemV/CST6",
      "posix/America/Punta_Arenas",
      "posix/America/Winnipeg",
      "posix/Africa/Asmara",
      "Zulu",
      "posix/US/Central",
      "Africa/Porto-Novo",
      "posix/Africa/Kigali",
      "Europe/Mariehamn",
      "posix/America/Hermosillo",
      "Antarctica/South_Pole",
      "posix/Asia/Beirut",
      "Indian/Cocos",
      "posix/Atlantic/Faeroe",
      "posix/Africa/Djibouti",
      "posix/Africa/El_Aaiun",
      "posix/GB",
      "Australia/Darwin",
      "Asia/Famagusta",
      "America/Juneau",
      "posix/Asia/Samarkand",
      "America/St_Johns",
      "Iceland",
      "Europe/Sarajevo",
      "posix/SystemV/MST7",
      "America/Curacao",
      "Pacific/Chuuk",
      "Asia/Ujung_Pandang",
      "America/Costa_Rica",
      "Pacific/Saipan",
      "posix/America/Managua",
      "Asia/Pontianak",
      "Asia/Irkutsk",
      "posix/America/Kentucky/Louisville",
      "Asia/Vientiane",
      "Pacific/Nauru",
      "posix/America/Santo_Domingo",
      "Etc/GMT+5",
      "Indian/Christmas",
      "Africa/Maseru",
      "posix/Mexico/General",
      "posix/Pacific/Tahiti",
      "posix/Africa/Douala",
      "posix/Atlantic/Stanley",
      "posix/Asia/Famagusta",
      "posix/America/Chihuahua",
      "posix/Africa/Bangui",
      "Africa/Brazzaville",
      "Asia/Macao",
      "posix/Etc/GMT+8",
      "America/El_Salvador",
      "posix/Asia/Calcutta",
      "posix/America/North_Dakota/New_Salem",
      "posix/Indian/Maldives",
      "posix/Libya",
      "Pacific/Funafuti",
      "posix/GMT-0",
      "SystemV/CST6",
      "posix/Australia/ACT",
      "posix/Etc/Zulu",
      "posix/America/Argentina/San_Juan",
      "Pacific/Pohnpei",
      "posix/Europe/Copenhagen",
      "posix/Antarctica/South_Pole",
      "America/Chihuahua",
      "posix/America/Mendoza",
      "posix/Asia/Karachi",
      "Universal",
      "posix/America/Recife",
      "Africa/Kigali",
      "posix/America/Adak",
      "posixrules",
      "posix/America/Rio_Branco",
      "posix/Africa/Cairo",
      "posix/Asia/Dushanbe",
      "Africa/Kampala",
      "posix/GMT+0",
      "SystemV/AST4",
      "America/Barbados",
      "posix/Pacific/Pohnpei",
      "America/Indiana/Marengo",
      "posix/America/Puerto_Rico",
      "Africa/Asmera",
      "posix/Europe/Belfast",
      "Africa/Luanda",
      "MET",
      "posix/Pacific/Kanton",
      "posix/America/Belem",
      "America/Marigot",
      "posix/Australia/West",
      "posix/America/Montserrat",
      "posix/America/Atikokan",
      "posix/Asia/Khandyga",
      "posix/Pacific/Chatham",
      "Etc/GMT-4",
      "posix/US/Mountain",
      "Asia/Karachi",
      "posix/SystemV/CST6CDT",
      "posix/America/Eirunepe",
      "America/Tegucigalpa",
      "Europe/Ljubljana",
      "posix/America/Havana",
      "posix/Etc/GMT0",
      "Europe/Kaliningrad",
      "Japan",
      "posix/Asia/Baku",
      "posix/Brazil/DeNoronha",
      "Etc/GMT+4",
      "posix/Asia/Magadan",
      "posix/SystemV/AST4",
      "posix/SystemV/AST4ADT",
      "America/Matamoros",
      "posix/Antarctica/Palmer",
      "Australia/Queensland",
      "Africa/Libreville",
      "posix/America/Barbados",
      "Asia/Damascus",
      "posix/ROK",
      "posix/Europe/Madrid",
      "posix/Europe/Kiev",
      "America/Shiprock",
      "Asia/Phnom_Penh",
      "Pacific/Honolulu",
      "posix/Etc/GMT-9",
      "Egypt",
      "posix/Europe/Vatican",
      "Africa/Tunis",
      "GB-Eire",
      "America/Cordoba",
      "posix/Europe/Istanbul",
      "America/Mazatlan",
      "posix/Pacific/Enderbury",
      "Pacific/Samoa",
      "Brazil/West",
      "posix/Asia/Ulaanbaatar",
      "Europe/Madrid",
      "posix/Asia/Thimphu",
      "posix/America/Monterrey",
      "America/Argentina/San_Luis",
      "America/Nassau",
      "posix/America/Porto_Acre",
      "America/Anchorage",
      "America/Grenada",
      "posix/Etc/GMT+0",
      "Asia/Sakhalin",
      "posix/Pacific/Samoa",
      "Europe/Uzhgorod",
      "Brazil/DeNoronha",
      "America/Vancouver",
      "posix/Indian/Christmas",
      "Africa/Mbabane",
      "posix/Africa/Dakar",
      "posix/America/Cuiaba",
      "posix/America/Guatemala",
      "posix/Jamaica",
      "posix/Indian/Cocos",
      "posix/Europe/Saratov",
      "posix/Asia/Kashgar",
      "Pacific/Enderbury",
      "posix/SystemV/EST5EDT",
      "posix/America/Iqaluit",
      "America/Los_Angeles",
      "CST6CDT",
      "Europe/Athens",
      "posix/Europe/Vilnius",
      "Asia/Yakutsk",
      "posix/Asia/Tokyo",
      "posix/Etc/GMT+2",
      "Africa/Malabo",
      "posix/Europe/Simferopol",
      "UCT",
      "posix/America/Rankin_Inlet",
      "posix/Pacific/Guadalcanal",
      "posix/Europe/Warsaw",
      "posix/America/Pangnirtung",
      "Etc/GMT-14",
      "Kwajalein",
      "Australia/Eucla",
      "America/Araguaina",
      "posix/Asia/Aqtau",
      "Asia/Kamchatka",
      "posix/US/Indiana-Starke",
      "posix/Atlantic/Azores",
      "America/Panama",
      "Asia/Qyzylorda",
      "posix/US/Samoa",
      "posix/Etc/GMT+10",
      "posix/Etc/GMT-10",
      "posix/Etc/GMT+1",
      "posix/Asia/Muscat",
      "posix/Pacific/Port_Moresby",
      "America/Swift_Current",
      "America/Rankin_Inlet",
      "Europe/Zurich",
      "Europe/Vilnius",
      "localtime",
      "Antarctica/Davis",
      "posix/Africa/Malabo",
      "posix/Etc/GMT-1",
      "Pacific/Galapagos",
      "Africa/Tripoli",
      "posix/America/Antigua",
      "Africa/Bujumbura",
      "posix/Australia/Brisbane",
      "Pacific/Apia",
      "America/St_Thomas",
      "posix/America/Mazatlan",
      "Europe/Dublin",
      "Canada/Saskatchewan",
      "Europe/Istanbul",
      "posix/Australia/Yancowinna",
      "posix/America/Argentina/Ushuaia",
      "posix/Asia/Pontianak",
      "Europe/Volgograd",
      "Asia/Dubai",
      "Europe/Rome",
      "America/Detroit",
      "America/Nipigon",
      "Asia/Samarkand",
      "Europe/Warsaw",
      "posix/Canada/Saskatchewan",
      "posix/America/Grand_Turk",
      "posix/America/Argentina/ComodRivadavia",
      "posix/Europe/Ljubljana",
      "posix/America/Knox_IN",
      "posix/America/Resolute",
      "Asia/Kuwait",
      "posix/W-SU",
      "America/Maceio",
      "Africa/Niamey",
      "posix/Europe/Kaliningrad",
      "posix/HST",
      "posix/Indian/Kerguelen",
      "posix/Africa/Tripoli",
      "Etc/GMT-3",
      "posix/Etc/Greenwich",
      "Europe/Saratov",
      "Asia/Hovd",
      "America/Danmarkshavn",
      "posix/America/Boise",
      "posix/Asia/Urumqi",
      "Chile/EasterIsland",
      "America/Inuvik",
      "posix/America/Whitehorse",
      "Africa/Banjul",
      "posix/Egypt",
      "America/Whitehorse",
      "Africa/Johannesburg",
      "posix/Pacific/Tongatapu",
      "posix/Pacific/Guam",
      "posix/Europe/Astrakhan",
      "posix/Canada/Eastern",
      "posix/Australia/South",
      "Pacific/Tongatapu",
      "posix/Asia/Thimbu",
      "Europe/Gibraltar",
      "posix/America/Indiana/Vevay",
      "Etc/GMT-10",
      "posix/Brazil/West",
      "posix/Asia/Tehran",
      "posix/Pacific/Galapagos",
      "Asia/Kolkata",
      "Asia/Pyongyang",
      "posix/America/Dominica",
      "Asia/Bahrain",
      "Africa/Conakry",
      "Europe/Tiraspol",
      "posix/Africa/Nouakchott",
      "America/Bahia_Banderas",
      "posix/Asia/Dacca",
      "posix/Africa/Ndjamena",
      "Europe/Bratislava",
      "Etc/GMT-9",
      "posix/Etc/GMT-7",
      "posix/Etc/GMT+7",
      "America/Porto_Acre",
      "Australia/Canberra",
      "America/Fort_Nelson",
      "Atlantic/Azores",
      "Africa/Bissau",
      "posix/America/Lower_Princes",
      "posix/Asia/Ho_Chi_Minh",
      "Etc/GMT-12",
      "Europe/Budapest",
      "America/Yakutat",
      "posix/Brazil/East",
      "Etc/GMT-5",
      "Antarctica/Troll",
      "MST7MDT",
      "posix/America/North_Dakota/Center",
      "Asia/Yekaterinburg",
      "posix/Canada/Pacific",
      "posix/Antarctica/McMurdo",
      "posix/Asia/Jerusalem",
      "Africa/Sao_Tome",
      "SystemV/YST9YDT",
      "posix/GMT0",
      "Australia/Brisbane",
      "Antarctica/Macquarie",
      "Asia/Hong_Kong",
      "posix/Pacific/Ponape",
      "Etc/GMT+9",
      "posix/Pacific/Fiji",
      "PRC",
      "posix/SystemV/MST7MDT",
      "America/Rio_Branco",
      "posix/US/Eastern",
      "posix/America/Halifax",
      "posix/Africa/Banjul",
      "US/East-Indiana",
      "America/Glace_Bay",
      "posix/Africa/Lagos",
      "Asia/Dacca",
      "posix/America/Louisville",
      "posix/America/Metlakatla",
      "Asia/Qatar",
      "posix/America/Edmonton",
      "Asia/Thimphu",
      "posix/Asia/Vladivostok",
      "SystemV/PST8",
      "Chile/Continental",
      "posix/EST",
      "posix/Hongkong",
      "Asia/Vladivostok",
      "Asia/Chongqing",
      "America/Indiana/Vevay",
      "posix/ROC",
      "Pacific/Wallis",
      "Asia/Shanghai",
      "America/St_Lucia",
      "posix/Chile/EasterIsland",
      "Asia/Katmandu",
      "Asia/Jayapura",
      "posix/Asia/Kuwait",
      "US/Aleutian",
      "Etc/UTC",
      "America/Managua",
      "posix/America/Indiana/Marengo",
      "posix/America/Cayman",
      "posix/Pacific/Kosrae",
      "Asia/Baku",
      "posix/Arctic/Longyearbyen",
      "Pacific/Kanton",
      "Europe/Amsterdam",
      "posix/Africa/Accra",
      "posix/US/East-Indiana",
      "posix/Atlantic/Cape_Verde",
      "posix/Asia/Ashkhabad",
      "Australia/ACT",
      "Asia/Ashgabat",
      "Africa/Algiers",
      "posix/Etc/GMT+4",
      "posix/Etc/GMT-4",
      "posix/Etc/GMT+5",
      "Africa/Gaborone",
      "posix/Europe/Stockholm",
      "Africa/Bamako",
      "Europe/Minsk",
      "posix/Etc/GMT+9",
      "America/Hermosillo",
      "posix/Asia/Almaty",
      "posix/MST7MDT",
      "America/Indiana/Winamac",
      "Asia/Ashkhabad",
      "Etc/GMT+10",
      "Europe/Berlin",
      "posix/America/Yellowknife",
      "America/Montreal",
      "posix/Asia/Krasnoyarsk",
      "Europe/Tirane",
      "posix/Europe/Brussels",
      "America/Argentina/Jujuy",
      "posix/Europe/Gibraltar",
      "Canada/Pacific",
      "posix/Asia/Barnaul",
      "posix/America/St_Barthelemy",
      "posix/Asia/Pyongyang",
      "posix/America/Juneau",
      "posix/Europe/Podgorica",
      "America/Nome",
      "posix/America/Atka",
      "Atlantic/Stanley",
      "Etc/GMT-8",
      "posix/Antarctica/Casey",
      "posix/Pacific/Saipan",
      "Africa/Abidjan",
      "posix/NZ-CHAT",
      "posix/Africa/Porto-Novo",
      "posix/Australia/Adelaide",
      "posix/Asia/Nicosia",
      "posix/America/Argentina/Rio_Gallegos",
      "Asia/Colombo",
      "posix/Asia/Harbin",
      "posix/Pacific/Pitcairn",
      "America/Montevideo",
      "Asia/Brunei",
      "America/Blanc-Sablon",
      "Asia/Kathmandu",
      "posix/Etc/GMT-12",
      "posix/America/Danmarkshavn",
      "US/Eastern",
      "posix/Asia/Novokuznetsk",
      "Asia/Barnaul",
      "America/Argentina/La_Rioja",
      "Asia/Ho_Chi_Minh",
      "posix/Atlantic/Bermuda",
      "Asia/Dhaka",
      "Africa/Cairo",
      "Australia/Melbourne",
      "Etc/GMT+3",
      "Pacific/Tarawa",
      "posix/Indian/Antananarivo",
      "posix/Europe/Amsterdam",
      "Africa/Accra",
      "posix/Europe/Jersey",
      "posix/Asia/Gaza",
      "America/North_Dakota/Beulah",
      "posix/Asia/Kuala_Lumpur",
      "America/Campo_Grande",
      "posix/Mexico/BajaSur",
      "posix/America/Indiana/Petersburg",
      "posix/America/Swift_Current",
      "Australia/LHI",
      "posix/America/Fort_Nelson",
      "HST",
      "America/Pangnirtung",
      "America/Argentina/Buenos_Aires",
      "posix/Asia/Jayapura",
      "Africa/Blantyre",
      "posix/Asia/Tel_Aviv",
      "US/Arizona",
      "Europe/Vatican",
      "posix/Europe/Vienna",
      "Europe/Vaduz",
      "posix/SystemV/HST10",
      "posix/Etc/GMT-3",
      "posix/Asia/Kolkata",
      "Pacific/Midway",
      "Indian/Chagos",
      "posix/US/Alaska",
      "posix/Africa/Timbuktu",
      "GMT",
      "Africa/Windhoek",
      "posix/Africa/Tunis",
      "NZ",
      "posix/Antarctica/Syowa",
      "SystemV/MST7MDT",
      "posix/America/Scoresbysund",
      "America/Guatemala",
      "posix/America/Asuncion",
      "America/Argentina/Salta",
      "posix/Asia/Istanbul",
      "America/Halifax",
      "posix/Asia/Sakhalin",
      "Indian/Kerguelen",
      "ROC",
      "Atlantic/Jan_Mayen",
      "posix/Asia/Oral",
      "Indian/Comoro",
      "posix/Europe/Chisinau",
      "posix/PRC",
      "Pacific/Rarotonga",
      "GMT0",
      "Europe/Samara",
      "posix/Asia/Novosibirsk",
      "posix/Europe/Ulyanovsk",
      "Antarctica/McMurdo",
      "Etc/GMT-7",
      "posix/Africa/Lusaka",
      "posix/America/St_Thomas",
      "posix/America/Buenos_Aires",
      "posix/America/Argentina/San_Luis",
      "America/Ensenada",
      "posix/Greenwich",
      "Europe/Copenhagen",
      "posix/America/Cancun",
      "posix/GB-Eire",
      "Australia/Yancowinna",
      "posix/Europe/Prague",
      "posix/America/Merida",
      "Europe/Kirov",
      "posix/Pacific/Bougainville",
      "posix/America/Maceio",
      "Atlantic/South_Georgia",
      "Asia/Dili",
      "America/Menominee",
      "Etc/GMT+8",
      "posix/Africa/Algiers",
      "Africa/Dakar",
      "posix/Asia/Makassar",
      "Antarctica/Vostok",
      "posix/Africa/Addis_Ababa",
      "Antarctica/Casey",
      "posix/America/St_Lucia",
      "Asia/Atyrau",
      "Africa/Timbuktu",
      "posix/Israel",
      "America/Indiana/Indianapolis",
      "America/Guyana",
      "posix/Asia/Tbilisi",
      "Africa/Maputo",
      "posix/America/Godthab",
      "posix/Asia/Saigon",
      "America/Thunder_Bay",
      "Iran",
      "America/Port-au-Prince",
      "posix/America/Toronto",
      "posix/Africa/Ouagadougou",
      "posix/America/Denver",
      "Asia/Kashgar",
      "posix/America/Ensenada",
      "Africa/Bangui",
      "WET",
      "Etc/GMT-11",
      "posix/Asia/Anadyr",
      "Navajo",
      "posix/Antarctica/Mawson",
      "Africa/Douala",
      "posix/America/Sao_Paulo",
      "Antarctica/Mawson",
      "America/Recife",
      "posix/Asia/Shanghai",
      "EST",
      "posix/NZ",
      "W-SU",
      "Europe/Jersey",
      "posix/Asia/Kuching",
      "posix/America/Tegucigalpa",
      "posix/Atlantic/Canary",
      "America/Rainy_River",
      "posix/Africa/Khartoum",
      "MST",
      "posix/Asia/Manila",
      "Indian/Reunion",
      "posix/Australia/Victoria",
      "Africa/Djibouti",
      "posix/America/St_Kitts",
      "posix/Europe/Tiraspol",
      "Europe/Paris",
      "posix/US/Hawaii",
      "Etc/GMT+6",
      "US/Mountain",
      "Asia/Dushanbe",
      "America/Regina",
      "posix/Asia/Rangoon",
      "posix/Africa/Kampala",
      "posix/Asia/Bahrain",
      "posix/America/Indiana/Vincennes",
      "posix/Africa/Harare",
      "Etc/GMT+2",
      "posix/Pacific/Norfolk",
      "America/Caracas",
      "Africa/Lagos",
      "US/Indiana-Starke",
      "Asia/Chungking",
      "posix/Europe/Vaduz",
      "posix/Asia/Ujung_Pandang",
      "posix/America/Porto_Velho",
      "posix/Pacific/Honolulu",
      "posix/Navajo",
      "posix/America/Kralendijk",
      "posix/Etc/GMT+12",
      "Canada/Newfoundland",
      "America/Indiana/Knox",
      "posix/Etc/GMT-13",
      "Asia/Kuching",
      "posix/Africa/Windhoek",
      "Indian/Mayotte",
      "posix/Indian/Chagos",
      "posix/Europe/Berlin",
      "posix/America/Indiana/Tell_City",
      "America/Argentina/San_Juan",
      "posix/SystemV/PST8",
      "America/Merida",
      "posix/Australia/Hobart",
      "Europe/Zaporozhye",
      "America/Cancun",
      "Mexico/BajaSur",
      "America/Guayaquil",
      "Europe/Belgrade",
      "America/Noronha",
      "posix/Europe/Luxembourg",
      "posix/Europe/Tirane",
      "Europe/Andorra",
      "posix/America/Caracas",
      "America/Lower_Princes",
      "posix/America/Los_Angeles",
      "posix/America/Manaus",
      "Asia/Krasnoyarsk",
      "posix/America/Costa_Rica",
      "Africa/Dar_es_Salaam",
      "Antarctica/Palmer",
      "posix/Europe/Malta",
      "America/Argentina/Mendoza",
      "posix/Asia/Kathmandu",
      "posix/America/Regina",
      "posix/America/Belize",
      "America/Creston",
      "posix/Europe/Bratislava",
      "posix/Atlantic/St_Helena",
      "Asia/Manila",
      "posix/America/Argentina/Catamarca",
      "America/Argentina/Ushuaia",
      "America/Adak",
      "posix/America/Boa_Vista",
      "posix/Brazil/Acre",
      "posix/America/St_Vincent",
      "posix/Africa/Johannesburg",
      "Etc/Zulu",
      "posix/Australia/Eucla",
      "posix/America/Montreal",
      "posix/Europe/Budapest",
      "America/Metlakatla",
      "posix/Africa/Freetown",
      "posix/Asia/Choibalsan",
      "posix/America/Lima",
      "posix/Canada/Yukon",
      "Asia/Muscat",
      "America/Argentina/Tucuman",
      "posix/America/Coral_Harbour",
      "Europe/Zagreb",
      "posix/America/Argentina/Tucuman",
      "SystemV/EST5",
      "Etc/GMT-0",
      "Atlantic/Faeroe",
      "posix/America/Indiana/Winamac",
      "Asia/Urumqi",
      "posix/Africa/Bujumbura",
      "America/Santiago",
      "America/Kralendijk",
      "America/Rosario",
      "posix/Australia/Lord_Howe",
      "Pacific/Auckland",
      "posix/America/Nome",
      "Pacific/Kosrae",
      "Africa/Nairobi",
      "Africa/Kinshasa",
      "posix/Asia/Dili",
      "posix/Africa/Gaborone",
      "posix/US/Aleutian",
      "Libya",
      "GMT+0",
      "Etc/GMT+7",
      "posix/Factory",
      "posix/Europe/Samara",
      "posix/America/Fort_Wayne",
      "Asia/Macau",
      "Pacific/Johnston",
      "Africa/Ndjamena",
      "posix/America/Nassau",
      "posix/Europe/London",
      "Turkey",
      "Asia/Tomsk",
      "posix/Asia/Dubai",
      "posix/Asia/Tashkent",
      "posix/Asia/Bangkok",
      "Europe/Monaco",
      "Brazil/East",
      "posix/America/Menominee",
      "US/Michigan",
      "posix/Asia/Yekaterinburg",
      "Europe/Luxembourg",
      "posix/Pacific/Nauru",
      "posix/America/Curacao",
      "CET",
      "Pacific/Majuro",
      "Asia/Riyadh",
      "posix/America/Nuuk",
      "EET",
      "Asia/Oral",
      "posix/PST8PDT",
      "posix/Atlantic/Madeira",
      "America/Aruba",
      "posix/Asia/Chita",
      "Etc/GMT+12",
      "America/Guadeloupe",
      "posix/America/Argentina/Jujuy",
      "posix/Antarctica/DumontDUrville",
      "posix/Etc/GMT+11",
      "Pacific/Fakaofo",
      "posix/Asia/Srednekolymsk",
      "posix/Asia/Chungking",
      "posix/Africa/Bamako",
      "SystemV/MST7",
      "posix/America/Guayaquil",
      "posix/Australia/Canberra",
      "Pacific/Fiji",
      "posix/Europe/Mariehamn",
      "posix/Pacific/Midway",
      "posix/Asia/Qyzylorda",
      "posix/America/Jujuy",
      "Jamaica",
      "Indian/Antananarivo",
      "Asia/Anadyr",
      "posix/America/Indiana/Indianapolis",
      "Africa/El_Aaiun",
      "posix/Asia/Baghdad",
      "Asia/Gaza",
      "Asia/Taipei",
      "posix/America/Marigot",
      "America/Edmonton",
      "US/Hawaii",
      "Pacific/Guam",
      "America/Moncton",
      "posix/Pacific/Rarotonga",
      "posix/Europe/Skopje",
      "Hongkong",
      "posix/Europe/Zaporozhye",
      "posix/Europe/Nicosia",
      "America/Indiana/Tell_City",
      "posix/Asia/Ust-Nera",
      "Asia/Srednekolymsk",
      "Asia/Tokyo",
      "Arctic/Longyearbyen",
      "America/Anguilla",
      "posix/Europe/Sofia",
      "America/Boise",
      "posix/America/Ojinaga",
      "Asia/Seoul",
      "posix/Antarctica/Rothera",
      "Africa/Mogadishu",
      "posix/Europe/Kirov"
    ],
    "abbrev": [
      "WITA",
      "+0630",
      "MDT",
      "SAST",
      "WIT",
      "ADT",
      "CAT",
      "NDT",
      "+14",
      "CEST",
      "PDT",
      "-01",
      "UTC",
      "-03",
      "+11",
      "ChST",
      "PST",
      "+03",
      "AWST",
      "+1030",
      "BST",
      "+0845",
      "MSK",
      "PKT",
      "+10",
      "-0930",
      "WAT",
      "+0430",
      "+0530",
      "+12",
      "HDT",
      "-11",
      "EDT",
      "IST",
      "-07",
      "IDT",
      "MEST",
      "AST",
      "+06",
      "EAT",
      "EEST",
      "+0545",
      "-09",
      "ACST",
      "JST",
      "AEST",
      "CST",
      "+05",
      "+07",
      "+04",
      "-02",
      "-04",
      "AKDT",
      "-10",
      "HKT",
      "HST",
      "GMT",
      "CDT",
      "-00",
      "NZST",
      "+01",
      "-12",
      "EST",
      "-08",
      "MST",
      "SST",
      "-05",
      "-06",
      "+08",
      "WIB",
      "+13",
      "+00",
      "+1245",
      "CET",
      "EET",
      "+02",
      "KST",
      "+09",
      "WEST"
    ]
  },
  "pg_stat_user_functions": {
    "schemaname": [],
    "funcname": []
  },
  "pg_publication_rel": {},
  "role_usage_grants": {},
  "referential_constraints": {},
  "pg_stats_ext": {
    "statistics_owner": [],
    "schemaname": [],
    "tablename": [],
    "statistics_name": [],
    "statistics_schemaname": []
  },
  "role_udt_grants": {},
  "user_mapping_options": {},
  "role_table_grants": {},
  "pg_depend": {},
  "pg_stat_progress_create_index": {
    "phase": [],
    "command": [],
    "datname": []
  },
  "pg_timezone_abbrevs": {
    "abbrev": [
      "DDUT",
      "AZOST",
      "EGST",
      "GFT",
      "SADT",
      "FKST",
      "MDT",
      "TJT",
      "AESST",
      "LIGT",
      "CKT",
      "SAST",
      "CCT",
      "YAKST",
      "ADT",
      "CETDST",
      "MESZ",
      "ZULU",
      "RET",
      "GEST",
      "NDT",
      "AKST",
      "YAKT",
      "CEST",
      "GET",
      "MUST",
      "PDT",
      "NST",
      "WFT",
      "METDST",
      "AWSST",
      "KGT",
      "VUT",
      "ARST",
      "MAGT",
      "UTC",
      "MPT",
      "WAKT",
      "LHDT",
      "ACSST",
      "LINT",
      "TMT",
      "CLST",
      "NPT",
      "GALT",
      "PST",
      "PGT",
      "OMST",
      "MSD",
      "GILT",
      "SCT",
      "ULAT",
      "PHOT",
      "EETDST",
      "BRT",
      "AWST",
      "ULAST",
      "BNT",
      "BST",
      "PWT",
      "KOST",
      "CHAST",
      "Z",
      "MSK",
      "ANAST",
      "PKT",
      "MEZ",
      "WGST",
      "WAT",
      "WGT",
      "NUT",
      "OMSST",
      "UYST",
      "EDT",
      "PMDT",
      "CHADT",
      "IST",
      "MET",
      "BDT",
      "MMT",
      "LKT",
      "AMT",
      "IDT",
      "MEST",
      "ART",
      "AST",
      "ACDT",
      "PKST",
      "ICT",
      "CADT",
      "EAT",
      "EEST",
      "PONT",
      "ACT",
      "MUT",
      "KRAST",
      "PYST",
      "NZDT",
      "SGT",
      "KRAT",
      "IOT",
      "IRKST",
      "UCT",
      "IRKT",
      "BRA",
      "TOT",
      "VET",
      "ACST",
      "AEDT",
      "JST",
      "AEST",
      "NZT",
      "AZST",
      "BTT",
      "CST",
      "CXT",
      "PETT",
      "FET",
      "EGT",
      "BORT",
      "PETST",
      "FJT",
      "XJT",
      "AZOT",
      "ALMST",
      "FNT",
      "UT",
      "YEKST",
      "EAST",
      "VLAT",
      "ANAT",
      "WAST",
      "DAVT",
      "JAYT",
      "PHT",
      "CLT",
      "TRUT",
      "AKDT",
      "AMST",
      "TVT",
      "ALMT",
      "HKT",
      "EASST",
      "NFT",
      "TAHT",
      "HST",
      "WETDST",
      "FNST",
      "WDT",
      "FKT",
      "UZT",
      "GMT",
      "CHUT",
      "TFT",
      "CDT",
      "YEKT",
      "BDST",
      "NZST",
      "COT",
      "UZST",
      "PMST",
      "IRT",
      "ACWST",
      "KDT",
      "MVT",
      "MAWT",
      "AZT",
      "PET",
      "WADT",
      "WET",
      "NOVT",
      "EST",
      "BRST",
      "GYT",
      "PYT",
      "MST",
      "LHST",
      "MHT",
      "VOLT",
      "NOVST",
      "TKT",
      "AFT",
      "FJST",
      "CAST",
      "GAMT",
      "UYT",
      "KGST",
      "MART",
      "VLAST",
      "BOT",
      "CET",
      "EET",
      "KST",
      "MAGST",
      "YAPT",
      "MYT"
    ]
  },
  "pg_publication_tables": {
    "schemaname": [],
    "pubname": [],
    "tablename": []
  },
  "sql_parts": {},
  "pg_seclabels": {
    "label": [],
    "objname": [],
    "provider": [],
    "objtype": []
  },
  "pg_stat_sys_indexes": {
    "relname": [
      "pg_pltemplate",
      "pg_toast_13280",
      "pg_toast_13285",
      "pg_namespace",
      "pg_toast_2620",
      "pg_toast_2609",
      "pg_amproc",
      "pg_attribute",
      "pg_toast_2964",
      "pg_toast_3600",
      "pg_range",
      "pg_init_privs",
      "pg_toast_3466",
      "pg_toast_2606",
      "pg_language",
      "pg_enum",
      "pg_statistic_ext",
      "pg_sequence",
      "pg_ts_parser",
      "pg_toast_16387",
      "pg_subscription_rel",
      "pg_toast_13270",
      "pg_toast_1418",
      "pg_foreign_server",
      "pg_toast_1136",
      "pg_toast_2619",
      "pg_default_acl",
      "pg_largeobject",
      "pg_toast_826",
      "pg_toast_3596",
      "pg_toast_3079",
      "pg_toast_2396",
      "pg_toast_6100",
      "pg_transform",
      "pg_toast_6000",
      "pg_ts_dict",
      "pg_collation",
      "pg_extension",
      "pg_toast_2604",
      "pg_index",
      "pg_toast_3256",
      "pg_toast_2612",
      "pg_toast_3118",
      "pg_toast_3350",
      "pg_foreign_table",
      "pg_toast_2600",
      "pg_seclabel",
      "pg_largeobject_metadata",
      "pg_shseclabel",
      "pg_amop",
      "pg_database",
      "pg_cast",
      "pg_toast_1417",
      "pg_trigger",
      "pg_depend",
      "pg_conversion",
      "pg_operator",
      "pg_am",
      "pg_replication_origin",
      "pg_rewrite",
      "pg_subscription",
      "pg_toast_3429",
      "pg_db_role_setting",
      "pg_ts_config_map",
      "pg_publication_rel",
      "pg_foreign_data_wrapper",
      "pg_statistic_ext_data",
      "pg_type",
      "pg_class",
      "pg_toast_1260",
      "pg_auth_members",
      "pg_proc",
      "pg_toast_1213",
      "pg_authid",
      "pg_toast_1262",
      "pg_user_mapping",
      "pg_publication",
      "pg_toast_2328",
      "pg_opfamily",
      "pg_toast_3381",
      "pg_toast_13265",
      "pg_toast_2618",
      "pg_toast_1247",
      "pg_toast_13275",
      "pg_shdescription",
      "pg_partitioned_table",
      "pg_toast_2615",
      "pg_aggregate",
      "pg_attrdef",
      "pg_description",
      "pg_toast_3456",
      "pg_toast_13290",
      "pg_tablespace",
      "pg_event_trigger",
      "pg_shdepend",
      "pg_toast_13260",
      "pg_statistic",
      "pg_toast_1255",
      "pg_toast_3592",
      "pg_opclass",
      "pg_toast_3394",
      "pg_inherits",
      "pg_constraint",
      "pg_ts_config",
      "pg_policy",
      "pg_ts_template"
    ],
    "schemaname": [
      "pg_catalog",
      "pg_toast"
    ],
    "indexrelname": [
      "pg_constraint_oid_index",
      "pg_toast_2609_index",
      "pg_rewrite_oid_index",
      "pg_toast_13260_index",
      "pg_index_indexrelid_index",
      "pg_class_relname_nsp_index",
      "pg_amop_opr_fam_index",
      "pg_toast_3592_index",
      "pg_toast_13290_index",
      "pg_foreign_data_wrapper_oid_index",
      "pg_aggregate_fnoid_index",
      "pg_toast_1262_index",
      "pg_amproc_fam_proc_index",
      "pg_opclass_am_name_nsp_index",
      "pg_constraint_conparentid_index",
      "pg_toast_826_index",
      "pg_seclabel_object_index",
      "pg_trigger_tgconstraint_index",
      "pg_toast_1136_index",
      "pg_opclass_oid_index",
      "pg_largeobject_metadata_oid_index",
      "pg_foreign_table_relid_index",
      "pg_transform_type_lang_index",
      "pg_operator_oprname_l_r_n_index",
      "pg_enum_oid_index",
      "pg_description_o_c_o_index",
      "pg_class_oid_index",
      "pg_attrdef_oid_index",
      "pg_depend_depender_index",
      "pg_trigger_tgrelid_tgname_index",
      "pg_toast_13285_index",
      "pg_toast_2619_index",
      "pg_toast_3381_index",
      "pg_publication_rel_oid_index",
      "pg_ts_parser_oid_index",
      "pg_pltemplate_name_index",
      "pg_toast_3118_index",
      "pg_am_name_index",
      "pg_partitioned_table_partrelid_index",
      "pg_index_indrelid_index",
      "pg_toast_1417_index",
      "pg_ts_dict_oid_index",
      "pg_sequence_seqrelid_index",
      "pg_publication_oid_index",
      "pg_toast_1418_index",
      "pg_authid_oid_index",
      "pg_language_oid_index",
      "pg_collation_oid_index",
      "pg_ts_parser_prsname_index",
      "pg_toast_13270_index",
      "pg_user_mapping_user_server_index",
      "pg_auth_members_member_role_index",
      "pg_toast_6000_index",
      "pg_toast_3600_index",
      "pg_subscription_oid_index",
      "pg_trigger_oid_index",
      "pg_conversion_name_nsp_index",
      "pg_opfamily_oid_index",
      "pg_toast_3394_index",
      "pg_cast_oid_index",
      "pg_conversion_oid_index",
      "pg_operator_oid_index",
      "pg_default_acl_oid_index",
      "pg_tablespace_oid_index",
      "pg_toast_13265_index",
      "pg_extension_oid_index",
      "pg_toast_6100_index",
      "pg_toast_1260_index",
      "pg_toast_1247_index",
      "pg_toast_2615_index",
      "pg_ts_config_oid_index",
      "pg_init_privs_o_c_o_index",
      "pg_ts_dict_dictname_index",
      "pg_toast_2612_index",
      "pg_publication_pubname_index",
      "pg_shdescription_o_c_index",
      "pg_toast_13280_index",
      "pg_toast_16387_index",
      "pg_statistic_ext_oid_index",
      "pg_toast_3079_index",
      "pg_publication_rel_prrelid_prpubid_index",
      "pg_policy_oid_index",
      "pg_toast_2396_index",
      "pg_subscription_subname_index",
      "pg_db_role_setting_databaseid_rol_index",
      "pg_extension_name_index",
      "pg_ts_template_tmplname_index",
      "pg_opfamily_am_name_nsp_index",
      "pg_depend_reference_index",
      "pg_class_tblspc_relfilenode_index",
      "pg_inherits_relid_seqno_index",
      "pg_conversion_default_index",
      "pg_constraint_conname_nsp_index",
      "pg_statistic_relid_att_inh_index",
      "pg_range_rngtypid_index",
      "pg_inherits_parent_index",
      "pg_toast_1255_index",
      "pg_auth_members_role_member_index",
      "pg_toast_3596_index",
      "pg_shdepend_reference_index",
      "pg_enum_typid_sortorder_index",
      "pg_toast_3456_index",
      "pg_amop_oid_index",
      "pg_ts_config_cfgname_index",
      "pg_policy_polrelid_polname_index",
      "pg_database_oid_index",
      "pg_transform_oid_index",
      "pg_toast_13275_index",
      "pg_attribute_relid_attnum_index",
      "pg_constraint_conrelid_contypid_conname_index",
      "pg_language_name_index",
      "pg_toast_2620_index",
      "pg_event_trigger_evtname_index",
      "pg_statistic_ext_name_index",
      "pg_foreign_server_oid_index",
      "pg_ts_template_oid_index",
      "pg_toast_3256_index",
      "pg_type_typname_nsp_index",
      "pg_amop_fam_strat_index",
      "pg_toast_2964_index",
      "pg_replication_origin_roiident_index",
      "pg_database_datname_index",
      "pg_toast_2600_index",
      "pg_foreign_data_wrapper_name_index",
      "pg_statistic_ext_relid_index",
      "pg_attribute_relid_attnam_index",
      "pg_toast_2328_index",
      "pg_toast_1213_index",
      "pg_amproc_oid_index",
      "pg_am_oid_index",
      "pg_ts_config_map_index",
      "pg_shseclabel_object_index",
      "pg_toast_3466_index",
      "pg_toast_2604_index",
      "pg_statistic_ext_data_stxoid_index",
      "pg_largeobject_loid_pn_index",
      "pg_enum_typid_label_index",
      "pg_foreign_server_name_index",
      "pg_constraint_contypid_index",
      "pg_collation_name_enc_nsp_index",
      "pg_toast_2618_index",
      "pg_replication_origin_roname_index",
      "pg_authid_rolname_index",
      "pg_default_acl_role_nsp_obj_index",
      "pg_namespace_nspname_index",
      "pg_cast_source_target_index",
      "pg_subscription_rel_srrelid_srsubid_index",
      "pg_rewrite_rel_rulename_index",
      "pg_proc_oid_index",
      "pg_event_trigger_oid_index",
      "pg_tablespace_spcname_index",
      "pg_shdepend_depender_index",
      "pg_toast_2606_index",
      "pg_user_mapping_oid_index",
      "pg_proc_proname_args_nsp_index",
      "pg_type_oid_index",
      "pg_namespace_oid_index",
      "pg_toast_3429_index",
      "pg_toast_3350_index",
      "pg_attrdef_adrelid_adnum_index"
    ]
  },
  "sql_sizing": {},
  "role_routine_grants": {},
  "pg_stat_xact_user_tables": {
    "relname": [
      "users_zxzlar",
      "products"
    ],
    "schemaname": [
      "public"
    ]
  },
  "pg_extension": {
    "extversion": [
      "1.0"
    ],
    "extname": [
      "plpgsql"
    ]
  },
  "pg_stat_xact_sys_tables": {
    "relname": [
      "pg_pltemplate",
      "pg_toast_13280",
      "pg_toast_2609",
      "pg_toast_2620",
      "pg_namespace",
      "pg_toast_13285",
      "pg_amproc",
      "pg_attribute",
      "pg_toast_2964",
      "sql_sizing",
      "pg_toast_3600",
      "pg_toast_3466",
      "pg_toast_2606",
      "pg_range",
      "pg_init_privs",
      "pg_language",
      "pg_enum",
      "pg_statistic_ext",
      "pg_sequence",
      "pg_ts_parser",
      "pg_toast_16387",
      "pg_subscription_rel",
      "pg_toast_13270",
      "pg_toast_1418",
      "pg_toast_2619",
      "pg_toast_1136",
      "pg_foreign_server",
      "sql_implementation_info",
      "pg_largeobject",
      "pg_default_acl",
      "pg_toast_826",
      "pg_toast_3596",
      "pg_toast_3079",
      "pg_toast_2396",
      "pg_toast_6100",
      "pg_transform",
      "pg_toast_6000",
      "pg_collation",
      "pg_ts_dict",
      "pg_toast_2604",
      "pg_extension",
      "pg_index",
      "pg_toast_3256",
      "sql_parts",
      "pg_toast_3118",
      "pg_toast_2612",
      "pg_toast_3350",
      "pg_toast_2600",
      "pg_foreign_table",
      "pg_seclabel",
      "pg_largeobject_metadata",
      "pg_amop",
      "pg_shseclabel",
      "pg_database",
      "pg_cast",
      "pg_toast_1417",
      "pg_trigger",
      "pg_depend",
      "pg_conversion",
      "pg_operator",
      "pg_am",
      "pg_replication_origin",
      "pg_rewrite",
      "pg_subscription",
      "pg_toast_3429",
      "pg_db_role_setting",
      "pg_ts_config_map",
      "pg_publication_rel",
      "pg_foreign_data_wrapper",
      "sql_languages",
      "pg_statistic_ext_data",
      "pg_type",
      "pg_toast_1260",
      "pg_class",
      "pg_auth_members",
      "pg_proc",
      "pg_toast_1213",
      "pg_authid",
      "sql_features",
      "pg_toast_1262",
      "pg_user_mapping",
      "pg_publication",
      "pg_toast_2328",
      "sql_packages",
      "pg_toast_3381",
      "pg_opfamily",
      "pg_toast_2618",
      "pg_toast_13265",
      "pg_toast_1247",
      "pg_shdescription",
      "pg_toast_13275",
      "pg_partitioned_table",
      "sql_sizing_profiles",
      "pg_toast_2615",
      "pg_aggregate",
      "pg_attrdef",
      "pg_description",
      "pg_toast_3456",
      "pg_tablespace",
      "pg_toast_13290",
      "pg_event_trigger",
      "pg_shdepend",
      "pg_toast_13260",
      "pg_statistic",
      "pg_toast_1255",
      "pg_toast_3592",
      "pg_opclass",
      "pg_toast_3394",
      "pg_inherits",
      "pg_constraint",
      "pg_ts_config",
      "pg_policy",
      "pg_ts_template"
    ],
    "schemaname": [
      "information_schema",
      "pg_toast",
      "pg_catalog"
    ]
  },
  "pg_stat_progress_vacuum": {
    "phase": [],
    "datname": []
  },
  "pg_aggregate": {
    "agginitval": [
      "{0 second,0 second}",
      "{0,0}",
      "{0,0,0,0,0,0}",
      "{0,0,0}",
      "0"
    ],
    "aggminitval": [
      "{0 second,0 second}",
      "{0,0}",
      "0"
    ]
  },
  "pg_transform": {},
  "pg_init_privs": {},
  "pg_ts_parser": {
    "prsname": [
      "default"
    ]
  },
  "pg_stat_progress_cluster": {
    "command": [],
    "datname": [],
    "phase": []
  },
  "_pg_foreign_tables": {},
  "enabled_roles": {},
  "pg_stat_user_indexes": {
    "relname": [
      "products"
    ],
    "schemaname": [
      "public"
    ],
    "indexrelname": [
      "products_pkey"
    ]
  },
  "tables": {},
  "pg_shadow": {
    "passwd": [
      "md532e12f215ba27cb750c9e093ce4b5127"
    ],
    "usename": [
      "postgres"
    ]
  },
  "pg_statio_all_sequences": {
    "relname": [],
    "schemaname": []
  },
  "pg_largeobject": {},
  "views": {},
  "pg_stats": {
    "attname": [
      "attoptions",
      "relispopulated",
      "typdefaultbin",
      "reltoastrelid",
      "amopsortfamily",
      "proisstrict",
      "cfgparser",
      "prsheadline",
      "character_value",
      "typbasetype",
      "mapseqno",
      "relowner",
      "amopopr",
      "typtypmod",
      "aggtransfn",
      "proname",
      "opcowner",
      "relpages",
      "rolname",
      "spcname",
      "relhasrules",
      "sql_language_integrity",
      "confupdtype",
      "member",
      "collisdeterministic",
      "rolreplication",
      "rngcollation",
      "is_supported",
      "objsubid",
      "dictinitoption",
      "condeferrable",
      "aggmtransfn",
      "collname",
      "attacl",
      "indclass",
      "cfgowner",
      "relnatts",
      "probin",
      "tmplhandler",
      "indexrelid",
      "tmpldbacreate",
      "datconnlimit",
      "grantor",
      "typrelid",
      "sql_language_programming_language",
      "rngsubopc",
      "indisready",
      "reloptions",
      "rngcanonical",
      "supported_value",
      "lanispl",
      "feature_name",
      "sql_language_implementation",
      "prstoken",
      "relkind",
      "typdefault",
      "dicttemplate",
      "sizing_name",
      "dictowner",
      "rulename",
      "oprcode",
      "contype",
      "integer_value",
      "cfgname",
      "datallowconn",
      "dattablespace",
      "atttypmod",
      "castsource",
      "amopmethod",
      "extname",
      "confmatchtype",
      "amname",
      "classid",
      "spcoptions",
      "tmplinline",
      "relhassubclass",
      "ev_qual",
      "tmplinit",
      "collprovider",
      "attcollation",
      "relnamespace",
      "condeferred",
      "datminmxid",
      "tmpllexize",
      "prsnamespace",
      "proparallel",
      "amproc",
      "extrelocatable",
      "collctype",
      "aggmfinalmodify",
      "confdeltype",
      "oprcom",
      "coninhcount",
      "reltuples",
      "connoinherit",
      "amprocfamily",
      "proargtypes",
      "proargnames",
      "attnotnull",
      "sql_language_year",
      "convalidated",
      "typisdefined",
      "relhasindex",
      "amhandler",
      "attstattarget",
      "implementation_info_id",
      "extcondition",
      "provolatile",
      "relminmxid",
      "collencoding",
      "indnatts",
      "attgenerated",
      "relam",
      "attlen",
      "amoppurpose",
      "conproc",
      "conrelid",
      "oprnegate",
      "pronargs",
      "opcmethod",
      "confkey",
      "amprocnum",
      "refclassid",
      "aggfinalextra",
      "lanname",
      "aggserialfn",
      "oprowner",
      "oprname",
      "reltablespace",
      "attidentity",
      "amtype",
      "tmplnamespace",
      "extconfig",
      "typmodout",
      "indpred",
      "tmplvalidator",
      "attalign",
      "prolang",
      "prsstart",
      "opcdefault",
      "typsend",
      "indisunique",
      "lanplcallfoid",
      "amprocrighttype",
      "rolvaliduntil",
      "atttypid",
      "indisvalid",
      "relacl",
      "objid",
      "atthasmissing",
      "typdelim",
      "aggsortop",
      "relispartition",
      "reltype",
      "roleid",
      "prorettype",
      "indexprs",
      "opckeytype",
      "amproclefttype",
      "sub_feature_name",
      "attmissingval",
      "prokind",
      "extversion",
      "objoid",
      "initprivs",
      "nspacl",
      "attnum",
      "extowner",
      "amoprighttype",
      "proargmodes",
      "opfnamespace",
      "datctype",
      "opcfamily",
      "indnkeyatts",
      "proowner",
      "typreceive",
      "indoption",
      "castcontext",
      "implementation_info_name",
      "indcheckxmin",
      "ev_type",
      "ev_action",
      "attndims",
      "tmpltrusted",
      "oprkind",
      "opcintype",
      "attisdropped",
      "contoencoding",
      "mapdict",
      "relforcerowsecurity",
      "oprcanmerge",
      "indisreplident",
      "contypid",
      "refobjsubid",
      "privtype",
      "encoding",
      "sql_language_source",
      "dictname",
      "conislocal",
      "dictnamespace",
      "maptokentype",
      "spcacl",
      "attfdwoptions",
      "opfowner",
      "is_instead",
      "mapcfg",
      "conffeqop",
      "typalign",
      "collcollate",
      "aggminitval",
      "feature_id",
      "aggmtransspace",
      "reloftype",
      "oid",
      "nspowner",
      "castmethod",
      "opfmethod",
      "prsname",
      "typanalyze",
      "opfname",
      "proretset",
      "sub_feature_id",
      "aggfnoid",
      "laninline",
      "relrowsecurity",
      "aggfinalmodify",
      "rngsubdiff",
      "proallargtypes",
      "attbyval",
      "confrelid",
      "conkey",
      "datname",
      "cfgnamespace",
      "opcnamespace",
      "relfilenode",
      "sizing_id",
      "aggmfinalfn",
      "ev_class",
      "rolinherit",
      "typtype",
      "typname",
      "proargdefaults",
      "typelem",
      "typowner",
      "typinput",
      "prslextype",
      "rolsuper",
      "attcacheoff",
      "comments",
      "oprrest",
      "proconfig",
      "conparentid",
      "conname",
      "typispreferred",
      "typlen",
      "aggnumdirectargs",
      "lanowner",
      "proacl",
      "attrelid",
      "aggmfinalextra",
      "typndims",
      "lanpltrusted",
      "ev_enabled",
      "aggtransspace",
      "relrewrite",
      "atthasdef",
      "datacl",
      "indimmediate",
      "relchecks",
      "datdba",
      "typstorage",
      "oprleft",
      "castfunc",
      "indcollation",
      "protrftypes",
      "typarray",
      "nspname",
      "aggfinalfn",
      "classoid",
      "datcollate",
      "prosrc",
      "relallvisible",
      "relpartbound",
      "indislive",
      "relfrozenxid",
      "oprresult",
      "rngsubtype",
      "rngtypid",
      "aggmtranstype",
      "amopstrategy",
      "connamespace",
      "lanvalidator",
      "conppeqop",
      "amoplefttype",
      "rolbypassrls",
      "conexclop",
      "relname",
      "pronargdefaults",
      "spcowner",
      "typacl",
      "extnamespace",
      "casttarget",
      "collnamespace",
      "rolconnlimit",
      "conowner",
      "relreplident",
      "rolcreatedb",
      "relpersistence",
      "prosecdef",
      "typnotnull",
      "relisshared",
      "prorows",
      "attname",
      "deptype",
      "typcategory",
      "oprright",
      "conbin",
      "typbyval",
      "indisprimary",
      "rolcreaterole",
      "aggminvtransfn",
      "amopfamily",
      "relhastriggers",
      "indrelid",
      "aggkind",
      "datistemplate",
      "tmpllibrary",
      "prsend",
      "aggdeserialfn",
      "admin_option",
      "provariadic",
      "datlastsysoid",
      "indkey",
      "oprjoin",
      "condefault",
      "indisclustered",
      "rolcanlogin",
      "sql_language_binding_style",
      "agginitval",
      "attislocal",
      "attinhcount",
      "aggcombinefn",
      "oprcanhash",
      "typoutput",
      "typmodin",
      "lanacl",
      "oprnamespace",
      "indisexclusion",
      "description",
      "is_verified_by",
      "aggtranstype",
      "pronamespace",
      "typnamespace",
      "conindid",
      "typcollation",
      "conpfeqop",
      "datfrozenxid",
      "rolpassword",
      "prosupport",
      "refobjid",
      "conforencoding",
      "dbid",
      "proleakproof",
      "procost",
      "sql_language_conformance",
      "tmplname",
      "collversion",
      "collowner",
      "opcname",
      "attstorage",
      "tmplacl"
    ],
    "schemaname": [
      "pg_catalog",
      "information_schema"
    ],
    "tablename": [
      "pg_depend",
      "pg_conversion",
      "pg_pltemplate",
      "pg_operator",
      "pg_namespace",
      "pg_am",
      "pg_rewrite",
      "pg_amproc",
      "pg_attribute",
      "sql_sizing",
      "pg_ts_config_map",
      "sql_languages",
      "pg_range",
      "pg_init_privs",
      "pg_language",
      "pg_type",
      "pg_class",
      "pg_auth_members",
      "pg_proc",
      "pg_ts_parser",
      "sql_features",
      "pg_authid",
      "sql_implementation_info",
      "sql_packages",
      "pg_opfamily",
      "pg_shdescription",
      "pg_ts_dict",
      "pg_collation",
      "pg_aggregate",
      "pg_extension",
      "pg_index",
      "pg_description",
      "sql_parts",
      "pg_tablespace",
      "pg_shdepend",
      "pg_opclass",
      "pg_amop",
      "pg_constraint",
      "pg_database",
      "pg_ts_config",
      "pg_cast",
      "pg_ts_template"
    ]
  },
  "pg_opfamily": {
    "opfname": [
      "aclitem_ops",
      "varbit_minmax_ops",
      "cid_ops",
      "poly_ops",
      "box_ops",
      "macaddr8_minmax_ops",
      "macaddr_ops",
      "circle_ops",
      "network_inclusion_ops",
      "uuid_minmax_ops",
      "box_inclusion_ops",
      "network_ops",
      "bit_ops",
      "interval_ops",
      "pg_lsn_ops",
      "numeric_minmax_ops",
      "tid_ops",
      "date_ops",
      "quad_point_ops",
      "range_ops",
      "interval_minmax_ops",
      "jsonb_ops",
      "network_minmax_ops",
      "record_ops",
      "bpchar_ops",
      "datetime_minmax_ops",
      "bytea_minmax_ops",
      "bool_ops",
      "jsonb_path_ops",
      "tsvector_ops",
      "timestamptz_ops",
      "text_pattern_ops",
      "enum_ops",
      "pg_lsn_minmax_ops",
      "timetz_ops",
      "macaddr8_ops",
      "numeric_ops",
      "tsquery_ops",
      "integer_minmax_ops",
      "array_ops",
      "float_minmax_ops",
      "char_minmax_ops",
      "bit_minmax_ops",
      "time_minmax_ops",
      "timetz_minmax_ops",
      "bytea_ops",
      "range_inclusion_ops",
      "char_ops",
      "oid_minmax_ops",
      "name_minmax_ops",
      "text_ops",
      "bpchar_pattern_ops",
      "time_ops",
      "integer_ops",
      "money_ops",
      "macaddr_minmax_ops",
      "oid_ops",
      "float_ops",
      "varbit_ops",
      "timestamp_ops",
      "text_minmax_ops",
      "kd_point_ops",
      "point_ops",
      "tid_minmax_ops",
      "xid_ops",
      "record_image_ops",
      "oidvector_ops",
      "uuid_ops",
      "bpchar_minmax_ops",
      "datetime_ops"
    ]
  },
  "pg_views": {
    "viewowner": [
      "postgres"
    ],
    "definition": [
      " SELECT c.oid AS relid,\n    n.nspname AS schemaname,\n    c.relname,\n    (pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid)) AS heap_blks_read,\n    pg_stat_get_blocks_hit(c.oid) AS heap_blks_hit,\n    (sum((pg_stat_get_blocks_fetched(i.indexrelid) - pg_stat_get_blocks_hit(i.indexrelid))))::bigint AS idx_blks_read,\n    (sum(pg_stat_get_blocks_hit(i.indexrelid)))::bigint AS idx_blks_hit,\n    (pg_stat_get_blocks_fetched(t.oid) - pg_stat_get_blocks_hit(t.oid)) AS toast_blks_read,\n    pg_stat_get_blocks_hit(t.oid) AS toast_blks_hit,\n    (sum((pg_stat_get_blocks_fetched(x.indexrelid) - pg_stat_get_blocks_hit(x.indexrelid))))::bigint AS tidx_blks_read,\n    (sum(pg_stat_get_blocks_hit(x.indexrelid)))::bigint AS tidx_blks_hit\n   FROM ((((pg_class c\n     LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))\n     LEFT JOIN pg_class t ON ((c.reltoastrelid = t.oid)))\n     LEFT JOIN pg_index x ON ((t.oid = x.indrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;t&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;]))\n  GROUP BY c.oid, n.nspname, c.relname, t.oid, x.indrelid;",
      " SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (\n        CASE\n            WHEN (nc.oid = pg_my_temp_schema()) THEN &apos;LOCAL TEMPORARY&apos;::text\n            WHEN (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) THEN &apos;BASE TABLE&apos;::text\n            WHEN (c.relkind = &apos;v&apos;::&quot;char&quot;) THEN &apos;VIEW&apos;::text\n            WHEN (c.relkind = &apos;f&apos;::&quot;char&quot;) THEN &apos;FOREIGN&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS table_type,\n    (NULL::name)::information_schema.sql_identifier AS self_referencing_column_name,\n    (NULL::character varying)::information_schema.character_data AS reference_generation,\n    (\n        CASE\n            WHEN (t.typname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS user_defined_type_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS user_defined_type_schema,\n    (t.typname)::information_schema.sql_identifier AS user_defined_type_name,\n    (\n        CASE\n            WHEN ((c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) OR ((c.relkind = ANY (ARRAY[&apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;])) AND ((pg_relation_is_updatable((c.oid)::regclass, false) &amp; 8) = 8))) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_insertable_into,\n    (\n        CASE\n            WHEN (t.typname IS NOT NULL) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_typed,\n    (NULL::character varying)::information_schema.character_data AS commit_action\n   FROM ((pg_namespace nc\n     JOIN pg_class c ON ((nc.oid = c.relnamespace)))\n     LEFT JOIN (pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((c.reloftype = t.oid)))\n  WHERE ((c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (NOT pg_is_other_temp_schema(nc.oid)) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)));",
      " SELECT pg_statio_all_indexes.relid,\n    pg_statio_all_indexes.indexrelid,\n    pg_statio_all_indexes.schemaname,\n    pg_statio_all_indexes.relname,\n    pg_statio_all_indexes.indexrelname,\n    pg_statio_all_indexes.idx_blks_read,\n    pg_statio_all_indexes.idx_blks_hit\n   FROM pg_statio_all_indexes\n  WHERE ((pg_statio_all_indexes.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_statio_all_indexes.schemaname !~ &apos;^pg_toast&apos;::text));",
      " SELECT pg_statio_all_sequences.relid,\n    pg_statio_all_sequences.schemaname,\n    pg_statio_all_sequences.relname,\n    pg_statio_all_sequences.blks_read,\n    pg_statio_all_sequences.blks_hit\n   FROM pg_statio_all_sequences\n  WHERE ((pg_statio_all_sequences.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_statio_all_sequences.schemaname ~ &apos;^pg_toast&apos;::text));",
      " SELECT c.oid AS relid,\n    i.oid AS indexrelid,\n    n.nspname AS schemaname,\n    c.relname,\n    i.relname AS indexrelname,\n    (pg_stat_get_blocks_fetched(i.oid) - pg_stat_get_blocks_hit(i.oid)) AS idx_blks_read,\n    pg_stat_get_blocks_hit(i.oid) AS idx_blks_hit\n   FROM (((pg_class c\n     JOIN pg_index x ON ((c.oid = x.indrelid)))\n     JOIN pg_class i ON ((i.oid = x.indexrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;t&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;]));",
      " SELECT w.oid,\n    w.fdwowner,\n    w.fdwoptions,\n    (current_database())::information_schema.sql_identifier AS foreign_data_wrapper_catalog,\n    (w.fdwname)::information_schema.sql_identifier AS foreign_data_wrapper_name,\n    (u.rolname)::information_schema.sql_identifier AS authorization_identifier,\n    (&apos;c&apos;::character varying)::information_schema.character_data AS foreign_data_wrapper_language\n   FROM pg_foreign_data_wrapper w,\n    pg_authid u\n  WHERE ((u.oid = w.fdwowner) AND (pg_has_role(w.fdwowner, &apos;USAGE&apos;::text) OR has_foreign_data_wrapper_privilege(w.oid, &apos;USAGE&apos;::text)));",
      " SELECT (current_database())::information_schema.sql_identifier AS catalog_name,\n    (n.nspname)::information_schema.sql_identifier AS schema_name,\n    (u.rolname)::information_schema.sql_identifier AS schema_owner,\n    (NULL::name)::information_schema.sql_identifier AS default_character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS default_character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS default_character_set_name,\n    (NULL::character varying)::information_schema.character_data AS sql_path\n   FROM pg_namespace n,\n    pg_authid u\n  WHERE ((n.nspowner = u.oid) AND (pg_has_role(n.nspowner, &apos;USAGE&apos;::text) OR has_schema_privilege(n.oid, &apos;CREATE, USAGE&apos;::text)));",
      " SELECT s.oid,\n    s.srvoptions,\n    (current_database())::information_schema.sql_identifier AS foreign_server_catalog,\n    (s.srvname)::information_schema.sql_identifier AS foreign_server_name,\n    (current_database())::information_schema.sql_identifier AS foreign_data_wrapper_catalog,\n    (w.fdwname)::information_schema.sql_identifier AS foreign_data_wrapper_name,\n    (s.srvtype)::information_schema.character_data AS foreign_server_type,\n    (s.srvversion)::information_schema.character_data AS foreign_server_version,\n    (u.rolname)::information_schema.sql_identifier AS authorization_identifier\n   FROM pg_foreign_server s,\n    pg_foreign_data_wrapper w,\n    pg_authid u\n  WHERE ((w.oid = s.srvfdw) AND (u.oid = s.srvowner) AND (pg_has_role(s.srvowner, &apos;USAGE&apos;::text) OR has_server_privilege(s.oid, &apos;USAGE&apos;::text)));",
      " SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (a.attname)::information_schema.sql_identifier AS column_name,\n    (a.attnum)::information_schema.cardinal_number AS ordinal_position,\n    (\n        CASE\n            WHEN (a.attgenerated = &apos;&apos;::&quot;char&quot;) THEN pg_get_expr(ad.adbin, ad.adrelid)\n            ELSE NULL::text\n        END)::information_schema.character_data AS column_default,\n    (\n        CASE\n            WHEN (a.attnotnull OR ((t.typtype = &apos;d&apos;::&quot;char&quot;) AND t.typnotnull)) THEN &apos;NO&apos;::text\n            ELSE &apos;YES&apos;::text\n        END)::information_schema.yes_or_no AS is_nullable,\n    (\n        CASE\n            WHEN (t.typtype = &apos;d&apos;::&quot;char&quot;) THEN\n            CASE\n                WHEN ((bt.typelem &lt;&gt; (0)::oid) AND (bt.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n                WHEN (nbt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(t.typbasetype, NULL::integer)\n                ELSE &apos;USER-DEFINED&apos;::text\n            END\n            ELSE\n            CASE\n                WHEN ((t.typelem &lt;&gt; (0)::oid) AND (t.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n                WHEN (nt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(a.atttypid, NULL::integer)\n                ELSE &apos;USER-DEFINED&apos;::text\n            END\n        END)::information_schema.character_data AS data_type,\n    (information_schema._pg_char_max_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_maximum_length,\n    (information_schema._pg_char_octet_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_octet_length,\n    (information_schema._pg_numeric_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision,\n    (information_schema._pg_numeric_precision_radix(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision_radix,\n    (information_schema._pg_numeric_scale(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_scale,\n    (information_schema._pg_datetime_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS datetime_precision,\n    (information_schema._pg_interval_type(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (\n        CASE\n            WHEN (nco.nspname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS collation_catalog,\n    (nco.nspname)::information_schema.sql_identifier AS collation_schema,\n    (co.collname)::information_schema.sql_identifier AS collation_name,\n    (\n        CASE\n            WHEN (t.typtype = &apos;d&apos;::&quot;char&quot;) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS domain_catalog,\n    (\n        CASE\n            WHEN (t.typtype = &apos;d&apos;::&quot;char&quot;) THEN nt.nspname\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS domain_schema,\n    (\n        CASE\n            WHEN (t.typtype = &apos;d&apos;::&quot;char&quot;) THEN t.typname\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS domain_name,\n    (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (COALESCE(nbt.nspname, nt.nspname))::information_schema.sql_identifier AS udt_schema,\n    (COALESCE(bt.typname, t.typname))::information_schema.sql_identifier AS udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    (a.attnum)::information_schema.sql_identifier AS dtd_identifier,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_self_referencing,\n    (\n        CASE\n            WHEN (a.attidentity = ANY (ARRAY[&apos;a&apos;::&quot;char&quot;, &apos;d&apos;::&quot;char&quot;])) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_identity,\n    (\n        CASE a.attidentity\n            WHEN &apos;a&apos;::&quot;char&quot; THEN &apos;ALWAYS&apos;::text\n            WHEN &apos;d&apos;::&quot;char&quot; THEN &apos;BY DEFAULT&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS identity_generation,\n    (seq.seqstart)::information_schema.character_data AS identity_start,\n    (seq.seqincrement)::information_schema.character_data AS identity_increment,\n    (seq.seqmax)::information_schema.character_data AS identity_maximum,\n    (seq.seqmin)::information_schema.character_data AS identity_minimum,\n    (\n        CASE\n            WHEN seq.seqcycle THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS identity_cycle,\n    (\n        CASE\n            WHEN (a.attgenerated &lt;&gt; &apos;&apos;::&quot;char&quot;) THEN &apos;ALWAYS&apos;::text\n            ELSE &apos;NEVER&apos;::text\n        END)::information_schema.character_data AS is_generated,\n    (\n        CASE\n            WHEN (a.attgenerated &lt;&gt; &apos;&apos;::&quot;char&quot;) THEN pg_get_expr(ad.adbin, ad.adrelid)\n            ELSE NULL::text\n        END)::information_schema.character_data AS generation_expression,\n    (\n        CASE\n            WHEN ((c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) OR ((c.relkind = ANY (ARRAY[&apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;])) AND pg_column_is_updatable((c.oid)::regclass, a.attnum, false))) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_updatable\n   FROM ((((((pg_attribute a\n     LEFT JOIN pg_attrdef ad ON (((a.attrelid = ad.adrelid) AND (a.attnum = ad.adnum))))\n     JOIN (pg_class c\n     JOIN pg_namespace nc ON ((c.relnamespace = nc.oid))) ON ((a.attrelid = c.oid)))\n     JOIN (pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((a.atttypid = t.oid)))\n     LEFT JOIN (pg_type bt\n     JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typtype = &apos;d&apos;::&quot;char&quot;) AND (t.typbasetype = bt.oid))))\n     LEFT JOIN (pg_collation co\n     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((a.attcollation = co.oid) AND ((nco.nspname &lt;&gt; &apos;pg_catalog&apos;::name) OR (co.collname &lt;&gt; &apos;default&apos;::name)))))\n     LEFT JOIN (pg_depend dep\n     JOIN pg_sequence seq ON (((dep.classid = (&apos;pg_class&apos;::regclass)::oid) AND (dep.objid = seq.seqrelid) AND (dep.deptype = &apos;i&apos;::&quot;char&quot;)))) ON (((dep.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dep.refobjid = c.oid) AND (dep.refobjsubid = a.attnum))))\n  WHERE ((NOT pg_is_other_temp_schema(nc.oid)) AND (a.attnum &gt; 0) AND (NOT a.attisdropped) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_column_privilege(c.oid, a.attnum, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)));",
      " SELECT p.transaction,\n    p.gid,\n    p.prepared,\n    u.rolname AS owner,\n    d.datname AS database\n   FROM ((pg_prepared_xact() p(transaction, gid, prepared, ownerid, dbid)\n     LEFT JOIN pg_authid u ON ((p.ownerid = u.oid)))\n     LEFT JOIN pg_database d ON ((p.dbid = d.oid)));",
      " SELECT c.oid AS relid,\n    n.nspname AS schemaname,\n    c.relname,\n    (pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid)) AS blks_read,\n    pg_stat_get_blocks_hit(c.oid) AS blks_hit\n   FROM (pg_class c\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = &apos;S&apos;::&quot;char&quot;);",
      " SELECT pg_stat_all_indexes.relid,\n    pg_stat_all_indexes.indexrelid,\n    pg_stat_all_indexes.schemaname,\n    pg_stat_all_indexes.relname,\n    pg_stat_all_indexes.indexrelname,\n    pg_stat_all_indexes.idx_scan,\n    pg_stat_all_indexes.idx_tup_read,\n    pg_stat_all_indexes.idx_tup_fetch\n   FROM pg_stat_all_indexes\n  WHERE ((pg_stat_all_indexes.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_stat_all_indexes.schemaname ~ &apos;^pg_toast&apos;::text));",
      " SELECT n.nspname AS schemaname,\n    c.relname AS matviewname,\n    pg_get_userbyid(c.relowner) AS matviewowner,\n    t.spcname AS tablespace,\n    c.relhasindex AS hasindexes,\n    c.relispopulated AS ispopulated,\n    pg_get_viewdef(c.oid) AS definition\n   FROM ((pg_class c\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n     LEFT JOIN pg_tablespace t ON ((t.oid = c.reltablespace)))\n  WHERE (c.relkind = &apos;m&apos;::&quot;char&quot;);",
      " SELECT pg_stat_all_tables.relid,\n    pg_stat_all_tables.schemaname,\n    pg_stat_all_tables.relname,\n    pg_stat_all_tables.seq_scan,\n    pg_stat_all_tables.seq_tup_read,\n    pg_stat_all_tables.idx_scan,\n    pg_stat_all_tables.idx_tup_fetch,\n    pg_stat_all_tables.n_tup_ins,\n    pg_stat_all_tables.n_tup_upd,\n    pg_stat_all_tables.n_tup_del,\n    pg_stat_all_tables.n_tup_hot_upd,\n    pg_stat_all_tables.n_live_tup,\n    pg_stat_all_tables.n_dead_tup,\n    pg_stat_all_tables.n_mod_since_analyze,\n    pg_stat_all_tables.last_vacuum,\n    pg_stat_all_tables.last_autovacuum,\n    pg_stat_all_tables.last_analyze,\n    pg_stat_all_tables.last_autoanalyze,\n    pg_stat_all_tables.vacuum_count,\n    pg_stat_all_tables.autovacuum_count,\n    pg_stat_all_tables.analyze_count,\n    pg_stat_all_tables.autoanalyze_count\n   FROM pg_stat_all_tables\n  WHERE ((pg_stat_all_tables.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_stat_all_tables.schemaname !~ &apos;^pg_toast&apos;::text));",
      " SELECT _pg_foreign_servers.foreign_server_catalog,\n    _pg_foreign_servers.foreign_server_name,\n    _pg_foreign_servers.foreign_data_wrapper_catalog,\n    _pg_foreign_servers.foreign_data_wrapper_name,\n    _pg_foreign_servers.foreign_server_type,\n    _pg_foreign_servers.foreign_server_version,\n    _pg_foreign_servers.authorization_identifier\n   FROM information_schema._pg_foreign_servers;",
      " SELECT (current_database())::information_schema.sql_identifier AS user_defined_type_catalog,\n    (n.nspname)::information_schema.sql_identifier AS user_defined_type_schema,\n    (c.relname)::information_schema.sql_identifier AS user_defined_type_name,\n    (&apos;STRUCTURED&apos;::character varying)::information_schema.character_data AS user_defined_type_category,\n    (&apos;YES&apos;::character varying)::information_schema.yes_or_no AS is_instantiable,\n    (NULL::character varying)::information_schema.yes_or_no AS is_final,\n    (NULL::character varying)::information_schema.character_data AS ordering_form,\n    (NULL::character varying)::information_schema.character_data AS ordering_category,\n    (NULL::name)::information_schema.sql_identifier AS ordering_routine_catalog,\n    (NULL::name)::information_schema.sql_identifier AS ordering_routine_schema,\n    (NULL::name)::information_schema.sql_identifier AS ordering_routine_name,\n    (NULL::character varying)::information_schema.character_data AS reference_type,\n    (NULL::character varying)::information_schema.character_data AS data_type,\n    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,\n    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (NULL::name)::information_schema.sql_identifier AS collation_catalog,\n    (NULL::name)::information_schema.sql_identifier AS collation_schema,\n    (NULL::name)::information_schema.sql_identifier AS collation_name,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,\n    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,\n    (NULL::character varying)::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (NULL::name)::information_schema.sql_identifier AS source_dtd_identifier,\n    (NULL::name)::information_schema.sql_identifier AS ref_dtd_identifier\n   FROM pg_namespace n,\n    pg_class c,\n    pg_type t\n  WHERE ((n.oid = c.relnamespace) AND (t.typrelid = c.oid) AND (c.relkind = &apos;c&apos;::&quot;char&quot;) AND (pg_has_role(t.typowner, &apos;USAGE&apos;::text) OR has_type_privilege(t.oid, &apos;USAGE&apos;::text)));",
      " SELECT pg_config.name,\n    pg_config.setting\n   FROM pg_config() pg_config(name, setting);",
      " SELECT table_privileges.grantor,\n    table_privileges.grantee,\n    table_privileges.table_catalog,\n    table_privileges.table_schema,\n    table_privileges.table_name,\n    table_privileges.privilege_type,\n    table_privileges.is_grantable,\n    table_privileges.with_hierarchy\n   FROM information_schema.table_privileges\n  WHERE (((table_privileges.grantor)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)) OR ((table_privileges.grantee)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)));",
      " SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (ss.nc_nspname)::information_schema.sql_identifier AS constraint_schema,\n    (ss.conname)::information_schema.sql_identifier AS constraint_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (ss.nr_nspname)::information_schema.sql_identifier AS table_schema,\n    (ss.relname)::information_schema.sql_identifier AS table_name,\n    (a.attname)::information_schema.sql_identifier AS column_name,\n    ((ss.x).n)::information_schema.cardinal_number AS ordinal_position,\n    (\n        CASE\n            WHEN (ss.contype = &apos;f&apos;::&quot;char&quot;) THEN information_schema._pg_index_position(ss.conindid, ss.confkey[(ss.x).n])\n            ELSE NULL::integer\n        END)::information_schema.cardinal_number AS position_in_unique_constraint\n   FROM pg_attribute a,\n    ( SELECT r.oid AS roid,\n            r.relname,\n            r.relowner,\n            nc.nspname AS nc_nspname,\n            nr.nspname AS nr_nspname,\n            c.oid AS coid,\n            c.conname,\n            c.contype,\n            c.conindid,\n            c.confkey,\n            c.confrelid,\n            information_schema._pg_expandarray(c.conkey) AS x\n           FROM pg_namespace nr,\n            pg_class r,\n            pg_namespace nc,\n            pg_constraint c\n          WHERE ((nr.oid = r.relnamespace) AND (r.oid = c.conrelid) AND (nc.oid = c.connamespace) AND (c.contype = ANY (ARRAY[&apos;p&apos;::&quot;char&quot;, &apos;u&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;])) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (NOT pg_is_other_temp_schema(nr.oid)))) ss\n  WHERE ((ss.roid = a.attrelid) AND (a.attnum = (ss.x).x) AND (NOT a.attisdropped) AND (pg_has_role(ss.relowner, &apos;USAGE&apos;::text) OR has_column_privilege(ss.roid, a.attnum, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)));",
      " SELECT pg_timezone_abbrevs.abbrev,\n    pg_timezone_abbrevs.utc_offset,\n    pg_timezone_abbrevs.is_dst\n   FROM pg_timezone_abbrevs() pg_timezone_abbrevs(abbrev, utc_offset, is_dst);",
      " SELECT d.oid AS datid,\n    d.datname,\n        CASE\n            WHEN (d.oid = (0)::oid) THEN 0\n            ELSE pg_stat_get_db_numbackends(d.oid)\n        END AS numbackends,\n    pg_stat_get_db_xact_commit(d.oid) AS xact_commit,\n    pg_stat_get_db_xact_rollback(d.oid) AS xact_rollback,\n    (pg_stat_get_db_blocks_fetched(d.oid) - pg_stat_get_db_blocks_hit(d.oid)) AS blks_read,\n    pg_stat_get_db_blocks_hit(d.oid) AS blks_hit,\n    pg_stat_get_db_tuples_returned(d.oid) AS tup_returned,\n    pg_stat_get_db_tuples_fetched(d.oid) AS tup_fetched,\n    pg_stat_get_db_tuples_inserted(d.oid) AS tup_inserted,\n    pg_stat_get_db_tuples_updated(d.oid) AS tup_updated,\n    pg_stat_get_db_tuples_deleted(d.oid) AS tup_deleted,\n    pg_stat_get_db_conflict_all(d.oid) AS conflicts,\n    pg_stat_get_db_temp_files(d.oid) AS temp_files,\n    pg_stat_get_db_temp_bytes(d.oid) AS temp_bytes,\n    pg_stat_get_db_deadlocks(d.oid) AS deadlocks,\n    pg_stat_get_db_checksum_failures(d.oid) AS checksum_failures,\n    pg_stat_get_db_checksum_last_failure(d.oid) AS checksum_last_failure,\n    pg_stat_get_db_blk_read_time(d.oid) AS blk_read_time,\n    pg_stat_get_db_blk_write_time(d.oid) AS blk_write_time,\n    pg_stat_get_db_stat_reset_time(d.oid) AS stats_reset\n   FROM ( SELECT 0 AS oid,\n            NULL::name AS datname\n        UNION ALL\n         SELECT pg_database.oid,\n            pg_database.datname\n           FROM pg_database) d;",
      " SELECT pg_authid.rolname AS usename,\n    pg_authid.oid AS usesysid,\n    pg_authid.rolcreatedb AS usecreatedb,\n    pg_authid.rolsuper AS usesuper,\n    pg_authid.rolreplication AS userepl,\n    pg_authid.rolbypassrls AS usebypassrls,\n    pg_authid.rolpassword AS passwd,\n    pg_authid.rolvaliduntil AS valuntil,\n    s.setconfig AS useconfig\n   FROM (pg_authid\n     LEFT JOIN pg_db_role_setting s ON (((pg_authid.oid = s.setrole) AND (s.setdatabase = (0)::oid))))\n  WHERE pg_authid.rolcanlogin;",
      " SELECT s.pid,\n    s.status,\n    s.receive_start_lsn,\n    s.receive_start_tli,\n    s.received_lsn,\n    s.received_tli,\n    s.last_msg_send_time,\n    s.last_msg_receipt_time,\n    s.latest_end_lsn,\n    s.latest_end_time,\n    s.slot_name,\n    s.sender_host,\n    s.sender_port,\n    s.conninfo\n   FROM pg_stat_get_wal_receiver() s(pid, status, receive_start_lsn, receive_start_tli, received_lsn, received_tli, last_msg_send_time, last_msg_receipt_time, latest_end_lsn, latest_end_time, slot_name, sender_host, sender_port, conninfo)\n  WHERE (s.pid IS NOT NULL);",
      " SELECT n.nspname AS schemaname,\n    c.relname AS tablename,\n    a.attname,\n    s.stainherit AS inherited,\n    s.stanullfrac AS null_frac,\n    s.stawidth AS avg_width,\n    s.stadistinct AS n_distinct,\n        CASE\n            WHEN (s.stakind1 = 1) THEN s.stavalues1\n            WHEN (s.stakind2 = 1) THEN s.stavalues2\n            WHEN (s.stakind3 = 1) THEN s.stavalues3\n            WHEN (s.stakind4 = 1) THEN s.stavalues4\n            WHEN (s.stakind5 = 1) THEN s.stavalues5\n            ELSE NULL::anyarray\n        END AS most_common_vals,\n        CASE\n            WHEN (s.stakind1 = 1) THEN s.stanumbers1\n            WHEN (s.stakind2 = 1) THEN s.stanumbers2\n            WHEN (s.stakind3 = 1) THEN s.stanumbers3\n            WHEN (s.stakind4 = 1) THEN s.stanumbers4\n            WHEN (s.stakind5 = 1) THEN s.stanumbers5\n            ELSE NULL::real[]\n        END AS most_common_freqs,\n        CASE\n            WHEN (s.stakind1 = 2) THEN s.stavalues1\n            WHEN (s.stakind2 = 2) THEN s.stavalues2\n            WHEN (s.stakind3 = 2) THEN s.stavalues3\n            WHEN (s.stakind4 = 2) THEN s.stavalues4\n            WHEN (s.stakind5 = 2) THEN s.stavalues5\n            ELSE NULL::anyarray\n        END AS histogram_bounds,\n        CASE\n            WHEN (s.stakind1 = 3) THEN s.stanumbers1[1]\n            WHEN (s.stakind2 = 3) THEN s.stanumbers2[1]\n            WHEN (s.stakind3 = 3) THEN s.stanumbers3[1]\n            WHEN (s.stakind4 = 3) THEN s.stanumbers4[1]\n            WHEN (s.stakind5 = 3) THEN s.stanumbers5[1]\n            ELSE NULL::real\n        END AS correlation,\n        CASE\n            WHEN (s.stakind1 = 4) THEN s.stavalues1\n            WHEN (s.stakind2 = 4) THEN s.stavalues2\n            WHEN (s.stakind3 = 4) THEN s.stavalues3\n            WHEN (s.stakind4 = 4) THEN s.stavalues4\n            WHEN (s.stakind5 = 4) THEN s.stavalues5\n            ELSE NULL::anyarray\n        END AS most_common_elems,\n        CASE\n            WHEN (s.stakind1 = 4) THEN s.stanumbers1\n            WHEN (s.stakind2 = 4) THEN s.stanumbers2\n            WHEN (s.stakind3 = 4) THEN s.stanumbers3\n            WHEN (s.stakind4 = 4) THEN s.stanumbers4\n            WHEN (s.stakind5 = 4) THEN s.stanumbers5\n            ELSE NULL::real[]\n        END AS most_common_elem_freqs,\n        CASE\n            WHEN (s.stakind1 = 5) THEN s.stanumbers1\n            WHEN (s.stakind2 = 5) THEN s.stanumbers2\n            WHEN (s.stakind3 = 5) THEN s.stanumbers3\n            WHEN (s.stakind4 = 5) THEN s.stanumbers4\n            WHEN (s.stakind5 = 5) THEN s.stanumbers5\n            ELSE NULL::real[]\n        END AS elem_count_histogram\n   FROM (((pg_statistic s\n     JOIN pg_class c ON ((c.oid = s.starelid)))\n     JOIN pg_attribute a ON (((c.oid = a.attrelid) AND (a.attnum = s.staattnum))))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE ((NOT a.attisdropped) AND has_column_privilege(c.oid, a.attnum, &apos;select&apos;::text) AND ((c.relrowsecurity = false) OR (NOT row_security_active(c.oid))));",
      " SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (rs.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (con.conname)::information_schema.sql_identifier AS constraint_name,\n    (&quot;substring&quot;(pg_get_constraintdef(con.oid), 7))::information_schema.character_data AS check_clause\n   FROM (((pg_constraint con\n     LEFT JOIN pg_namespace rs ON ((rs.oid = con.connamespace)))\n     LEFT JOIN pg_class c ON ((c.oid = con.conrelid)))\n     LEFT JOIN pg_type t ON ((t.oid = con.contypid)))\n  WHERE (pg_has_role(COALESCE(c.relowner, t.typowner), &apos;USAGE&apos;::text) AND (con.contype = &apos;c&apos;::&quot;char&quot;))\nUNION\n SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (n.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (((((((n.oid)::text || &apos;_&apos;::text) || (r.oid)::text) || &apos;_&apos;::text) || (a.attnum)::text) || &apos;_not_null&apos;::text))::information_schema.sql_identifier AS constraint_name,\n    (((a.attname)::text || &apos; IS NOT NULL&apos;::text))::information_schema.character_data AS check_clause\n   FROM pg_namespace n,\n    pg_class r,\n    pg_attribute a\n  WHERE ((n.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (a.attnum &gt; 0) AND (NOT a.attisdropped) AND a.attnotnull AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND pg_has_role(r.relowner, &apos;USAGE&apos;::text));",
      " SELECT pg_stat_xact_all_tables.relid,\n    pg_stat_xact_all_tables.schemaname,\n    pg_stat_xact_all_tables.relname,\n    pg_stat_xact_all_tables.seq_scan,\n    pg_stat_xact_all_tables.seq_tup_read,\n    pg_stat_xact_all_tables.idx_scan,\n    pg_stat_xact_all_tables.idx_tup_fetch,\n    pg_stat_xact_all_tables.n_tup_ins,\n    pg_stat_xact_all_tables.n_tup_upd,\n    pg_stat_xact_all_tables.n_tup_del,\n    pg_stat_xact_all_tables.n_tup_hot_upd\n   FROM pg_stat_xact_all_tables\n  WHERE ((pg_stat_xact_all_tables.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_stat_xact_all_tables.schemaname ~ &apos;^pg_toast&apos;::text));",
      " SELECT pg_shadow.usename,\n    pg_shadow.usesysid,\n    pg_shadow.usecreatedb,\n    pg_shadow.usesuper,\n    pg_shadow.userepl,\n    pg_shadow.usebypassrls,\n    &apos;********&apos;::text AS passwd,\n    pg_shadow.valuntil,\n    pg_shadow.useconfig\n   FROM pg_shadow;",
      " SELECT n.nspname,\n    c.relname,\n    a.attname,\n    a.attfdwoptions\n   FROM pg_foreign_table t,\n    pg_authid u,\n    pg_namespace n,\n    pg_class c,\n    pg_attribute a\n  WHERE ((u.oid = c.relowner) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_column_privilege(c.oid, a.attnum, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)) AND (n.oid = c.relnamespace) AND (c.oid = t.ftrelid) AND (c.relkind = &apos;f&apos;::&quot;char&quot;) AND (a.attrelid = c.oid) AND (a.attnum &gt; 0));",
      " SELECT um.oid,\n    um.umoptions,\n    um.umuser,\n    (COALESCE(u.rolname, &apos;PUBLIC&apos;::name))::information_schema.sql_identifier AS authorization_identifier,\n    s.foreign_server_catalog,\n    s.foreign_server_name,\n    s.authorization_identifier AS srvowner\n   FROM (pg_user_mapping um\n     LEFT JOIN pg_authid u ON ((u.oid = um.umuser))),\n    information_schema._pg_foreign_servers s\n  WHERE (s.oid = um.umserver);",
      " SELECT (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (getdatabaseencoding())::information_schema.sql_identifier AS character_set_name,\n    (\n        CASE\n            WHEN (getdatabaseencoding() = &apos;UTF8&apos;::name) THEN &apos;UCS&apos;::name\n            ELSE getdatabaseencoding()\n        END)::information_schema.sql_identifier AS character_repertoire,\n    (getdatabaseencoding())::information_schema.sql_identifier AS form_of_use,\n    (current_database())::information_schema.sql_identifier AS default_collate_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS default_collate_schema,\n    (c.collname)::information_schema.sql_identifier AS default_collate_name\n   FROM (pg_database d\n     LEFT JOIN (pg_collation c\n     JOIN pg_namespace nc ON ((c.collnamespace = nc.oid))) ON (((d.datcollate = c.collcollate) AND (d.datctype = c.collctype))))\n  WHERE (d.datname = current_database())\n  ORDER BY (char_length((c.collname)::text)) DESC, c.collname\n LIMIT 1;",
      " SELECT s.pid,\n    s.gss_auth AS gss_authenticated,\n    s.gss_princ AS principal,\n    s.gss_enc AS encrypted\n   FROM pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc);",
      " SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (COALESCE(nbt.nspname, nt.nspname))::information_schema.sql_identifier AS udt_schema,\n    (COALESCE(bt.typname, t.typname))::information_schema.sql_identifier AS udt_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (a.attname)::information_schema.sql_identifier AS column_name\n   FROM pg_attribute a,\n    pg_class c,\n    pg_namespace nc,\n    ((pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))\n     LEFT JOIN (pg_type bt\n     JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typtype = &apos;d&apos;::&quot;char&quot;) AND (t.typbasetype = bt.oid))))\n  WHERE ((a.attrelid = c.oid) AND (a.atttypid = t.oid) AND (nc.oid = c.relnamespace) AND (a.attnum &gt; 0) AND (NOT a.attisdropped) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND pg_has_role(COALESCE(bt.typowner, t.typowner), &apos;USAGE&apos;::text));",
      " SELECT (a.rolname)::information_schema.sql_identifier AS role_name\n   FROM pg_authid a\n  WHERE pg_has_role(a.oid, &apos;USAGE&apos;::text);",
      " SELECT pg_statio_all_sequences.relid,\n    pg_statio_all_sequences.schemaname,\n    pg_statio_all_sequences.relname,\n    pg_statio_all_sequences.blks_read,\n    pg_statio_all_sequences.blks_hit\n   FROM pg_statio_all_sequences\n  WHERE ((pg_statio_all_sequences.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_statio_all_sequences.schemaname !~ &apos;^pg_toast&apos;::text));",
      " SELECT (current_database())::information_schema.sql_identifier AS catalog_name;",
      " SELECT n.nspname AS schemaname,\n    c.relname AS tablename,\n    pol.polname AS policyname,\n        CASE\n            WHEN pol.polpermissive THEN &apos;PERMISSIVE&apos;::text\n            ELSE &apos;RESTRICTIVE&apos;::text\n        END AS permissive,\n        CASE\n            WHEN (pol.polroles = &apos;{0}&apos;::oid[]) THEN (string_to_array(&apos;public&apos;::text, &apos;&apos;::text))::name[]\n            ELSE ARRAY( SELECT pg_authid.rolname\n               FROM pg_authid\n              WHERE (pg_authid.oid = ANY (pol.polroles))\n              ORDER BY pg_authid.rolname)\n        END AS roles,\n        CASE pol.polcmd\n            WHEN &apos;r&apos;::&quot;char&quot; THEN &apos;SELECT&apos;::text\n            WHEN &apos;a&apos;::&quot;char&quot; THEN &apos;INSERT&apos;::text\n            WHEN &apos;w&apos;::&quot;char&quot; THEN &apos;UPDATE&apos;::text\n            WHEN &apos;d&apos;::&quot;char&quot; THEN &apos;DELETE&apos;::text\n            WHEN &apos;*&apos;::&quot;char&quot; THEN &apos;ALL&apos;::text\n            ELSE NULL::text\n        END AS cmd,\n    pg_get_expr(pol.polqual, pol.polrelid) AS qual,\n    pg_get_expr(pol.polwithcheck, pol.polrelid) AS with_check\n   FROM ((pg_policy pol\n     JOIN pg_class c ON ((c.oid = pol.polrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)));",
      " SELECT (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (n.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,\n    (current_database())::information_schema.sql_identifier AS routine_catalog,\n    (n.nspname)::information_schema.sql_identifier AS routine_schema,\n    (p.proname)::information_schema.sql_identifier AS routine_name,\n    (\n        CASE p.prokind\n            WHEN &apos;f&apos;::&quot;char&quot; THEN &apos;FUNCTION&apos;::text\n            WHEN &apos;p&apos;::&quot;char&quot; THEN &apos;PROCEDURE&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS routine_type,\n    (NULL::name)::information_schema.sql_identifier AS module_catalog,\n    (NULL::name)::information_schema.sql_identifier AS module_schema,\n    (NULL::name)::information_schema.sql_identifier AS module_name,\n    (NULL::name)::information_schema.sql_identifier AS udt_catalog,\n    (NULL::name)::information_schema.sql_identifier AS udt_schema,\n    (NULL::name)::information_schema.sql_identifier AS udt_name,\n    (\n        CASE\n            WHEN (p.prokind = &apos;p&apos;::&quot;char&quot;) THEN NULL::text\n            WHEN ((t.typelem &lt;&gt; (0)::oid) AND (t.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n            WHEN (nt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(t.oid, NULL::integer)\n            ELSE &apos;USER-DEFINED&apos;::text\n        END)::information_schema.character_data AS data_type,\n    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,\n    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (NULL::name)::information_schema.sql_identifier AS collation_catalog,\n    (NULL::name)::information_schema.sql_identifier AS collation_schema,\n    (NULL::name)::information_schema.sql_identifier AS collation_name,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,\n    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,\n    (NULL::character varying)::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (\n        CASE\n            WHEN (nt.nspname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS type_udt_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS type_udt_schema,\n    (t.typname)::information_schema.sql_identifier AS type_udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    (\n        CASE\n            WHEN (p.prokind &lt;&gt; &apos;p&apos;::&quot;char&quot;) THEN 0\n            ELSE NULL::integer\n        END)::information_schema.sql_identifier AS dtd_identifier,\n    (\n        CASE\n            WHEN (l.lanname = &apos;sql&apos;::name) THEN &apos;SQL&apos;::text\n            ELSE &apos;EXTERNAL&apos;::text\n        END)::information_schema.character_data AS routine_body,\n    (\n        CASE\n            WHEN pg_has_role(p.proowner, &apos;USAGE&apos;::text) THEN p.prosrc\n            ELSE NULL::text\n        END)::information_schema.character_data AS routine_definition,\n    (\n        CASE\n            WHEN (l.lanname = &apos;c&apos;::name) THEN p.prosrc\n            ELSE NULL::text\n        END)::information_schema.character_data AS external_name,\n    (upper((l.lanname)::text))::information_schema.character_data AS external_language,\n    (&apos;GENERAL&apos;::character varying)::information_schema.character_data AS parameter_style,\n    (\n        CASE\n            WHEN (p.provolatile = &apos;i&apos;::&quot;char&quot;) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_deterministic,\n    (&apos;MODIFIES&apos;::character varying)::information_schema.character_data AS sql_data_access,\n    (\n        CASE\n            WHEN (p.prokind &lt;&gt; &apos;p&apos;::&quot;char&quot;) THEN\n            CASE\n                WHEN p.proisstrict THEN &apos;YES&apos;::text\n                ELSE &apos;NO&apos;::text\n            END\n            ELSE NULL::text\n        END)::information_schema.yes_or_no AS is_null_call,\n    (NULL::character varying)::information_schema.character_data AS sql_path,\n    (&apos;YES&apos;::character varying)::information_schema.yes_or_no AS schema_level_routine,\n    (0)::information_schema.cardinal_number AS max_dynamic_result_sets,\n    (NULL::character varying)::information_schema.yes_or_no AS is_user_defined_cast,\n    (NULL::character varying)::information_schema.yes_or_no AS is_implicitly_invocable,\n    (\n        CASE\n            WHEN p.prosecdef THEN &apos;DEFINER&apos;::text\n            ELSE &apos;INVOKER&apos;::text\n        END)::information_schema.character_data AS security_type,\n    (NULL::name)::information_schema.sql_identifier AS to_sql_specific_catalog,\n    (NULL::name)::information_schema.sql_identifier AS to_sql_specific_schema,\n    (NULL::name)::information_schema.sql_identifier AS to_sql_specific_name,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS as_locator,\n    (NULL::timestamp with time zone)::information_schema.time_stamp AS created,\n    (NULL::timestamp with time zone)::information_schema.time_stamp AS last_altered,\n    (NULL::character varying)::information_schema.yes_or_no AS new_savepoint_level,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_udt_dependent,\n    (NULL::character varying)::information_schema.character_data AS result_cast_from_data_type,\n    (NULL::character varying)::information_schema.yes_or_no AS result_cast_as_locator,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_char_max_length,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_char_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_name,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_collation_catalog,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_collation_schema,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_collation_name,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_precision,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_precision_radix,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_scale,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_datetime_precision,\n    (NULL::character varying)::information_schema.character_data AS result_cast_interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_interval_precision,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_catalog,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_schema,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_name,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_maximum_cardinality,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_dtd_identifier\n   FROM (((pg_namespace n\n     JOIN pg_proc p ON ((n.oid = p.pronamespace)))\n     JOIN pg_language l ON ((p.prolang = l.oid)))\n     LEFT JOIN (pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON (((p.prorettype = t.oid) AND (p.prokind &lt;&gt; &apos;p&apos;::&quot;char&quot;))))\n  WHERE (pg_has_role(p.proowner, &apos;USAGE&apos;::text) OR has_function_privilege(p.oid, &apos;EXECUTE&apos;::text));",
      " SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (c.prtype)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, c.relowner, &apos;USAGE&apos;::text) OR c.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable,\n    (\n        CASE\n            WHEN (c.prtype = &apos;SELECT&apos;::text) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS with_hierarchy\n   FROM ( SELECT pg_class.oid,\n            pg_class.relname,\n            pg_class.relnamespace,\n            pg_class.relkind,\n            pg_class.relowner,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).is_grantable AS is_grantable\n           FROM pg_class) c(oid, relname, relnamespace, relkind, relowner, grantor, grantee, prtype, grantable),\n    pg_namespace nc,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((c.relnamespace = nc.oid) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (c.grantee = grantee.oid) AND (c.grantor = u_grantor.oid) AND (c.prtype = ANY (ARRAY[&apos;INSERT&apos;::text, &apos;SELECT&apos;::text, &apos;UPDATE&apos;::text, &apos;DELETE&apos;::text, &apos;TRUNCATE&apos;::text, &apos;REFERENCES&apos;::text, &apos;TRIGGER&apos;::text])) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)));",
      " SELECT pg_stat_all_tables.relid,\n    pg_stat_all_tables.schemaname,\n    pg_stat_all_tables.relname,\n    pg_stat_all_tables.seq_scan,\n    pg_stat_all_tables.seq_tup_read,\n    pg_stat_all_tables.idx_scan,\n    pg_stat_all_tables.idx_tup_fetch,\n    pg_stat_all_tables.n_tup_ins,\n    pg_stat_all_tables.n_tup_upd,\n    pg_stat_all_tables.n_tup_del,\n    pg_stat_all_tables.n_tup_hot_upd,\n    pg_stat_all_tables.n_live_tup,\n    pg_stat_all_tables.n_dead_tup,\n    pg_stat_all_tables.n_mod_since_analyze,\n    pg_stat_all_tables.last_vacuum,\n    pg_stat_all_tables.last_autovacuum,\n    pg_stat_all_tables.last_analyze,\n    pg_stat_all_tables.last_autoanalyze,\n    pg_stat_all_tables.vacuum_count,\n    pg_stat_all_tables.autovacuum_count,\n    pg_stat_all_tables.analyze_count,\n    pg_stat_all_tables.autoanalyze_count\n   FROM pg_stat_all_tables\n  WHERE ((pg_stat_all_tables.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_stat_all_tables.schemaname ~ &apos;^pg_toast&apos;::text));",
      " SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (x.tblschema)::information_schema.sql_identifier AS table_schema,\n    (x.tblname)::information_schema.sql_identifier AS table_name,\n    (x.colname)::information_schema.sql_identifier AS column_name,\n    (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (x.cstrschema)::information_schema.sql_identifier AS constraint_schema,\n    (x.cstrname)::information_schema.sql_identifier AS constraint_name\n   FROM ( SELECT DISTINCT nr.nspname,\n            r.relname,\n            r.relowner,\n            a.attname,\n            nc.nspname,\n            c.conname\n           FROM pg_namespace nr,\n            pg_class r,\n            pg_attribute a,\n            pg_depend d,\n            pg_namespace nc,\n            pg_constraint c\n          WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (d.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (d.refobjid = r.oid) AND (d.refobjsubid = a.attnum) AND (d.classid = (&apos;pg_constraint&apos;::regclass)::oid) AND (d.objid = c.oid) AND (c.connamespace = nc.oid) AND (c.contype = &apos;c&apos;::&quot;char&quot;) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (NOT a.attisdropped))\n        UNION ALL\n         SELECT nr.nspname,\n            r.relname,\n            r.relowner,\n            a.attname,\n            nc.nspname,\n            c.conname\n           FROM pg_namespace nr,\n            pg_class r,\n            pg_attribute a,\n            pg_namespace nc,\n            pg_constraint c\n          WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (nc.oid = c.connamespace) AND (r.oid =\n                CASE c.contype\n                    WHEN &apos;f&apos;::&quot;char&quot; THEN c.confrelid\n                    ELSE c.conrelid\n                END) AND (a.attnum = ANY (\n                CASE c.contype\n                    WHEN &apos;f&apos;::&quot;char&quot; THEN c.confkey\n                    ELSE c.conkey\n                END)) AND (NOT a.attisdropped) AND (c.contype = ANY (ARRAY[&apos;p&apos;::&quot;char&quot;, &apos;u&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;])) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])))) x(tblschema, tblname, tblowner, colname, cstrschema, cstrname)\n  WHERE pg_has_role(x.tblowner, &apos;USAGE&apos;::text);",
      " SELECT e.name,\n    e.version,\n    (x.extname IS NOT NULL) AS installed,\n    e.superuser,\n    e.relocatable,\n    e.schema,\n    e.requires,\n    e.comment\n   FROM (pg_available_extension_versions() e(name, version, superuser, relocatable, schema, requires, comment)\n     LEFT JOIN pg_extension x ON (((e.name = x.extname) AND (e.version = x.extversion))));",
      " SELECT e.name,\n    e.default_version,\n    x.extversion AS installed_version,\n    e.comment\n   FROM (pg_available_extensions() e(name, default_version, comment)\n     LEFT JOIN pg_extension x ON ((e.name = x.extname)));",
      " SELECT c.oid AS relid,\n    n.nspname AS schemaname,\n    c.relname,\n    pg_stat_get_xact_numscans(c.oid) AS seq_scan,\n    pg_stat_get_xact_tuples_returned(c.oid) AS seq_tup_read,\n    (sum(pg_stat_get_xact_numscans(i.indexrelid)))::bigint AS idx_scan,\n    ((sum(pg_stat_get_xact_tuples_fetched(i.indexrelid)))::bigint + pg_stat_get_xact_tuples_fetched(c.oid)) AS idx_tup_fetch,\n    pg_stat_get_xact_tuples_inserted(c.oid) AS n_tup_ins,\n    pg_stat_get_xact_tuples_updated(c.oid) AS n_tup_upd,\n    pg_stat_get_xact_tuples_deleted(c.oid) AS n_tup_del,\n    pg_stat_get_xact_tuples_hot_updated(c.oid) AS n_tup_hot_upd\n   FROM ((pg_class c\n     LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;t&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;]))\n  GROUP BY c.oid, n.nspname, c.relname;",
      " SELECT s.pid,\n    s.datid,\n    d.datname,\n    s.relid,\n    (s.param7)::oid AS index_relid,\n        CASE s.param1\n            WHEN 1 THEN &apos;CREATE INDEX&apos;::text\n            WHEN 2 THEN &apos;CREATE INDEX CONCURRENTLY&apos;::text\n            WHEN 3 THEN &apos;REINDEX&apos;::text\n            WHEN 4 THEN &apos;REINDEX CONCURRENTLY&apos;::text\n            ELSE NULL::text\n        END AS command,\n        CASE s.param10\n            WHEN 0 THEN &apos;initializing&apos;::text\n            WHEN 1 THEN &apos;waiting for writers before build&apos;::text\n            WHEN 2 THEN (&apos;building index&apos;::text || COALESCE((&apos;: &apos;::text || pg_indexam_progress_phasename((s.param9)::oid, s.param11)), &apos;&apos;::text))\n            WHEN 3 THEN &apos;waiting for writers before validation&apos;::text\n            WHEN 4 THEN &apos;index validation: scanning index&apos;::text\n            WHEN 5 THEN &apos;index validation: sorting tuples&apos;::text\n            WHEN 6 THEN &apos;index validation: scanning table&apos;::text\n            WHEN 7 THEN &apos;waiting for old snapshots&apos;::text\n            WHEN 8 THEN &apos;waiting for readers before marking dead&apos;::text\n            WHEN 9 THEN &apos;waiting for readers before dropping&apos;::text\n            ELSE NULL::text\n        END AS phase,\n    s.param4 AS lockers_total,\n    s.param5 AS lockers_done,\n    s.param6 AS current_locker_pid,\n    s.param16 AS blocks_total,\n    s.param17 AS blocks_done,\n    s.param12 AS tuples_total,\n    s.param13 AS tuples_done,\n    s.param14 AS partitions_total,\n    s.param15 AS partitions_done\n   FROM (pg_stat_get_progress_info(&apos;CREATE INDEX&apos;::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)\n     LEFT JOIN pg_database d ON ((s.datid = d.oid)));",
      " SELECT (current_database())::information_schema.sql_identifier AS domain_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS domain_schema,\n    (t.typname)::information_schema.sql_identifier AS domain_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (a.attname)::information_schema.sql_identifier AS column_name\n   FROM pg_type t,\n    pg_namespace nt,\n    pg_class c,\n    pg_namespace nc,\n    pg_attribute a\n  WHERE ((t.typnamespace = nt.oid) AND (c.relnamespace = nc.oid) AND (a.attrelid = c.oid) AND (a.atttypid = t.oid) AND (t.typtype = &apos;d&apos;::&quot;char&quot;) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (a.attnum &gt; 0) AND (NOT a.attisdropped) AND pg_has_role(t.typowner, &apos;USAGE&apos;::text));",
      " SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS udt_schema,\n    (c.relname)::information_schema.sql_identifier AS udt_name,\n    (a.attname)::information_schema.sql_identifier AS attribute_name,\n    (a.attnum)::information_schema.cardinal_number AS ordinal_position,\n    (pg_get_expr(ad.adbin, ad.adrelid))::information_schema.character_data AS attribute_default,\n    (\n        CASE\n            WHEN (a.attnotnull OR ((t.typtype = &apos;d&apos;::&quot;char&quot;) AND t.typnotnull)) THEN &apos;NO&apos;::text\n            ELSE &apos;YES&apos;::text\n        END)::information_schema.yes_or_no AS is_nullable,\n    (\n        CASE\n            WHEN ((t.typelem &lt;&gt; (0)::oid) AND (t.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n            WHEN (nt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(a.atttypid, NULL::integer)\n            ELSE &apos;USER-DEFINED&apos;::text\n        END)::information_schema.character_data AS data_type,\n    (information_schema._pg_char_max_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_maximum_length,\n    (information_schema._pg_char_octet_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (\n        CASE\n            WHEN (nco.nspname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS collation_catalog,\n    (nco.nspname)::information_schema.sql_identifier AS collation_schema,\n    (co.collname)::information_schema.sql_identifier AS collation_name,\n    (information_schema._pg_numeric_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision,\n    (information_schema._pg_numeric_precision_radix(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision_radix,\n    (information_schema._pg_numeric_scale(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_scale,\n    (information_schema._pg_datetime_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS datetime_precision,\n    (information_schema._pg_interval_type(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (current_database())::information_schema.sql_identifier AS attribute_udt_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS attribute_udt_schema,\n    (t.typname)::information_schema.sql_identifier AS attribute_udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    (a.attnum)::information_schema.sql_identifier AS dtd_identifier,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_derived_reference_attribute\n   FROM ((((pg_attribute a\n     LEFT JOIN pg_attrdef ad ON (((a.attrelid = ad.adrelid) AND (a.attnum = ad.adnum))))\n     JOIN (pg_class c\n     JOIN pg_namespace nc ON ((c.relnamespace = nc.oid))) ON ((a.attrelid = c.oid)))\n     JOIN (pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((a.atttypid = t.oid)))\n     LEFT JOIN (pg_collation co\n     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((a.attcollation = co.oid) AND ((nco.nspname &lt;&gt; &apos;pg_catalog&apos;::name) OR (co.collname &lt;&gt; &apos;default&apos;::name)))))\n  WHERE ((a.attnum &gt; 0) AND (NOT a.attisdropped) AND (c.relkind = &apos;c&apos;::&quot;char&quot;) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_type_privilege(c.reltype, &apos;USAGE&apos;::text)));",
      " SELECT t.foreign_table_catalog,\n    t.foreign_table_schema,\n    t.foreign_table_name,\n    ((pg_options_to_table(t.ftoptions)).option_name)::information_schema.sql_identifier AS option_name,\n    ((pg_options_to_table(t.ftoptions)).option_value)::information_schema.character_data AS option_value\n   FROM information_schema._pg_foreign_tables t;",
      " SELECT pg_statio_all_tables.relid,\n    pg_statio_all_tables.schemaname,\n    pg_statio_all_tables.relname,\n    pg_statio_all_tables.heap_blks_read,\n    pg_statio_all_tables.heap_blks_hit,\n    pg_statio_all_tables.idx_blks_read,\n    pg_statio_all_tables.idx_blks_hit,\n    pg_statio_all_tables.toast_blks_read,\n    pg_statio_all_tables.toast_blks_hit,\n    pg_statio_all_tables.tidx_blks_read,\n    pg_statio_all_tables.tidx_blks_hit\n   FROM pg_statio_all_tables\n  WHERE ((pg_statio_all_tables.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_statio_all_tables.schemaname !~ &apos;^pg_toast&apos;::text));",
      " SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (n.nspname)::information_schema.sql_identifier AS udt_schema,\n    (t.typname)::information_schema.sql_identifier AS udt_name,\n    (&apos;TYPE USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, t.typowner, &apos;USAGE&apos;::text) OR t.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_type.oid,\n            pg_type.typname,\n            pg_type.typnamespace,\n            pg_type.typtype,\n            pg_type.typowner,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).is_grantable AS is_grantable\n           FROM pg_type) t(oid, typname, typnamespace, typtype, typowner, grantor, grantee, prtype, grantable),\n    pg_namespace n,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((t.typnamespace = n.oid) AND (t.typtype = &apos;c&apos;::&quot;char&quot;) AND (t.grantee = grantee.oid) AND (t.grantor = u_grantor.oid) AND (t.prtype = &apos;USAGE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)));",
      " SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (n.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,\n    (current_database())::information_schema.sql_identifier AS routine_catalog,\n    (n.nspname)::information_schema.sql_identifier AS routine_schema,\n    (p.proname)::information_schema.sql_identifier AS routine_name,\n    (&apos;EXECUTE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, p.proowner, &apos;USAGE&apos;::text) OR p.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_proc.oid,\n            pg_proc.proname,\n            pg_proc.proowner,\n            pg_proc.pronamespace,\n            (aclexplode(COALESCE(pg_proc.proacl, acldefault(&apos;f&apos;::&quot;char&quot;, pg_proc.proowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_proc.proacl, acldefault(&apos;f&apos;::&quot;char&quot;, pg_proc.proowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_proc.proacl, acldefault(&apos;f&apos;::&quot;char&quot;, pg_proc.proowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_proc.proacl, acldefault(&apos;f&apos;::&quot;char&quot;, pg_proc.proowner)))).is_grantable AS is_grantable\n           FROM pg_proc) p(oid, proname, proowner, pronamespace, grantor, grantee, prtype, grantable),\n    pg_namespace n,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((p.pronamespace = n.oid) AND (grantee.oid = p.grantee) AND (u_grantor.oid = p.grantor) AND (p.prtype = &apos;EXECUTE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)));",
      " SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (t.typname)::information_schema.sql_identifier AS udt_name,\n    (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (np.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,\n    (l.lanname)::information_schema.sql_identifier AS group_name,\n    (&apos;FROM SQL&apos;::character varying)::information_schema.character_data AS transform_type\n   FROM (((((pg_type t\n     JOIN pg_transform x ON ((t.oid = x.trftype)))\n     JOIN pg_language l ON ((x.trflang = l.oid)))\n     JOIN pg_proc p ON (((x.trffromsql)::oid = p.oid)))\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))\n     JOIN pg_namespace np ON ((p.pronamespace = np.oid)))\nUNION\n SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (t.typname)::information_schema.sql_identifier AS udt_name,\n    (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (np.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,\n    (l.lanname)::information_schema.sql_identifier AS group_name,\n    (&apos;TO SQL&apos;::character varying)::information_schema.character_data AS transform_type\n   FROM (((((pg_type t\n     JOIN pg_transform x ON ((t.oid = x.trftype)))\n     JOIN pg_language l ON ((x.trflang = l.oid)))\n     JOIN pg_proc p ON (((x.trftosql)::oid = p.oid)))\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))\n     JOIN pg_namespace np ON ((p.pronamespace = np.oid)))\n  ORDER BY 1, 2, 3, 7, 8;",
      " SELECT pg_authid.rolname AS groname,\n    pg_authid.oid AS grosysid,\n    ARRAY( SELECT pg_auth_members.member\n           FROM pg_auth_members\n          WHERE (pg_auth_members.roleid = pg_authid.oid)) AS grolist\n   FROM pg_authid\n  WHERE (NOT pg_authid.rolcanlogin);",
      " SELECT l.slot_name,\n    l.plugin,\n    l.slot_type,\n    l.datoid,\n    d.datname AS database,\n    l.temporary,\n    l.active,\n    l.active_pid,\n    l.xmin,\n    l.catalog_xmin,\n    l.restart_lsn,\n    l.confirmed_flush_lsn\n   FROM (pg_get_replication_slots() l(slot_name, plugin, slot_type, datoid, temporary, active, active_pid, xmin, catalog_xmin, restart_lsn, confirmed_flush_lsn)\n     LEFT JOIN pg_database d ON ((l.datoid = d.oid)));",
      " SELECT l.locktype,\n    l.database,\n    l.relation,\n    l.page,\n    l.tuple,\n    l.virtualxid,\n    l.transactionid,\n    l.classid,\n    l.objid,\n    l.objsubid,\n    l.virtualtransaction,\n    l.pid,\n    l.mode,\n    l.granted,\n    l.fastpath\n   FROM pg_lock_status() l(locktype, database, relation, page, tuple, virtualxid, transactionid, classid, objid, objsubid, virtualtransaction, pid, mode, granted, fastpath);",
      " SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (c.conname)::information_schema.sql_identifier AS constraint_name,\n    (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (np.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name\n   FROM pg_namespace nc,\n    pg_constraint c,\n    pg_depend d,\n    pg_proc p,\n    pg_namespace np\n  WHERE ((nc.oid = c.connamespace) AND (c.contype = &apos;c&apos;::&quot;char&quot;) AND (c.oid = d.objid) AND (d.classid = (&apos;pg_constraint&apos;::regclass)::oid) AND (d.refobjid = p.oid) AND (d.refclassid = (&apos;pg_proc&apos;::regclass)::oid) AND (p.pronamespace = np.oid) AND pg_has_role(p.proowner, &apos;USAGE&apos;::text));",
      " SELECT u.oid AS umid,\n    s.oid AS srvid,\n    s.srvname,\n    u.umuser,\n        CASE\n            WHEN (u.umuser = (0)::oid) THEN &apos;public&apos;::name\n            ELSE a.rolname\n        END AS usename,\n        CASE\n            WHEN (((u.umuser &lt;&gt; (0)::oid) AND (a.rolname = CURRENT_USER) AND (pg_has_role(s.srvowner, &apos;USAGE&apos;::text) OR has_server_privilege(s.oid, &apos;USAGE&apos;::text))) OR ((u.umuser = (0)::oid) AND pg_has_role(s.srvowner, &apos;USAGE&apos;::text)) OR ( SELECT pg_authid.rolsuper\n               FROM pg_authid\n              WHERE (pg_authid.rolname = CURRENT_USER))) THEN u.umoptions\n            ELSE NULL::text[]\n        END AS umoptions\n   FROM ((pg_user_mapping u\n     JOIN pg_foreign_server s ON ((u.umserver = s.oid)))\n     LEFT JOIN pg_authid a ON ((a.oid = u.umuser)));",
      " SELECT p.name,\n    p.statement,\n    p.prepare_time,\n    p.parameter_types,\n    p.from_sql\n   FROM pg_prepared_statement() p(name, statement, prepare_time, parameter_types, from_sql);",
      " SELECT (current_database())::information_schema.sql_identifier AS foreign_table_catalog,\n    (n.nspname)::information_schema.sql_identifier AS foreign_table_schema,\n    (c.relname)::information_schema.sql_identifier AS foreign_table_name,\n    t.ftoptions,\n    (current_database())::information_schema.sql_identifier AS foreign_server_catalog,\n    (s.srvname)::information_schema.sql_identifier AS foreign_server_name,\n    (u.rolname)::information_schema.sql_identifier AS authorization_identifier\n   FROM pg_foreign_table t,\n    pg_foreign_server s,\n    pg_foreign_data_wrapper w,\n    pg_authid u,\n    pg_namespace n,\n    pg_class c\n  WHERE ((w.oid = s.srvfdw) AND (u.oid = c.relowner) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)) AND (n.oid = c.relnamespace) AND (c.oid = t.ftrelid) AND (c.relkind = &apos;f&apos;::&quot;char&quot;) AND (s.oid = t.ftserver));",
      " SELECT su.oid AS subid,\n    su.subname,\n    st.pid,\n    st.relid,\n    st.received_lsn,\n    st.last_msg_send_time,\n    st.last_msg_receipt_time,\n    st.latest_end_lsn,\n    st.latest_end_time\n   FROM (pg_subscription su\n     LEFT JOIN pg_stat_get_subscription(NULL::oid) st(subid, relid, pid, received_lsn, last_msg_send_time, last_msg_receipt_time, latest_end_lsn, latest_end_time) ON ((st.subid = su.oid)));",
      " SELECT (current_database())::information_schema.sql_identifier AS trigger_catalog,\n    (n.nspname)::information_schema.sql_identifier AS trigger_schema,\n    (t.tgname)::information_schema.sql_identifier AS trigger_name,\n    (em.text)::information_schema.character_data AS event_manipulation,\n    (current_database())::information_schema.sql_identifier AS event_object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS event_object_schema,\n    (c.relname)::information_schema.sql_identifier AS event_object_table,\n    (rank() OVER (PARTITION BY (n.nspname)::information_schema.sql_identifier, (c.relname)::information_schema.sql_identifier, em.num, ((t.tgtype)::integer &amp; 1), ((t.tgtype)::integer &amp; 66) ORDER BY t.tgname))::information_schema.cardinal_number AS action_order,\n    (\n        CASE\n            WHEN pg_has_role(c.relowner, &apos;USAGE&apos;::text) THEN (regexp_match(pg_get_triggerdef(t.oid), &apos;.{35,} WHEN \\((.+)\\) EXECUTE FUNCTION&apos;::text))[1]\n            ELSE NULL::text\n        END)::information_schema.character_data AS action_condition,\n    (&quot;substring&quot;(pg_get_triggerdef(t.oid), (&quot;position&quot;(&quot;substring&quot;(pg_get_triggerdef(t.oid), 48), &apos;EXECUTE FUNCTION&apos;::text) + 47)))::information_schema.character_data AS action_statement,\n    (\n        CASE ((t.tgtype)::integer &amp; 1)\n            WHEN 1 THEN &apos;ROW&apos;::text\n            ELSE &apos;STATEMENT&apos;::text\n        END)::information_schema.character_data AS action_orientation,\n    (\n        CASE ((t.tgtype)::integer &amp; 66)\n            WHEN 2 THEN &apos;BEFORE&apos;::text\n            WHEN 64 THEN &apos;INSTEAD OF&apos;::text\n            ELSE &apos;AFTER&apos;::text\n        END)::information_schema.character_data AS action_timing,\n    (t.tgoldtable)::information_schema.sql_identifier AS action_reference_old_table,\n    (t.tgnewtable)::information_schema.sql_identifier AS action_reference_new_table,\n    (NULL::name)::information_schema.sql_identifier AS action_reference_old_row,\n    (NULL::name)::information_schema.sql_identifier AS action_reference_new_row,\n    (NULL::timestamp with time zone)::information_schema.time_stamp AS created\n   FROM pg_namespace n,\n    pg_class c,\n    pg_trigger t,\n    ( VALUES (4,&apos;INSERT&apos;::text), (8,&apos;DELETE&apos;::text), (16,&apos;UPDATE&apos;::text)) em(num, text)\n  WHERE ((n.oid = c.relnamespace) AND (c.oid = t.tgrelid) AND (((t.tgtype)::integer &amp; em.num) &lt;&gt; 0) AND (NOT t.tgisinternal) AND (NOT pg_is_other_temp_schema(n.oid)) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(c.oid, &apos;INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(c.oid, &apos;INSERT, UPDATE, REFERENCES&apos;::text)));",
      " SELECT column_privileges.grantor,\n    column_privileges.grantee,\n    column_privileges.table_catalog,\n    column_privileges.table_schema,\n    column_privileges.table_name,\n    column_privileges.column_name,\n    column_privileges.privilege_type,\n    column_privileges.is_grantable\n   FROM information_schema.column_privileges\n  WHERE (((column_privileges.grantor)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)) OR ((column_privileges.grantee)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)));",
      " SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (c.conname)::information_schema.sql_identifier AS constraint_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nr.nspname)::information_schema.sql_identifier AS table_schema,\n    (r.relname)::information_schema.sql_identifier AS table_name,\n    (\n        CASE c.contype\n            WHEN &apos;c&apos;::&quot;char&quot; THEN &apos;CHECK&apos;::text\n            WHEN &apos;f&apos;::&quot;char&quot; THEN &apos;FOREIGN KEY&apos;::text\n            WHEN &apos;p&apos;::&quot;char&quot; THEN &apos;PRIMARY KEY&apos;::text\n            WHEN &apos;u&apos;::&quot;char&quot; THEN &apos;UNIQUE&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS constraint_type,\n    (\n        CASE\n            WHEN c.condeferrable THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_deferrable,\n    (\n        CASE\n            WHEN c.condeferred THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS initially_deferred,\n    (&apos;YES&apos;::character varying)::information_schema.yes_or_no AS enforced\n   FROM pg_namespace nc,\n    pg_namespace nr,\n    pg_constraint c,\n    pg_class r\n  WHERE ((nc.oid = c.connamespace) AND (nr.oid = r.relnamespace) AND (c.conrelid = r.oid) AND (c.contype &lt;&gt; ALL (ARRAY[&apos;t&apos;::&quot;char&quot;, &apos;x&apos;::&quot;char&quot;])) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (NOT pg_is_other_temp_schema(nr.oid)) AND (pg_has_role(r.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(r.oid, &apos;INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(r.oid, &apos;INSERT, UPDATE, REFERENCES&apos;::text)))\nUNION ALL\n SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (nr.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (((((((nr.oid)::text || &apos;_&apos;::text) || (r.oid)::text) || &apos;_&apos;::text) || (a.attnum)::text) || &apos;_not_null&apos;::text))::information_schema.sql_identifier AS constraint_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nr.nspname)::information_schema.sql_identifier AS table_schema,\n    (r.relname)::information_schema.sql_identifier AS table_name,\n    (&apos;CHECK&apos;::character varying)::information_schema.character_data AS constraint_type,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_deferrable,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS initially_deferred,\n    (&apos;YES&apos;::character varying)::information_schema.yes_or_no AS enforced\n   FROM pg_namespace nr,\n    pg_class r,\n    pg_attribute a\n  WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND a.attnotnull AND (a.attnum &gt; 0) AND (NOT a.attisdropped) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (NOT pg_is_other_temp_schema(nr.oid)) AND (pg_has_role(r.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(r.oid, &apos;INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(r.oid, &apos;INSERT, UPDATE, REFERENCES&apos;::text)));",
      " SELECT _pg_foreign_tables.foreign_table_catalog,\n    _pg_foreign_tables.foreign_table_schema,\n    _pg_foreign_tables.foreign_table_name,\n    _pg_foreign_tables.foreign_server_catalog,\n    _pg_foreign_tables.foreign_server_name\n   FROM information_schema._pg_foreign_tables;",
      " SELECT applicable_roles.grantee,\n    applicable_roles.role_name,\n    applicable_roles.is_grantable\n   FROM information_schema.applicable_roles\n  WHERE ((applicable_roles.is_grantable)::text = &apos;YES&apos;::text);",
      " SELECT p.oid AS funcid,\n    n.nspname AS schemaname,\n    p.proname AS funcname,\n    pg_stat_get_xact_function_calls(p.oid) AS calls,\n    pg_stat_get_xact_function_total_time(p.oid) AS total_time,\n    pg_stat_get_xact_function_self_time(p.oid) AS self_time\n   FROM (pg_proc p\n     LEFT JOIN pg_namespace n ON ((n.oid = p.pronamespace)))\n  WHERE ((p.prolang &lt;&gt; (12)::oid) AND (pg_stat_get_xact_function_calls(p.oid) IS NOT NULL));",
      " SELECT d.oid AS datid,\n    d.datname,\n    pg_stat_get_db_conflict_tablespace(d.oid) AS confl_tablespace,\n    pg_stat_get_db_conflict_lock(d.oid) AS confl_lock,\n    pg_stat_get_db_conflict_snapshot(d.oid) AS confl_snapshot,\n    pg_stat_get_db_conflict_bufferpin(d.oid) AS confl_bufferpin,\n    pg_stat_get_db_conflict_startup_deadlock(d.oid) AS confl_deadlock\n   FROM pg_database d;",
      " SELECT (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (ss.n_nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(ss.proname, ss.p_oid))::information_schema.sql_identifier AS specific_name,\n    ((ss.x).n)::information_schema.cardinal_number AS ordinal_position,\n    (\n        CASE\n            WHEN (ss.proargmodes IS NULL) THEN &apos;IN&apos;::text\n            WHEN (ss.proargmodes[(ss.x).n] = &apos;i&apos;::&quot;char&quot;) THEN &apos;IN&apos;::text\n            WHEN (ss.proargmodes[(ss.x).n] = &apos;o&apos;::&quot;char&quot;) THEN &apos;OUT&apos;::text\n            WHEN (ss.proargmodes[(ss.x).n] = &apos;b&apos;::&quot;char&quot;) THEN &apos;INOUT&apos;::text\n            WHEN (ss.proargmodes[(ss.x).n] = &apos;v&apos;::&quot;char&quot;) THEN &apos;IN&apos;::text\n            WHEN (ss.proargmodes[(ss.x).n] = &apos;t&apos;::&quot;char&quot;) THEN &apos;OUT&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS parameter_mode,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_result,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS as_locator,\n    (NULLIF(ss.proargnames[(ss.x).n], &apos;&apos;::text))::information_schema.sql_identifier AS parameter_name,\n    (\n        CASE\n            WHEN ((t.typelem &lt;&gt; (0)::oid) AND (t.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n            WHEN (nt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(t.oid, NULL::integer)\n            ELSE &apos;USER-DEFINED&apos;::text\n        END)::information_schema.character_data AS data_type,\n    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,\n    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (NULL::name)::information_schema.sql_identifier AS collation_catalog,\n    (NULL::name)::information_schema.sql_identifier AS collation_schema,\n    (NULL::name)::information_schema.sql_identifier AS collation_name,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,\n    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,\n    (NULL::character varying)::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (t.typname)::information_schema.sql_identifier AS udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    ((ss.x).n)::information_schema.sql_identifier AS dtd_identifier,\n    (\n        CASE\n            WHEN pg_has_role(ss.proowner, &apos;USAGE&apos;::text) THEN pg_get_function_arg_default(ss.p_oid, (ss.x).n)\n            ELSE NULL::text\n        END)::information_schema.character_data AS parameter_default\n   FROM pg_type t,\n    pg_namespace nt,\n    ( SELECT n.nspname AS n_nspname,\n            p.proname,\n            p.oid AS p_oid,\n            p.proowner,\n            p.proargnames,\n            p.proargmodes,\n            information_schema._pg_expandarray(COALESCE(p.proallargtypes, (p.proargtypes)::oid[])) AS x\n           FROM pg_namespace n,\n            pg_proc p\n          WHERE ((n.oid = p.pronamespace) AND (pg_has_role(p.proowner, &apos;USAGE&apos;::text) OR has_function_privilege(p.oid, &apos;EXECUTE&apos;::text)))) ss\n  WHERE ((t.oid = (ss.x).x) AND (t.typnamespace = nt.oid));",
      " SELECT (u.rolname)::information_schema.sql_identifier AS grantor,\n    (&apos;PUBLIC&apos;::name)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS object_schema,\n    (c.collname)::information_schema.sql_identifier AS object_name,\n    (&apos;COLLATION&apos;::character varying)::information_schema.character_data AS object_type,\n    (&apos;USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_grantable\n   FROM pg_authid u,\n    pg_namespace n,\n    pg_collation c\n  WHERE ((u.oid = c.collowner) AND (c.collnamespace = n.oid) AND (c.collencoding = ANY (ARRAY[&apos;-1&apos;::integer, ( SELECT pg_database.encoding\n           FROM pg_database\n          WHERE (pg_database.datname = current_database()))])))\nUNION ALL\n SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS object_schema,\n    (t.typname)::information_schema.sql_identifier AS object_name,\n    (&apos;DOMAIN&apos;::character varying)::information_schema.character_data AS object_type,\n    (&apos;USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, t.typowner, &apos;USAGE&apos;::text) OR t.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_type.oid,\n            pg_type.typname,\n            pg_type.typnamespace,\n            pg_type.typtype,\n            pg_type.typowner,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).is_grantable AS is_grantable\n           FROM pg_type) t(oid, typname, typnamespace, typtype, typowner, grantor, grantee, prtype, grantable),\n    pg_namespace n,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((t.typnamespace = n.oid) AND (t.typtype = &apos;d&apos;::&quot;char&quot;) AND (t.grantee = grantee.oid) AND (t.grantor = u_grantor.oid) AND (t.prtype = &apos;USAGE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)))\nUNION ALL\n SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS object_catalog,\n    (&apos;&apos;::name)::information_schema.sql_identifier AS object_schema,\n    (fdw.fdwname)::information_schema.sql_identifier AS object_name,\n    (&apos;FOREIGN DATA WRAPPER&apos;::character varying)::information_schema.character_data AS object_type,\n    (&apos;USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, fdw.fdwowner, &apos;USAGE&apos;::text) OR fdw.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_foreign_data_wrapper.fdwname,\n            pg_foreign_data_wrapper.fdwowner,\n            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault(&apos;F&apos;::&quot;char&quot;, pg_foreign_data_wrapper.fdwowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault(&apos;F&apos;::&quot;char&quot;, pg_foreign_data_wrapper.fdwowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault(&apos;F&apos;::&quot;char&quot;, pg_foreign_data_wrapper.fdwowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault(&apos;F&apos;::&quot;char&quot;, pg_foreign_data_wrapper.fdwowner)))).is_grantable AS is_grantable\n           FROM pg_foreign_data_wrapper) fdw(fdwname, fdwowner, grantor, grantee, prtype, grantable),\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((u_grantor.oid = fdw.grantor) AND (grantee.oid = fdw.grantee) AND (fdw.prtype = &apos;USAGE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)))\nUNION ALL\n SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS object_catalog,\n    (&apos;&apos;::name)::information_schema.sql_identifier AS object_schema,\n    (srv.srvname)::information_schema.sql_identifier AS object_name,\n    (&apos;FOREIGN SERVER&apos;::character varying)::information_schema.character_data AS object_type,\n    (&apos;USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, srv.srvowner, &apos;USAGE&apos;::text) OR srv.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_foreign_server.srvname,\n            pg_foreign_server.srvowner,\n            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault(&apos;S&apos;::&quot;char&quot;, pg_foreign_server.srvowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault(&apos;S&apos;::&quot;char&quot;, pg_foreign_server.srvowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault(&apos;S&apos;::&quot;char&quot;, pg_foreign_server.srvowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault(&apos;S&apos;::&quot;char&quot;, pg_foreign_server.srvowner)))).is_grantable AS is_grantable\n           FROM pg_foreign_server) srv(srvname, srvowner, grantor, grantee, prtype, grantable),\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((u_grantor.oid = srv.grantor) AND (grantee.oid = srv.grantee) AND (srv.prtype = &apos;USAGE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)))\nUNION ALL\n SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS object_schema,\n    (c.relname)::information_schema.sql_identifier AS object_name,\n    (&apos;SEQUENCE&apos;::character varying)::information_schema.character_data AS object_type,\n    (&apos;USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, c.relowner, &apos;USAGE&apos;::text) OR c.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_class.oid,\n            pg_class.relname,\n            pg_class.relnamespace,\n            pg_class.relkind,\n            pg_class.relowner,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).is_grantable AS is_grantable\n           FROM pg_class) c(oid, relname, relnamespace, relkind, relowner, grantor, grantee, prtype, grantable),\n    pg_namespace n,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((c.relnamespace = n.oid) AND (c.relkind = &apos;S&apos;::&quot;char&quot;) AND (c.grantee = grantee.oid) AND (c.grantor = u_grantor.oid) AND (c.prtype = &apos;USAGE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)));",
      " SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (ncon.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (con.conname)::information_schema.sql_identifier AS constraint_name,\n    (\n        CASE\n            WHEN (npkc.nspname IS NULL) THEN NULL::name\n            ELSE current_database()\n        END)::information_schema.sql_identifier AS unique_constraint_catalog,\n    (npkc.nspname)::information_schema.sql_identifier AS unique_constraint_schema,\n    (pkc.conname)::information_schema.sql_identifier AS unique_constraint_name,\n    (\n        CASE con.confmatchtype\n            WHEN &apos;f&apos;::&quot;char&quot; THEN &apos;FULL&apos;::text\n            WHEN &apos;p&apos;::&quot;char&quot; THEN &apos;PARTIAL&apos;::text\n            WHEN &apos;s&apos;::&quot;char&quot; THEN &apos;NONE&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS match_option,\n    (\n        CASE con.confupdtype\n            WHEN &apos;c&apos;::&quot;char&quot; THEN &apos;CASCADE&apos;::text\n            WHEN &apos;n&apos;::&quot;char&quot; THEN &apos;SET NULL&apos;::text\n            WHEN &apos;d&apos;::&quot;char&quot; THEN &apos;SET DEFAULT&apos;::text\n            WHEN &apos;r&apos;::&quot;char&quot; THEN &apos;RESTRICT&apos;::text\n            WHEN &apos;a&apos;::&quot;char&quot; THEN &apos;NO ACTION&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS update_rule,\n    (\n        CASE con.confdeltype\n            WHEN &apos;c&apos;::&quot;char&quot; THEN &apos;CASCADE&apos;::text\n            WHEN &apos;n&apos;::&quot;char&quot; THEN &apos;SET NULL&apos;::text\n            WHEN &apos;d&apos;::&quot;char&quot; THEN &apos;SET DEFAULT&apos;::text\n            WHEN &apos;r&apos;::&quot;char&quot; THEN &apos;RESTRICT&apos;::text\n            WHEN &apos;a&apos;::&quot;char&quot; THEN &apos;NO ACTION&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS delete_rule\n   FROM ((((((pg_namespace ncon\n     JOIN pg_constraint con ON ((ncon.oid = con.connamespace)))\n     JOIN pg_class c ON (((con.conrelid = c.oid) AND (con.contype = &apos;f&apos;::&quot;char&quot;))))\n     LEFT JOIN pg_depend d1 ON (((d1.objid = con.oid) AND (d1.classid = (&apos;pg_constraint&apos;::regclass)::oid) AND (d1.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (d1.refobjsubid = 0))))\n     LEFT JOIN pg_depend d2 ON (((d2.refclassid = (&apos;pg_constraint&apos;::regclass)::oid) AND (d2.classid = (&apos;pg_class&apos;::regclass)::oid) AND (d2.objid = d1.refobjid) AND (d2.objsubid = 0) AND (d2.deptype = &apos;i&apos;::&quot;char&quot;))))\n     LEFT JOIN pg_constraint pkc ON (((pkc.oid = d2.refobjid) AND (pkc.contype = ANY (ARRAY[&apos;p&apos;::&quot;char&quot;, &apos;u&apos;::&quot;char&quot;])) AND (pkc.conrelid = con.confrelid))))\n     LEFT JOIN pg_namespace npkc ON ((pkc.connamespace = npkc.oid)))\n  WHERE (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(c.oid, &apos;INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(c.oid, &apos;INSERT, UPDATE, REFERENCES&apos;::text));",
      " SELECT (current_database())::information_schema.sql_identifier AS trigger_catalog,\n    (n.nspname)::information_schema.sql_identifier AS trigger_schema,\n    (t.tgname)::information_schema.sql_identifier AS trigger_name,\n    (current_database())::information_schema.sql_identifier AS event_object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS event_object_schema,\n    (c.relname)::information_schema.sql_identifier AS event_object_table,\n    (a.attname)::information_schema.sql_identifier AS event_object_column\n   FROM pg_namespace n,\n    pg_class c,\n    pg_trigger t,\n    ( SELECT ta0.tgoid,\n            (ta0.tgat).x AS tgattnum,\n            (ta0.tgat).n AS tgattpos\n           FROM ( SELECT pg_trigger.oid AS tgoid,\n                    information_schema._pg_expandarray(pg_trigger.tgattr) AS tgat\n                   FROM pg_trigger) ta0) ta,\n    pg_attribute a\n  WHERE ((n.oid = c.relnamespace) AND (c.oid = t.tgrelid) AND (t.oid = ta.tgoid) AND ((a.attrelid = t.tgrelid) AND (a.attnum = ta.tgattnum)) AND (NOT t.tgisinternal) AND (NOT pg_is_other_temp_schema(n.oid)) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_column_privilege(c.oid, a.attnum, &apos;INSERT, UPDATE, REFERENCES&apos;::text)));",
      " SELECT a.name,\n    a.setting,\n    a.unit,\n    a.category,\n    a.short_desc,\n    a.extra_desc,\n    a.context,\n    a.vartype,\n    a.source,\n    a.min_val,\n    a.max_val,\n    a.enumvals,\n    a.boot_val,\n    a.reset_val,\n    a.sourcefile,\n    a.sourceline,\n    a.pending_restart\n   FROM pg_show_all_settings() a(name, setting, unit, category, short_desc, extra_desc, context, vartype, source, min_val, max_val, enumvals, boot_val, reset_val, sourcefile, sourceline, pending_restart);",
      " SELECT p.pubname,\n    n.nspname AS schemaname,\n    c.relname AS tablename\n   FROM pg_publication p,\n    LATERAL pg_get_publication_tables((p.pubname)::text) gpt(relid),\n    (pg_class c\n     JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.oid = gpt.relid);",
      " SELECT pg_statio_all_tables.relid,\n    pg_statio_all_tables.schemaname,\n    pg_statio_all_tables.relname,\n    pg_statio_all_tables.heap_blks_read,\n    pg_statio_all_tables.heap_blks_hit,\n    pg_statio_all_tables.idx_blks_read,\n    pg_statio_all_tables.idx_blks_hit,\n    pg_statio_all_tables.toast_blks_read,\n    pg_statio_all_tables.toast_blks_hit,\n    pg_statio_all_tables.tidx_blks_read,\n    pg_statio_all_tables.tidx_blks_hit\n   FROM pg_statio_all_tables\n  WHERE ((pg_statio_all_tables.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_statio_all_tables.schemaname ~ &apos;^pg_toast&apos;::text));",
      " SELECT n.nspname AS schemaname,\n    c.relname AS sequencename,\n    pg_get_userbyid(c.relowner) AS sequenceowner,\n    (s.seqtypid)::regtype AS data_type,\n    s.seqstart AS start_value,\n    s.seqmin AS min_value,\n    s.seqmax AS max_value,\n    s.seqincrement AS increment_by,\n    s.seqcycle AS cycle,\n    s.seqcache AS cache_size,\n        CASE\n            WHEN has_sequence_privilege(c.oid, &apos;SELECT,USAGE&apos;::text) THEN pg_sequence_last_value((c.oid)::regclass)\n            ELSE NULL::bigint\n        END AS last_value\n   FROM ((pg_sequence s\n     JOIN pg_class c ON ((c.oid = s.seqrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE ((NOT pg_is_other_temp_schema(n.oid)) AND (c.relkind = &apos;S&apos;::&quot;char&quot;));",
      " SELECT c.name,\n    c.statement,\n    c.is_holdable,\n    c.is_binary,\n    c.is_scrollable,\n    c.creation_time\n   FROM pg_cursor() c(name, statement, is_holdable, is_binary, is_scrollable, creation_time);",
      " SELECT um.authorization_identifier,\n    um.foreign_server_catalog,\n    um.foreign_server_name,\n    (opts.option_name)::information_schema.sql_identifier AS option_name,\n    (\n        CASE\n            WHEN (((um.umuser &lt;&gt; (0)::oid) AND ((um.authorization_identifier)::name = CURRENT_USER)) OR ((um.umuser = (0)::oid) AND pg_has_role((um.srvowner)::name, &apos;USAGE&apos;::text)) OR ( SELECT pg_authid.rolsuper\n               FROM pg_authid\n              WHERE (pg_authid.rolname = CURRENT_USER))) THEN opts.option_value\n            ELSE NULL::text\n        END)::information_schema.character_data AS option_value\n   FROM information_schema._pg_user_mappings um,\n    LATERAL pg_options_to_table(um.umoptions) opts(option_name, option_value);",
      " SELECT s.pid,\n    s.ssl,\n    s.sslversion AS version,\n    s.sslcipher AS cipher,\n    s.sslbits AS bits,\n    s.sslcompression AS compression,\n    s.ssl_client_dn AS client_dn,\n    s.ssl_client_serial AS client_serial,\n    s.ssl_issuer_dn AS issuer_dn\n   FROM pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc);",
      " SELECT DISTINCT (current_database())::information_schema.sql_identifier AS view_catalog,\n    (nv.nspname)::information_schema.sql_identifier AS view_schema,\n    (v.relname)::information_schema.sql_identifier AS view_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS table_schema,\n    (t.relname)::information_schema.sql_identifier AS table_name\n   FROM pg_namespace nv,\n    pg_class v,\n    pg_depend dv,\n    pg_depend dt,\n    pg_class t,\n    pg_namespace nt\n  WHERE ((nv.oid = v.relnamespace) AND (v.relkind = &apos;v&apos;::&quot;char&quot;) AND (v.oid = dv.refobjid) AND (dv.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dv.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dv.deptype = &apos;i&apos;::&quot;char&quot;) AND (dv.objid = dt.objid) AND (dv.refobjid &lt;&gt; dt.refobjid) AND (dt.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dt.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dt.refobjid = t.oid) AND (t.relnamespace = nt.oid) AND (t.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND pg_has_role(t.relowner, &apos;USAGE&apos;::text));",
      " SELECT pg_stat_all_indexes.relid,\n    pg_stat_all_indexes.indexrelid,\n    pg_stat_all_indexes.schemaname,\n    pg_stat_all_indexes.relname,\n    pg_stat_all_indexes.indexrelname,\n    pg_stat_all_indexes.idx_scan,\n    pg_stat_all_indexes.idx_tup_read,\n    pg_stat_all_indexes.idx_tup_fetch\n   FROM pg_stat_all_indexes\n  WHERE ((pg_stat_all_indexes.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_stat_all_indexes.schemaname !~ &apos;^pg_toast&apos;::text));",
      " SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n        CASE\n            WHEN (rel.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) THEN &apos;table&apos;::text\n            WHEN (rel.relkind = &apos;v&apos;::&quot;char&quot;) THEN &apos;view&apos;::text\n            WHEN (rel.relkind = &apos;m&apos;::&quot;char&quot;) THEN &apos;materialized view&apos;::text\n            WHEN (rel.relkind = &apos;S&apos;::&quot;char&quot;) THEN &apos;sequence&apos;::text\n            WHEN (rel.relkind = &apos;f&apos;::&quot;char&quot;) THEN &apos;foreign table&apos;::text\n            ELSE NULL::text\n        END AS objtype,\n    rel.relnamespace AS objnamespace,\n        CASE\n            WHEN pg_table_is_visible(rel.oid) THEN quote_ident((rel.relname)::text)\n            ELSE ((quote_ident((nsp.nspname)::text) || &apos;.&apos;::text) || quote_ident((rel.relname)::text))\n        END AS objname,\n    l.provider,\n    l.label\n   FROM ((pg_seclabel l\n     JOIN pg_class rel ON (((l.classoid = rel.tableoid) AND (l.objoid = rel.oid))))\n     JOIN pg_namespace nsp ON ((rel.relnamespace = nsp.oid)))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;column&apos;::text AS objtype,\n    rel.relnamespace AS objnamespace,\n    ((\n        CASE\n            WHEN pg_table_is_visible(rel.oid) THEN quote_ident((rel.relname)::text)\n            ELSE ((quote_ident((nsp.nspname)::text) || &apos;.&apos;::text) || quote_ident((rel.relname)::text))\n        END || &apos;.&apos;::text) || (att.attname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (((pg_seclabel l\n     JOIN pg_class rel ON (((l.classoid = rel.tableoid) AND (l.objoid = rel.oid))))\n     JOIN pg_attribute att ON (((rel.oid = att.attrelid) AND (l.objsubid = att.attnum))))\n     JOIN pg_namespace nsp ON ((rel.relnamespace = nsp.oid)))\n  WHERE (l.objsubid &lt;&gt; 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n        CASE pro.prokind\n            WHEN &apos;a&apos;::&quot;char&quot; THEN &apos;aggregate&apos;::text\n            WHEN &apos;f&apos;::&quot;char&quot; THEN &apos;function&apos;::text\n            WHEN &apos;p&apos;::&quot;char&quot; THEN &apos;procedure&apos;::text\n            WHEN &apos;w&apos;::&quot;char&quot; THEN &apos;window&apos;::text\n            ELSE NULL::text\n        END AS objtype,\n    pro.pronamespace AS objnamespace,\n    (((\n        CASE\n            WHEN pg_function_is_visible(pro.oid) THEN quote_ident((pro.proname)::text)\n            ELSE ((quote_ident((nsp.nspname)::text) || &apos;.&apos;::text) || quote_ident((pro.proname)::text))\n        END || &apos;(&apos;::text) || pg_get_function_arguments(pro.oid)) || &apos;)&apos;::text) AS objname,\n    l.provider,\n    l.label\n   FROM ((pg_seclabel l\n     JOIN pg_proc pro ON (((l.classoid = pro.tableoid) AND (l.objoid = pro.oid))))\n     JOIN pg_namespace nsp ON ((pro.pronamespace = nsp.oid)))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n        CASE\n            WHEN (typ.typtype = &apos;d&apos;::&quot;char&quot;) THEN &apos;domain&apos;::text\n            ELSE &apos;type&apos;::text\n        END AS objtype,\n    typ.typnamespace AS objnamespace,\n        CASE\n            WHEN pg_type_is_visible(typ.oid) THEN quote_ident((typ.typname)::text)\n            ELSE ((quote_ident((nsp.nspname)::text) || &apos;.&apos;::text) || quote_ident((typ.typname)::text))\n        END AS objname,\n    l.provider,\n    l.label\n   FROM ((pg_seclabel l\n     JOIN pg_type typ ON (((l.classoid = typ.tableoid) AND (l.objoid = typ.oid))))\n     JOIN pg_namespace nsp ON ((typ.typnamespace = nsp.oid)))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;large object&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    (l.objoid)::text AS objname,\n    l.provider,\n    l.label\n   FROM (pg_seclabel l\n     JOIN pg_largeobject_metadata lom ON ((l.objoid = lom.oid)))\n  WHERE ((l.classoid = (&apos;pg_largeobject&apos;::regclass)::oid) AND (l.objsubid = 0))\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;language&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((lan.lanname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_seclabel l\n     JOIN pg_language lan ON (((l.classoid = lan.tableoid) AND (l.objoid = lan.oid))))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;schema&apos;::text AS objtype,\n    nsp.oid AS objnamespace,\n    quote_ident((nsp.nspname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_seclabel l\n     JOIN pg_namespace nsp ON (((l.classoid = nsp.tableoid) AND (l.objoid = nsp.oid))))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;event trigger&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((evt.evtname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_seclabel l\n     JOIN pg_event_trigger evt ON (((l.classoid = evt.tableoid) AND (l.objoid = evt.oid))))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;publication&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((p.pubname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_seclabel l\n     JOIN pg_publication p ON (((l.classoid = p.tableoid) AND (l.objoid = p.oid))))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    0 AS objsubid,\n    &apos;subscription&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((s.subname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_shseclabel l\n     JOIN pg_subscription s ON (((l.classoid = s.tableoid) AND (l.objoid = s.oid))))\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    0 AS objsubid,\n    &apos;database&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((dat.datname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_shseclabel l\n     JOIN pg_database dat ON (((l.classoid = dat.tableoid) AND (l.objoid = dat.oid))))\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    0 AS objsubid,\n    &apos;tablespace&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((spc.spcname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_shseclabel l\n     JOIN pg_tablespace spc ON (((l.classoid = spc.tableoid) AND (l.objoid = spc.oid))))\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    0 AS objsubid,\n    &apos;role&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((rol.rolname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_shseclabel l\n     JOIN pg_authid rol ON (((l.classoid = rol.tableoid) AND (l.objoid = rol.oid))));",
      " SELECT pg_authid.rolname,\n    pg_authid.rolsuper,\n    pg_authid.rolinherit,\n    pg_authid.rolcreaterole,\n    pg_authid.rolcreatedb,\n    pg_authid.rolcanlogin,\n    pg_authid.rolreplication,\n    pg_authid.rolconnlimit,\n    &apos;********&apos;::text AS rolpassword,\n    pg_authid.rolvaliduntil,\n    pg_authid.rolbypassrls,\n    s.setconfig AS rolconfig,\n    pg_authid.oid\n   FROM (pg_authid\n     LEFT JOIN pg_db_role_setting s ON (((pg_authid.oid = s.setrole) AND (s.setdatabase = (0)::oid))));",
      " SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (\n        CASE\n            WHEN pg_has_role(c.relowner, &apos;USAGE&apos;::text) THEN pg_get_viewdef(c.oid)\n            ELSE NULL::text\n        END)::information_schema.character_data AS view_definition,\n    (\n        CASE\n            WHEN (&apos;check_option=cascaded&apos;::text = ANY (c.reloptions)) THEN &apos;CASCADED&apos;::text\n            WHEN (&apos;check_option=local&apos;::text = ANY (c.reloptions)) THEN &apos;LOCAL&apos;::text\n            ELSE &apos;NONE&apos;::text\n        END)::information_schema.character_data AS check_option,\n    (\n        CASE\n            WHEN ((pg_relation_is_updatable((c.oid)::regclass, false) &amp; 20) = 20) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_updatable,\n    (\n        CASE\n            WHEN ((pg_relation_is_updatable((c.oid)::regclass, false) &amp; 8) = 8) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_insertable_into,\n    (\n        CASE\n            WHEN (EXISTS ( SELECT 1\n               FROM pg_trigger\n              WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer &amp; 81) = 81)))) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_trigger_updatable,\n    (\n        CASE\n            WHEN (EXISTS ( SELECT 1\n               FROM pg_trigger\n              WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer &amp; 73) = 73)))) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_trigger_deletable,\n    (\n        CASE\n            WHEN (EXISTS ( SELECT 1\n               FROM pg_trigger\n              WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer &amp; 69) = 69)))) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_trigger_insertable_into\n   FROM pg_namespace nc,\n    pg_class c\n  WHERE ((c.relnamespace = nc.oid) AND (c.relkind = &apos;v&apos;::&quot;char&quot;) AND (NOT pg_is_other_temp_schema(nc.oid)) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)));",
      " SELECT (current_database())::information_schema.sql_identifier AS domain_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS domain_schema,\n    (t.typname)::information_schema.sql_identifier AS domain_name,\n    (\n        CASE\n            WHEN ((t.typelem &lt;&gt; (0)::oid) AND (t.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n            WHEN (nbt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(t.typbasetype, NULL::integer)\n            ELSE &apos;USER-DEFINED&apos;::text\n        END)::information_schema.character_data AS data_type,\n    (information_schema._pg_char_max_length(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS character_maximum_length,\n    (information_schema._pg_char_octet_length(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (\n        CASE\n            WHEN (nco.nspname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS collation_catalog,\n    (nco.nspname)::information_schema.sql_identifier AS collation_schema,\n    (co.collname)::information_schema.sql_identifier AS collation_name,\n    (information_schema._pg_numeric_precision(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_precision,\n    (information_schema._pg_numeric_precision_radix(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_precision_radix,\n    (information_schema._pg_numeric_scale(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_scale,\n    (information_schema._pg_datetime_precision(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS datetime_precision,\n    (information_schema._pg_interval_type(t.typbasetype, t.typtypmod))::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (t.typdefault)::information_schema.character_data AS domain_default,\n    (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nbt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (bt.typname)::information_schema.sql_identifier AS udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    (1)::information_schema.sql_identifier AS dtd_identifier\n   FROM (((pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))\n     JOIN (pg_type bt\n     JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typbasetype = bt.oid) AND (t.typtype = &apos;d&apos;::&quot;char&quot;))))\n     LEFT JOIN (pg_collation co\n     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((t.typcollation = co.oid) AND ((nco.nspname &lt;&gt; &apos;pg_catalog&apos;::name) OR (co.collname &lt;&gt; &apos;default&apos;::name)))))\n  WHERE (pg_has_role(t.typowner, &apos;USAGE&apos;::text) OR has_type_privilege(t.oid, &apos;USAGE&apos;::text));",
      " SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (n.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (ac.attname)::information_schema.sql_identifier AS column_name,\n    (ad.attname)::information_schema.sql_identifier AS dependent_column\n   FROM pg_namespace n,\n    pg_class c,\n    pg_depend d,\n    pg_attribute ac,\n    pg_attribute ad\n  WHERE ((n.oid = c.relnamespace) AND (c.oid = ac.attrelid) AND (c.oid = ad.attrelid) AND (d.classid = (&apos;pg_class&apos;::regclass)::oid) AND (d.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (d.objid = d.refobjid) AND (c.oid = d.objid) AND (d.objsubid = ad.attnum) AND (d.refobjsubid = ac.attnum) AND (ad.attgenerated &lt;&gt; &apos;&apos;::&quot;char&quot;) AND pg_has_role(c.relowner, &apos;USAGE&apos;::text));",
      " SELECT (current_database())::information_schema.sql_identifier AS collation_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS collation_schema,\n    (c.collname)::information_schema.sql_identifier AS collation_name,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (getdatabaseencoding())::information_schema.sql_identifier AS character_set_name\n   FROM pg_collation c,\n    pg_namespace nc\n  WHERE ((c.collnamespace = nc.oid) AND (c.collencoding = ANY (ARRAY[&apos;-1&apos;::integer, ( SELECT pg_database.encoding\n           FROM pg_database\n          WHERE (pg_database.datname = current_database()))])));",
      " SELECT w.foreign_data_wrapper_catalog,\n    w.foreign_data_wrapper_name,\n    w.authorization_identifier,\n    (NULL::character varying)::information_schema.character_data AS library_name,\n    w.foreign_data_wrapper_language\n   FROM information_schema._pg_foreign_data_wrappers w;",
      " SELECT n.nspname AS schemaname,\n    c.relname AS viewname,\n    pg_get_userbyid(c.relowner) AS viewowner,\n    pg_get_viewdef(c.oid) AS definition\n   FROM (pg_class c\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = &apos;v&apos;::&quot;char&quot;);",
      " SELECT (current_database())::information_schema.sql_identifier AS object_catalog,\n    x.objschema AS object_schema,\n    x.objname AS object_name,\n    (x.objtype)::information_schema.character_data AS object_type,\n    x.objdtdid AS dtd_identifier\n   FROM ( SELECT attributes.udt_schema,\n            attributes.udt_name,\n            &apos;USER-DEFINED TYPE&apos;::text AS text,\n            attributes.dtd_identifier\n           FROM information_schema.attributes\n        UNION ALL\n         SELECT columns.table_schema,\n            columns.table_name,\n            &apos;TABLE&apos;::text AS text,\n            columns.dtd_identifier\n           FROM information_schema.columns\n        UNION ALL\n         SELECT domains.domain_schema,\n            domains.domain_name,\n            &apos;DOMAIN&apos;::text AS text,\n            domains.dtd_identifier\n           FROM information_schema.domains\n        UNION ALL\n         SELECT parameters.specific_schema,\n            parameters.specific_name,\n            &apos;ROUTINE&apos;::text AS text,\n            parameters.dtd_identifier\n           FROM information_schema.parameters\n        UNION ALL\n         SELECT routines.specific_schema,\n            routines.specific_name,\n            &apos;ROUTINE&apos;::text AS text,\n            routines.dtd_identifier\n           FROM information_schema.routines) x(objschema, objname, objtype, objdtdid);",
      " SELECT s.foreign_server_catalog,\n    s.foreign_server_name,\n    ((pg_options_to_table(s.srvoptions)).option_name)::information_schema.sql_identifier AS option_name,\n    ((pg_options_to_table(s.srvoptions)).option_value)::information_schema.character_data AS option_value\n   FROM information_schema._pg_foreign_servers s;",
      " SELECT udt_privileges.grantor,\n    udt_privileges.grantee,\n    udt_privileges.udt_catalog,\n    udt_privileges.udt_schema,\n    udt_privileges.udt_name,\n    udt_privileges.privilege_type,\n    udt_privileges.is_grantable\n   FROM information_schema.udt_privileges\n  WHERE (((udt_privileges.grantor)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)) OR ((udt_privileges.grantee)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)));",
      " SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (x.relname)::information_schema.sql_identifier AS table_name,\n    (x.attname)::information_schema.sql_identifier AS column_name,\n    (x.prtype)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(x.grantee, x.relowner, &apos;USAGE&apos;::text) OR x.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pr_c.grantor,\n            pr_c.grantee,\n            a.attname,\n            pr_c.relname,\n            pr_c.relnamespace,\n            pr_c.prtype,\n            pr_c.grantable,\n            pr_c.relowner\n           FROM ( SELECT pg_class.oid,\n                    pg_class.relname,\n                    pg_class.relnamespace,\n                    pg_class.relowner,\n                    (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantor AS grantor,\n                    (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantee AS grantee,\n                    (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).privilege_type AS privilege_type,\n                    (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).is_grantable AS is_grantable\n                   FROM pg_class\n                  WHERE (pg_class.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;]))) pr_c(oid, relname, relnamespace, relowner, grantor, grantee, prtype, grantable),\n            pg_attribute a\n          WHERE ((a.attrelid = pr_c.oid) AND (a.attnum &gt; 0) AND (NOT a.attisdropped))\n        UNION\n         SELECT pr_a.grantor,\n            pr_a.grantee,\n            pr_a.attname,\n            c.relname,\n            c.relnamespace,\n            pr_a.prtype,\n            pr_a.grantable,\n            c.relowner\n           FROM ( SELECT a.attrelid,\n                    a.attname,\n                    (aclexplode(COALESCE(a.attacl, acldefault(&apos;c&apos;::&quot;char&quot;, cc.relowner)))).grantor AS grantor,\n                    (aclexplode(COALESCE(a.attacl, acldefault(&apos;c&apos;::&quot;char&quot;, cc.relowner)))).grantee AS grantee,\n                    (aclexplode(COALESCE(a.attacl, acldefault(&apos;c&apos;::&quot;char&quot;, cc.relowner)))).privilege_type AS privilege_type,\n                    (aclexplode(COALESCE(a.attacl, acldefault(&apos;c&apos;::&quot;char&quot;, cc.relowner)))).is_grantable AS is_grantable\n                   FROM (pg_attribute a\n                     JOIN pg_class cc ON ((a.attrelid = cc.oid)))\n                  WHERE ((a.attnum &gt; 0) AND (NOT a.attisdropped))) pr_a(attrelid, attname, grantor, grantee, prtype, grantable),\n            pg_class c\n          WHERE ((pr_a.attrelid = c.oid) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])))) x,\n    pg_namespace nc,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((x.relnamespace = nc.oid) AND (x.grantee = grantee.oid) AND (x.grantor = u_grantor.oid) AND (x.prtype = ANY (ARRAY[&apos;INSERT&apos;::text, &apos;SELECT&apos;::text, &apos;UPDATE&apos;::text, &apos;REFERENCES&apos;::text])) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)));",
      " SELECT s.pid,\n    s.usesysid,\n    u.rolname AS usename,\n    s.application_name,\n    s.client_addr,\n    s.client_hostname,\n    s.client_port,\n    s.backend_start,\n    s.backend_xmin,\n    w.state,\n    w.sent_lsn,\n    w.write_lsn,\n    w.flush_lsn,\n    w.replay_lsn,\n    w.write_lag,\n    w.flush_lag,\n    w.replay_lag,\n    w.sync_priority,\n    w.sync_state,\n    w.reply_time\n   FROM ((pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc)\n     JOIN pg_stat_get_wal_senders() w(pid, state, sent_lsn, write_lsn, flush_lsn, replay_lsn, write_lag, flush_lag, replay_lag, sync_priority, sync_state, reply_time) ON ((s.pid = w.pid)))\n     LEFT JOIN pg_authid u ON ((s.usesysid = u.oid)));",
      " SELECT pg_stat_xact_all_tables.relid,\n    pg_stat_xact_all_tables.schemaname,\n    pg_stat_xact_all_tables.relname,\n    pg_stat_xact_all_tables.seq_scan,\n    pg_stat_xact_all_tables.seq_tup_read,\n    pg_stat_xact_all_tables.idx_scan,\n    pg_stat_xact_all_tables.idx_tup_fetch,\n    pg_stat_xact_all_tables.n_tup_ins,\n    pg_stat_xact_all_tables.n_tup_upd,\n    pg_stat_xact_all_tables.n_tup_del,\n    pg_stat_xact_all_tables.n_tup_hot_upd\n   FROM pg_stat_xact_all_tables\n  WHERE ((pg_stat_xact_all_tables.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_stat_xact_all_tables.schemaname !~ &apos;^pg_toast&apos;::text));",
      " SELECT (current_database())::information_schema.sql_identifier AS collation_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS collation_schema,\n    (c.collname)::information_schema.sql_identifier AS collation_name,\n    (&apos;NO PAD&apos;::character varying)::information_schema.character_data AS pad_attribute\n   FROM pg_collation c,\n    pg_namespace nc\n  WHERE ((c.collnamespace = nc.oid) AND (c.collencoding = ANY (ARRAY[&apos;-1&apos;::integer, ( SELECT pg_database.encoding\n           FROM pg_database\n          WHERE (pg_database.datname = current_database()))])));",
      " SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (rs.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (con.conname)::information_schema.sql_identifier AS constraint_name,\n    (current_database())::information_schema.sql_identifier AS domain_catalog,\n    (n.nspname)::information_schema.sql_identifier AS domain_schema,\n    (t.typname)::information_schema.sql_identifier AS domain_name,\n    (\n        CASE\n            WHEN con.condeferrable THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_deferrable,\n    (\n        CASE\n            WHEN con.condeferred THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS initially_deferred\n   FROM pg_namespace rs,\n    pg_namespace n,\n    pg_constraint con,\n    pg_type t\n  WHERE ((rs.oid = con.connamespace) AND (n.oid = t.typnamespace) AND (t.oid = con.contypid) AND (pg_has_role(t.typowner, &apos;USAGE&apos;::text) OR has_type_privilege(t.oid, &apos;USAGE&apos;::text)));",
      " SELECT (current_database())::information_schema.sql_identifier AS sequence_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS sequence_schema,\n    (c.relname)::information_schema.sql_identifier AS sequence_name,\n    (format_type(s.seqtypid, NULL::integer))::information_schema.character_data AS data_type,\n    (information_schema._pg_numeric_precision(s.seqtypid, &apos;-1&apos;::integer))::information_schema.cardinal_number AS numeric_precision,\n    (2)::information_schema.cardinal_number AS numeric_precision_radix,\n    (0)::information_schema.cardinal_number AS numeric_scale,\n    (s.seqstart)::information_schema.character_data AS start_value,\n    (s.seqmin)::information_schema.character_data AS minimum_value,\n    (s.seqmax)::information_schema.character_data AS maximum_value,\n    (s.seqincrement)::information_schema.character_data AS increment,\n    (\n        CASE\n            WHEN s.seqcycle THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS cycle_option\n   FROM pg_namespace nc,\n    pg_class c,\n    pg_sequence s\n  WHERE ((c.relnamespace = nc.oid) AND (c.relkind = &apos;S&apos;::&quot;char&quot;) AND (NOT (EXISTS ( SELECT 1\n           FROM pg_depend\n          WHERE ((pg_depend.classid = (&apos;pg_class&apos;::regclass)::oid) AND (pg_depend.objid = c.oid) AND (pg_depend.deptype = &apos;i&apos;::&quot;char&quot;))))) AND (NOT pg_is_other_temp_schema(nc.oid)) AND (c.oid = s.seqrelid) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_sequence_privilege(c.oid, &apos;SELECT, UPDATE, USAGE&apos;::text)));",
      " SELECT DISTINCT (current_database())::information_schema.sql_identifier AS view_catalog,\n    (nv.nspname)::information_schema.sql_identifier AS view_schema,\n    (v.relname)::information_schema.sql_identifier AS view_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS table_schema,\n    (t.relname)::information_schema.sql_identifier AS table_name,\n    (a.attname)::information_schema.sql_identifier AS column_name\n   FROM pg_namespace nv,\n    pg_class v,\n    pg_depend dv,\n    pg_depend dt,\n    pg_class t,\n    pg_namespace nt,\n    pg_attribute a\n  WHERE ((nv.oid = v.relnamespace) AND (v.relkind = &apos;v&apos;::&quot;char&quot;) AND (v.oid = dv.refobjid) AND (dv.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dv.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dv.deptype = &apos;i&apos;::&quot;char&quot;) AND (dv.objid = dt.objid) AND (dv.refobjid &lt;&gt; dt.refobjid) AND (dt.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dt.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dt.refobjid = t.oid) AND (t.relnamespace = nt.oid) AND (t.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (t.oid = a.attrelid) AND (dt.refobjsubid = a.attnum) AND pg_has_role(t.relowner, &apos;USAGE&apos;::text));",
      " SELECT p.oid AS funcid,\n    n.nspname AS schemaname,\n    p.proname AS funcname,\n    pg_stat_get_function_calls(p.oid) AS calls,\n    pg_stat_get_function_total_time(p.oid) AS total_time,\n    pg_stat_get_function_self_time(p.oid) AS self_time\n   FROM (pg_proc p\n     LEFT JOIN pg_namespace n ON ((n.oid = p.pronamespace)))\n  WHERE ((p.prolang &lt;&gt; (12)::oid) AND (pg_stat_get_function_calls(p.oid) IS NOT NULL));",
      " SELECT _pg_user_mappings.authorization_identifier,\n    _pg_user_mappings.foreign_server_catalog,\n    _pg_user_mappings.foreign_server_name\n   FROM information_schema._pg_user_mappings;",
      " SELECT usage_privileges.grantor,\n    usage_privileges.grantee,\n    usage_privileges.object_catalog,\n    usage_privileges.object_schema,\n    usage_privileges.object_name,\n    usage_privileges.object_type,\n    usage_privileges.privilege_type,\n    usage_privileges.is_grantable\n   FROM information_schema.usage_privileges\n  WHERE (((usage_privileges.grantor)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)) OR ((usage_privileges.grantee)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)));",
      " SELECT a.sourcefile,\n    a.sourceline,\n    a.seqno,\n    a.name,\n    a.setting,\n    a.applied,\n    a.error\n   FROM pg_show_all_file_settings() a(sourcefile, sourceline, seqno, name, setting, applied, error);",
      " SELECT routine_privileges.grantor,\n    routine_privileges.grantee,\n    routine_privileges.specific_catalog,\n    routine_privileges.specific_schema,\n    routine_privileges.specific_name,\n    routine_privileges.routine_catalog,\n    routine_privileges.routine_schema,\n    routine_privileges.routine_name,\n    routine_privileges.privilege_type,\n    routine_privileges.is_grantable\n   FROM information_schema.routine_privileges\n  WHERE (((routine_privileges.grantor)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)) OR ((routine_privileges.grantee)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)));",
      " SELECT s.pid,\n    s.datid,\n    d.datname,\n    s.relid,\n        CASE s.param1\n            WHEN 0 THEN &apos;initializing&apos;::text\n            WHEN 1 THEN &apos;scanning heap&apos;::text\n            WHEN 2 THEN &apos;vacuuming indexes&apos;::text\n            WHEN 3 THEN &apos;vacuuming heap&apos;::text\n            WHEN 4 THEN &apos;cleaning up indexes&apos;::text\n            WHEN 5 THEN &apos;truncating heap&apos;::text\n            WHEN 6 THEN &apos;performing final cleanup&apos;::text\n            ELSE NULL::text\n        END AS phase,\n    s.param2 AS heap_blks_total,\n    s.param3 AS heap_blks_scanned,\n    s.param4 AS heap_blks_vacuumed,\n    s.param5 AS index_vacuum_count,\n    s.param6 AS max_dead_tuples,\n    s.param7 AS num_dead_tuples\n   FROM (pg_stat_get_progress_info(&apos;VACUUM&apos;::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)\n     LEFT JOIN pg_database d ON ((s.datid = d.oid)));",
      " SELECT s.pid,\n    s.datid,\n    d.datname,\n    s.relid,\n        CASE s.param1\n            WHEN 1 THEN &apos;CLUSTER&apos;::text\n            WHEN 2 THEN &apos;VACUUM FULL&apos;::text\n            ELSE NULL::text\n        END AS command,\n        CASE s.param2\n            WHEN 0 THEN &apos;initializing&apos;::text\n            WHEN 1 THEN &apos;seq scanning heap&apos;::text\n            WHEN 2 THEN &apos;index scanning heap&apos;::text\n            WHEN 3 THEN &apos;sorting tuples&apos;::text\n            WHEN 4 THEN &apos;writing new heap&apos;::text\n            WHEN 5 THEN &apos;swapping relation files&apos;::text\n            WHEN 6 THEN &apos;rebuilding index&apos;::text\n            WHEN 7 THEN &apos;performing final cleanup&apos;::text\n            ELSE NULL::text\n        END AS phase,\n    (s.param3)::oid AS cluster_index_relid,\n    s.param4 AS heap_tuples_scanned,\n    s.param5 AS heap_tuples_written,\n    s.param6 AS heap_blks_total,\n    s.param7 AS heap_blks_scanned,\n    s.param8 AS index_rebuild_count\n   FROM (pg_stat_get_progress_info(&apos;CLUSTER&apos;::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)\n     LEFT JOIN pg_database d ON ((s.datid = d.oid)));",
      " SELECT cn.nspname AS schemaname,\n    c.relname AS tablename,\n    sn.nspname AS statistics_schemaname,\n    s.stxname AS statistics_name,\n    pg_get_userbyid(s.stxowner) AS statistics_owner,\n    ( SELECT array_agg(a.attname ORDER BY a.attnum) AS array_agg\n           FROM (unnest(s.stxkeys) k(k)\n             JOIN pg_attribute a ON (((a.attrelid = s.stxrelid) AND (a.attnum = k.k))))) AS attnames,\n    s.stxkind AS kinds,\n    sd.stxdndistinct AS n_distinct,\n    sd.stxddependencies AS dependencies,\n    m.most_common_vals,\n    m.most_common_val_nulls,\n    m.most_common_freqs,\n    m.most_common_base_freqs\n   FROM (((((pg_statistic_ext s\n     JOIN pg_class c ON ((c.oid = s.stxrelid)))\n     JOIN pg_statistic_ext_data sd ON ((s.oid = sd.stxoid)))\n     LEFT JOIN pg_namespace cn ON ((cn.oid = c.relnamespace)))\n     LEFT JOIN pg_namespace sn ON ((sn.oid = s.stxnamespace)))\n     LEFT JOIN LATERAL ( SELECT array_agg(pg_mcv_list_items.&quot;values&quot;) AS most_common_vals,\n            array_agg(pg_mcv_list_items.nulls) AS most_common_val_nulls,\n            array_agg(pg_mcv_list_items.frequency) AS most_common_freqs,\n            array_agg(pg_mcv_list_items.base_frequency) AS most_common_base_freqs\n           FROM pg_mcv_list_items(sd.stxdmcv) pg_mcv_list_items(index, &quot;values&quot;, nulls, frequency, base_frequency)) m ON ((sd.stxdmcv IS NOT NULL)))\n  WHERE ((NOT (EXISTS ( SELECT 1\n           FROM (unnest(s.stxkeys) k(k)\n             JOIN pg_attribute a ON (((a.attrelid = s.stxrelid) AND (a.attnum = k.k))))\n          WHERE (NOT has_column_privilege(c.oid, a.attnum, &apos;select&apos;::text))))) AND ((c.relrowsecurity = false) OR (NOT row_security_active(c.oid))));",
      " SELECT s.datid,\n    d.datname,\n    s.pid,\n    s.usesysid,\n    u.rolname AS usename,\n    s.application_name,\n    s.client_addr,\n    s.client_hostname,\n    s.client_port,\n    s.backend_start,\n    s.xact_start,\n    s.query_start,\n    s.state_change,\n    s.wait_event_type,\n    s.wait_event,\n    s.state,\n    s.backend_xid,\n    s.backend_xmin,\n    s.query,\n    s.backend_type\n   FROM ((pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc)\n     LEFT JOIN pg_database d ON ((s.datid = d.oid)))\n     LEFT JOIN pg_authid u ON ((s.usesysid = u.oid)));",
      " SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nr.nspname)::information_schema.sql_identifier AS table_schema,\n    (r.relname)::information_schema.sql_identifier AS table_name,\n    (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (c.conname)::information_schema.sql_identifier AS constraint_name\n   FROM pg_constraint c,\n    pg_namespace nc,\n    pg_class r,\n    pg_namespace nr\n  WHERE ((c.connamespace = nc.oid) AND (r.relnamespace = nr.oid) AND (((c.contype = &apos;f&apos;::&quot;char&quot;) AND (c.confrelid = r.oid)) OR ((c.contype = ANY (ARRAY[&apos;p&apos;::&quot;char&quot;, &apos;u&apos;::&quot;char&quot;])) AND (c.conrelid = r.oid))) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND pg_has_role(r.relowner, &apos;USAGE&apos;::text));",
      " SELECT pg_show_replication_origin_status.local_id,\n    pg_show_replication_origin_status.external_id,\n    pg_show_replication_origin_status.remote_lsn,\n    pg_show_replication_origin_status.local_lsn\n   FROM pg_show_replication_origin_status() pg_show_replication_origin_status(local_id, external_id, remote_lsn, local_lsn);",
      " SELECT pg_timezone_names.name,\n    pg_timezone_names.abbrev,\n    pg_timezone_names.utc_offset,\n    pg_timezone_names.is_dst\n   FROM pg_timezone_names() pg_timezone_names(name, abbrev, utc_offset, is_dst);",
      " SELECT n.nspname AS schemaname,\n    c.relname AS tablename,\n    r.rulename,\n    pg_get_ruledef(r.oid) AS definition\n   FROM ((pg_rewrite r\n     JOIN pg_class c ON ((c.oid = r.ev_class)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (r.rulename &lt;&gt; &apos;_RETURN&apos;::name);",
      " SELECT pg_stat_get_bgwriter_timed_checkpoints() AS checkpoints_timed,\n    pg_stat_get_bgwriter_requested_checkpoints() AS checkpoints_req,\n    pg_stat_get_checkpoint_write_time() AS checkpoint_write_time,\n    pg_stat_get_checkpoint_sync_time() AS checkpoint_sync_time,\n    pg_stat_get_bgwriter_buf_written_checkpoints() AS buffers_checkpoint,\n    pg_stat_get_bgwriter_buf_written_clean() AS buffers_clean,\n    pg_stat_get_bgwriter_maxwritten_clean() AS maxwritten_clean,\n    pg_stat_get_buf_written_backend() AS buffers_backend,\n    pg_stat_get_buf_fsync_backend() AS buffers_backend_fsync,\n    pg_stat_get_buf_alloc() AS buffers_alloc,\n    pg_stat_get_bgwriter_stat_reset_time() AS stats_reset;",
      " SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (c.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (c.attname)::information_schema.sql_identifier AS column_name,\n    ((pg_options_to_table(c.attfdwoptions)).option_name)::information_schema.sql_identifier AS option_name,\n    ((pg_options_to_table(c.attfdwoptions)).option_value)::information_schema.character_data AS option_value\n   FROM information_schema._pg_foreign_table_columns c;",
      " SELECT s.archived_count,\n    s.last_archived_wal,\n    s.last_archived_time,\n    s.failed_count,\n    s.last_failed_wal,\n    s.last_failed_time,\n    s.stats_reset\n   FROM pg_stat_get_archiver() s(archived_count, last_archived_wal, last_archived_time, failed_count, last_failed_wal, last_failed_time, stats_reset);",
      " SELECT c.oid AS relid,\n    i.oid AS indexrelid,\n    n.nspname AS schemaname,\n    c.relname,\n    i.relname AS indexrelname,\n    pg_stat_get_numscans(i.oid) AS idx_scan,\n    pg_stat_get_tuples_returned(i.oid) AS idx_tup_read,\n    pg_stat_get_tuples_fetched(i.oid) AS idx_tup_fetch\n   FROM (((pg_class c\n     JOIN pg_index x ON ((c.oid = x.indrelid)))\n     JOIN pg_class i ON ((i.oid = x.indexrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;t&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;]));",
      " SELECT n.nspname AS schemaname,\n    c.relname AS tablename,\n    i.relname AS indexname,\n    t.spcname AS tablespace,\n    pg_get_indexdef(i.oid) AS indexdef\n   FROM ((((pg_index x\n     JOIN pg_class c ON ((c.oid = x.indrelid)))\n     JOIN pg_class i ON ((i.oid = x.indexrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n     LEFT JOIN pg_tablespace t ON ((t.oid = i.reltablespace)))\n  WHERE ((c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (i.relkind = ANY (ARRAY[&apos;i&apos;::&quot;char&quot;, &apos;I&apos;::&quot;char&quot;])));",
      " SELECT w.foreign_data_wrapper_catalog,\n    w.foreign_data_wrapper_name,\n    ((pg_options_to_table(w.fdwoptions)).option_name)::information_schema.sql_identifier AS option_name,\n    ((pg_options_to_table(w.fdwoptions)).option_value)::information_schema.character_data AS option_value\n   FROM information_schema._pg_foreign_data_wrappers w;",
      " SELECT (a.rolname)::information_schema.sql_identifier AS grantee,\n    (b.rolname)::information_schema.sql_identifier AS role_name,\n    (\n        CASE\n            WHEN m.admin_option THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ((pg_auth_members m\n     JOIN pg_authid a ON ((m.member = a.oid)))\n     JOIN pg_authid b ON ((m.roleid = b.oid)))\n  WHERE pg_has_role(a.oid, &apos;USAGE&apos;::text);",
      " SELECT n.nspname AS schemaname,\n    c.relname AS tablename,\n    pg_get_userbyid(c.relowner) AS tableowner,\n    t.spcname AS tablespace,\n    c.relhasindex AS hasindexes,\n    c.relhasrules AS hasrules,\n    c.relhastriggers AS hastriggers,\n    c.relrowsecurity AS rowsecurity\n   FROM ((pg_class c\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n     LEFT JOIN pg_tablespace t ON ((t.oid = c.reltablespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;]));",
      " SELECT a.line_number,\n    a.type,\n    a.database,\n    a.user_name,\n    a.address,\n    a.netmask,\n    a.auth_method,\n    a.options,\n    a.error\n   FROM pg_hba_file_rules() a(line_number, type, database, user_name, address, netmask, auth_method, options, error);",
      " SELECT (current_database())::information_schema.sql_identifier AS object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS object_schema,\n    x.objname AS object_name,\n    (x.objtype)::information_schema.character_data AS object_type,\n    (x.objdtdid)::information_schema.sql_identifier AS collection_type_identifier,\n    (\n        CASE\n            WHEN (nbt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(bt.oid, NULL::integer)\n            ELSE &apos;USER-DEFINED&apos;::text\n        END)::information_schema.character_data AS data_type,\n    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,\n    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (\n        CASE\n            WHEN (nco.nspname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS collation_catalog,\n    (nco.nspname)::information_schema.sql_identifier AS collation_schema,\n    (co.collname)::information_schema.sql_identifier AS collation_name,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,\n    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,\n    (NULL::character varying)::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (NULL::character varying)::information_schema.character_data AS domain_default,\n    (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nbt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (bt.typname)::information_schema.sql_identifier AS udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    ((&apos;a&apos;::text || (x.objdtdid)::text))::information_schema.sql_identifier AS dtd_identifier\n   FROM pg_namespace n,\n    pg_type at,\n    pg_namespace nbt,\n    pg_type bt,\n    (( SELECT c.relnamespace,\n            (c.relname)::information_schema.sql_identifier AS relname,\n                CASE\n                    WHEN (c.relkind = &apos;c&apos;::&quot;char&quot;) THEN &apos;USER-DEFINED TYPE&apos;::text\n                    ELSE &apos;TABLE&apos;::text\n                END AS &quot;case&quot;,\n            a.attnum,\n            a.atttypid,\n            a.attcollation\n           FROM pg_class c,\n            pg_attribute a\n          WHERE ((c.oid = a.attrelid) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;c&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (a.attnum &gt; 0) AND (NOT a.attisdropped))\n        UNION ALL\n         SELECT t.typnamespace,\n            (t.typname)::information_schema.sql_identifier AS typname,\n            &apos;DOMAIN&apos;::text AS text,\n            1,\n            t.typbasetype,\n            t.typcollation\n           FROM pg_type t\n          WHERE (t.typtype = &apos;d&apos;::&quot;char&quot;)\n        UNION ALL\n         SELECT ss.pronamespace,\n            (nameconcatoid(ss.proname, ss.oid))::information_schema.sql_identifier AS nameconcatoid,\n            &apos;ROUTINE&apos;::text AS text,\n            (ss.x).n AS n,\n            (ss.x).x AS x,\n            0\n           FROM ( SELECT p.pronamespace,\n                    p.proname,\n                    p.oid,\n                    information_schema._pg_expandarray(COALESCE(p.proallargtypes, (p.proargtypes)::oid[])) AS x\n                   FROM pg_proc p) ss\n        UNION ALL\n         SELECT p.pronamespace,\n            (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS nameconcatoid,\n            &apos;ROUTINE&apos;::text AS text,\n            0,\n            p.prorettype,\n            0\n           FROM pg_proc p) x(objschema, objname, objtype, objdtdid, objtypeid, objcollation)\n     LEFT JOIN (pg_collation co\n     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((x.objcollation = co.oid) AND ((nco.nspname &lt;&gt; &apos;pg_catalog&apos;::name) OR (co.collname &lt;&gt; &apos;default&apos;::name)))))\n  WHERE ((n.oid = x.objschema) AND (at.oid = x.objtypeid) AND ((at.typelem &lt;&gt; (0)::oid) AND (at.typlen = &apos;-1&apos;::integer)) AND (at.typelem = bt.oid) AND (nbt.oid = bt.typnamespace) AND ((n.nspname, (x.objname)::name, x.objtype, ((x.objdtdid)::information_schema.sql_identifier)::name) IN ( SELECT data_type_privileges.object_schema,\n            data_type_privileges.object_name,\n            data_type_privileges.object_type,\n            data_type_privileges.dtd_identifier\n           FROM information_schema.data_type_privileges)));",
      " SELECT c.oid AS relid,\n    n.nspname AS schemaname,\n    c.relname,\n    pg_stat_get_numscans(c.oid) AS seq_scan,\n    pg_stat_get_tuples_returned(c.oid) AS seq_tup_read,\n    (sum(pg_stat_get_numscans(i.indexrelid)))::bigint AS idx_scan,\n    ((sum(pg_stat_get_tuples_fetched(i.indexrelid)))::bigint + pg_stat_get_tuples_fetched(c.oid)) AS idx_tup_fetch,\n    pg_stat_get_tuples_inserted(c.oid) AS n_tup_ins,\n    pg_stat_get_tuples_updated(c.oid) AS n_tup_upd,\n    pg_stat_get_tuples_deleted(c.oid) AS n_tup_del,\n    pg_stat_get_tuples_hot_updated(c.oid) AS n_tup_hot_upd,\n    pg_stat_get_live_tuples(c.oid) AS n_live_tup,\n    pg_stat_get_dead_tuples(c.oid) AS n_dead_tup,\n    pg_stat_get_mod_since_analyze(c.oid) AS n_mod_since_analyze,\n    pg_stat_get_last_vacuum_time(c.oid) AS last_vacuum,\n    pg_stat_get_last_autovacuum_time(c.oid) AS last_autovacuum,\n    pg_stat_get_last_analyze_time(c.oid) AS last_analyze,\n    pg_stat_get_last_autoanalyze_time(c.oid) AS last_autoanalyze,\n    pg_stat_get_vacuum_count(c.oid) AS vacuum_count,\n    pg_stat_get_autovacuum_count(c.oid) AS autovacuum_count,\n    pg_stat_get_analyze_count(c.oid) AS analyze_count,\n    pg_stat_get_autoanalyze_count(c.oid) AS autoanalyze_count\n   FROM ((pg_class c\n     LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;t&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;]))\n  GROUP BY c.oid, n.nspname, c.relname;",
      " SELECT DISTINCT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nv.nspname)::information_schema.sql_identifier AS table_schema,\n    (v.relname)::information_schema.sql_identifier AS table_name,\n    (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (np.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name\n   FROM pg_namespace nv,\n    pg_class v,\n    pg_depend dv,\n    pg_depend dp,\n    pg_proc p,\n    pg_namespace np\n  WHERE ((nv.oid = v.relnamespace) AND (v.relkind = &apos;v&apos;::&quot;char&quot;) AND (v.oid = dv.refobjid) AND (dv.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dv.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dv.deptype = &apos;i&apos;::&quot;char&quot;) AND (dv.objid = dp.objid) AND (dp.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dp.refclassid = (&apos;pg_proc&apos;::regclass)::oid) AND (dp.refobjid = p.oid) AND (p.pronamespace = np.oid) AND pg_has_role(p.proowner, &apos;USAGE&apos;::text));",
      " SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nbt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (bt.typname)::information_schema.sql_identifier AS udt_name,\n    (current_database())::information_schema.sql_identifier AS domain_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS domain_schema,\n    (t.typname)::information_schema.sql_identifier AS domain_name\n   FROM pg_type t,\n    pg_namespace nt,\n    pg_type bt,\n    pg_namespace nbt\n  WHERE ((t.typnamespace = nt.oid) AND (t.typbasetype = bt.oid) AND (bt.typnamespace = nbt.oid) AND (t.typtype = &apos;d&apos;::&quot;char&quot;) AND pg_has_role(bt.typowner, &apos;USAGE&apos;::text));",
      " SELECT pg_statio_all_indexes.relid,\n    pg_statio_all_indexes.indexrelid,\n    pg_statio_all_indexes.schemaname,\n    pg_statio_all_indexes.relname,\n    pg_statio_all_indexes.indexrelname,\n    pg_statio_all_indexes.idx_blks_read,\n    pg_statio_all_indexes.idx_blks_hit\n   FROM pg_statio_all_indexes\n  WHERE ((pg_statio_all_indexes.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_statio_all_indexes.schemaname ~ &apos;^pg_toast&apos;::text));"
    ],
    "schemaname": [
      "pg_catalog",
      "information_schema"
    ],
    "viewname": [
      "udt_privileges",
      "pg_roles",
      "sequences",
      "routines",
      "column_udt_usage",
      "pg_statio_sys_sequences",
      "_pg_foreign_servers",
      "schemata",
      "pg_stat_bgwriter",
      "pg_publication_tables",
      "column_column_usage",
      "routine_privileges",
      "role_table_grants",
      "pg_stat_all_tables",
      "key_column_usage",
      "information_schema_catalog_name",
      "pg_stat_user_tables",
      "pg_stat_wal_receiver",
      "pg_stat_database",
      "view_column_usage",
      "foreign_data_wrapper_options",
      "pg_stat_activity",
      "pg_config",
      "pg_stat_xact_user_functions",
      "pg_group",
      "pg_file_settings",
      "pg_statio_user_indexes",
      "check_constraint_routine_usage",
      "constraint_column_usage",
      "foreign_data_wrappers",
      "_pg_foreign_data_wrappers",
      "attributes",
      "pg_stat_sys_indexes",
      "pg_timezone_abbrevs",
      "pg_rules",
      "pg_matviews",
      "role_usage_grants",
      "_pg_user_mappings",
      "pg_available_extensions",
      "pg_stat_user_indexes",
      "tables",
      "pg_stat_user_functions",
      "pg_stat_archiver",
      "pg_shadow",
      "user_defined_types",
      "columns",
      "column_domain_usage",
      "pg_cursors",
      "parameters",
      "pg_statio_all_indexes",
      "pg_replication_origin_status",
      "role_column_grants",
      "collation_character_set_applicability",
      "constraint_table_usage",
      "transforms",
      "foreign_servers",
      "domain_constraints",
      "pg_stat_ssl",
      "pg_stat_progress_vacuum",
      "pg_statio_all_tables",
      "pg_statio_sys_tables",
      "pg_stat_database_conflicts",
      "pg_stat_subscription",
      "collations",
      "foreign_table_options",
      "pg_prepared_statements",
      "pg_sequences",
      "applicable_roles",
      "pg_timezone_names",
      "pg_indexes",
      "pg_stat_all_indexes",
      "pg_available_extension_versions",
      "view_table_usage",
      "foreign_tables",
      "role_udt_grants",
      "pg_tables",
      "user_mappings",
      "views",
      "pg_stat_xact_all_tables",
      "pg_stat_progress_create_index",
      "column_options",
      "domains",
      "pg_stats",
      "data_type_privileges",
      "referential_constraints",
      "pg_prepared_xacts",
      "column_privileges",
      "pg_statio_user_tables",
      "triggered_update_columns",
      "pg_policies",
      "pg_stats_ext",
      "_pg_foreign_tables",
      "domain_udt_usage",
      "pg_stat_gssapi",
      "usage_privileges",
      "pg_stat_xact_user_tables",
      "pg_stat_sys_tables",
      "view_routine_usage",
      "_pg_foreign_table_columns",
      "pg_seclabels",
      "pg_user_mappings",
      "pg_statio_sys_indexes",
      "check_constraints",
      "triggers",
      "table_constraints",
      "pg_views",
      "element_types",
      "pg_statio_user_sequences",
      "pg_user",
      "foreign_server_options",
      "user_mapping_options",
      "pg_locks",
      "character_sets",
      "table_privileges",
      "pg_replication_slots",
      "pg_settings",
      "pg_stat_progress_cluster",
      "enabled_roles",
      "administrable_role_authorizations",
      "pg_stat_replication",
      "pg_stat_xact_sys_tables",
      "role_routine_grants",
      "pg_hba_file_rules",
      "pg_statio_all_sequences"
    ]
  },
  "column_udt_usage": {},
  "pg_stat_replication": {
    "sync_state": [],
    "usename": [],
    "state": [],
    "application_name": [],
    "client_hostname": []
  },
  "pg_proc": {
    "probin": [
      "$libdir/latin2_and_win1250",
      "$libdir/plpgsql",
      "$libdir/utf8_and_sjis2004",
      "$libdir/euc_kr_and_mic",
      "$libdir/dict_snowball",
      "$libdir/utf8_and_sjis",
      "$libdir/utf8_and_johab",
      "$libdir/euc_jp_and_sjis",
      "$libdir/latin_and_mic",
      "$libdir/utf8_and_ascii",
      "$libdir/utf8_and_euc_tw",
      "$libdir/utf8_and_euc2004",
      "$libdir/euc_cn_and_mic",
      "$libdir/utf8_and_euc_cn",
      "$libdir/utf8_and_gb18030",
      "$libdir/utf8_and_win",
      "$libdir/utf8_and_uhc",
      "$libdir/utf8_and_cyrillic",
      "$libdir/euc2004_sjis2004",
      "$libdir/ascii_and_mic",
      "$libdir/utf8_and_euc_kr",
      "$libdir/utf8_and_iso8859",
      "$libdir/utf8_and_euc_jp",
      "$libdir/utf8_and_iso8859_1",
      "$libdir/utf8_and_gbk",
      "$libdir/cyrillic_and_mic",
      "$libdir/utf8_and_big5",
      "$libdir/euc_tw_and_big5"
    ],
    "proname": [
      "circle_right",
      "bool_and",
      "language_handler_in",
      "line_intersect",
      "macaddr_not",
      "nameicregexeq",
      "dsynonym_init",
      "timestamptz_gt_timestamp",
      "tsvector_gt",
      "xml_is_well_formed_document",
      "timestamp_mi",
      "pg_walfile_name_offset",
      "path_send",
      "pg_replication_origin_xact_setup",
      "pg_identify_object",
      "int8div",
      "pg_stat_clear_snapshot",
      "pg_stat_get_backend_dbid",
      "txid_snapshot_in",
      "textregexeq_support",
      "uuid_sortsupport",
      "round",
      "cash_mul_int2",
      "gin_extract_tsvector",
      "network_gt",
      "pg_current_logfile",
      "cidin",
      "time_mi_interval",
      "int8shr",
      "pg_show_all_settings",
      "poly_above",
      "poly_overbelow",
      "date_trunc",
      "range_gist_consistent",
      "timestamptz_in",
      "rtrim",
      "atan2d",
      "line_perp",
      "int82mul",
      "regoperatorin",
      "oidvectorge",
      "lo_export",
      "timedate_pl",
      "euc_jp_to_utf8",
      "array_send",
      "pg_stat_get_checkpoint_sync_time",
      "latin3_to_mic",
      "enum_ne",
      "float4ge",
      "hashmacaddrextended",
      "tsvector_update_trigger",
      "hashoid",
      "cash_div_int4",
      "array_remove",
      "prsd_end",
      "pg_stat_get_last_analyze_time",
      "int84eq",
      "brinhandler",
      "time_lt",
      "pg_try_advisory_lock_shared",
      "scalarltsel",
      "timestamptypmodin",
      "icregexnesel",
      "cash_send",
      "varbitge",
      "jsonb_send",
      "on_ppath",
      "cidout",
      "line_send",
      "txid_visible_in_snapshot",
      "cursor_to_xmlschema",
      "namege",
      "pg_export_snapshot",
      "table_to_xml",
      "pg_stat_get_xact_tuples_updated",
      "timestamptz_gt_date",
      "inet_spg_config",
      "dist_pc",
      "win1251_to_koi8r",
      "uuid_send",
      "lo_from_bytea",
      "inet_gist_compress",
      "euc_jis_2004_to_shift_jis_2004",
      "int2mod",
      "neqjoinsel",
      "pg_available_extension_versions",
      "pg_relation_is_publishable",
      "pg_stat_get_backend_client_port",
      "int42mul",
      "pg_logical_slot_peek_changes",
      "pg_rotate_logfile_old",
      "pg_is_wal_replay_paused",
      "array_gt",
      "cstring_in",
      "int42ge",
      "circle_out",
      "gtsquery_consistent",
      "to_regclass",
      "path_distance",
      "xidneq",
      "gist_box_picksplit",
      "jsonb_eq",
      "timestamptz_cmp_date",
      "path_n_lt",
      "float8_stddev_pop",
      "xidneqint4",
      "int28ge",
      "pg_stat_get_tuples_inserted",
      "lseg_eq",
      "win1250_to_mic",
      "byteale",
      "inet_spg_picksplit",
      "texticregexne",
      "radius",
      "stddev_samp",
      "circle_ne",
      "pg_encoding_max_length",
      "int4gt",
      "upper_inf",
      "last_value",
      "abs",
      "btarraycmp",
      "binary_upgrade_set_next_toast_pg_class_oid",
      "array_agg",
      "float8ge",
      "float84pl",
      "gist_circle_compress",
      "circle_gt",
      "range_ne",
      "jsonb_path_exists_opr",
      "pg_read_file",
      "text_lt",
      "pg_stat_get_db_deadlocks",
      "phraseto_tsquery",
      "hashfloat8",
      "float8_regr_avgy",
      "jsonb_hash_extended",
      "to_char",
      "jsonb_set",
      "line_vertical",
      "jsonb_object_agg",
      "int2smaller",
      "mic_to_euc_cn",
      "int2eq",
      "pg_get_functiondef",
      "similar_escape",
      "sinh",
      "gist_point_consistent",
      "pg_stat_get_xact_function_calls",
      "int4eq",
      "pg_start_backup",
      "interval_combine",
      "timestamptztypmodin",
      "row_security_active",
      "int8_mul_cash",
      "tsquery_eq",
      "has_database_privilege",
      "int48gt",
      "point_in",
      "varchartypmodout",
      "pg_stat_get_backend_client_addr",
      "pg_stop_backup",
      "float8_regr_slope",
      "int2mi",
      "path_length",
      "xideq",
      "btoidsortsupport",
      "timestamp_le_timestamptz",
      "date_ge",
      "poly_right",
      "line_in",
      "float4send",
      "pg_nextoid",
      "inet_out",
      "enum_eq",
      "isempty",
      "prsd_nexttoken",
      "tsvector_le",
      "dsimple_lexize",
      "path_n_eq",
      "iso8859_1_to_utf8",
      "pg_event_trigger_table_rewrite_oid",
      "bitgt",
      "nameregexeq",
      "pg_partition_root",
      "setweight",
      "int4not",
      "numeric_gt",
      "gtsvector_penalty",
      "pg_stat_get_bgwriter_maxwritten_clean",
      "int84gt",
      "pg_stat_get_wal_receiver",
      "hash_range",
      "range_overlaps",
      "pg_my_temp_schema",
      "jsonb_to_record",
      "cos",
      "table_am_handler_out",
      "lseg_vertical",
      "has_server_privilege",
      "path_mul_pt",
      "int4out",
      "circle_contain_pt",
      "make_timestamptz",
      "nameicnlike",
      "array_smaller",
      "win866_to_mic",
      "int24pl",
      "utf8_to_shift_jis_2004",
      "btnamecmp",
      "enum_range",
      "database_to_xml_and_xmlschema",
      "point_distance",
      "array_in",
      "timetztypmodin",
      "timetz_in",
      "like_escape",
      "byteane",
      "numeric_var_pop",
      "utf8_to_sjis",
      "pg_node_tree_out",
      "latin1_to_mic",
      "event_trigger_in",
      "jsonb_ge",
      "hashtext",
      "atan",
      "timestamp_ne_date",
      "host",
      "pg_stat_get_xact_tuples_inserted",
      "box_overright",
      "int48mul",
      "cosh",
      "pg_relation_filenode",
      "btrim",
      "pg_lsn_gt",
      "num_nonnulls",
      "texticlike",
      "pg_tablespace_size",
      "float8_regr_accum",
      "hashtextextended",
      "pg_advisory_xact_lock",
      "time_out",
      "_pg_numeric_precision_radix",
      "cash_ne",
      "pg_tablespace_location",
      "pg_extension_update_paths",
      "line_interpt",
      "boolin",
      "btint4sortsupport",
      "tsvector_to_array",
      "date_cmp_timestamptz",
      "regdictionaryrecv",
      "percentile_cont_interval_multi_final",
      "_pg_truetypmod",
      "uuid_hash_extended",
      "pg_stat_get_checkpoint_write_time",
      "array_ndims",
      "bit_and",
      "shell_in",
      "nameicregexne",
      "pg_advisory_unlock",
      "namegetext",
      "poly_distance",
      "pg_stat_get_backend_wait_event_type",
      "gtsquery_picksplit",
      "nameregexne",
      "pg_ts_parser_is_visible",
      "pg_lsn_lt",
      "timestamptz_ge",
      "tsvectorout",
      "btint48cmp",
      "any_out",
      "pg_replication_origin_session_progress",
      "mic_to_latin1",
      "tsqueryin",
      "array_eq",
      "texticregexeq_support",
      "numnode",
      "to_regprocedure",
      "record_recv",
      "varbitlt",
      "age",
      "mic_to_latin3",
      "to_regtype",
      "utf8_to_euc_cn",
      "pg_has_role",
      "jsonb_each_text",
      "tsqueryrecv",
      "int28eq",
      "hashint8",
      "pg_logical_slot_get_changes",
      "float8_var_samp",
      "jsonb_array_element_text",
      "bpchargt",
      "float8lt",
      "hashmacaddr8",
      "mode_final",
      "timestamptz_ge_timestamp",
      "bpcharregexne",
      "tsquery_lt",
      "diagonal",
      "domain_recv",
      "macaddr8_or",
      "int8dec",
      "integer_pl_date",
      "date",
      "float4out",
      "varchar_support",
      "txid_current_snapshot",
      "dense_rank",
      "uuid_hash",
      "uuid_gt",
      "regopersend",
      "pg_lsn_eq",
      "uuid_le",
      "oidout",
      "pg_control_recovery",
      "charne",
      "regproceduresend",
      "pg_dependencies_send",
      "float8out",
      "jsonb_delete_path",
      "int24gt",
      "regtypein",
      "box_div",
      "regprocedurerecv",
      "makeaclitem",
      "inet_client_addr",
      "datetimetz_pl",
      "point_ne",
      "aclremove",
      "int2vectorsend",
      "brin_summarize_new_values",
      "ginhandler",
      "ln",
      "bttext_pattern_sortsupport",
      "jsonb_array_elements_text",
      "text_ge",
      "regr_slope",
      "tsvector_ge",
      "poly_contain_pt",
      "cume_dist",
      "int8_accum",
      "btfloat84cmp",
      "jsonb_ne",
      "close_pl",
      "dense_rank_final",
      "numeric_serialize",
      "corr",
      "acldefault",
      "int42div",
      "sign",
      "timetz_send",
      "trigger_out",
      "repeat",
      "regexp_split_to_array",
      "int2vectorrecv",
      "pg_trigger_depth",
      "lseg_lt",
      "pg_get_ruledef",
      "uuid_out",
      "pg_stat_get_numscans",
      "interval_avg",
      "inet_client_port",
      "numeric_poly_stddev_pop",
      "range_send",
      "interval_cmp",
      "int82ge",
      "int28ne",
      "int28mi",
      "path_npoints",
      "path_out",
      "RI_FKey_cascade_upd",
      "hashfloat8extended",
      "txid_snapshot_xmin",
      "int28lt",
      "query_to_xml_and_xmlschema",
      "json_object_field_text",
      "int4_avg_combine",
      "bit_in",
      "namegttext",
      "isperp",
      "scalargejoinsel",
      "set_config",
      "network_sup",
      "float8",
      "make_timestamp",
      "int4_accum",
      "int2abs",
      "current_database",
      "text_pattern_gt",
      "ts_typanalyze",
      "regprocedurein",
      "array_length",
      "btnamesortsupport",
      "numeric_add",
      "spg_quad_picksplit",
      "pg_stat_get_backend_activity",
      "btfloat48cmp",
      "pg_get_triggerdef",
      "int8gt",
      "shift_jis_2004_to_utf8",
      "lseg_in",
      "timestamptz_larger",
      "macaddr8_lt",
      "every",
      "charge",
      "atan2",
      "txid_status",
      "interval_accum",
      "numeric",
      "percent_rank_final",
      "atanh",
      "poly_contained",
      "mic_to_koi8r",
      "numeric_poly_deserialize",
      "initcap",
      "pg_show_all_file_settings",
      "tsquery_not",
      "concat_ws",
      "int8abs",
      "int8_avg_deserialize",
      "pg_lsn_in",
      "timestamptztypmodout",
      "pg_ls_dir",
      "name",
      "pg_stat_get_tuples_deleted",
      "areajoinsel",
      "count",
      "anynonarray_out",
      "pg_mcv_list_send",
      "iclikesel",
      "win866_to_iso",
      "pg_partition_tree",
      "tsvectorsend",
      "array_dims",
      "jsonb_to_tsvector",
      "has_tablespace_privilege",
      "varbitle",
      "set_masklen",
      "scalargtjoinsel",
      "anyrange_in",
      "pg_lock_status",
      "numeric_var_samp",
      "string_agg_finalfn",
      "box_overabove",
      "pg_current_wal_lsn",
      "regexeqsel",
      "cash_ge",
      "circle_sub_pt",
      "brin_minmax_consistent",
      "byteaeq",
      "range_contains",
      "uuid_ne",
      "interval_le",
      "numeric_sub",
      "box_left",
      "pg_stat_get_buf_fsync_backend",
      "numeric_abs",
      "int4mul",
      "pg_postmaster_start_time",
      "row_to_json",
      "positionjoinsel",
      "box_lt",
      "varbittypmodin",
      "fmgr_c_validator",
      "macaddr_sortsupport",
      "cidr_send",
      "pg_stat_get_bgwriter_stat_reset_time",
      "inet_spg_choose",
      "now",
      "int8or",
      "hash_array_extended",
      "json_object_agg_transfn",
      "postgresql_fdw_validator",
      "poly_recv",
      "texticregexeq",
      "pg_stat_get_db_conflict_bufferpin",
      "pg_lsn_mi",
      "timetz_smaller",
      "utf8_to_uhc",
      "koi8u_to_utf8",
      "getdatabaseencoding",
      "setseed",
      "path_contain_pt",
      "pg_conversion_is_visible",
      "hashtid",
      "float4div",
      "cidrecv",
      "xml_is_well_formed",
      "pg_prepared_xact",
      "numeric_poly_sum",
      "float8in",
      "koi8r_to_mic",
      "RI_FKey_restrict_del",
      "_pg_numeric_scale",
      "time_hash_extended",
      "utf8_to_koi8u",
      "to_jsonb",
      "cstring_recv",
      "prefixsel",
      "date_part",
      "int8shl",
      "circle_div_pt",
      "box_gt",
      "int84lt",
      "int84ne",
      "bit_length",
      "table_to_xmlschema",
      "record_ne",
      "cash_eq",
      "jsonb_object_field_text",
      "pg_replication_origin_create",
      "timestamp_pl_interval",
      "textlike_support",
      "int42ne",
      "iso_to_win1251",
      "to_regnamespace",
      "bpcharlike",
      "lseg_interpt",
      "sind",
      "time_recv",
      "cash_pl",
      "boolout",
      "varbit_support",
      "btcharcmp",
      "byteaout",
      "numeric_sortsupport",
      "pg_switch_wal",
      "text",
      "hashenum",
      "sum",
      "binary_upgrade_set_next_heap_pg_class_oid",
      "path_n_gt",
      "spghandler",
      "jsonb_extract_path_text",
      "binary_upgrade_set_next_pg_authid_oid",
      "int8and",
      "ts_delete",
      "hashint8extended",
      "record_image_gt",
      "log10",
      "tstzrange_subdiff",
      "json_array_length",
      "time_send",
      "pg_stat_get_tuples_fetched",
      "to_date",
      "numeric_sum",
      "regr_sxy",
      "pg_stat_reset_single_table_counters",
      "jsonb_to_recordset",
      "sha384",
      "bpchar_smaller",
      "numrange_subdiff",
      "txid_snapshot_out",
      "bttext_pattern_cmp",
      "gtsvectorout",
      "float8_regr_avgx",
      "float8_regr_syy",
      "inter_sl",
      "bytea_string_agg_transfn",
      "pg_stat_get_function_self_time",
      "int28gt",
      "date_gt",
      "network_larger",
      "md5",
      "int42le",
      "pg_get_statisticsobjdef",
      "hashinet",
      "boollt",
      "regconfigsend",
      "jsonb_lt",
      "bool",
      "setval",
      "bpcharcmp",
      "record_ge",
      "bitle",
      "win866_to_koi8r",
      "range_overleft",
      "lo_create",
      "icregexeqjoinsel",
      "pg_collation_actual_version",
      "hashmacaddr",
      "poly_center",
      "split_part",
      "family",
      "uuid_in",
      "pg_encoding_to_char",
      "timestamp_le_date",
      "box",
      "xidsend",
      "numeric_div",
      "timestamptz_eq",
      "ginarrayconsistent",
      "numeric_log",
      "pg_control_system",
      "pg_ndistinct_recv",
      "utf8_to_win",
      "numeric_avg_accum",
      "bpcharle",
      "box_overbelow",
      "cidr",
      "varchartypmodin",
      "pg_terminate_backend",
      "timetzdate_pl",
      "gin_consistent_jsonb_path",
      "ginarrayextract",
      "networksel",
      "abbrev",
      "pg_node_tree_send",
      "gist_point_fetch",
      "boolor_statefunc",
      "pg_get_multixact_members",
      "int8inc_any",
      "date_cmp",
      "pg_get_function_arg_default",
      "fmgr_internal_validator",
      "timestamp_ne",
      "pg_stat_get_function_total_time",
      "nth_value",
      "bytea_sortsupport",
      "regexeqjoinsel",
      "ts_rank",
      "timetz_cmp",
      "range_le",
      "timestamptz_le_date",
      "position",
      "network",
      "scalarlesel",
      "xpath",
      "convert_to",
      "mxid_age",
      "_pg_numeric_precision",
      "daterange_subdiff",
      "array_unnest_support",
      "session_user",
      "pg_get_expr",
      "int8in",
      "reverse",
      "spg_box_quad_picksplit",
      "pg_stat_get_db_tuples_deleted",
      "min",
      "notlike",
      "avg",
      "gist_circle_distance",
      "pg_opclass_is_visible",
      "cash_gt",
      "acosh",
      "pg_sleep",
      "varbit",
      "plpgsql_call_handler",
      "namene",
      "timestamptz_mi",
      "int2lt",
      "pg_mcv_list_recv",
      "point_add",
      "array_lt",
      "pg_notification_queue_usage",
      "macaddr8_in",
      "json_agg_transfn",
      "close_sl",
      "pg_sequence_last_value",
      "tidrecv",
      "interval_support",
      "bitne",
      "cashsmaller",
      "sha224",
      "range_recv",
      "record_out",
      "network_overlap",
      "int4_accum_inv",
      "dist_lb",
      "percentile_cont_float8_final",
      "pg_stat_get_backend_idset",
      "date_eq_timestamp",
      "json_object",
      "textregexeq",
      "regr_count",
      "enum_send",
      "interval_mi",
      "enum_cmp",
      "pg_stat_get_xact_tuples_deleted",
      "int8not",
      "float84mi",
      "int8eq",
      "btint4cmp",
      "cash_lt",
      "json_in",
      "int8xor",
      "poly_send",
      "hashtidextended",
      "int2vectorin",
      "macaddr",
      "numeric_poly_serialize",
      "int2",
      "int2recv",
      "bit_send",
      "jsonb_path_query_array",
      "txid_snapshot_recv",
      "anyenum_in",
      "pg_backup_start_time",
      "range_overright",
      "textgename",
      "float8larger",
      "koi8r_to_utf8",
      "pg_typeof",
      "pg_stat_get_backend_activity_start",
      "bpcharout",
      "tsqueryout",
      "tidle",
      "inet_same_family",
      "database_to_xml",
      "xmlcomment",
      "interval_smaller",
      "nameeqtext",
      "bitxor",
      "currtid2",
      "array_replace",
      "pg_size_pretty",
      "array_agg_finalfn",
      "spg_range_quad_choose",
      "pg_get_viewdef",
      "charout",
      "pg_get_publication_tables",
      "cbrt",
      "win866_to_win1251",
      "array_append",
      "schema_to_xml_and_xmlschema",
      "schema_to_xmlschema",
      "circle_ge",
      "box_contained",
      "string_to_array",
      "textne",
      "tsquery_cmp",
      "unknownrecv",
      "inetnot",
      "oidvectoreq",
      "bthandler",
      "regprocedureout",
      "gtsvector_same",
      "int82pl",
      "dist_cpoly",
      "int8lt",
      "pg_lsn_ge",
      "bpcharicregexne",
      "float4lt",
      "line_parallel",
      "jsonpath_out",
      "inet_spg_inner_consistent",
      "pg_sleep_until",
      "inet_in",
      "percentile_cont_interval_final",
      "uhc_to_utf8",
      "jsonb_agg_finalfn",
      "macaddr8_and",
      "circle_send",
      "to_hex",
      "byteage",
      "timestamptz_ne_date",
      "numeric_combine",
      "float4mul",
      "current_schemas",
      "jsonb_array_elements",
      "regclassout",
      "timetztypmodout",
      "utf8_to_koi8r",
      "has_any_column_privilege",
      "obj_description",
      "oidvectorlt",
      "inet_spg_leaf_consistent",
      "float4um",
      "lo_open",
      "euc_jp_to_mic",
      "int4up",
      "pg_advisory_lock",
      "float84gt",
      "int2ge",
      "float4",
      "cash_words",
      "enum_recv",
      "lo_creat",
      "pg_promote",
      "iso_to_mic",
      "pg_cancel_backend",
      "hashhandler",
      "pg_available_extensions",
      "pg_stat_get_backend_start",
      "macaddr_out",
      "box_right",
      "xml",
      "jsonb_concat",
      "timestamp_ne_timestamptz",
      "pg_stat_get_wal_senders",
      "numeric_avg_serialize",
      "hostmask",
      "varbit_out",
      "box_distance",
      "opaque_in",
      "hash_array",
      "network_subset_support",
      "lseg_gt",
      "jsonb_object_field",
      "pg_node_tree_in",
      "macaddr8_eq",
      "tidge",
      "pg_stat_get_last_autoanalyze_time",
      "tsquery_phrase",
      "numeric_inc",
      "dsimple_init",
      "cash_div_int2",
      "binary_upgrade_set_next_pg_enum_oid",
      "xpath_exists",
      "dsynonym_lexize",
      "_pg_index_position",
      "justify_days",
      "jsonb_insert",
      "box_overleft",
      "float48pl",
      "utf8_to_johab",
      "numerictypmodout",
      "aclexplode",
      "int8send",
      "RI_FKey_setnull_upd",
      "quote_ident",
      "system",
      "numeric_div_trunc",
      "pg_stat_get_xact_function_self_time",
      "hashmacaddr8extended",
      "pg_stat_get_db_blocks_hit",
      "json_agg_finalfn",
      "date_eq_timestamptz",
      "bpchar_sortsupport",
      "texteq",
      "brin_inclusion_union",
      "timestamptz_ne_timestamp",
      "float8_stddev_samp",
      "numeric_poly_avg",
      "int4inc",
      "mul_d_interval",
      "int8inc",
      "numeric_deserialize",
      "interval_larger",
      "float8_accum",
      "circle_same",
      "pg_ls_waldir",
      "timestamptz_mi_interval",
      "pg_wal_replay_pause",
      "jsonb_cmp",
      "pg_ndistinct_out",
      "jsonb_each",
      "int24le",
      "brin_minmax_opcinfo",
      "bitcat",
      "numeric_ge",
      "byteacmp",
      "textgtname",
      "koi8r_to_win866",
      "textltname",
      "timetz",
      "RI_FKey_noaction_upd",
      "textregexne",
      "float84lt",
      "dlog1",
      "line_distance",
      "flt4_mul_cash",
      "xml_out",
      "pg_read_binary_file",
      "scalarltjoinsel",
      "pg_stat_get_archiver",
      "numeric_larger",
      "range_out",
      "pg_backend_pid",
      "first_value",
      "websearch_to_tsquery",
      "loread",
      "pg_stat_get_vacuum_count",
      "jsonb_agg",
      "inter_sb",
      "interval_pl_time",
      "bytearecv",
      "circle_recv",
      "hashname",
      "pg_event_trigger_ddl_commands",
      "numeric_poly_combine",
      "regclasssend",
      "latin2_to_win1250",
      "int4_sum",
      "range_contains_elem",
      "json_extract_path",
      "range_gist_picksplit",
      "neqsel",
      "array_prepend",
      "eqjoinsel",
      "gtsvector_compress",
      "pg_sleep_for",
      "inetand",
      "pg_ddl_command_out",
      "gtsquery_same",
      "lo_truncate64",
      "float4le",
      "void_recv",
      "array_to_string",
      "xml_send",
      "lower",
      "date_sortsupport",
      "broadcast",
      "network_ne",
      "generate_subscripts",
      "range_merge",
      "timetz_ge",
      "cursor_to_xml",
      "timestamp_cmp_timestamptz",
      "jsonb_agg_transfn",
      "timestamp_lt_timestamptz",
      "macaddr_and",
      "regr_syy",
      "inet_merge",
      "pg_try_advisory_xact_lock_shared",
      "bpcharnlike",
      "pg_show_replication_origin_status",
      "jsonb_object",
      "jsonb_contained",
      "euc_tw_to_utf8",
      "numeric_accum_inv",
      "anytextcat",
      "json_populate_recordset",
      "degrees",
      "regr_avgy",
      "box_contain",
      "inet_server_addr",
      "ts_debug",
      "pg_stat_get_db_blk_write_time",
      "int4shl",
      "int8up",
      "win1251_to_mic",
      "pg_walfile_name",
      "width",
      "int4in",
      "spg_kd_choose",
      "sqrt",
      "pg_replication_origin_xact_reset",
      "length",
      "get_current_ts_config",
      "varbit_in",
      "lastval",
      "gin_cmp_tslexeme",
      "btint42cmp",
      "int2and",
      "likejoinsel",
      "circle_contained",
      "pg_stat_get_function_calls",
      "int48ge",
      "pg_relation_size",
      "regclassin",
      "unknownin",
      "has_sequence_privilege",
      "int2_accum_inv",
      "tanh",
      "tidlt",
      "daterange",
      "lseg_horizontal",
      "path_n_ge",
      "record_lt",
      "regnamespacein",
      "float48lt",
      "lo_tell64",
      "pg_copy_physical_replication_slot",
      "int4_mul_cash",
      "timestamp_cmp_date",
      "textnlike",
      "spg_range_quad_picksplit",
      "pg_blocking_pids",
      "table_to_xml_and_xmlschema",
      "path_sub_pt",
      "varcharin",
      "to_number",
      "dexp",
      "translate",
      "lag",
      "numeric_lt",
      "ginqueryarrayextract",
      "pg_stat_get_tuples_updated",
      "bpcharregexeq",
      "record_gt",
      "tidlarger",
      "interval",
      "int42gt",
      "jsonb_build_object",
      "has_foreign_data_wrapper_privilege",
      "spg_range_quad_leaf_consistent",
      "point_vert",
      "pg_advisory_unlock_all",
      "point_sub",
      "textlen",
      "regclass",
      "bpcharicregexeq",
      "internal_in",
      "to_regrole",
      "macaddr_lt",
      "plpgsql_inline_handler",
      "range_gist_same",
      "mic_to_win866",
      "timestamp_ge_timestamptz",
      "path_add",
      "numeric_poly_var_samp",
      "json_each",
      "width_bucket",
      "int4div",
      "pg_get_replica_identity_index",
      "euc_tw_to_big5",
      "heap_tableam_handler",
      "hash_aclitem_extended",
      "tsrange",
      "int2_avg_accum",
      "jsonb_array_length",
      "int8larger",
      "text_pattern_le",
      "pg_xact_commit_timestamp",
      "pg_opfamily_is_visible",
      "pg_wal_replay_resume",
      "int2_mul_cash",
      "cidr_out",
      "point_left",
      "int4abs",
      "anyelement_in",
      "int2up",
      "range_ge",
      "RI_FKey_setnull_del",
      "anyelement_out",
      "int84div",
      "int48lt",
      "pg_describe_object",
      "enum_smaller",
      "ordered_set_transition_multi",
      "date_cmp_timestamp",
      "txid_current_if_assigned",
      "date_gt_timestamptz",
      "bpchar_pattern_le",
      "mic_to_sjis",
      "tsq_mcontained",
      "jsonb_build_array",
      "likesel",
      "numeric_out",
      "box_add",
      "bittypmodin",
      "pg_try_advisory_xact_lock",
      "currtid",
      "int28le",
      "gist_poly_distance",
      "intervaltypmodout",
      "bit",
      "int8mul",
      "tsvectorin",
      "hashcharextended",
      "xideqint4",
      "time_smaller",
      "acosd",
      "int4mi",
      "gin_extract_jsonb_query",
      "tsquery_le",
      "currval",
      "point",
      "regoperatorout",
      "gist_box_penalty",
      "overlay",
      "int8_avg_accum_inv",
      "date_out",
      "pg_replication_origin_session_setup",
      "spg_text_choose",
      "namelttext",
      "tsrange_subdiff",
      "txid_snapshot_send",
      "regnamespacesend",
      "pg_last_wal_receive_lsn",
      "macaddr8_ne",
      "koi8r_to_iso",
      "tsvector_ne",
      "macaddr_gt",
      "enum_last",
      "date_le",
      "lseg_intersect",
      "cash_out",
      "lo_tell",
      "timestamp_cmp",
      "int8le",
      "interval_pl",
      "txid_snapshot_xip",
      "numeric_support",
      "inet_gist_fetch",
      "dist_sl",
      "regr_r2",
      "acos",
      "textnename",
      "poly_in",
      "numrange",
      "inetmi",
      "unknownout",
      "power",
      "latin4_to_mic",
      "int2gt",
      "unnest",
      "hashnameextended",
      "network_lt",
      "jsonb_recv",
      "timetz_mi_interval",
      "int2pl",
      "int4send",
      "pg_stat_get_bgwriter_timed_checkpoints",
      "int2_sum",
      "radians",
      "poly_below",
      "brin_inclusion_opcinfo",
      "timestamptz_cmp",
      "clock_timestamp",
      "mic_to_big5",
      "pg_advisory_unlock_shared",
      "bitge",
      "big5_to_utf8",
      "oidrecv",
      "col_description",
      "jsonb_object_keys",
      "point_div",
      "float8pl",
      "bpcharne",
      "time_ge",
      "tan",
      "to_ascii",
      "date_ne",
      "pg_is_in_recovery",
      "dispell_init",
      "event_trigger_out",
      "cash_mul_int8",
      "timestamptz_pl_interval",
      "tsvector_concat",
      "interval_gt",
      "tsmatchsel",
      "int8out",
      "timestamp_lt_date",
      "uuid_lt",
      "varbiteq",
      "overlaps",
      "record_image_ne",
      "float8_var_pop",
      "pg_dependencies_recv",
      "ts_lexize",
      "byteagt",
      "timezone",
      "brin_inclusion_add_value",
      "macaddr8_le",
      "pg_function_is_visible",
      "range_gist_penalty",
      "float48le",
      "spg_text_picksplit",
      "bttidcmp",
      "gtsvectorin",
      "pg_ls_archive_statusdir",
      "bittypmodout",
      "gtsvector_picksplit",
      "nlikesel",
      "interval_recv",
      "win1251_to_win866",
      "int8range",
      "icnlikesel",
      "pg_indexam_progress_phasename",
      "numeric_mul",
      "int2le",
      "gbk_to_utf8",
      "boolle",
      "utf8_to_ascii",
      "interval_accum_inv",
      "iso8859_to_utf8",
      "tidsend",
      "int24ge",
      "pg_stat_get_blocks_fetched",
      "jsonb_path_query_first",
      "fmgr_sql_validator",
      "float8_regr_intercept",
      "json_to_tsvector",
      "float48eq",
      "dcbrt",
      "range_before",
      "int2ne",
      "pg_event_trigger_table_rewrite_reason",
      "euc_kr_to_mic",
      "btoidvectorcmp",
      "pg_ddl_command_in",
      "timestamp_gt_date",
      "RI_FKey_noaction_del",
      "pg_lsn_recv",
      "int24div",
      "booleq",
      "lower_inc",
      "point_below",
      "pg_dependencies_in",
      "macaddr_send",
      "timestamp_recv",
      "circle_eq",
      "box_ge",
      "point_eq",
      "json_object_field",
      "rank_final",
      "aclitemeq",
      "float4in",
      "numeric_stddev_pop",
      "lowrite",
      "cidr_recv",
      "stddev",
      "tideq",
      "pg_stat_get_db_stat_reset_time",
      "int28mul",
      "format_type",
      "slope",
      "pg_partition_ancestors",
      "gin_extract_jsonb_path",
      "pg_advisory_lock_shared",
      "range_minus",
      "gin_compare_jsonb",
      "covar_pop",
      "ordered_set_transition",
      "range_in",
      "macaddr8_ge",
      "convert",
      "array_to_tsvector",
      "oidsend",
      "date_eq",
      "domain_in",
      "oidvectorrecv",
      "bytea_string_agg_finalfn",
      "spg_kd_config",
      "jsonb_contains",
      "int4recv",
      "pg_stat_reset_shared",
      "array_ge",
      "tstzrange",
      "lo_lseek64",
      "sin",
      "numeric_eq",
      "bitcmp",
      "icnlikejoinsel",
      "bpcharin",
      "pg_replication_slot_advance",
      "btbpchar_pattern_cmp",
      "nameletext",
      "circle_distance",
      "box_overlap",
      "float4ne",
      "chr",
      "elem_contained_by_range",
      "pg_listening_channels",
      "timestamptz",
      "namenlike",
      "int48ne",
      "in_range",
      "spg_range_quad_inner_consistent",
      "var_samp",
      "oidvectorout",
      "charin",
      "btint2cmp",
      "xidout",
      "jsonpath_in",
      "arraycontjoinsel",
      "btfloat8sortsupport",
      "prsd_lextype",
      "inet_gist_same",
      "pg_relation_is_updatable",
      "lseg_out",
      "pg_get_function_identity_arguments",
      "pg_options_to_table",
      "network_sub",
      "regrolesend",
      "float8um",
      "gin_clean_pending_list",
      "binary_upgrade_set_next_index_pg_class_oid",
      "float8mul",
      "spg_box_quad_choose",
      "json_to_recordset",
      "regoperrecv",
      "pg_filenode_relation",
      "cotd",
      "current_user",
      "dist_ps",
      "int24eq",
      "close_ls",
      "point_recv",
      "isopen",
      "hashoidextended",
      "cash_mul_int4",
      "netmask",
      "poly_out",
      "lseg_recv",
      "aclitemin",
      "box_contain_pt",
      "has_language_privilege",
      "date_lt_timestamp",
      "int8range_canonical",
      "hashenumextended",
      "bpchar",
      "cidsend",
      "interval_out",
      "gist_box_same",
      "lseg_distance",
      "float48ge",
      "trigger_in",
      "pg_get_partkeydef",
      "pg_stat_get_db_tuples_updated",
      "div",
      "tsvector_update_trigger_column",
      "lseg_le",
      "bpcharlt",
      "int8mi",
      "mic_to_iso",
      "void_out",
      "timetz_eq",
      "jsonb_in",
      "bound_box",
      "int4ge",
      "pg_stat_get_subscription",
      "circle_overlap",
      "timetz_pl_interval",
      "numeric_in",
      "record_image_eq",
      "spg_box_quad_inner_consistent",
      "gtsquery_union",
      "pg_client_encoding",
      "binary_upgrade_set_next_array_pg_type_oid",
      "tsvector_eq",
      "bitor",
      "cash_div_int8",
      "intervaltypmodin",
      "arraycontsel",
      "pg_replication_origin_drop",
      "polygon",
      "date_lt",
      "regdictionarysend",
      "int8ne",
      "byteain",
      "percentile_disc_final",
      "byteacat",
      "like",
      "int2_avg_accum_inv",
      "pg_replication_origin_session_is_setup",
      "bttextcmp",
      "pg_stat_get_activity",
      "numeric_sqrt",
      "array_out",
      "btboolcmp",
      "pg_rotate_logfile",
      "to_tsquery",
      "textout",
      "json_array_elements",
      "timestamptz_cmp_timestamp",
      "timestamp_gt_timestamptz",
      "pg_create_physical_replication_slot",
      "pg_last_wal_replay_lsn",
      "regexp_matches",
      "pg_stat_get_xact_tuples_fetched",
      "oideq",
      "pg_get_serial_sequence",
      "set_bit",
      "tsvector_cmp",
      "path_in",
      "textrecv",
      "exp",
      "int2shr",
      "nameiclike",
      "regexnejoinsel",
      "pg_ddl_command_recv",
      "numeric_stddev_samp",
      "internal_out",
      "box_sub",
      "pg_index_column_has_property",
      "int8pl_inet",
      "pg_mcv_list_in",
      "xml_is_well_formed_content",
      "arraycontains",
      "pg_conf_load_time",
      "void_in",
      "ascii",
      "int8dec_any",
      "flt8_mul_cash",
      "oidvectorle",
      "json_out",
      "lseg",
      "starts_with",
      "pg_try_advisory_lock",
      "pg_stat_get_last_vacuum_time",
      "hashint2extended",
      "parse_ident",
      "spg_quad_config",
      "bpcharsend",
      "pg_wal_lsn_diff",
      "timestamp_lt",
      "statement_timestamp",
      "circle_le",
      "pg_is_other_temp_schema",
      "int82ne",
      "bpcharicnlike",
      "float8send",
      "regclassrecv",
      "quote_nullable",
      "prefixjoinsel",
      "dispell_lexize",
      "macaddr8_recv",
      "spg_bbox_quad_config",
      "biteq",
      "spg_kd_inner_consistent",
      "json_build_object",
      "_pg_char_max_length",
      "interval_pl_timestamp",
      "numeric_le",
      "array_recv",
      "float8_regr_combine",
      "circle",
      "koi8r_to_win1251",
      "utf8_to_iso8859_1",
      "array_agg_transfn",
      "int48eq",
      "timestamptz_ge_date",
      "pg_char_to_encoding",
      "eqsel",
      "string_agg_transfn",
      "timestamp_in",
      "cidr_in",
      "circle_in",
      "array_to_json",
      "circle_overabove",
      "varbitne",
      "any_in",
      "path_div_pt",
      "anyarray_send",
      "ceiling",
      "pg_get_function_arguments",
      "interval_pl_timestamptz",
      "aclinsert",
      "sha256",
      "bit_out",
      "spg_range_quad_config",
      "pg_stat_get_dead_tuples",
      "height",
      "isfinite",
      "gin_consistent_jsonb",
      "int4_avg_accum",
      "int8um",
      "binary_upgrade_set_next_pg_type_oid",
      "regr_avgx",
      "interval_mul",
      "regprocrecv",
      "poly_overleft",
      "euc_cn_to_utf8",
      "bit_or",
      "query_to_xml",
      "pg_lsn_cmp",
      "enum_ge",
      "octet_length",
      "sjis_to_utf8",
      "pg_stat_get_live_tuples",
      "regdictionaryout",
      "pg_lsn_hash",
      "gtsvector_decompress",
      "dlog10",
      "timetz_lt",
      "pg_node_tree_recv",
      "int8_sum",
      "float84mul",
      "charrecv",
      "brin_minmax_add_value",
      "pg_is_in_backup",
      "row_number",
      "int8inc_float8_float8",
      "timetypmodin",
      "tidout",
      "lo_lseek",
      "int4lt",
      "pg_extension_config_dump",
      "tsquery_or",
      "pg_stat_get_blocks_hit",
      "json_send",
      "int8ge",
      "float8smaller",
      "float8_regr_r2",
      "varbit_recv",
      "_pg_truetypid",
      "bool_accum_inv",
      "regnamespaceout",
      "quote_literal",
      "_pg_keysequal",
      "to_tsvector",
      "timetz_recv",
      "mic_to_euc_kr",
      "xml_recv",
      "utf8_to_iso8859",
      "int4xor",
      "range_typanalyze",
      "pg_stat_get_db_xact_commit",
      "pg_get_function_result",
      "tsq_mcontains",
      "current_schema",
      "contjoinsel",
      "lseg_ge",
      "float8gt",
      "record_image_ge",
      "anyenum_out",
      "regroleout",
      "RI_FKey_check_upd",
      "regr_intercept",
      "int84mul",
      "pg_identify_object_as_address",
      "close_lb",
      "tsquerysend",
      "gist_box_union",
      "hashint4extended",
      "btint82cmp",
      "cosd",
      "int4or",
      "ts_match_qv",
      "network_eq",
      "pg_safe_snapshot_blocking_pids",
      "inet_gist_penalty",
      "point_above",
      "pg_control_checkpoint",
      "asinh",
      "has_type_privilege",
      "int8",
      "percentile_disc",
      "bpchartypmodout",
      "anynonarray_in",
      "dtrunc",
      "varbitgt",
      "has_column_privilege",
      "array_upper",
      "tidin",
      "macaddr8_gt",
      "mic_to_win1250",
      "ts_rewrite",
      "json_object_keys",
      "pg_logical_slot_get_binary_changes",
      "icregexnejoinsel",
      "box_same",
      "int48pl",
      "dsnowball_init",
      "hashfloat4",
      "float8mi",
      "xmlexists",
      "ts_match_tq",
      "substr",
      "regrolein",
      "ts_parse",
      "boolsend",
      "nameout",
      "ts_headline",
      "interval_in",
      "path_n_le",
      "timetz_le",
      "tsquery_ne",
      "timestamp_hash",
      "circle_add_pt",
      "spg_quad_leaf_consistent",
      "macaddr8",
      "pg_stat_get_db_checksum_failures",
      "pg_get_object_address",
      "int4",
      "network_smaller",
      "right",
      "texteqname",
      "macaddr_or",
      "gin_extract_jsonb_query_path",
      "pg_column_size",
      "left",
      "macaddr8_send",
      "int2shl",
      "pg_mcv_list_items",
      "float48div",
      "utf8_to_gb18030",
      "box_mul",
      "log",
      "interval_eq",
      "float8_avg",
      "jsonb_populate_recordset",
      "numeric_cmp",
      "hashvarlenaextended",
      "ascii_to_mic",
      "macaddr_in",
      "nlikejoinsel",
      "point_mul",
      "hashint4",
      "variance",
      "bpcharge",
      "pg_timezone_abbrevs",
      "pg_collation_is_visible",
      "datetime_pl",
      "enum_in",
      "regrolerecv",
      "hashoidvector",
      "jsonb_populate_record",
      "numeric_recv",
      "sha512",
      "ceil",
      "record_in",
      "convert_from",
      "bpchar_pattern_ge",
      "pg_stat_reset",
      "timestamptz_le_timestamp",
      "spg_text_leaf_consistent",
      "to_regoperator",
      "dist_pl",
      "pg_ls_tmpdir",
      "timetz_ne",
      "pg_stat_get_buf_written_backend",
      "network_ge",
      "int2send",
      "timetz_hash_extended",
      "pg_stat_get_autoanalyze_count",
      "hashbpcharextended",
      "pg_lsn_out",
      "atand",
      "binary_upgrade_set_record_init_privs",
      "regprocin",
      "shift_jis_2004_to_euc_jis_2004",
      "make_date",
      "bytealike",
      "spg_kd_picksplit",
      "gist_circle_consistent",
      "int4um",
      "int8mod",
      "strip",
      "pg_reload_conf",
      "enum_gt",
      "area",
      "int8_avg_serialize",
      "bpchar_larger",
      "range_contained_by",
      "numeric_ne",
      "textsend",
      "pg_import_system_collations",
      "pg_stat_get_db_tuples_fetched",
      "chargt",
      "array_agg_array_transfn",
      "time_in",
      "circle_overright",
      "generate_series_int8_support",
      "pg_relation_filepath",
      "float4mi",
      "btint84cmp",
      "RI_FKey_cascade_del",
      "query_to_xmlschema",
      "transaction_timestamp",
      "regexp_split_to_table",
      "jsonb_gt",
      "tsvectorrecv",
      "pg_tablespace_databases",
      "lo_unlink",
      "pg_last_xact_replay_timestamp",
      "float48ne",
      "int82le",
      "xmlvalidate",
      "interval_hash_extended",
      "box_send",
      "bitnot",
      "jsonb_pretty",
      "isparallel",
      "boolne",
      "win1250_to_latin2",
      "int24lt",
      "prsd_start",
      "pg_stat_get_db_checksum_last_failure",
      "array_larger",
      "regr_sxx",
      "range_adjacent",
      "dsqrt",
      "pg_create_logical_replication_slot",
      "interval_div",
      "jsonb_path_exists",
      "pg_lsn_le",
      "pg_stat_get_backend_wait_event",
      "int2not",
      "factorial",
      "utf8_to_euc_kr",
      "timestamp_le",
      "aclcontains",
      "pg_get_indexdef",
      "int28pl",
      "pg_isolation_test_session_is_blocked",
      "bpchariclike",
      "cashlarger",
      "hash_numeric",
      "hashoidvectorextended",
      "unknownsend",
      "btint24cmp",
      "time_hash",
      "pg_stat_get_db_conflict_lock",
      "range_gist_union",
      "int4and",
      "random",
      "scalargesel",
      "brin_inclusion_consistent",
      "pg_lsn_hash_extended",
      "range_eq",
      "array_fill",
      "poly_overright",
      "tand",
      "generate_series",
      "textcat",
      "float84eq",
      "isvertical",
      "jsonb_exists_any",
      "pg_stat_get_last_autovacuum_time",
      "oidvectorne",
      "void_send",
      "pg_prepared_statement",
      "timestamptz_le",
      "int48le",
      "numeric_accum",
      "macaddr8_cmp",
      "lseg_perp",
      "timestamptz_eq_date",
      "record_image_le",
      "namenetext",
      "int4pl",
      "oid",
      "date_larger",
      "pg_ndistinct_in",
      "percentile_cont_float8_multi_final",
      "jsonpath_send",
      "binary_upgrade_set_missing_value",
      "pg_current_wal_insert_lsn",
      "bitlt",
      "date_pli",
      "table_am_handler_in",
      "bpchareq",
      "enum_larger",
      "timestamp_smaller",
      "plpgsql_validator",
      "money",
      "date_mi",
      "jsonb_typeof",
      "int2or",
      "varcharsend",
      "bool_or",
      "oidvectorin",
      "varbit_send",
      "interval_ge",
      "pg_copy_logical_replication_slot",
      "dround",
      "ts_rank_cd",
      "euc_jis_2004_to_utf8",
      "pg_stat_get_progress_info",
      "regoperin",
      "date_mii",
      "btnametextcmp",
      "arrayoverlap",
      "float8up",
      "date_send",
      "scale",
      "tidsmaller",
      "int84ge",
      "pg_replication_origin_oid",
      "btint8sortsupport",
      "npoints",
      "timestamptz_ne",
      "jsonb_strip_nulls",
      "time_mi_time",
      "byteanlike",
      "timestamptypmodout",
      "inet_gist_picksplit",
      "pg_ts_config_is_visible",
      "int2larger",
      "opaque_out",
      "macaddr8_set7bit",
      "pg_stat_get_db_xact_rollback",
      "current_query",
      "has_function_privilege",
      "time_larger",
      "pg_stat_get_backend_pid",
      "btint8cmp",
      "anyarray_in",
      "float8_covar_pop",
      "generate_series_int4_support",
      "hash_numeric_extended",
      "euc_cn_to_mic",
      "bernoulli",
      "inet_server_port",
      "upper_inc",
      "txid_current",
      "lead",
      "btfloat8cmp",
      "oidne",
      "float48mul",
      "pg_stat_get_bgwriter_requested_checkpoints",
      "pg_stat_get_xact_function_total_time",
      "cot",
      "textlike",
      "interval_ne",
      "float4recv",
      "gin_cmp_prefix",
      "float48mi",
      "circle_above",
      "brin_summarize_range",
      "network_supeq",
      "icregexeqsel",
      "fdw_handler_in",
      "gtsvector_union",
      "spg_quad_choose",
      "gtsvector_consistent",
      "date_gt_timestamp",
      "jsonb_object_agg_transfn",
      "int42eq",
      "timestamp_out",
      "array_ne",
      "oidvectorsend",
      "date_le_timestamp",
      "timestamptz_lt_date",
      "lo_put",
      "pg_stat_get_xact_numscans",
      "namesend",
      "int8pl",
      "pg_stat_get_db_conflict_all",
      "dpow",
      "dist_pb",
      "big5_to_euc_tw",
      "pt_contained_poly",
      "timestamptz_lt",
      "btfloat4cmp",
      "pg_control_init",
      "positionsel",
      "numeric_avg_combine",
      "pg_replication_origin_advance",
      "int84mi",
      "float4pl",
      "floor",
      "pg_size_bytes",
      "record_eq",
      "regconfigrecv",
      "format",
      "suppress_redundant_updates_trigger",
      "hashfloat4extended",
      "substring",
      "int82mi",
      "lower_inf",
      "btoidcmp",
      "justify_hours",
      "record_image_lt",
      "jsonb_delete",
      "on_pl",
      "float8le",
      "ts_stat",
      "float8_regr_sxy",
      "date_mi_interval",
      "int8smaller",
      "timetz_out",
      "macaddr_le",
      "text_gt",
      "percent_rank",
      "namelt",
      "array_cat",
      "circle_below",
      "close_lseg",
      "timestamptz_out",
      "inetor",
      "jsonb_hash",
      "xmlagg",
      "pg_stat_get_xact_tuples_returned",
      "text_le",
      "index_am_handler_out",
      "json_typeof",
      "float84le",
      "date_ge_timestamptz",
      "int2xor",
      "cash_recv",
      "cash_cmp",
      "int82gt",
      "timestamp",
      "pg_stat_get_db_conflict_snapshot",
      "float4larger",
      "float8abs",
      "json_object_agg_finalfn",
      "pg_sequence_parameters",
      "tsm_handler_in",
      "timestamp_ge_date",
      "cash_div_flt8",
      "networkjoinsel",
      "ts_match_vq",
      "float4eq",
      "johab_to_utf8",
      "spg_box_quad_config",
      "int8range_subdiff",
      "pg_column_is_updatable",
      "timestamptz_smaller",
      "int84le",
      "int24mul",
      "network_subeq",
      "varchar",
      "nameeq",
      "jsonb_path_query",
      "enum_first",
      "circle_lt",
      "numeric_uplus",
      "covar_samp",
      "hashbpchar",
      "xml_in",
      "point_send",
      "jsonb_array_element",
      "spg_text_inner_consistent",
      "pg_create_restore_point",
      "bytealt",
      "dist_cpoint",
      "int4range_canonical",
      "jsonb_path_match",
      "pg_type_is_visible",
      "inet_gist_consistent",
      "hashchar",
      "bttextsortsupport",
      "timestamp_larger",
      "plainto_tsquery",
      "time",
      "float8_corr",
      "float4gt",
      "timestamp_mi_interval",
      "int2um",
      "amvalidate",
      "cash_div_cash",
      "float8recv",
      "set_byte",
      "strpos",
      "utf8_to_gbk",
      "box_above_eq",
      "anyrange_out",
      "gin_extract_tsquery",
      "pg_stat_get_xact_blocks_hit",
      "box_out",
      "btbpchar_pattern_sortsupport",
      "range_gt",
      "current_setting",
      "json_array_element",
      "jsonb_le",
      "circle_mul_pt",
      "pg_lsn_send",
      "pg_database_size",
      "json_strip_nulls",
      "box_eq",
      "numeric_send",
      "json_array_elements_text",
      "win_to_utf8",
      "enum_lt",
      "array_typanalyze",
      "lpad",
      "big5_to_mic",
      "_pg_interval_type",
      "boolrecv",
      "charsend",
      "dist_ppath",
      "make_interval",
      "int24mi",
      "brin_minmax_union",
      "int2_accum",
      "character_length",
      "namerecv",
      "int2div",
      "daterange_canonical",
      "gist_poly_consistent",
      "poly_overlap",
      "timestamp_eq_timestamptz",
      "mic_to_latin2",
      "bitshiftright",
      "get_bit",
      "encode",
      "isclosed",
      "on_sb",
      "timestamp_eq",
      "pg_logical_emit_message",
      "to_regoper",
      "brin_desummarize_range",
      "pg_stat_get_db_blk_read_time",
      "byteasend",
      "euc_jp_to_sjis",
      "gist_box_consistent",
      "pg_stat_get_db_conflict_tablespace",
      "inetpl",
      "array_positions",
      "sjis_to_euc_jp",
      "float8div",
      "numeric_smaller",
      "cash_mi",
      "float84ge",
      "tsvector_lt",
      "time_pl_interval",
      "hashvarlena",
      "interval_send",
      "bpchartypmodin",
      "pg_stat_get_autovacuum_count",
      "date_lt_timestamptz",
      "numeric_power",
      "asind",
      "timestamptz_eq_timestamp",
      "poly_left",
      "pg_operator_is_visible",
      "pow",
      "numeric_avg_deserialize",
      "_pg_expandarray",
      "numeric_avg",
      "mic_to_ascii",
      "tsquery_and",
      "line",
      "json_object_agg",
      "iso_to_win866",
      "json_recv",
      "regoperout",
      "pg_stat_get_tuples_returned",
      "regconfigout",
      "cash_in",
      "inet_send",
      "close_pb",
      "pg_hba_file_rules",
      "language_handler_out",
      "int82eq",
      "circle_center",
      "int28div",
      "dist_ppoly",
      "text_larger",
      "macaddr_ne",
      "inter_lb",
      "bttextnamecmp",
      "cideq",
      "timestamp_support",
      "varbittypmodout",
      "char",
      "timestamp_hash_extended",
      "pg_ts_template_is_visible",
      "int4le",
      "range_intersect",
      "time_le",
      "int4range_subdiff",
      "oidgt",
      "textlename",
      "gin_triconsistent_jsonb_path",
      "jsonpath_recv",
      "utf8_to_euc_jp",
      "range_union",
      "ts_filter",
      "lseg_parallel",
      "mic_to_latin4",
      "date_smaller",
      "gin_extract_jsonb",
      "tsmatchjoinsel",
      "box_below_eq",
      "date_ne_timestamptz",
      "gin_tsquery_triconsistent",
      "int42lt",
      "circle_left",
      "line_eq",
      "mod",
      "to_json",
      "RI_FKey_setdefault_del",
      "macaddr8_not",
      "dist_sb",
      "date_ne_timestamp",
      "interval_lt",
      "text_pattern_ge",
      "pg_stat_get_backend_userid",
      "charlt",
      "unique_key_recheck",
      "gist_point_compress",
      "ts_match_tt",
      "macaddr_cmp",
      "bitshiftleft",
      "jsonb_out",
      "contsel",
      "numeric_exp",
      "to_regproc",
      "json_build_array",
      "pg_stat_get_db_numbackends",
      "binary_upgrade_set_next_toast_pg_type_oid",
      "timestamp_gt",
      "network_cmp",
      "pg_total_relation_size",
      "btint2sortsupport",
      "pg_event_trigger_dropped_objects",
      "pg_mcv_list_out",
      "range_after",
      "btint28cmp",
      "int4shr",
      "pg_stat_get_xact_blocks_fetched",
      "path",
      "percentile_disc_multi_final",
      "index_am_handler_in",
      "pg_stat_get_buf_alloc",
      "int84pl",
      "jsonb_object_agg_finalfn",
      "rank",
      "close_ps",
      "euc_tw_to_mic",
      "has_table_privilege",
      "pg_replication_origin_progress",
      "range_cmp",
      "jsonb_path_match_opr",
      "bool_alltrue",
      "oidvectortypes",
      "has_schema_privilege",
      "on_ps",
      "pg_stat_get_db_temp_files",
      "RI_FKey_setdefault_upd",
      "uuid_cmp",
      "center",
      "int4ne",
      "bpchar_pattern_lt",
      "nameconcatoid",
      "time_support",
      "box_in",
      "interval_hash",
      "thesaurus_init",
      "circle_overbelow",
      "int4smaller",
      "float8_regr_sxx",
      "ishorizontal",
      "json_each_text",
      "xidin",
      "cash_le",
      "anyarray_out",
      "int42pl",
      "time_ne",
      "path_recv",
      "boolgt",
      "regdictionaryin",
      "spg_box_quad_leaf_consistent",
      "point_horiz",
      "nextval",
      "schema_to_xml",
      "float48gt",
      "date_recv",
      "gin_tsquery_consistent",
      "num_nulls",
      "pg_stat_get_db_conflict_startup_deadlock",
      "pg_cursor",
      "tsquery_gt",
      "pg_stat_get_bgwriter_buf_written_clean",
      "int2in",
      "namegt",
      "xidrecv",
      "path_inter",
      "pg_jit_available",
      "regtypeout",
      "int82lt",
      "inet_recv",
      "spg_quad_inner_consistent",
      "timetypmodout",
      "btfloat4sortsupport",
      "asin",
      "time_cmp",
      "namelike",
      "dist_polyp",
      "hashint2",
      "pg_stat_get_mod_since_analyze",
      "timetz_larger",
      "close_sb",
      "rpad",
      "box_intersect",
      "prsd_headline",
      "utf8_to_big5",
      "time_gt",
      "time_eq",
      "int8_avg_accum",
      "shobj_description",
      "win1251_to_iso",
      "box_center",
      "anyarray_recv",
      "poly_npoints",
      "spg_text_config",
      "json_extract_path_text",
      "bit_recv",
      "rangesel",
      "_pg_char_octet_length",
      "max",
      "float8_combine",
      "timestamp_eq_date",
      "upper",
      "date_pl_interval",
      "circle_overleft",
      "numeric_uminus",
      "pg_stat_get_tuples_hot_updated",
      "masklen",
      "int8_accum_inv",
      "pg_ls_logdir",
      "namein",
      "gin_triconsistent_jsonb",
      "pt_contained_circle",
      "cash_div_flt4",
      "oidle",
      "satisfies_hash_partition",
      "_pg_datetime_precision",
      "pg_ddl_command_send",
      "pg_ts_dict_is_visible",
      "scalargtsel",
      "macaddr8_out",
      "timestamptz_lt_timestamp",
      "inet_gist_union",
      "timestamp_ge",
      "thesaurus_lexize",
      "pg_collation_for",
      "int4mod",
      "regtyperecv",
      "int4larger",
      "varcharrecv",
      "version",
      "cume_dist_final",
      "poly_same",
      "int8_avg_combine",
      "numeric_ln",
      "int42mi",
      "pg_logical_slot_peek_binary_changes",
      "pg_read_file_old",
      "RI_FKey_check_ins",
      "numeric_mod",
      "pg_stat_get_analyze_count",
      "utf8_to_euc_jis_2004",
      "var_pop",
      "int8_avg",
      "pg_get_keywords",
      "pg_get_partition_constraintdef",
      "float4smaller",
      "textin",
      "pg_replication_origin_session_reset",
      "concat",
      "popen",
      "gist_poly_compress",
      "int48mi",
      "pg_advisory_xact_lock_shared",
      "point_out",
      "regprocsend",
      "pg_index_has_property",
      "uuid_ge",
      "pg_stat_get_db_temp_bytes",
      "int2mul",
      "chareq",
      "regoperatorrecv",
      "tsquery_ge",
      "interval_pl_timetz",
      "textanycat",
      "bitand",
      "enum_le",
      "regtypesend",
      "path_add_pt",
      "justify_interval",
      "enum_out",
      "lseg_ne",
      "on_sl",
      "texticnlike",
      "int4range",
      "cardinality",
      "int82div",
      "pg_stat_get_backend_xact_start",
      "texticlike_support",
      "bpcharrecv",
      "array_agg_array_finalfn",
      "pg_table_size",
      "replace",
      "timetz_gt",
      "pg_stat_get_bgwriter_buf_written_checkpoints",
      "pi",
      "timestamptz_recv",
      "range_lt",
      "record_le",
      "regconfigin",
      "timeofday",
      "poly_contain",
      "pclose",
      "lo_truncate",
      "cstring_send",
      "oidge",
      "float84div",
      "booland_statefunc",
      "box_recv",
      "numerictypmodin",
      "pg_stat_file",
      "jsonb_extract_path",
      "cash_mul_flt4",
      "interval_pl_date",
      "jsonb_exists_all",
      "int2int4_sum",
      "oidvectorgt",
      "pg_last_committed_xact",
      "date_in",
      "arraycontained",
      "text_pattern_lt",
      "timestamp_send",
      "tsm_handler_out",
      "mic_to_win1251",
      "iclikejoinsel",
      "stddev_pop",
      "pg_notify",
      "regoperatorsend",
      "float8ne",
      "oidlarger",
      "line_horizontal",
      "oidin",
      "int24ne",
      "on_pb",
      "timestamp_sortsupport",
      "getpgusername",
      "xmlconcat2",
      "gb18030_to_utf8",
      "json_array_element_text",
      "bpchar_pattern_gt",
      "date_le_timestamptz",
      "regexnesel",
      "interval_um",
      "timestamptz_send",
      "charle",
      "scalarlejoinsel",
      "uuid_recv",
      "float4up",
      "btrecordcmp",
      "pg_get_userbyid",
      "bool_anytrue",
      "spg_poly_quad_compress",
      "percentile_cont",
      "pg_config",
      "numeric_poly_stddev_samp",
      "database_to_xmlschema",
      "network_le",
      "mode",
      "array_lower",
      "dsnowball_lexize",
      "gisthandler",
      "pg_drop_replication_slot",
      "pg_table_is_visible",
      "pg_stat_get_db_tuples_inserted",
      "inetmi_int8",
      "gtsquery_compress",
      "to_timestamp",
      "sjis_to_mic",
      "int8recv",
      "pg_indexam_has_property",
      "fdw_handler_out",
      "numeric_poly_var_pop",
      "box_below",
      "float4abs",
      "poly_overabove",
      "lo_get",
      "path_center",
      "pg_stat_get_snapshot_timestamp",
      "ginarraytriconsistent",
      "pg_indexes_size",
      "line_out",
      "regnamespacerecv",
      "lseg_length",
      "lo_import",
      "ntile",
      "varcharout",
      "pg_stat_reset_single_function_counters",
      "cash_mul_flt8",
      "json_populate_record",
      "mic_to_euc_jp",
      "latin2_to_mic",
      "lo_close",
      "lseg_send",
      "oidlt",
      "hash_aclitem",
      "cstring_out",
      "utf8_to_euc_tw",
      "date_ge_timestamp",
      "pg_stat_get_db_tuples_returned",
      "pg_stat_get_db_blocks_fetched",
      "jsonb_exists",
      "float4_accum",
      "oidsmaller",
      "regexp_match",
      "lseg_center",
      "point_right",
      "iso_to_koi8r",
      "trunc",
      "decode",
      "areasel",
      "hash_range_extended",
      "diameter",
      "uuid_eq",
      "pg_get_replication_slots",
      "pg_current_wal_flush_lsn",
      "pg_statistics_obj_is_visible",
      "RI_FKey_restrict_upd",
      "numeric_fac",
      "array_position",
      "circle_contain",
      "text_smaller",
      "int2out",
      "int48div",
      "macaddr_ge",
      "pg_timezone_names",
      "float8eq",
      "btrecordimagecmp",
      "namele",
      "ltrim",
      "pg_ndistinct_send",
      "float84ne",
      "char_length",
      "pg_dependencies_out",
      "box_le",
      "tidgt",
      "hashinetextended",
      "gtsquery_penalty",
      "float8_covar_samp",
      "gist_point_distance",
      "pg_get_constraintdef",
      "box_above",
      "txid_snapshot_xmax",
      "pg_stat_get_xact_tuples_hot_updated",
      "shell_out",
      "boolge",
      "line_recv",
      "bool_accum",
      "timetz_hash",
      "aclitemout",
      "timestamptz_gt",
      "euc_kr_to_utf8",
      "array_le",
      "string_agg",
      "varbitcmp",
      "mic_to_euc_tw",
      "pg_lsn_ne",
      "binary_upgrade_create_empty_extension",
      "regprocout",
      "get_byte",
      "json_agg",
      "tidne",
      "int4_avg_accum_inv",
      "ts_token_type",
      "record_send",
      "regexp_replace",
      "json_to_record",
      "int2vectorout",
      "make_time",
      "macaddr_recv",
      "macaddr_eq",
      "ascii_to_utf8",
      "querytree"
    ],
    "prosrc": [
      "circle_right",
      "language_handler_in",
      "timestamptz_time",
      "line_intersect",
      "xid_age",
      "inet_to_cidr",
      "select pg_catalog.on_ppath($2, $1)",
      "macaddr_not",
      "nameicregexeq",
      "dsynonym_init",
      "timestamptz_gt_timestamp",
      "tsvector_gt",
      "xml_is_well_formed_document",
      "numeric_int8",
      "pg_num_nulls",
      "timestamp_mi",
      "pg_walfile_name_offset",
      "path_send",
      "pg_replication_origin_xact_setup",
      "pg_identify_object",
      "int8div",
      "pg_stat_clear_snapshot",
      "pg_stat_get_backend_dbid",
      "json_object_two_arg",
      "txid_snapshot_in",
      "textregexeq_support",
      "uuid_sortsupport",
      "make_timestamptz_at_timezone",
      "has_any_column_privilege_name",
      "has_column_privilege_id_name_attnum",
      "cash_mul_int2",
      "gin_extract_tsvector",
      "network_gt",
      "pg_current_logfile",
      "cidin",
      "time_mi_interval",
      "int8shr",
      "width_bucket_numeric",
      "poly_above",
      "poly_overbelow",
      "range_gist_consistent",
      "bittoint8",
      "timestamptz_in",
      "network_netmask",
      "rtrim",
      "line_perp",
      "show_config_by_name_missing_ok",
      "int82mul",
      "regoperatorin",
      "oidvectorge",
      "ftoi8",
      "setval_oid",
      "name_bpchar",
      "interval_justify_days",
      "euc_jp_to_utf8",
      "in_range_time_interval",
      "array_send",
      "pg_stat_get_checkpoint_sync_time",
      "latin3_to_mic",
      "enum_ne",
      "float4ge",
      "dcos",
      "hashmacaddrextended",
      "dcotd",
      "pg_has_role_name_name",
      "hashoid",
      "currtid_byrelname",
      "cash_div_int4",
      "array_remove",
      "prsd_end",
      "pg_stat_get_last_analyze_time",
      "int84eq",
      "brinhandler",
      "be_lo_unlink",
      "time_lt",
      "array_position_start",
      "scalarltsel",
      "timestamptypmodin",
      "icregexnesel",
      "cash_send",
      "jsonb_send",
      "timestamp_time",
      "on_ppath",
      "has_language_privilege_name",
      "cidout",
      "line_send",
      "txid_visible_in_snapshot",
      "cursor_to_xmlschema",
      "namege",
      "pg_export_snapshot",
      "table_to_xml",
      "pg_stat_get_xact_tuples_updated",
      "timestamptz_gt_date",
      "to_tsvector_byid",
      "inet_spg_config",
      "dist_pc",
      "win1251_to_koi8r",
      "uuid_send",
      "inet_gist_compress",
      "euc_jis_2004_to_shift_jis_2004",
      "int2mod",
      "neqjoinsel",
      "timestamp_date",
      "pg_available_extension_versions",
      "pg_relation_is_publishable",
      "pg_stat_get_backend_client_port",
      "int42mul",
      "pg_logical_slot_peek_changes",
      "pg_is_wal_replay_paused",
      "array_gt",
      "cstring_in",
      "int42ge",
      "has_database_privilege_id_name",
      "circle_out",
      "gtsquery_consistent",
      "to_regclass",
      "path_distance",
      "pg_get_indexdef_ext",
      "xidneq",
      "gist_box_picksplit",
      "text_regclass",
      "jsonb_eq",
      "timestamptz_cmp_date",
      "path_n_lt",
      "float8_stddev_pop",
      "int28ge",
      "point_box",
      "pg_stat_get_tuples_inserted",
      "lseg_eq",
      "win1250_to_mic",
      "byteale",
      "inet_spg_picksplit",
      "texticregexne",
      "md5_text",
      "circle_ne",
      "int4gt",
      "btarraycmp",
      "dacosd",
      "binary_upgrade_set_next_toast_pg_class_oid",
      "has_type_privilege_id_name",
      "float8ge",
      "float84pl",
      "gist_circle_compress",
      "circle_gt",
      "datan2d",
      "range_ne",
      "jsonb_path_exists_opr",
      "pg_read_file",
      "in_range_int2_int8",
      "text_lt",
      "pg_stat_get_db_deadlocks",
      "phraseto_tsquery",
      "hashfloat8",
      "float8_regr_avgy",
      "jsonb_hash_extended",
      "jsonb_set",
      "line_vertical",
      "has_tablespace_privilege_name_id",
      "int2smaller",
      "mic_to_euc_cn",
      "int2eq",
      "ts_stat1",
      "pg_get_functiondef",
      "similar_escape",
      "gist_point_consistent",
      "pg_stat_get_xact_function_calls",
      "pg_convert",
      "int4eq",
      "pg_start_backup",
      "ts_stat2",
      "interval_combine",
      "timestamptztypmodin",
      "row_security_active",
      "path_isclosed",
      "int8_mul_cash",
      "tsquery_eq",
      "pg_get_viewdef_name",
      "int48gt",
      "point_in",
      "varchartypmodout",
      "pg_stat_get_backend_client_addr",
      "pg_stop_backup",
      "float8_regr_slope",
      "int2mi",
      "pg_advisory_lock_shared_int8",
      "points_box",
      "path_length",
      "xideq",
      "btoidsortsupport",
      "timestamp_le_timestamptz",
      "date_ge",
      "poly_right",
      "line_in",
      "float4send",
      "pg_nextoid",
      "inet_out",
      "enum_eq",
      "dasin",
      "prsd_nexttoken",
      "tsvector_le",
      "float4_to_char",
      "dsimple_lexize",
      "path_n_eq",
      "iso8859_1_to_utf8",
      "select ($1, ($1 + $2)) overlaps ($3, $4)",
      "pg_event_trigger_table_rewrite_oid",
      "bitgt",
      "nameregexeq",
      "pg_partition_root",
      "int4not",
      "numeric_gt",
      "has_server_privilege_name",
      "in_range_timetz_interval",
      "gtsvector_penalty",
      "pg_stat_get_bgwriter_maxwritten_clean",
      "byteaGetBit",
      "int84gt",
      "pg_stat_get_wal_receiver",
      "hash_range",
      "text_right",
      "range_overlaps",
      "timestamp_age",
      "select pg_catalog.xpath_exists($1, $2, &apos;{}&apos;::pg_catalog.text[])",
      "byteaoverlay_no_len",
      "pg_my_temp_schema",
      "jsonb_to_record",
      "text_format_nv",
      "table_am_handler_out",
      "lseg_vertical",
      "has_tablespace_privilege_name",
      "path_mul_pt",
      "int4out",
      "textregexsubstr",
      "circle_contain_pt",
      "make_timestamptz",
      "pg_try_advisory_lock_int8",
      "nameicnlike",
      "array_smaller",
      "win866_to_mic",
      "int24pl",
      "\n    SELECT * FROM pg_catalog.ts_debug( pg_catalog.get_current_ts_config(), $1);\n",
      "utf8_to_shift_jis_2004",
      "btnamecmp",
      "database_to_xml_and_xmlschema",
      "point_distance",
      "array_in",
      "timetztypmodin",
      "timetz_in",
      "like_escape",
      "byteane",
      "path_open",
      "datetime_timestamp",
      "numeric_var_pop",
      "utf8_to_sjis",
      "pg_node_tree_out",
      "latin1_to_mic",
      "event_trigger_in",
      "jsonb_ge",
      "hashtext",
      "timestamp_ne_date",
      "jsonb_numeric",
      "pg_stat_get_xact_tuples_inserted",
      "box_overright",
      "int48mul",
      "regexp_split_to_table_no_flags",
      "circle_box",
      "pg_relation_filenode",
      "has_function_privilege_id",
      "btrim",
      "pg_lsn_gt",
      "PG_encoding_to_char",
      "texticlike",
      "tsm_system_handler",
      "float8_regr_accum",
      "hashtextextended",
      "like_escape_bytea",
      "pg_size_pretty_numeric",
      "tsvector_update_trigger_byid",
      "macaddr_trunc",
      "time_out",
      "cash_ne",
      "pg_tablespace_location",
      "pg_extension_update_paths",
      "line_interpt",
      "boolin",
      "btint4sortsupport",
      "tsvector_to_array",
      "date_cmp_timestamptz",
      "regdictionaryrecv",
      "percentile_cont_interval_multi_final",
      "has_type_privilege_name",
      "uuid_hash_extended",
      "has_database_privilege_id_id",
      "select pg_catalog.pg_sleep(extract(epoch from pg_catalog.clock_timestamp() operator(pg_catalog.+) $1) operator(pg_catalog.-) extract(epoch from pg_catalog.clock_timestamp()))",
      "pg_stat_get_checkpoint_write_time",
      "array_ndims",
      "bit_and",
      "shell_in",
      "nameicregexne",
      "to_hex32",
      "namegetext",
      "numeric_float8",
      "byteaSetByte",
      "pg_database_size_name",
      "poly_distance",
      "pg_stat_get_backend_wait_event_type",
      "gtsquery_picksplit",
      "nameregexne",
      "window_cume_dist",
      "pg_ts_parser_is_visible",
      "pg_lsn_lt",
      "tsvectorout",
      "btint48cmp",
      "any_out",
      "i8tof",
      "timetz_izone",
      "bitoctetlength",
      "pg_replication_origin_session_progress",
      "mic_to_latin1",
      "tsqueryin",
      "array_eq",
      "sha256_bytea",
      "texticregexeq_support",
      "to_regprocedure",
      "record_recv",
      "mic_to_latin3",
      "to_regtype",
      "utf8_to_euc_cn",
      "jsonb_each_text",
      "timestamptz_age",
      "tsqueryrecv",
      "int28eq",
      "hashint8",
      "pg_logical_slot_get_changes",
      "float8_var_samp",
      "booltext",
      "jsonb_array_element_text",
      "has_table_privilege_name",
      "bpchargt",
      "be_lo_import",
      "float8lt",
      "hashmacaddr8",
      "mode_final",
      "regexp_matches_no_flags",
      "timestamptz_ge_timestamp",
      "i4tod",
      "tsquery_lt",
      "domain_recv",
      "macaddr8_or",
      "int8dec",
      "boxes_bound_box",
      "float4out",
      "SELECT\n  CASE WHEN $1 IN (25, 1042, 1043) /* text, char, varchar */\n       THEN CASE WHEN $2 = -1 /* default typmod */\n                 THEN CAST(2^30 AS integer)\n                 ELSE information_schema._pg_char_max_length($1, $2) *\n                      pg_catalog.pg_encoding_max_length((SELECT encoding FROM pg_catalog.pg_database WHERE datname = pg_catalog.current_database()))\n            END\n       ELSE null\n  END",
      "interval_to_char",
      "varchar_support",
      "txid_current_snapshot",
      "uuid_hash",
      "uuid_gt",
      "regopersend",
      "timestamp_izone",
      "pg_lsn_eq",
      "uuid_le",
      "oidout",
      "pg_control_recovery",
      "charne",
      "regproceduresend",
      "pg_dependencies_send",
      "select pg_catalog.log(10, $1)",
      "float8out",
      "jsonb_delete_path",
      "int24gt",
      "regtypein",
      "box_div",
      "regprocedurerecv",
      "makeaclitem",
      "dtoi4",
      "inet_client_addr",
      "dasinh",
      "point_ne",
      "length_in_encoding",
      "aclremove",
      "SELECT\n  CASE WHEN $2 = -1 /* default typmod */\n       THEN null\n       WHEN $1 IN (1042, 1043) /* char, varchar */\n       THEN $2 - 4\n       WHEN $1 IN (1560, 1562) /* bit, varbit */\n       THEN $2\n       ELSE null\n  END",
      "int2vectorsend",
      "brin_summarize_new_values",
      "ginhandler",
      "bttext_pattern_sortsupport",
      "jsonb_array_elements_text",
      "text_ge",
      "numeric_round",
      "tsvector_ge",
      "poly_contain_pt",
      "timestamptz_zone",
      "has_foreign_data_wrapper_privilege_id_name",
      "has_server_privilege_id_id",
      "tsquery_phrase_distance",
      "ginarrayextract_2args",
      "int8_accum",
      "be_lo_creat",
      "btfloat84cmp",
      "jsonb_ne",
      "close_pl",
      "aggregate_dummy",
      "numeric_serialize",
      "int42div",
      "numeric_trunc",
      "timetz_send",
      "trigger_out",
      "repeat",
      "regexp_split_to_array",
      "int2vectorrecv",
      "pg_trigger_depth",
      "lseg_lt",
      "pg_get_ruledef",
      "pg_stats_ext_mcvlist_items",
      "uuid_out",
      "pg_stat_get_numscans",
      "interval_avg",
      "inet_client_port",
      "numeric_poly_stddev_pop",
      "range_send",
      "interval_cmp",
      "int82ge",
      "int28ne",
      "int28mi",
      "be_lo_put",
      "path_npoints",
      "path_out",
      "RI_FKey_cascade_upd",
      "char_bpchar",
      "hashfloat8extended",
      "txid_snapshot_xmin",
      "int28lt",
      "query_to_xml_and_xmlschema",
      "dasind",
      "json_object_field_text",
      "int4_avg_combine",
      "dtan",
      "bit_in",
      "jsonb_to_tsvector_byid",
      "namegttext",
      "pg_logical_emit_message_text",
      "scalargejoinsel",
      "network_sup",
      "make_timestamp",
      "int4_accum",
      "int2abs",
      "current_database",
      "text_pattern_gt",
      "ts_typanalyze",
      "regprocedurein",
      "array_length",
      "btnamesortsupport",
      "numeric_add",
      "spg_quad_picksplit",
      "window_lead_with_offset_and_default",
      "has_any_column_privilege_id_name",
      "pg_stat_get_backend_activity",
      "btfloat48cmp",
      "pg_get_triggerdef",
      "int8gt",
      "shift_jis_2004_to_utf8",
      "range_upper_inc",
      "lseg_in",
      "generate_series_timestamptz",
      "pg_copy_physical_replication_slot_a",
      "macaddr8_lt",
      "range_constructor2",
      "charge",
      "txid_status",
      "interval_accum",
      "numeric",
      "poly_contained",
      "mic_to_koi8r",
      "numeric_poly_deserialize",
      "initcap",
      "tsquery_not",
      "int8abs",
      "int8_avg_deserialize",
      "pg_lsn_in",
      "timestamptztypmodout",
      "pg_ls_dir",
      "ts_headline_jsonb_opt",
      "pg_stat_get_tuples_deleted",
      "areajoinsel",
      "xmltotext",
      "anynonarray_out",
      "pg_mcv_list_send",
      "iclikesel",
      "win866_to_iso",
      "pg_partition_tree",
      "tsvectorsend",
      "array_dims",
      "jsonb_to_tsvector",
      "pg_get_expr_ext",
      "scalargtjoinsel",
      "anyrange_in",
      "pg_try_advisory_xact_lock_int8",
      "pg_get_ruledef_ext",
      "pg_lock_status",
      "numeric_var_samp",
      "string_agg_finalfn",
      "to_hex64",
      "box_overabove",
      "int4_to_char",
      "tsvector_setweight_by_filter",
      "pg_current_wal_lsn",
      "regexeqsel",
      "cash_ge",
      "circle_sub_pt",
      "brin_minmax_consistent",
      "byteaeq",
      "range_contains",
      "uuid_ne",
      "interval_le",
      "has_any_column_privilege_name_id",
      "numeric_sub",
      "box_left",
      "has_function_privilege_id_id",
      "pg_stat_get_buf_fsync_backend",
      "numeric_abs",
      "int4mul",
      "pg_postmaster_start_time",
      "row_to_json",
      "pg_has_role_name_id",
      "positionjoinsel",
      "box_lt",
      "text_substr",
      "varbittypmodin",
      "SELECT\n  CASE WHEN $1 IN (1186) /* interval */\n           THEN pg_catalog.upper(substring(pg_catalog.format_type($1, $2) from &apos;interval[()0-9]* #&quot;%#&quot;&apos; for &apos;#&apos;))\n       ELSE null\n  END",
      "fmgr_c_validator",
      "macaddr_sortsupport",
      "cidr_send",
      "pg_stat_get_bgwriter_stat_reset_time",
      "inet_spg_choose",
      "now",
      "int8or",
      "bitgetbit",
      "hash_array_extended",
      "json_object_agg_transfn",
      "postgresql_fdw_validator",
      "poly_recv",
      "texticregexeq",
      "pg_stat_get_db_conflict_bufferpin",
      "datanh",
      "pg_lsn_mi",
      "select pg_catalog.lpad($1, $2, &apos; &apos;)",
      "timetz_smaller",
      "utf8_to_uhc",
      "text_to_array_null",
      "koi8u_to_utf8",
      "getdatabaseencoding",
      "setseed",
      "has_table_privilege_id_name",
      "pg_advisory_lock_int4",
      "pg_conversion_is_visible",
      "hashtid",
      "float4div",
      "window_lead",
      "cidrecv",
      "xml_is_well_formed",
      "pg_prepared_xact",
      "numeric_poly_sum",
      "float8in",
      "koi8r_to_mic",
      "RI_FKey_restrict_del",
      "time_hash_extended",
      "utf8_to_koi8u",
      "tsquerytree",
      "window_first_value",
      "to_jsonb",
      "cstring_recv",
      "numeric_to_char",
      "prefixsel",
      "int8shl",
      "window_lag_with_offset",
      "circle_div_pt",
      "box_gt",
      "int84lt",
      "int84ne",
      "interval_justify_interval",
      "macaddr8_trunc",
      "table_to_xmlschema",
      "record_ne",
      "cash_eq",
      "jsonb_object_field_text",
      "pg_replication_origin_create",
      "timestamp_pl_interval",
      "textlike_support",
      "int42ne",
      "iso_to_win1251",
      "to_regnamespace",
      "lseg_interpt",
      "pg_advisory_xact_lock_shared_int8",
      "time_recv",
      "cash_pl",
      "boolout",
      "varbit_support",
      "btcharcmp",
      "byteaout",
      "numeric_sortsupport",
      "pg_switch_wal",
      "hashenum",
      "timestamp_part",
      "binary_upgrade_set_next_heap_pg_class_oid",
      "path_n_gt",
      "spghandler",
      "jsonb_extract_path_text",
      "binary_upgrade_set_next_pg_authid_oid",
      "int8and",
      "gin_extract_tsquery_5args",
      "has_language_privilege_name_name",
      "hashint8extended",
      "record_image_gt",
      "tsvector_delete_str",
      "tstzrange_subdiff",
      "json_array_length",
      "time_send",
      "pg_stat_get_tuples_fetched",
      "to_date",
      "has_language_privilege_name_id",
      "numeric_sum",
      "pg_stat_reset_single_table_counters",
      "jsonb_to_recordset",
      "bpchar_smaller",
      "numrange_subdiff",
      "txid_snapshot_out",
      "bttext_pattern_cmp",
      "gtsvectorout",
      "float8_regr_avgx",
      "float8_regr_syy",
      "inter_sl",
      "generate_series_step_numeric",
      "bytea_string_agg_transfn",
      "pg_stat_get_function_self_time",
      "bpchar_name",
      "int28gt",
      "date_gt",
      "network_larger",
      "int42le",
      "pg_get_statisticsobjdef",
      "hashinet",
      "boollt",
      "regconfigsend",
      "jsonb_lt",
      "bpcharcmp",
      "record_ge",
      "bitle",
      "win866_to_koi8r",
      "range_overleft",
      "to_tsquery_byid",
      "icregexeqjoinsel",
      "pg_collation_actual_version",
      "has_column_privilege_id_id_name",
      "hashmacaddr",
      "poly_center",
      "uuid_in",
      "timestamp_le_date",
      "xidsend",
      "pg_read_binary_file_off_len",
      "numeric_div",
      "ginarrayconsistent",
      "numeric_log",
      "pg_control_system",
      "pg_ndistinct_recv",
      "utf8_to_win",
      "numeric_avg_accum",
      "bitoverlay",
      "bpcharle",
      "window_lag",
      "box_overbelow",
      "varchartypmodin",
      "pg_terminate_backend",
      "gin_consistent_jsonb_path",
      "ginarrayextract",
      "networksel",
      "ts_rankcd_wtt",
      "pg_node_tree_send",
      "gist_point_fetch",
      "gin_tsquery_consistent_oldsig",
      "boolor_statefunc",
      "pg_get_multixact_members",
      "tsvector_delete_arr",
      "int8inc_any",
      "byteaoctetlen",
      "date_cmp",
      "pg_get_function_arg_default",
      "fmgr_internal_validator",
      "ts_rankcd_ttf",
      "pg_get_constraintdef_ext",
      "timestamp_ne",
      "pg_stat_get_function_total_time",
      "bytea_sortsupport",
      "regexeqjoinsel",
      "timetz_cmp",
      "range_le",
      "timestamptz_le_date",
      "scalarlesel",
      "xpath",
      "pg_ls_dir_1arg",
      "mxid_age",
      "be_lo_create",
      "network_host",
      "daterange_subdiff",
      "array_unnest_support",
      "session_user",
      "ts_headline_json_byid_opt",
      "pg_get_expr",
      "int8in",
      "spg_box_quad_picksplit",
      "pg_stat_get_db_tuples_deleted",
      "macaddr8tomacaddr",
      "has_function_privilege_id_name",
      "gist_circle_distance",
      "pg_opclass_is_visible",
      "cash_gt",
      "pg_sleep",
      "pg_get_viewdef_wrap",
      "varbit",
      "plpgsql_call_handler",
      "namene",
      "int2lt",
      "path_area",
      "pg_mcv_list_recv",
      "point_add",
      "array_lt",
      "pg_notification_queue_usage",
      "macaddr8_in",
      "json_agg_transfn",
      "close_sl",
      "pg_sequence_last_value",
      "window_lead_with_offset",
      "tidrecv",
      "interval_support",
      "bitne",
      "cashsmaller",
      "pg_try_advisory_xact_lock_int4",
      "range_recv",
      "json_build_object_noargs",
      "record_out",
      "network_overlap",
      "int4_accum_inv",
      "dist_lb",
      "percentile_cont_float8_final",
      "time_timetz",
      "pg_stat_get_backend_idset",
      "date_eq_timestamp",
      "enum_range_all",
      "json_object",
      "textregexeq",
      "enum_send",
      "interval_mi",
      "enum_cmp",
      "pg_stat_get_xact_tuples_deleted",
      "int8not",
      "float84mi",
      "datand",
      "int8eq",
      "btint4cmp",
      "cash_lt",
      "json_in",
      "int8xor",
      "poly_send",
      "hashtidextended",
      "int2vectorin",
      "numeric_poly_serialize",
      "int2recv",
      "bit_send",
      "jsonb_path_query_array",
      "be_lo_from_bytea",
      "txid_snapshot_recv",
      "anyenum_in",
      "pg_backup_start_time",
      "range_overright",
      "textgename",
      "float8larger",
      "koi8r_to_utf8",
      "pg_typeof",
      "pg_stat_get_backend_activity_start",
      "bpcharout",
      "tsqueryout",
      "tidle",
      "in_range_date_interval",
      "inet_same_family",
      "database_to_xml",
      "xmlcomment",
      "interval_smaller",
      "nameeqtext",
      "bitxor",
      "numeric_int2",
      "array_replace",
      "pg_size_pretty",
      "array_agg_finalfn",
      "spg_range_quad_choose",
      "pg_stop_backup_v2",
      "gtsvector_consistent_oldsig",
      "pg_get_viewdef",
      "charout",
      "circle_diameter",
      "pg_get_publication_tables",
      "win866_to_win1251",
      "array_append",
      "bpcharlen",
      "schema_to_xml_and_xmlschema",
      "schema_to_xmlschema",
      "circle_ge",
      "box_contained",
      "textne",
      "tsquery_cmp",
      "unknownrecv",
      "timestamptz_scale",
      "inetnot",
      "oidvectoreq",
      "bthandler",
      "regprocedureout",
      "gtsvector_same",
      "int82pl",
      "dist_cpoly",
      "int8lt",
      "pg_lsn_ge",
      "float4lt",
      "ts_rankcd_wttf",
      "line_parallel",
      "jsonpath_out",
      "inet_spg_inner_consistent",
      "inet_in",
      "array_cardinality",
      "percentile_cont_interval_final",
      "ts_headline_jsonb_byid_opt",
      "uhc_to_utf8",
      "jsonb_agg_finalfn",
      "pg_advisory_xact_lock_int8",
      "macaddr8_and",
      "circle_send",
      "timetz_part",
      "byteage",
      "timestamptz_ne_date",
      "bpcharoctetlen",
      "numeric_combine",
      "bitlength",
      "float4mul",
      "current_schemas",
      "jsonb_array_elements",
      "regclassout",
      "timetztypmodout",
      "i2tof",
      "utf8_to_koi8r",
      "has_table_privilege_name_name",
      "oidvectorlt",
      "inet_spg_leaf_consistent",
      "float4um",
      "euc_jp_to_mic",
      "select $1 || $2::pg_catalog.text",
      "int4up",
      "overlaps_time",
      "float84gt",
      "json_build_array_noargs",
      "int2ge",
      "cash_words",
      "enum_recv",
      "pg_promote",
      "iso_to_mic",
      "pg_cancel_backend",
      "hashhandler",
      "pg_available_extensions",
      "pg_stat_get_backend_start",
      "macaddr_out",
      "box_right",
      "timestamptz_izone",
      "jsonb_concat",
      "timestamp_ne_timestamptz",
      "pg_stat_get_wal_senders",
      "cash_numeric",
      "i4tochar",
      "numeric_avg_serialize",
      "varbit_out",
      "window_rank",
      "box_distance",
      "opaque_in",
      "timestamptz_to_char",
      "hash_array",
      "timestamptz_timestamp",
      "network_subset_support",
      "lseg_gt",
      "jsonb_object_field",
      "pg_node_tree_in",
      "macaddr8_eq",
      "tidge",
      "pg_stat_get_last_autoanalyze_time",
      "tsquery_phrase",
      "currtid_byreloid",
      "ts_rank_wttf",
      "text_concat",
      "numeric_inc",
      "dsimple_init",
      "cash_div_int2",
      "binary_upgrade_set_next_pg_enum_oid",
      "xpath_exists",
      "int84",
      "text_format",
      "dsynonym_lexize",
      "pg_advisory_lock_shared_int4",
      "int8_numeric",
      "select $2 + $1",
      "jsonb_insert",
      "box_overleft",
      "float48pl",
      "utf8_to_johab",
      "date_timestamp",
      "numerictypmodout",
      "aclexplode",
      "int8send",
      "RI_FKey_setnull_upd",
      "quote_ident",
      "numeric_div_trunc",
      "pg_stat_get_xact_function_self_time",
      "hashmacaddr8extended",
      "pg_stat_get_db_blocks_hit",
      "timestamptz_trunc",
      "dtoi2",
      "json_agg_finalfn",
      "date_eq_timestamptz",
      "bpchar_sortsupport",
      "texteq",
      "pg_copy_logical_replication_slot_b",
      "brin_inclusion_union",
      "timestamptz_ne_timestamp",
      "float8_stddev_samp",
      "numeric_poly_avg",
      "int4inc",
      "mul_d_interval",
      "int8inc",
      "has_table_privilege_id_id",
      "numeric_deserialize",
      "interval_larger",
      "float8_accum",
      "circle_same",
      "tsvector_length",
      "SELECT\n  CASE WHEN $1 IN (21, 23, 20, 700, 701) THEN 2\n       WHEN $1 IN (1700) THEN 10\n       ELSE null\n  END",
      "pg_ls_waldir",
      "timestamptz_mi_interval",
      "pg_wal_replay_pause",
      "jsonb_cmp",
      "pg_ndistinct_out",
      "jsonb_each",
      "ts_rank_ttf",
      "datan2",
      "int24le",
      "brin_minmax_opcinfo",
      "bitcat",
      "numeric_ge",
      "byteacmp",
      "textgtname",
      "pg_rotate_logfile_v2",
      "koi8r_to_win866",
      "box_circle",
      "textltname",
      "RI_FKey_noaction_upd",
      "textregexne",
      "float84lt",
      "dlog1",
      "hypothetical_cume_dist_final",
      "time_scale",
      "line_distance",
      "numeric_int4",
      "flt4_mul_cash",
      "xml_out",
      "pg_read_binary_file",
      "scalarltjoinsel",
      "pg_stat_get_archiver",
      "numeric_larger",
      "range_out",
      "pg_backend_pid",
      "websearch_to_tsquery",
      "pg_try_advisory_lock_shared_int4",
      "pg_stat_get_vacuum_count",
      "window_nth_value",
      "inter_sb",
      "bytearecv",
      "circle_recv",
      "hashname",
      "pg_event_trigger_ddl_commands",
      "interval_finite",
      "cidr_set_masklen",
      "numeric_poly_combine",
      "regclasssend",
      "has_database_privilege_name_name",
      "dcot",
      "latin2_to_win1250",
      "int4_sum",
      "range_contains_elem",
      "select ($2 + $1)",
      "json_extract_path",
      "range_gist_picksplit",
      "tsquery_numnode",
      "neqsel",
      "array_prepend",
      "eqjoinsel",
      "gtsvector_compress",
      "has_function_privilege_name",
      "inetand",
      "pg_ddl_command_out",
      "gtsquery_same",
      "interval_trunc",
      "float4le",
      "void_recv",
      "xml_send",
      "lower",
      "date_sortsupport",
      "select pg_catalog.octet_length($1) * 8",
      "network_ne",
      "generate_subscripts",
      "range_merge",
      "json_to_tsvector_byid",
      "timetz_ge",
      "cursor_to_xml",
      "timestamp_cmp_timestamptz",
      "jsonb_agg_transfn",
      "timestamp_lt_timestamptz",
      "currval_oid",
      "macaddr_and",
      "inet_merge",
      "pg_show_replication_origin_status",
      "jsonb_object",
      "jsonb_contained",
      "euc_tw_to_utf8",
      "numeric_accum_inv",
      "json_populate_recordset",
      "pg_advisory_unlock_int8",
      "degrees",
      "box_contain",
      "inet_server_addr",
      "pg_stat_get_db_blk_write_time",
      "int4shl",
      "line_construct_pp",
      "textoverlay_no_len",
      "int8up",
      "box_height",
      "win1251_to_mic",
      "pg_walfile_name",
      "box_width",
      "int4in",
      "spg_kd_choose",
      "pg_replication_origin_xact_reset",
      "get_current_ts_config",
      "varbit_in",
      "lastval",
      "gin_cmp_tslexeme",
      "btint42cmp",
      "int2and",
      "likejoinsel",
      "circle_contained",
      "pg_stat_get_function_calls",
      "int48ge",
      "pg_relation_size",
      "regclassin",
      "unknownin",
      "int2_accum_inv",
      "tidlt",
      "lseg_horizontal",
      "text_name",
      "path_n_ge",
      "record_lt",
      "regnamespacein",
      "float48lt",
      "ts_headline_json",
      "has_sequence_privilege_id_id",
      "int4_mul_cash",
      "timestamp_cmp_date",
      "textnlike",
      "spg_range_quad_picksplit",
      "pg_blocking_pids",
      "table_to_xml_and_xmlschema",
      "has_foreign_data_wrapper_privilege_name_name",
      "path_sub_pt",
      "varcharin",
      "dexp",
      "translate",
      "numeric_lt",
      "ginqueryarrayextract",
      "pg_stat_get_tuples_updated",
      "record_gt",
      "tidlarger",
      "\nSELECT\n    tt.alias AS alias,\n    tt.description AS description,\n    parse.token AS token,\n    ARRAY ( SELECT m.mapdict::pg_catalog.regdictionary\n            FROM pg_catalog.pg_ts_config_map AS m\n            WHERE m.mapcfg = $1 AND m.maptokentype = parse.tokid\n            ORDER BY m.mapseqno )\n    AS dictionaries,\n    ( SELECT mapdict::pg_catalog.regdictionary\n      FROM pg_catalog.pg_ts_config_map AS m\n      WHERE m.mapcfg = $1 AND m.maptokentype = parse.tokid\n      ORDER BY pg_catalog.ts_lexize(mapdict, parse.token) IS NULL, m.mapseqno\n      LIMIT 1\n    ) AS dictionary,\n    ( SELECT pg_catalog.ts_lexize(mapdict, parse.token)\n      FROM pg_catalog.pg_ts_config_map AS m\n      WHERE m.mapcfg = $1 AND m.maptokentype = parse.tokid\n      ORDER BY pg_catalog.ts_lexize(mapdict, parse.token) IS NULL, m.mapseqno\n      LIMIT 1\n    ) AS lexemes\nFROM pg_catalog.ts_parse(\n        (SELECT cfgparser FROM pg_catalog.pg_ts_config WHERE oid = $1 ), $2\n    ) AS parse,\n     pg_catalog.ts_token_type(\n        (SELECT cfgparser FROM pg_catalog.pg_ts_config WHERE oid = $1 )\n    ) AS tt\nWHERE tt.tokid = parse.tokid\n",
      "int42gt",
      "jsonb_build_object",
      "spg_range_quad_leaf_consistent",
      "point_vert",
      "pg_advisory_unlock_all",
      "point_sub",
      "tsquery_rewrite_query",
      "bittoint4",
      "textlen",
      "internal_in",
      "to_regrole",
      "macaddr_lt",
      "plpgsql_inline_handler",
      "range_gist_same",
      "has_foreign_data_wrapper_privilege_id_id",
      "interval_justify_hours",
      "mic_to_win866",
      "timestamp_ge_timestamptz",
      "path_add",
      "numeric_poly_var_samp",
      "json_each",
      "int4div",
      "pg_get_replica_identity_index",
      "datan",
      "pg_ls_tmpdir_1arg",
      "euc_tw_to_big5",
      "heap_tableam_handler",
      "hash_aclitem_extended",
      "int2_avg_accum",
      "jsonb_array_length",
      "int8larger",
      "text_pattern_le",
      "pg_xact_commit_timestamp",
      "timetz_zone",
      "pg_opfamily_is_visible",
      "pg_wal_replay_resume",
      "tsvector_unnest",
      "int2_mul_cash",
      "cidr_out",
      "point_left",
      "int4abs",
      "int28",
      "anyelement_in",
      "int2up",
      "range_ge",
      "RI_FKey_setnull_del",
      "anyelement_out",
      "int84div",
      "int48lt",
      "pg_describe_object",
      "enum_smaller",
      "ordered_set_transition_multi",
      "has_tablespace_privilege_id",
      "overlaps_timetz",
      "date_cmp_timestamp",
      "range_lower_inf",
      "txid_current_if_assigned",
      "date_gt_timestamptz",
      "bpchar_pattern_le",
      "mic_to_sjis",
      "tsq_mcontained",
      "has_schema_privilege_name_name",
      "jsonb_build_array",
      "likesel",
      "numeric_out",
      "select pg_catalog.substring($1, pg_catalog.similar_escape($2, $3))",
      "box_add",
      "bittypmodin",
      "char_text",
      "int28le",
      "gist_poly_distance",
      "intervaltypmodout",
      "bit",
      "int8mul",
      "tsvectorin",
      "has_language_privilege_id_name",
      "hashcharextended",
      "be_lo_close",
      "time_smaller",
      "int4mi",
      "gin_extract_jsonb_query",
      "tsquery_le",
      "regoperatorout",
      "gist_box_penalty",
      "box_poly",
      "int8_avg_accum_inv",
      "date_out",
      "pgsql_version",
      "pg_replication_origin_session_setup",
      "ts_headline_opt",
      "spg_text_choose",
      "textregexreplace_noopt",
      "pg_stat_file_1arg",
      "namelttext",
      "tsrange_subdiff",
      "txid_snapshot_send",
      "regnamespacesend",
      "pg_last_wal_receive_lsn",
      "macaddr8_ne",
      "timestamptz_part",
      "poly_circle",
      "koi8r_to_iso",
      "tsvector_ne",
      "network_hostmask",
      "i4toi2",
      "window_row_number",
      "macaddr_gt",
      "byteaoverlay",
      "enum_last",
      "date_le",
      "lseg_intersect",
      "cash_out",
      "timestamp_cmp",
      "int8le",
      "interval_pl",
      "txid_snapshot_xip",
      "text_reverse",
      "numeric_support",
      "inet_gist_fetch",
      "dist_sl",
      "textnename",
      "poly_in",
      "has_sequence_privilege_name_id",
      "inetmi",
      "unknownout",
      "latin4_to_mic",
      "int2gt",
      "hashnameextended",
      "in_range_timestamp_interval",
      "numeric_to_number",
      "network_lt",
      "jsonb_recv",
      "timetz_mi_interval",
      "int2pl",
      "has_column_privilege_name_id_name",
      "int4send",
      "pg_stat_get_bgwriter_timed_checkpoints",
      "has_column_privilege_id_id_attnum",
      "int2_sum",
      "radians",
      "poly_below",
      "brin_inclusion_opcinfo",
      "clock_timestamp",
      "select description from pg_catalog.pg_description where objoid = $1 and classoid = &apos;pg_catalog.pg_class&apos;::pg_catalog.regclass and objsubid = $2",
      "mic_to_big5",
      "bitge",
      "has_schema_privilege_id_id",
      "pg_read_file_off_len",
      "has_server_privilege_id_name",
      "select pg_catalog.date_part($1, cast($2 as timestamp without time zone))",
      "text_substr_no_len",
      "big5_to_utf8",
      "oidrecv",
      "tsvector_strip",
      "jsonb_object_keys",
      "point_div",
      "float8pl",
      "bpcharne",
      "time_ge",
      "date_ne",
      "generate_series_timestamp",
      "pg_is_in_recovery",
      "be_lo_tell",
      "dispell_init",
      "event_trigger_out",
      "cash_mul_int8",
      "timestamptz_pl_interval",
      "tsvector_concat",
      "interval_gt",
      "tsmatchsel",
      "int8out",
      "poly_box",
      "be_loread",
      "timestamp_lt_date",
      "uuid_lt",
      "inet_set_masklen",
      "record_image_ne",
      "float8_var_pop",
      "select pg_catalog.polygon(12, $1)",
      "network_broadcast",
      "pg_dependencies_recv",
      "ts_lexize",
      "byteagt",
      "brin_inclusion_add_value",
      "SELECT\n  CASE $1\n         WHEN 21 /*int2*/ THEN 16\n         WHEN 23 /*int4*/ THEN 32\n         WHEN 20 /*int8*/ THEN 64\n         WHEN 1700 /*numeric*/ THEN\n              CASE WHEN $2 = -1\n                   THEN null\n                   ELSE (($2 - 4) &gt;&gt; 16) &amp; 65535\n                   END\n         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/\n         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/\n         ELSE null\n  END",
      "macaddr8_le",
      "datetimetz_timestamptz",
      "textoverlay",
      "pg_function_is_visible",
      "range_gist_penalty",
      "float48le",
      "spg_text_picksplit",
      "bttidcmp",
      "gtsvectorin",
      "textoctetlen",
      "pg_ls_archive_statusdir",
      "jsonb_int8",
      "pg_has_role_id",
      "bittypmodout",
      "gtsvector_picksplit",
      "pg_has_role_id_name",
      "nlikesel",
      "interval_recv",
      "win1251_to_win866",
      "icnlikesel",
      "pg_indexam_progress_phasename",
      "pg_read_file_v2",
      "numeric_mul",
      "int2le",
      "gbk_to_utf8",
      "boolle",
      "utf8_to_ascii",
      "interval_accum_inv",
      "iso8859_to_utf8",
      "tidsend",
      "interval_part",
      "int24ge",
      "pg_stat_get_blocks_fetched",
      "jsonb_path_query_first",
      "sha512_bytea",
      "fmgr_sql_validator",
      "float8_regr_intercept",
      "json_to_tsvector",
      "float48eq",
      "dcbrt",
      "range_before",
      "int2ne",
      "pg_event_trigger_table_rewrite_reason",
      "euc_kr_to_mic",
      "btoidvectorcmp",
      "pg_ddl_command_in",
      "row_security_active_name",
      "timestamp_gt_date",
      "RI_FKey_noaction_del",
      "pg_lsn_recv",
      "timestamptz_trunc_zone",
      "sha224_bytea",
      "has_schema_privilege_name_id",
      "int24div",
      "booleq",
      "point_below",
      "pg_dependencies_in",
      "websearch_to_tsquery_byid",
      "width_bucket_array",
      "macaddr_send",
      "timestamp_recv",
      "circle_eq",
      "box_ge",
      "timestamp_timestamptz",
      "point_eq",
      "json_object_field",
      "float4in",
      "numeric_stddev_pop",
      "cr_circle",
      "cidr_recv",
      "tideq",
      "pg_stat_get_db_stat_reset_time",
      "int28mul",
      "format_type",
      "circle_radius",
      "select pg_catalog.rpad($1, $2, &apos; &apos;)",
      "pg_partition_ancestors",
      "gin_extract_jsonb_path",
      "acldefault_sql",
      "select $1 operator(pg_catalog.&lt;@) $2 and $2 operator(pg_catalog.&lt;@) $1",
      "range_minus",
      "gin_compare_jsonb",
      "window_percent_rank",
      "window_ntile",
      "ordered_set_transition",
      "show_all_settings",
      "range_in",
      "macaddr8_ge",
      "int4_numeric",
      "array_to_tsvector",
      "oidsend",
      "sha384_bytea",
      "date_eq",
      "domain_in",
      "jsonb_delete_idx",
      "oidvectorrecv",
      "bytea_string_agg_finalfn",
      "spg_kd_config",
      "SELECT\n  CASE WHEN $1 IN (1082) /* date */\n           THEN 0\n       WHEN $1 IN (1083, 1114, 1184, 1266) /* time, timestamp, same + tz */\n           THEN CASE WHEN $2 &lt; 0 THEN 6 ELSE $2 END\n       WHEN $1 IN (1186) /* interval */\n           THEN CASE WHEN $2 &lt; 0 OR $2 &amp; 65535 = 65535 THEN 6 ELSE $2 &amp; 65535 END\n       ELSE null\n  END",
      "jsonb_contains",
      "int4recv",
      "i2toi4",
      "pg_stat_reset_shared",
      "array_ge",
      "numeric_eq",
      "numeric_float4",
      "bitcmp",
      "jsonb_bool",
      "pg_has_role_id_id",
      "icnlikejoinsel",
      "bpcharin",
      "pg_replication_slot_advance",
      "btbpchar_pattern_cmp",
      "byteaSetBit",
      "nameletext",
      "circle_distance",
      "dsign",
      "box_overlap",
      "float4ne",
      "chr",
      "elem_contained_by_range",
      "pg_listening_channels",
      "namenlike",
      "int48ne",
      "spg_range_quad_inner_consistent",
      "oidvectorout",
      "charin",
      "btint2cmp",
      "xidout",
      "jsonpath_in",
      "arraycontjoinsel",
      "btfloat8sortsupport",
      "prsd_lextype",
      "inet_gist_same",
      "pg_relation_is_updatable",
      "lseg_out",
      "pg_get_function_identity_arguments",
      "ts_headline_jsonb",
      "pg_options_to_table",
      "network_sub",
      "regrolesend",
      "float8um",
      "gin_clean_pending_list",
      "pg_try_advisory_xact_lock_shared_int4",
      "binary_upgrade_set_next_index_pg_class_oid",
      "float8mul",
      "spg_box_quad_choose",
      "poly_path",
      "json_to_recordset",
      "regoperrecv",
      "in_range_interval_interval",
      "regexp_match_no_flags",
      "pg_filenode_relation",
      "current_user",
      "dist_ps",
      "int24eq",
      "close_ls",
      "rtrim1",
      "point_recv",
      "hashoidextended",
      "cash_mul_int4",
      "poly_out",
      "lseg_recv",
      "aclitemin",
      "box_contain_pt",
      "int48",
      "date_lt_timestamp",
      "timestamp_to_char",
      "int8range_canonical",
      "jsonb_build_object_noargs",
      "hashenumextended",
      "bpchar",
      "cidsend",
      "textpos",
      "interval_out",
      "int82",
      "gist_box_same",
      "timetz_scale",
      "lseg_distance",
      "float48ge",
      "trigger_in",
      "in_range_numeric_numeric",
      "pg_get_partkeydef",
      "pg_stat_get_db_tuples_updated",
      "has_column_privilege_id_name",
      "lseg_le",
      "bpcharlt",
      "int8mi",
      "mic_to_iso",
      "pg_advisory_unlock_shared_int4",
      "void_out",
      "timetz_eq",
      "jsonb_in",
      "int4ge",
      "pg_stat_get_subscription",
      "circle_overlap",
      "timetz_pl_interval",
      "numeric_in",
      "record_image_eq",
      "be_lo_get",
      "spg_box_quad_inner_consistent",
      "plainto_tsquery_byid",
      "gtsquery_union",
      "has_tablespace_privilege_name_name",
      "pg_client_encoding",
      "binary_upgrade_set_next_array_pg_type_oid",
      "tsvector_eq",
      "cash_div_int8",
      "intervaltypmodin",
      "arraycontsel",
      "pg_replication_origin_drop",
      "date_lt",
      "SELECT CASE WHEN $2.typtype = &apos;d&apos; THEN $2.typtypmod ELSE $1.atttypmod END",
      "regdictionarysend",
      "box_area",
      "int8ne",
      "byteain",
      "percentile_disc_final",
      "byteacat",
      "int2_avg_accum_inv",
      "pg_replication_origin_session_is_setup",
      "bttextcmp",
      "pg_stat_get_activity",
      "numeric_sqrt",
      "array_out",
      "btboolcmp",
      "to_tsquery",
      "pg_rotate_logfile",
      "textout",
      "json_array_elements",
      "bitsubstr",
      "timestamptz_cmp_timestamp",
      "timestamp_gt_timestamptz",
      "pg_create_physical_replication_slot",
      "pg_last_wal_replay_lsn",
      "regexp_matches",
      "overlaps_timestamp",
      "pg_stat_get_xact_tuples_fetched",
      "oideq",
      "pg_get_serial_sequence",
      "tsvector_cmp",
      "pg_try_advisory_xact_lock_shared_int8",
      "path_in",
      "textrecv",
      "int2shr",
      "nameiclike",
      "regexnejoinsel",
      "pg_ddl_command_recv",
      "numeric_stddev_samp",
      "internal_out",
      "box_sub",
      "\nSELECT (ss.a).n FROM\n  (SELECT information_schema._pg_expandarray(indkey) AS a\n   FROM pg_catalog.pg_index WHERE indexrelid = $1) ss\n  WHERE (ss.a).x = $2;\n",
      "in_range_int4_int2",
      "pg_index_column_has_property",
      "pg_mcv_list_in",
      "xml_is_well_formed_content",
      "arraycontains",
      "pg_conf_load_time",
      "void_in",
      "ascii",
      "dcosh",
      "int8dec_any",
      "int4_cash",
      "select pg_catalog.quote_nullable($1::pg_catalog.text)",
      "flt8_mul_cash",
      "tsvector_setweight",
      "oidvectorle",
      "json_out",
      "pg_stat_get_last_vacuum_time",
      "hashint2extended",
      "parse_ident",
      "spg_quad_config",
      "bpcharsend",
      "pg_wal_lsn_diff",
      "statement_timestamp",
      "timestamp_lt",
      "circle_le",
      "pg_is_other_temp_schema",
      "int82ne",
      "float8send",
      "regclassrecv",
      "quote_nullable",
      "dfloor",
      "prefixjoinsel",
      "dispell_lexize",
      "macaddr8_recv",
      "spg_bbox_quad_config",
      "has_column_privilege_name_name_attnum",
      "biteq",
      "spg_kd_inner_consistent",
      "json_build_object",
      "numeric_le",
      "pg_current_logfile_1arg",
      "array_recv",
      "float8_regr_combine",
      "construct_point",
      "koi8r_to_win1251",
      "utf8_to_iso8859_1",
      "ts_headline_byid_opt",
      "array_agg_transfn",
      "byteatrim",
      "int48eq",
      "timestamptz_ge_date",
      "eqsel",
      "string_agg_transfn",
      "timestamp_in",
      "cidr_in",
      "circle_in",
      "array_to_json",
      "circle_overabove",
      "enum_range_bounds",
      "any_in",
      "path_div_pt",
      "anyarray_send",
      "has_server_privilege_id",
      "pg_get_function_arguments",
      "aclinsert",
      "bit_out",
      "in_range_float4_float8",
      "spg_range_quad_config",
      "select pg_catalog.xpath($1, $2, &apos;{}&apos;::pg_catalog.text[])",
      "pg_stat_get_dead_tuples",
      "range_empty",
      "ts_headline_json_byid",
      "gin_consistent_jsonb",
      "int4_avg_accum",
      "int8um",
      "binary_upgrade_set_next_pg_type_oid",
      "interval_mul",
      "regprocrecv",
      "poly_overleft",
      "euc_cn_to_utf8",
      "bit_or",
      "query_to_xml",
      "pg_lsn_cmp",
      "enum_ge",
      "bool_int4",
      "sjis_to_utf8",
      "pg_stat_get_live_tuples",
      "generate_subscripts_nodir",
      "regdictionaryout",
      "pg_lsn_hash",
      "gtsvector_decompress",
      "dlog10",
      "timetz_lt",
      "pg_node_tree_recv",
      "has_any_column_privilege_id",
      "int8_sum",
      "float84mul",
      "charrecv",
      "brin_minmax_add_value",
      "pg_is_in_backup",
      "has_server_privilege_name_id",
      "int8inc_float8_float8",
      "timetypmodin",
      "tidout",
      "pg_has_role_name",
      "int4lt",
      "pg_extension_config_dump",
      "tsquery_or",
      "pg_stat_get_blocks_hit",
      "json_send",
      "int8ge",
      "float8smaller",
      "float8_regr_r2",
      "varbit_recv",
      "ts_headline_jsonb_byid",
      "bool_accum_inv",
      "regnamespaceout",
      "quote_literal",
      "to_tsvector",
      "timetz_recv",
      "dsin",
      "mic_to_euc_kr",
      "xml_recv",
      "utf8_to_iso8859",
      "int4xor",
      "range_typanalyze",
      "generate_series_step_int4",
      "pg_stat_get_db_xact_commit",
      "pg_get_function_result",
      "binary_encode",
      "tsq_mcontains",
      "current_schema",
      "contjoinsel",
      "lseg_ge",
      "float8gt",
      "record_image_ge",
      "array_to_text_null",
      "anyenum_out",
      "regroleout",
      "RI_FKey_check_upd",
      "int84mul",
      "tsm_bernoulli_handler",
      "pg_identify_object_as_address",
      "close_lb",
      "textregexreplace",
      "tsquerysend",
      "gist_box_union",
      "hashint4extended",
      "has_foreign_data_wrapper_privilege_id",
      "btint82cmp",
      "int4or",
      "ts_match_qv",
      "network_eq",
      "window_lag_with_offset_and_default",
      "pg_safe_snapshot_blocking_pids",
      "inet_gist_penalty",
      "timestamp_scale",
      "point_above",
      "pg_control_checkpoint",
      "name_text",
      "pg_tablespace_size_oid",
      "bpchartypmodout",
      "timetz_time",
      "anynonarray_in",
      "int8_to_char",
      "dtrunc",
      "array_upper",
      "tidin",
      "macaddr8_gt",
      "be_lo_lseek",
      "mic_to_win1250",
      "pg_logical_emit_message_bytea",
      "json_object_keys",
      "pg_logical_slot_get_binary_changes",
      "icregexnejoinsel",
      "box_same",
      "int48pl",
      "dsnowball_init",
      "i8tooid",
      "hashfloat4",
      "float8mi",
      "jsonb_delete_array",
      "xmlexists",
      "ts_match_tq",
      "regrolein",
      "split_text",
      "boolsend",
      "nameout",
      "range_lower",
      "ts_headline",
      "interval_in",
      "path_n_le",
      "dacos",
      "timetz_le",
      "ts_token_type_byid",
      "tsquery_ne",
      "timestamp_hash",
      "circle_add_pt",
      "spg_quad_leaf_consistent",
      "setval3_oid",
      "pg_stat_get_db_checksum_failures",
      "pg_get_object_address",
      "network_smaller",
      "texteqname",
      "macaddr_or",
      "i4tof",
      "pg_copy_logical_replication_slot_a",
      "gin_extract_jsonb_query_path",
      "pg_column_size",
      "text_to_array",
      "macaddr8_send",
      "int2shl",
      "float48div",
      "utf8_to_gb18030",
      "box_mul",
      "interval_eq",
      "float8_avg",
      "jsonb_populate_recordset",
      "numeric_cmp",
      "hashvarlenaextended",
      "ascii_to_mic",
      "in_range_timestamptz_interval",
      "macaddr_in",
      "be_lo_truncate64",
      "bitposition",
      "nlikejoinsel",
      "point_mul",
      "hashint4",
      "bpcharge",
      "pg_timezone_abbrevs",
      "pg_collation_is_visible",
      "enum_in",
      "regrolerecv",
      "hashoidvector",
      "jsonb_populate_record",
      "numeric_recv",
      "record_in",
      "bpchar_pattern_ge",
      "i2tod",
      "pg_stat_reset",
      "timestamptz_le_timestamp",
      "text_starts_with",
      "spg_text_leaf_consistent",
      "to_regoperator",
      "regexp_split_to_array_no_flags",
      "dist_pl",
      "timetz_ne",
      "pg_stat_get_buf_written_backend",
      "set_config_by_name",
      "network_ge",
      "int2send",
      "timetz_hash_extended",
      "pg_stat_get_autoanalyze_count",
      "hashbpcharextended",
      "pg_lsn_out",
      "network_family",
      "binary_upgrade_set_record_init_privs",
      "regprocin",
      "shift_jis_2004_to_euc_jis_2004",
      "make_date",
      "bytealike",
      "spg_kd_picksplit",
      "gist_circle_consistent",
      "byteapos",
      "int4um",
      "int8mod",
      "pg_reload_conf",
      "enum_gt",
      "int4_bool",
      "int8_avg_serialize",
      "bpchar_larger",
      "range_contained_by",
      "numeric_ne",
      "textsend",
      "pg_import_system_collations",
      "pg_stat_get_db_tuples_fetched",
      "select description from pg_catalog.pg_description where objoid = $1 and objsubid = 0",
      "chargt",
      "array_agg_array_transfn",
      "pg_get_viewdef_name_ext",
      "time_in",
      "circle_overright",
      "generate_series_int8_support",
      "pg_relation_filepath",
      "float4mi",
      "btint84cmp",
      "RI_FKey_cascade_del",
      "query_to_xmlschema",
      "regexp_split_to_table",
      "jsonb_gt",
      "tsvectorrecv",
      "pg_tablespace_databases",
      "pg_last_xact_replay_timestamp",
      "dceil",
      "pg_read_binary_file_all",
      "be_lo_open",
      "float48ne",
      "float8_timestamptz",
      "int82le",
      "xmlvalidate",
      "interval_hash_extended",
      "box_send",
      "bitnot",
      "in_range_int8_int8",
      "pg_copy_logical_replication_slot_c",
      "jsonb_pretty",
      "in_range_float8_float8",
      "boolne",
      "win1250_to_latin2",
      "int24lt",
      "pg_advisory_unlock_shared_int8",
      "prsd_start",
      "pg_stat_get_db_checksum_last_failure",
      "has_type_privilege_id",
      "array_larger",
      "dtanh",
      "range_adjacent",
      "dsqrt",
      "pg_create_logical_replication_slot",
      "interval_div",
      "jsonb_path_exists",
      "pg_lsn_le",
      "pg_stat_get_backend_wait_event",
      "ts_parse_byname",
      "int2not",
      "utf8_to_euc_kr",
      "timestamp_le",
      "in_range_int4_int4",
      "aclcontains",
      "pg_get_indexdef",
      "int28pl",
      "pg_isolation_test_session_is_blocked",
      "cashlarger",
      "hash_numeric",
      "has_database_privilege_name_id",
      "hashoidvectorextended",
      "unknownsend",
      "btint24cmp",
      "time_hash",
      "pg_stat_get_db_conflict_lock",
      "ts_rank_tt",
      "range_gist_union",
      "int4and",
      "scalargesel",
      "brin_inclusion_consistent",
      "has_table_privilege_name_id",
      "pg_lsn_hash_extended",
      "range_eq",
      "array_fill",
      "poly_overright",
      "textcat",
      "float84eq",
      "jsonb_exists_any",
      "pg_stat_get_last_autovacuum_time",
      "oidvectorne",
      "void_send",
      "dcosd",
      "pg_prepared_statement",
      "int48le",
      "numeric_accum",
      "macaddr8_cmp",
      "lseg_perp",
      "timestamptz_eq_date",
      "record_image_le",
      "namenetext",
      "int4pl",
      "date_larger",
      "texttoxml",
      "pg_ndistinct_in",
      "percentile_cont_float8_multi_final",
      "jsonpath_send",
      "circle_area",
      "binary_upgrade_set_missing_value",
      "pg_current_wal_insert_lsn",
      "bitlt",
      "date_pli",
      "table_am_handler_in",
      "bpchareq",
      "has_tablespace_privilege_id_name",
      "has_sequence_privilege_name_name",
      "enum_larger",
      "timestamp_smaller",
      "plpgsql_validator",
      "generate_series_step_int8",
      "date_mi",
      "bitsetbit",
      "jsonb_typeof",
      "int2or",
      "varcharsend",
      "oidvectorin",
      "varbit_send",
      "interval_ge",
      "dround",
      "euc_jis_2004_to_utf8",
      "pg_stat_get_progress_info",
      "regoperin",
      "has_sequence_privilege_id",
      "date_mii",
      "btnametextcmp",
      "has_foreign_data_wrapper_privilege_name_id",
      "arrayoverlap",
      "float8up",
      "date_send",
      "pg_read_file_all",
      "tidsmaller",
      "int84ge",
      "text_left",
      "pg_replication_origin_oid",
      "btint8sortsupport",
      "timestamp_zone",
      "ts_rank_wtt",
      "jsonb_strip_nulls",
      "dsinh",
      "time_mi_time",
      "pg_try_advisory_lock_int4",
      "byteanlike",
      "timestamptypmodout",
      "inet_gist_picksplit",
      "pg_ts_config_is_visible",
      "int2larger",
      "opaque_out",
      "select pg_catalog.age(cast(current_date as timestamp with time zone), $1)",
      "macaddr8_set7bit",
      "pg_stat_get_db_xact_rollback",
      "current_query",
      "time_larger",
      "pg_stat_get_backend_pid",
      "btint8cmp",
      "anyarray_in",
      "float8_covar_pop",
      "generate_series_int4_support",
      "has_schema_privilege_id_name",
      "hash_numeric_extended",
      "euc_cn_to_mic",
      "inet_server_port",
      "txid_current",
      "dpi",
      "btfloat8cmp",
      "oidne",
      "float48mul",
      "ts_headline_json_opt",
      "pg_advisory_lock_int8",
      "pg_stat_get_bgwriter_requested_checkpoints",
      "pg_stat_get_xact_function_total_time",
      "oidtoi8",
      "textlike",
      "date_timestamptz",
      "interval_ne",
      "float4recv",
      "gin_cmp_prefix",
      "float48mi",
      "circle_above",
      "brin_summarize_range",
      "network_supeq",
      "json_string_to_tsvector_byid",
      "icregexeqsel",
      "fdw_handler_in",
      "gtsvector_union",
      "spg_quad_choose",
      "gtsvector_consistent",
      "date_gt_timestamp",
      "jsonb_object_agg_transfn",
      "int42eq",
      "timestamp_out",
      "array_ne",
      "oidvectorsend",
      "date_le_timestamp",
      "timestamptz_lt_date",
      "pg_stat_get_xact_numscans",
      "namesend",
      "int8pl",
      "pg_stat_get_db_conflict_all",
      "dpow",
      "dist_pb",
      "big5_to_euc_tw",
      "pt_contained_poly",
      "numeric_ceil",
      "select $1::pg_catalog.text || $2",
      "btfloat4cmp",
      "dacosh",
      "interval_scale",
      "pg_control_init",
      "positionsel",
      "interval_time",
      "numeric_avg_combine",
      "pg_replication_origin_advance",
      "int84mi",
      "float4pl",
      "pg_size_bytes",
      "record_eq",
      "regconfigrecv",
      "suppress_redundant_updates_trigger",
      "hashfloat4extended",
      "int82mi",
      "btoidcmp",
      "record_image_lt",
      "jsonb_delete",
      "on_pl",
      "float8le",
      "gin_extract_tsvector_2args",
      "float8_regr_sxy",
      "date_mi_interval",
      "select pg_catalog.length($1)",
      "int8smaller",
      "timetz_out",
      "pg_copy_physical_replication_slot_b",
      "bytea_substr_no_len",
      "macaddr_le",
      "text_gt",
      "namelt",
      "array_cat",
      "circle_below",
      "close_lseg",
      "ts_token_type_byname",
      "timestamptz_out",
      "has_sequence_privilege_name",
      "inetor",
      "jsonb_hash",
      "pg_stat_get_xact_tuples_returned",
      "text_le",
      "index_am_handler_out",
      "json_typeof",
      "float84le",
      "date_ge_timestamptz",
      "int2xor",
      "cash_recv",
      "cash_cmp",
      "int82gt",
      "ts_rankcd_tt",
      "has_schema_privilege_name",
      "pg_stat_get_db_conflict_snapshot",
      "float4larger",
      "float8abs",
      "json_object_agg_finalfn",
      "has_type_privilege_id_id",
      "pg_sequence_parameters",
      "tsm_handler_in",
      "timestamp_ge_date",
      "cash_div_flt8",
      "networkjoinsel",
      "ts_match_vq",
      "jsonb_int4",
      "float4eq",
      "johab_to_utf8",
      "spg_box_quad_config",
      "int8range_subdiff",
      "pg_column_is_updatable",
      "width_bucket_float8",
      "int84le",
      "be_lo_truncate",
      "int24mul",
      "network_subeq",
      "varchar",
      "nameeq",
      "jsonb_path_query",
      "enum_first",
      "bitfromint8",
      "circle_lt",
      "numeric_uplus",
      "hashbpchar",
      "xml_in",
      "point_send",
      "select description from pg_catalog.pg_description where objoid = $1 and classoid = (select oid from pg_catalog.pg_class where relname = $2 and relnamespace = 11) and objsubid = 0",
      "jsonb_array_element",
      "spg_text_inner_consistent",
      "select ($1, $2) overlaps ($3, ($3 + $4))",
      "pg_create_restore_point",
      "bytealt",
      "box_diagonal",
      "dist_cpoint",
      "int4range_canonical",
      "jsonb_path_match",
      "json_string_to_tsvector",
      "pg_type_is_visible",
      "md5_bytea",
      "inet_gist_consistent",
      "hashchar",
      "bttextsortsupport",
      "timestamp_larger",
      "bitfromint4",
      "plainto_tsquery",
      "float8_corr",
      "float4gt",
      "date_finite",
      "timestamp_mi_interval",
      "int2um",
      "amvalidate",
      "cash_div_cash",
      "float8recv",
      "utf8_to_gbk",
      "box_above_eq",
      "anyrange_out",
      "gin_extract_tsquery",
      "pg_stat_get_xact_blocks_hit",
      "box_out",
      "btbpchar_pattern_sortsupport",
      "range_gt",
      "json_array_element",
      "jsonb_le",
      "circle_mul_pt",
      "pg_lsn_send",
      "json_strip_nulls",
      "box_eq",
      "numeric_send",
      "text_concat_ws",
      "text_char",
      "json_array_elements_text",
      "win_to_utf8",
      "enum_lt",
      "array_typanalyze",
      "has_database_privilege_id",
      "lpad",
      "big5_to_mic",
      "generate_series_int4",
      "boolrecv",
      "charsend",
      "dist_ppath",
      "make_interval",
      "generate_series_int8",
      "int24mi",
      "brin_minmax_union",
      "has_any_column_privilege_name_name",
      "int2_accum",
      "btrim1",
      "namerecv",
      "int2div",
      "daterange_canonical",
      "gist_poly_consistent",
      "poly_overlap",
      "timestamp_eq_timestamptz",
      "mic_to_latin2",
      "bitshiftright",
      "tsvector_filter",
      "on_sb",
      "SELECT\n  CASE WHEN $1 IN (21, 23, 20) THEN 0\n       WHEN $1 IN (1700) THEN\n            CASE WHEN $2 = -1\n                 THEN null\n                 ELSE ($2 - 4) &amp; 65535\n                 END\n       ELSE null\n  END",
      "timestamp_eq",
      "to_regoper",
      "nextval_oid",
      "brin_desummarize_range",
      "has_type_privilege_name_name",
      "pg_stat_get_db_blk_read_time",
      "byteasend",
      "euc_jp_to_sjis",
      "gist_box_consistent",
      "pg_stat_get_db_conflict_tablespace",
      "inetpl",
      "drandom",
      "array_positions",
      "sjis_to_euc_jp",
      "select pg_catalog.age(cast(current_date as timestamp without time zone), $1)",
      "float8div",
      "numeric_smaller",
      "cash_mi",
      "float84ge",
      "tsvector_lt",
      "select pg_catalog.trunc($1,0)",
      "time_pl_interval",
      "hashvarlena",
      "interval_send",
      "bpchartypmodin",
      "pg_stat_get_autovacuum_count",
      "date_lt_timestamptz",
      "numeric_power",
      "ftod",
      "timestamptz_eq_timestamp",
      "poly_left",
      "pg_operator_is_visible",
      "float4_numeric",
      "ts_headline_byid",
      "tsvector_update_trigger_bycolumn",
      "circle_poly",
      "numeric_avg_deserialize",
      "numeric_avg",
      "mic_to_ascii",
      "tsquery_and",
      "iso_to_win866",
      "json_recv",
      "regoperout",
      "pg_stat_get_tuples_returned",
      "regconfigout",
      "cash_in",
      "inet_send",
      "close_pb",
      "pg_hba_file_rules",
      "range_lower_inc",
      "language_handler_out",
      "int82eq",
      "circle_center",
      "int28div",
      "jsonb_int2",
      "dist_ppoly",
      "text_larger",
      "macaddr_ne",
      "inter_lb",
      "bttextnamecmp",
      "has_foreign_data_wrapper_privilege_name",
      "cideq",
      "timestamp_support",
      "varbittypmodout",
      "timestamp_hash_extended",
      "pg_ts_template_is_visible",
      "jsonb_string_to_tsvector_byid",
      "int4le",
      "range_intersect",
      "time_le",
      "int2_numeric",
      "int4range_subdiff",
      "oidgt",
      "textlename",
      "gin_triconsistent_jsonb_path",
      "has_any_column_privilege_id_id",
      "jsonpath_recv",
      "utf8_to_euc_jp",
      "range_union",
      "lseg_parallel",
      "has_type_privilege_name_id",
      "mic_to_latin4",
      "date_smaller",
      "has_column_privilege_name_name_name",
      "gin_extract_jsonb",
      "tsmatchjoinsel",
      "box_below_eq",
      "to_ascii_default",
      "pg_convert_to",
      "date_ne_timestamptz",
      "numeric_scale",
      "inet_abbrev",
      "gin_tsquery_triconsistent",
      "int42lt",
      "circle_left",
      "PG_char_to_encoding",
      "line_eq",
      "to_json",
      "pg_try_advisory_lock_shared_int8",
      "RI_FKey_setdefault_del",
      "macaddr8_not",
      "dist_sb",
      "date_ne_timestamp",
      "interval_lt",
      "text_pattern_ge",
      "pg_stat_get_backend_userid",
      "charlt",
      "has_column_privilege_name_attnum",
      "has_sequence_privilege_id_name",
      "unique_key_recheck",
      "gist_point_compress",
      "ts_match_tt",
      "macaddr_cmp",
      "select ($1, ($1 + $2)) overlaps ($3, ($3 + $4))",
      "bitshiftleft",
      "jsonb_out",
      "contsel",
      "numeric_exp",
      "to_regproc",
      "json_build_array",
      "pg_stat_get_db_numbackends",
      "binary_upgrade_set_next_toast_pg_type_oid",
      "timestamp_gt",
      "network_cmp",
      "pg_total_relation_size",
      "btint2sortsupport",
      "has_tablespace_privilege_id_id",
      "pg_encoding_max_length_sql",
      "in_range_int4_int8",
      "pg_event_trigger_dropped_objects",
      "pg_mcv_list_out",
      "range_after",
      "btint28cmp",
      "int4shr",
      "pg_stat_get_xact_blocks_fetched",
      "percentile_disc_multi_final",
      "select pg_catalog.quote_literal($1::pg_catalog.text)",
      "index_am_handler_in",
      "pg_stat_get_buf_alloc",
      "int84pl",
      "jsonb_object_agg_finalfn",
      "close_ps",
      "euc_tw_to_mic",
      "ftoi2",
      "show_config_by_name",
      "pg_replication_origin_progress",
      "range_cmp",
      "has_language_privilege_id_id",
      "ltrim1",
      "jsonb_path_match_opr",
      "bool_alltrue",
      "oidvectortypes",
      "timestamp_trunc",
      "on_ps",
      "pg_stat_get_db_temp_files",
      "RI_FKey_setdefault_upd",
      "uuid_cmp",
      "has_column_privilege_id_attnum",
      "int4ne",
      "bpchar_pattern_lt",
      "nameconcatoid",
      "time_support",
      "box_in",
      "interval_hash",
      "thesaurus_init",
      "circle_overbelow",
      "be_lo_lseek64",
      "int4smaller",
      "float8_regr_sxx",
      "json_each_text",
      "xidin",
      "cash_le",
      "anyarray_out",
      "int42pl",
      "time_ne",
      "select description from pg_catalog.pg_shdescription where objoid = $1 and classoid = (select oid from pg_catalog.pg_class where relname = $2 and relnamespace = 11)",
      "array_unnest",
      "row_to_json_pretty",
      "path_recv",
      "boolgt",
      "timestamptz_date",
      "array_fill_with_lower_bounds",
      "be_lo_import_with_oid",
      "regdictionaryin",
      "spg_box_quad_leaf_consistent",
      "point_horiz",
      "i8tod",
      "numeric_floor",
      "path_isopen",
      "schema_to_xml",
      "float48gt",
      "date_recv",
      "gin_tsquery_consistent",
      "pg_stat_get_db_conflict_startup_deadlock",
      "pg_cursor",
      "tsquery_gt",
      "bytea_substr",
      "pg_stat_get_bgwriter_buf_written_clean",
      "int2in",
      "namegt",
      "xidrecv",
      "pg_convert_from",
      "path_inter",
      "pg_jit_available",
      "regtypeout",
      "int82lt",
      "inet_recv",
      "has_database_privilege_name",
      "point_slope",
      "spg_quad_inner_consistent",
      "timetypmodout",
      "btfloat4sortsupport",
      "has_column_privilege_name_id_attnum",
      "time_cmp",
      "namelike",
      "dist_polyp",
      "hashint2",
      "pg_stat_get_mod_since_analyze",
      "timetz_larger",
      "close_sb",
      "rpad",
      "box_intersect",
      "prsd_headline",
      "has_function_privilege_name_id",
      "utf8_to_big5",
      "time_gt",
      "replace_text",
      "time_eq",
      "int8_avg_accum",
      "win1251_to_iso",
      "box_center",
      "anyarray_recv",
      "poly_npoints",
      "spg_text_config",
      "json_extract_path_text",
      "bit_recv",
      "rangesel",
      "float8_combine",
      "timestamp_eq_date",
      "network_network",
      "phraseto_tsquery_byid",
      "upper",
      "date_pl_interval",
      "circle_overleft",
      "numeric_uminus",
      "be_lo_get_fragment",
      "int8_cash",
      "cidr_abbrev",
      "pg_database_size_oid",
      "pg_stat_get_tuples_hot_updated",
      "jsonb_object_two_arg",
      "int8_accum_inv",
      "pg_ls_logdir",
      "namein",
      "gin_triconsistent_jsonb",
      "pt_contained_circle",
      "select $1[s], s - pg_catalog.array_lower($1,1) + 1\n        from pg_catalog.generate_series(pg_catalog.array_lower($1,1),\n                                        pg_catalog.array_upper($1,1),\n                                        1) as g(s)",
      "binary_decode",
      "cash_div_flt4",
      "oidle",
      "satisfies_hash_partition",
      "pg_ddl_command_send",
      "pg_ts_dict_is_visible",
      "scalargtsel",
      "macaddr8_out",
      "timestamptz_lt_timestamp",
      "has_server_privilege_name_name",
      "inet_gist_union",
      "timestamp_ge",
      "thesaurus_lexize",
      "pg_collation_for",
      "hypothetical_rank_final",
      "int4mod",
      "regtyperecv",
      "float8_to_char",
      "int4larger",
      "varcharrecv",
      "bitsubstr_no_len",
      "poly_same",
      "has_function_privilege_name_name",
      "int8_avg_combine",
      "numeric_ln",
      "int42mi",
      "pg_logical_slot_peek_binary_changes",
      "RI_FKey_check_ins",
      "numeric_mod",
      "pg_stat_get_analyze_count",
      "in_range_int2_int2",
      "pg_advisory_xact_lock_shared_int4",
      "utf8_to_euc_jis_2004",
      "int8_avg",
      "pg_get_keywords",
      "pg_get_partition_constraintdef",
      "float4smaller",
      "textin",
      "window_dense_rank",
      "pg_replication_origin_session_reset",
      "select pg_catalog.pg_sleep(extract(epoch from $1) operator(pg_catalog.-) extract(epoch from pg_catalog.clock_timestamp()))",
      "timestamptz_timetz",
      "be_lowrite",
      "to_ascii_encname",
      "lseg_construct",
      "range_upper_inf",
      "gist_poly_compress",
      "int48mi",
      "be_lo_tell64",
      "network_masklen",
      "point_out",
      "regprocsend",
      "pg_index_has_property",
      "uuid_ge",
      "pg_stat_get_db_temp_bytes",
      "int2mul",
      "chareq",
      "to_ascii_enc",
      "regoperatorrecv",
      "tsquery_ge",
      "enum_le",
      "regtypesend",
      "path_add_pt",
      "enum_out",
      "lseg_ne",
      "on_sl",
      "texticnlike",
      "ts_parse_byid",
      "int82div",
      "pg_stat_get_backend_xact_start",
      "jsonb_string_to_tsvector",
      "array_to_json_pretty",
      "texticlike_support",
      "bpcharrecv",
      "array_agg_array_finalfn",
      "show_all_file_settings",
      "pg_table_size",
      "timetz_gt",
      "float8_numeric",
      "path_poly",
      "pg_stat_get_bgwriter_buf_written_checkpoints",
      "timestamptz_recv",
      "range_lt",
      "record_le",
      "regconfigin",
      "timeofday",
      "poly_contain",
      "time_interval",
      "gin_extract_tsquery_oldsig",
      "cstring_send",
      "oidge",
      "in_range_int2_int4",
      "float84div",
      "dtoi8",
      "booland_statefunc",
      "box_recv",
      "numerictypmodin",
      "pg_stat_file",
      "jsonb_extract_path",
      "has_column_privilege_name_name",
      "bitoverlay_no_len",
      "cash_mul_flt4",
      "macaddrtomacaddr8",
      "jsonb_exists_all",
      "int2int4_sum",
      "oidvectorgt",
      "pg_last_committed_xact",
      "date_in",
      "arraycontained",
      "text_pattern_lt",
      "timestamp_send",
      "tsm_handler_out",
      "chartoi4",
      "mic_to_win1251",
      "iclikejoinsel",
      "has_schema_privilege_id",
      "pg_notify",
      "regoperatorsend",
      "float8ne",
      "pg_tablespace_size_name",
      "oidlarger",
      "line_horizontal",
      "window_last_value",
      "oidin",
      "hypothetical_percent_rank_final",
      "pg_num_nonnulls",
      "int24ne",
      "on_pb",
      "timestamp_sortsupport",
      "aclitem_eq",
      "xmlconcat2",
      "gb18030_to_utf8",
      "json_array_element_text",
      "bpchar_pattern_gt",
      "date_le_timestamptz",
      "regexnesel",
      "dsind",
      "interval_um",
      "timestamptz_send",
      "charle",
      "scalarlejoinsel",
      "uuid_recv",
      "float4up",
      "btrecordcmp",
      "pg_get_userbyid",
      "SELECT CASE WHEN $2.typtype = &apos;d&apos; THEN $2.typbasetype ELSE $1.atttypid END",
      "bool_anytrue",
      "spg_poly_quad_compress",
      "pg_config",
      "numeric_poly_stddev_samp",
      "select cast(($1 + $2) as timestamp with time zone)",
      "database_to_xmlschema",
      "network_le",
      "array_lower",
      "dsnowball_lexize",
      "gisthandler",
      "pg_drop_replication_slot",
      "pg_table_is_visible",
      "pg_stat_get_db_tuples_inserted",
      "inetmi_int8",
      "gtsquery_compress",
      "to_timestamp",
      "sjis_to_mic",
      "int8recv",
      "pg_indexam_has_property",
      "fdw_handler_out",
      "range_constructor3",
      "numeric_poly_var_pop",
      "box_below",
      "float4abs",
      "poly_overabove",
      "path_center",
      "pg_stat_get_snapshot_timestamp",
      "ginarraytriconsistent",
      "range_upper",
      "pg_indexes_size",
      "line_out",
      "generate_series_numeric",
      "pg_get_viewdef_ext",
      "regnamespacerecv",
      "has_language_privilege_id",
      "lseg_length",
      "varcharout",
      "pg_stat_reset_single_function_counters",
      "cash_mul_flt8",
      "json_populate_record",
      "mic_to_euc_jp",
      "latin2_to_mic",
      "network_show",
      "lseg_send",
      "oidlt",
      "hash_aclitem",
      "cstring_out",
      "utf8_to_euc_tw",
      "date_ge_timestamp",
      "pg_stat_get_db_tuples_returned",
      "pg_stat_get_db_blocks_fetched",
      "jsonb_exists",
      "float4_accum",
      "oidsmaller",
      "regexp_match",
      "lseg_center",
      "point_right",
      "iso_to_koi8r",
      "areasel",
      "hash_range_extended",
      "uuid_eq",
      "pg_get_replication_slots",
      "pg_current_wal_flush_lsn",
      "pg_statistics_obj_is_visible",
      "RI_FKey_restrict_upd",
      "numeric_fac",
      "array_position",
      "circle_contain",
      "text_smaller",
      "jsonb_float8",
      "int2out",
      "int48div",
      "ftoi4",
      "macaddr_ge",
      "pg_timezone_names",
      "tsquery_rewrite",
      "float8eq",
      "btrecordimagecmp",
      "namele",
      "ltrim",
      "pg_ndistinct_send",
      "float84ne",
      "pg_dependencies_out",
      "has_table_privilege_id",
      "dtof",
      "box_le",
      "be_lo_export",
      "tidgt",
      "hashinetextended",
      "pg_advisory_unlock_int4",
      "timestamp_finite",
      "time_part",
      "gtsquery_penalty",
      "float8_covar_samp",
      "gist_point_distance",
      "pg_get_constraintdef",
      "gin_tsquery_consistent_6args",
      "hypothetical_dense_rank_final",
      "box_above",
      "pg_ls_tmpdir_noargs",
      "numeric_cash",
      "txid_snapshot_xmax",
      "jsonb_float4",
      "jsonb_build_array_noargs",
      "pg_stat_get_xact_tuples_hot_updated",
      "shell_out",
      "boolge",
      "line_recv",
      "bool_accum",
      "has_column_privilege_id_name_name",
      "timetz_hash",
      "aclitemout",
      "euc_kr_to_utf8",
      "array_le",
      "mic_to_euc_tw",
      "pg_lsn_ne",
      "pg_get_triggerdef_ext",
      "binary_upgrade_create_empty_extension",
      "regprocout",
      "array_to_text",
      "gtsquery_consistent_oldsig",
      "tidne",
      "int4_avg_accum_inv",
      "pg_advisory_xact_lock_int4",
      "record_send",
      "json_to_record",
      "int2vectorout",
      "dtand",
      "make_time",
      "macaddr_recv",
      "byteaGetByte",
      "select pg_catalog.pg_relation_size($1, &apos;main&apos;)",
      "path_close",
      "macaddr_eq",
      "ascii_to_utf8",
      "select pg_catalog.round($1,0)",
      "numeric_sign"
    ]
  },
  "foreign_data_wrappers": {},
  "pg_stat_archiver": {
    "last_failed_wal": [],
    "last_archived_wal": []
  },
  "triggered_update_columns": {},
  "dataTypes": {
    "\n                            users_zxzlar\n                            users_zxzlar\n                        ": "",
    "\n                            products\n                            products\n                        ": "",
    "\n                            public\n                            public\n                        ": "",
    "\n                            template1\n                            template1\n                        ": "",
    "\n                            template0\n                            template0\n                        ": "",
    "\n                            postgres\n                            postgres\n                        ": "",
    "\n                            C\n                            C\n                        ": "",
    "\n                            1.0\n                            1.0\n                        ": "",
    "\n                            1.1\n                            1.1\n                        ": "",
    "\n                            1.2\n                            1.2\n                        ": "",
    "\n                            2.0\n                            2.0\n                        ": "",
    "\n                            1.7\n                            1.7\n                        ": "",
    "\n                            1.5\n                            1.5\n                        ": "",
    "\n                            1.4\n                            1.4\n                        ": "",
    "\n                            1.6\n                            1.6\n                        ": "",
    "\n                            1.3\n                            1.3\n                        ": "",
    "\n                            text search dictionary template for integers\n                            text search dictionary template for integers\n                        ": "",
    "\n                            prewarm relation data\n                            prewarm relation data\n                        ": "",
    "\n                            functions for tracking who changed a table\n                            functions for tracking who changed a table\n                        ": "",
    "\n                            data type for hierarchical tree-like structures\n                            data type for hierarchical tree-like structures\n                        ": "",
    "\n                            show row-level locking information\n                            show row-level locking information\n                        ": "",
    "\n                            support for indexing common datatypes in GIN\n                            support for indexing common datatypes in GIN\n                        ": "",
    "\n                            Large Object maintenance\n                            Large Object maintenance\n                        ": "",
    "\n                            functions for verifying relation integrity\n                            functions for verifying relation integrity\n                        ": "",
    "\n                            text search dictionary that removes accents\n                            text search dictionary that removes accents\n                        ": "",
    "\n                            calculate great-circle distances on the surface of the Earth\n                            calculate great-circle distances on the surface of the Earth\n                        ": "",
    "\n                            determine similarities and distance between strings\n                            determine similarities and distance between strings\n                        ": "",
    "\n                            integer aggregator and enumerator (obsolete)\n                            integer aggregator and enumerator (obsolete)\n                        ": "",
    "\n                            generate universally unique identifiers (UUIDs)\n                            generate universally unique identifiers (UUIDs)\n                        ": "",
    "\n                            information about SSL certificates\n                            information about SSL certificates\n                        ": "",
    "\n                            track execution statistics of all SQL statements executed\n                            track execution statistics of all SQL statements executed\n                        ": "",
    "\n                            bloom access method - signature file based index\n                            bloom access method - signature file based index\n                        ": "",
    "\n                            examine the free space map (FSM)\n                            examine the free space map (FSM)\n                        ": "",
    "\n                            functions, operators, and index support for 1-D arrays of integers\n                            functions, operators, and index support for 1-D arrays of integers\n                        ": "",
    "\n                            examine the visibility map (VM) and page-level visibility info\n                            examine the visibility map (VM) and page-level visibility info\n                        ": "",
    "\n                            data type for storing sets of (key, value) pairs\n                            data type for storing sets of (key, value) pairs\n                        ": "",
    "\n                            data type for case-insensitive character strings\n                            data type for case-insensitive character strings\n                        ": "",
    "\n                            cryptographic functions\n                            cryptographic functions\n                        ": "",
    "\n                            foreign-data wrapper for remote PostgreSQL servers\n                            foreign-data wrapper for remote PostgreSQL servers\n                        ": "",
    "\n                            TABLESAMPLE method which accepts number of rows as a limit\n                            TABLESAMPLE method which accepts number of rows as a limit\n                        ": "",
    "\n                            functions for tracking last modification time\n                            functions for tracking last modification time\n                        ": "",
    "\n                            functions for autoincrementing fields\n                            functions for autoincrementing fields\n                        ": "",
    "\n                            Triggered change notifications\n                            Triggered change notifications\n                        ": "",
    "\n                            functions for implementing referential integrity (obsolete)\n                            functions for implementing referential integrity (obsolete)\n                        ": "",
    "\n                            text similarity measurement and index searching based on trigrams\n                            text similarity measurement and index searching based on trigrams\n                        ": "",
    "\n                            data types for international product numbering standards\n                            data types for international product numbering standards\n                        ": "",
    "\n                            TABLESAMPLE method which accepts time in milliseconds as a limit\n                            TABLESAMPLE method which accepts time in milliseconds as a limit\n                        ": "",
    "\n                            functions that manipulate whole tables, including crosstab\n                            functions that manipulate whole tables, including crosstab\n                        ": "",
    "\n                            PL/pgSQL procedural language\n                            PL/pgSQL procedural language\n                        ": "",
    "\n                            text search dictionary template for extended synonym processing\n                            text search dictionary template for extended synonym processing\n                        ": "",
    "\n                            show tuple-level statistics\n                            show tuple-level statistics\n                        ": "",
    "\n                            examine the shared buffer cache\n                            examine the shared buffer cache\n                        ": "",
    "\n                            foreign-data wrapper for flat file access\n                            foreign-data wrapper for flat file access\n                        ": "",
    "\n                            administrative functions for PostgreSQL\n                            administrative functions for PostgreSQL\n                        ": "",
    "\n                            XPath querying and XSLT\n                            XPath querying and XSLT\n                        ": "",
    "\n                            data type for representing line segments or floating-point intervals\n                            data type for representing line segments or floating-point intervals\n                        ": "",
    "\n                            connect to other PostgreSQL databases from within a database\n                            connect to other PostgreSQL databases from within a database\n                        ": "",
    "\n                            inspect the contents of database pages at a low level\n                            inspect the contents of database pages at a low level\n                        ": "",
    "\n                            support for indexing common datatypes in GiST\n                            support for indexing common datatypes in GiST\n                        ": "",
    "\n                            data type for multidimensional cubes\n                            data type for multidimensional cubes\n                        ": "",
    "\n                        ": "",
    "\n                            pg_catalog\n                            pg_catalog\n                        ": "",
    "\n                            amcheck\n                            amcheck\n                        ": "",
    "\n                            plpgsql\n                            plpgsql\n                        ": "",
    "\n                            dict_int\n                            dict_int\n                        ": "",
    "\n                            xml2\n                            xml2\n                        ": "",
    "\n                            dict_xsyn\n                            dict_xsyn\n                        ": "",
    "\n                            bloom\n                            bloom\n                        ": "",
    "\n                            lo\n                            lo\n                        ": "",
    "\n                            pg_buffercache\n                            pg_buffercache\n                        ": "",
    "\n                            autoinc\n                            autoinc\n                        ": "",
    "\n                            tcn\n                            tcn\n                        ": "",
    "\n                            sslinfo\n                            sslinfo\n                        ": "",
    "\n                            refint\n                            refint\n                        ": "",
    "\n                            citext\n                            citext\n                        ": "",
    "\n                            dblink\n                            dblink\n                        ": "",
    "\n                            tsm_system_rows\n                            tsm_system_rows\n                        ": "",
    "\n                            pg_prewarm\n                            pg_prewarm\n                        ": "",
    "\n                            cube\n                            cube\n                        ": "",
    "\n                            pgcrypto\n                            pgcrypto\n                        ": "",
    "\n                            tablefunc\n                            tablefunc\n                        ": "",
    "\n                            intagg\n                            intagg\n                        ": "",
    "\n                            ltree\n                            ltree\n                        ": "",
    "\n                            btree_gin\n                            btree_gin\n                        ": "",
    "\n                            file_fdw\n                            file_fdw\n                        ": "",
    "\n                            insert_username\n                            insert_username\n                        ": "",
    "\n                            hstore\n                            hstore\n                        ": "",
    "\n                            tsm_system_time\n                            tsm_system_time\n                        ": "",
    "\n                            fuzzystrmatch\n                            fuzzystrmatch\n                        ": "",
    "\n                            unaccent\n                            unaccent\n                        ": "",
    "\n                            btree_gist\n                            btree_gist\n                        ": "",
    "\n                            isn\n                            isn\n                        ": "",
    "\n                            adminpack\n                            adminpack\n                        ": "",
    "\n                            pgrowlocks\n                            pgrowlocks\n                        ": "",
    "\n                            seg\n                            seg\n                        ": "",
    "\n                            uuid-ossp\n                            uuid-ossp\n                        ": "",
    "\n                            pg_visibility\n                            pg_visibility\n                        ": "",
    "\n                            pg_trgm\n                            pg_trgm\n                        ": "",
    "\n                            intarray\n                            intarray\n                        ": "",
    "\n                            pageinspect\n                            pageinspect\n                        ": "",
    "\n                            moddatetime\n                            moddatetime\n                        ": "",
    "\n                            pg_stat_statements\n                            pg_stat_statements\n                        ": "",
    "\n                            earthdistance\n                            earthdistance\n                        ": "",
    "\n                            pg_freespacemap\n                            pg_freespacemap\n                        ": "",
    "\n                            postgres_fdw\n                            postgres_fdw\n                        ": "",
    "\n                            pgstattuple\n                            pgstattuple\n                        ": "",
    "\n                            pg_toast\n                            pg_toast\n                        ": "",
    "\n                            pg_constraint_oid_index\n                            pg_constraint_oid_index\n                        ": "",
    "\n                            pg_toast_2609_index\n                            pg_toast_2609_index\n                        ": "",
    "\n                            pg_rewrite_oid_index\n                            pg_rewrite_oid_index\n                        ": "",
    "\n                            pg_toast_13260_index\n                            pg_toast_13260_index\n                        ": "",
    "\n                            pg_index_indexrelid_index\n                            pg_index_indexrelid_index\n                        ": "",
    "\n                            pg_class_relname_nsp_index\n                            pg_class_relname_nsp_index\n                        ": "",
    "\n                            pg_amop_opr_fam_index\n                            pg_amop_opr_fam_index\n                        ": "",
    "\n                            pg_toast_3592_index\n                            pg_toast_3592_index\n                        ": "",
    "\n                            pg_toast_13290_index\n                            pg_toast_13290_index\n                        ": "",
    "\n                            pg_foreign_data_wrapper_oid_index\n                            pg_foreign_data_wrapper_oid_index\n                        ": "",
    "\n                            pg_aggregate_fnoid_index\n                            pg_aggregate_fnoid_index\n                        ": "",
    "\n                            pg_toast_1262_index\n                            pg_toast_1262_index\n                        ": "",
    "\n                            pg_amproc_fam_proc_index\n                            pg_amproc_fam_proc_index\n                        ": "",
    "\n                            pg_opclass_am_name_nsp_index\n                            pg_opclass_am_name_nsp_index\n                        ": "",
    "\n                            pg_constraint_conparentid_index\n                            pg_constraint_conparentid_index\n                        ": "",
    "\n                            pg_toast_826_index\n                            pg_toast_826_index\n                        ": "",
    "\n                            pg_seclabel_object_index\n                            pg_seclabel_object_index\n                        ": "",
    "\n                            pg_trigger_tgconstraint_index\n                            pg_trigger_tgconstraint_index\n                        ": "",
    "\n                            pg_toast_1136_index\n                            pg_toast_1136_index\n                        ": "",
    "\n                            pg_opclass_oid_index\n                            pg_opclass_oid_index\n                        ": "",
    "\n                            pg_largeobject_metadata_oid_index\n                            pg_largeobject_metadata_oid_index\n                        ": "",
    "\n                            pg_foreign_table_relid_index\n                            pg_foreign_table_relid_index\n                        ": "",
    "\n                            pg_transform_type_lang_index\n                            pg_transform_type_lang_index\n                        ": "",
    "\n                            pg_operator_oprname_l_r_n_index\n                            pg_operator_oprname_l_r_n_index\n                        ": "",
    "\n                            pg_enum_oid_index\n                            pg_enum_oid_index\n                        ": "",
    "\n                            pg_description_o_c_o_index\n                            pg_description_o_c_o_index\n                        ": "",
    "\n                            pg_class_oid_index\n                            pg_class_oid_index\n                        ": "",
    "\n                            pg_attrdef_oid_index\n                            pg_attrdef_oid_index\n                        ": "",
    "\n                            pg_depend_depender_index\n                            pg_depend_depender_index\n                        ": "",
    "\n                            pg_trigger_tgrelid_tgname_index\n                            pg_trigger_tgrelid_tgname_index\n                        ": "",
    "\n                            pg_toast_13285_index\n                            pg_toast_13285_index\n                        ": "",
    "\n                            pg_toast_2619_index\n                            pg_toast_2619_index\n                        ": "",
    "\n                            pg_toast_3381_index\n                            pg_toast_3381_index\n                        ": "",
    "\n                            pg_publication_rel_oid_index\n                            pg_publication_rel_oid_index\n                        ": "",
    "\n                            pg_ts_parser_oid_index\n                            pg_ts_parser_oid_index\n                        ": "",
    "\n                            pg_pltemplate_name_index\n                            pg_pltemplate_name_index\n                        ": "",
    "\n                            pg_toast_3118_index\n                            pg_toast_3118_index\n                        ": "",
    "\n                            pg_am_name_index\n                            pg_am_name_index\n                        ": "",
    "\n                            pg_partitioned_table_partrelid_index\n                            pg_partitioned_table_partrelid_index\n                        ": "",
    "\n                            pg_index_indrelid_index\n                            pg_index_indrelid_index\n                        ": "",
    "\n                            pg_toast_1417_index\n                            pg_toast_1417_index\n                        ": "",
    "\n                            pg_ts_dict_oid_index\n                            pg_ts_dict_oid_index\n                        ": "",
    "\n                            pg_sequence_seqrelid_index\n                            pg_sequence_seqrelid_index\n                        ": "",
    "\n                            pg_publication_oid_index\n                            pg_publication_oid_index\n                        ": "",
    "\n                            pg_toast_1418_index\n                            pg_toast_1418_index\n                        ": "",
    "\n                            pg_authid_oid_index\n                            pg_authid_oid_index\n                        ": "",
    "\n                            pg_language_oid_index\n                            pg_language_oid_index\n                        ": "",
    "\n                            pg_collation_oid_index\n                            pg_collation_oid_index\n                        ": "",
    "\n                            pg_ts_parser_prsname_index\n                            pg_ts_parser_prsname_index\n                        ": "",
    "\n                            pg_toast_13270_index\n                            pg_toast_13270_index\n                        ": "",
    "\n                            pg_user_mapping_user_server_index\n                            pg_user_mapping_user_server_index\n                        ": "",
    "\n                            pg_auth_members_member_role_index\n                            pg_auth_members_member_role_index\n                        ": "",
    "\n                            pg_toast_6000_index\n                            pg_toast_6000_index\n                        ": "",
    "\n                            pg_toast_3600_index\n                            pg_toast_3600_index\n                        ": "",
    "\n                            pg_subscription_oid_index\n                            pg_subscription_oid_index\n                        ": "",
    "\n                            pg_trigger_oid_index\n                            pg_trigger_oid_index\n                        ": "",
    "\n                            pg_conversion_name_nsp_index\n                            pg_conversion_name_nsp_index\n                        ": "",
    "\n                            pg_opfamily_oid_index\n                            pg_opfamily_oid_index\n                        ": "",
    "\n                            pg_toast_3394_index\n                            pg_toast_3394_index\n                        ": "",
    "\n                            pg_cast_oid_index\n                            pg_cast_oid_index\n                        ": "",
    "\n                            pg_conversion_oid_index\n                            pg_conversion_oid_index\n                        ": "",
    "\n                            pg_operator_oid_index\n                            pg_operator_oid_index\n                        ": "",
    "\n                            pg_default_acl_oid_index\n                            pg_default_acl_oid_index\n                        ": "",
    "\n                            pg_tablespace_oid_index\n                            pg_tablespace_oid_index\n                        ": "",
    "\n                            pg_toast_13265_index\n                            pg_toast_13265_index\n                        ": "",
    "\n                            pg_extension_oid_index\n                            pg_extension_oid_index\n                        ": "",
    "\n                            pg_toast_6100_index\n                            pg_toast_6100_index\n                        ": "",
    "\n                            pg_toast_1260_index\n                            pg_toast_1260_index\n                        ": "",
    "\n                            pg_toast_1247_index\n                            pg_toast_1247_index\n                        ": "",
    "\n                            pg_toast_2615_index\n                            pg_toast_2615_index\n                        ": "",
    "\n                            pg_ts_config_oid_index\n                            pg_ts_config_oid_index\n                        ": "",
    "\n                            pg_init_privs_o_c_o_index\n                            pg_init_privs_o_c_o_index\n                        ": "",
    "\n                            pg_ts_dict_dictname_index\n                            pg_ts_dict_dictname_index\n                        ": "",
    "\n                            pg_toast_2612_index\n                            pg_toast_2612_index\n                        ": "",
    "\n                            pg_publication_pubname_index\n                            pg_publication_pubname_index\n                        ": "",
    "\n                            pg_shdescription_o_c_index\n                            pg_shdescription_o_c_index\n                        ": "",
    "\n                            pg_toast_13280_index\n                            pg_toast_13280_index\n                        ": "",
    "\n                            pg_statistic_ext_oid_index\n                            pg_statistic_ext_oid_index\n                        ": "",
    "\n                            pg_toast_16387_index\n                            pg_toast_16387_index\n                        ": "",
    "\n                            pg_toast_3079_index\n                            pg_toast_3079_index\n                        ": "",
    "\n                            pg_publication_rel_prrelid_prpubid_index\n                            pg_publication_rel_prrelid_prpubid_index\n                        ": "",
    "\n                            pg_policy_oid_index\n                            pg_policy_oid_index\n                        ": "",
    "\n                            pg_toast_2396_index\n                            pg_toast_2396_index\n                        ": "",
    "\n                            pg_subscription_subname_index\n                            pg_subscription_subname_index\n                        ": "",
    "\n                            pg_db_role_setting_databaseid_rol_index\n                            pg_db_role_setting_databaseid_rol_index\n                        ": "",
    "\n                            pg_extension_name_index\n                            pg_extension_name_index\n                        ": "",
    "\n                            pg_ts_template_tmplname_index\n                            pg_ts_template_tmplname_index\n                        ": "",
    "\n                            pg_opfamily_am_name_nsp_index\n                            pg_opfamily_am_name_nsp_index\n                        ": "",
    "\n                            pg_depend_reference_index\n                            pg_depend_reference_index\n                        ": "",
    "\n                            pg_class_tblspc_relfilenode_index\n                            pg_class_tblspc_relfilenode_index\n                        ": "",
    "\n                            pg_inherits_relid_seqno_index\n                            pg_inherits_relid_seqno_index\n                        ": "",
    "\n                            pg_conversion_default_index\n                            pg_conversion_default_index\n                        ": "",
    "\n                            pg_constraint_conname_nsp_index\n                            pg_constraint_conname_nsp_index\n                        ": "",
    "\n                            pg_statistic_relid_att_inh_index\n                            pg_statistic_relid_att_inh_index\n                        ": "",
    "\n                            pg_range_rngtypid_index\n                            pg_range_rngtypid_index\n                        ": "",
    "\n                            pg_inherits_parent_index\n                            pg_inherits_parent_index\n                        ": "",
    "\n                            pg_toast_1255_index\n                            pg_toast_1255_index\n                        ": "",
    "\n                            pg_auth_members_role_member_index\n                            pg_auth_members_role_member_index\n                        ": "",
    "\n                            pg_toast_3596_index\n                            pg_toast_3596_index\n                        ": "",
    "\n                            pg_shdepend_reference_index\n                            pg_shdepend_reference_index\n                        ": "",
    "\n                            pg_enum_typid_sortorder_index\n                            pg_enum_typid_sortorder_index\n                        ": "",
    "\n                            pg_toast_3456_index\n                            pg_toast_3456_index\n                        ": "",
    "\n                            pg_amop_oid_index\n                            pg_amop_oid_index\n                        ": "",
    "\n                            pg_ts_config_cfgname_index\n                            pg_ts_config_cfgname_index\n                        ": "",
    "\n                            pg_policy_polrelid_polname_index\n                            pg_policy_polrelid_polname_index\n                        ": "",
    "\n                            pg_database_oid_index\n                            pg_database_oid_index\n                        ": "",
    "\n                            pg_transform_oid_index\n                            pg_transform_oid_index\n                        ": "",
    "\n                            pg_toast_13275_index\n                            pg_toast_13275_index\n                        ": "",
    "\n                            pg_attribute_relid_attnum_index\n                            pg_attribute_relid_attnum_index\n                        ": "",
    "\n                            pg_constraint_conrelid_contypid_conname_index\n                            pg_constraint_conrelid_contypid_conname_index\n                        ": "",
    "\n                            pg_language_name_index\n                            pg_language_name_index\n                        ": "",
    "\n                            pg_toast_2620_index\n                            pg_toast_2620_index\n                        ": "",
    "\n                            pg_event_trigger_evtname_index\n                            pg_event_trigger_evtname_index\n                        ": "",
    "\n                            pg_statistic_ext_name_index\n                            pg_statistic_ext_name_index\n                        ": "",
    "\n                            pg_foreign_server_oid_index\n                            pg_foreign_server_oid_index\n                        ": "",
    "\n                            pg_ts_template_oid_index\n                            pg_ts_template_oid_index\n                        ": "",
    "\n                            pg_toast_3256_index\n                            pg_toast_3256_index\n                        ": "",
    "\n                            pg_type_typname_nsp_index\n                            pg_type_typname_nsp_index\n                        ": "",
    "\n                            pg_amop_fam_strat_index\n                            pg_amop_fam_strat_index\n                        ": "",
    "\n                            pg_toast_2964_index\n                            pg_toast_2964_index\n                        ": "",
    "\n                            pg_replication_origin_roiident_index\n                            pg_replication_origin_roiident_index\n                        ": "",
    "\n                            pg_database_datname_index\n                            pg_database_datname_index\n                        ": "",
    "\n                            pg_toast_2600_index\n                            pg_toast_2600_index\n                        ": "",
    "\n                            products_pkey\n                            products_pkey\n                        ": "",
    "\n                            pg_foreign_data_wrapper_name_index\n                            pg_foreign_data_wrapper_name_index\n                        ": "",
    "\n                            pg_statistic_ext_relid_index\n                            pg_statistic_ext_relid_index\n                        ": "",
    "\n                            pg_attribute_relid_attnam_index\n                            pg_attribute_relid_attnam_index\n                        ": "",
    "\n                            pg_toast_2328_index\n                            pg_toast_2328_index\n                        ": "",
    "\n                            pg_toast_1213_index\n                            pg_toast_1213_index\n                        ": "",
    "\n                            pg_amproc_oid_index\n                            pg_amproc_oid_index\n                        ": "",
    "\n                            pg_am_oid_index\n                            pg_am_oid_index\n                        ": "",
    "\n                            pg_ts_config_map_index\n                            pg_ts_config_map_index\n                        ": "",
    "\n                            pg_shseclabel_object_index\n                            pg_shseclabel_object_index\n                        ": "",
    "\n                            pg_toast_3466_index\n                            pg_toast_3466_index\n                        ": "",
    "\n                            pg_toast_2604_index\n                            pg_toast_2604_index\n                        ": "",
    "\n                            pg_statistic_ext_data_stxoid_index\n                            pg_statistic_ext_data_stxoid_index\n                        ": "",
    "\n                            pg_largeobject_loid_pn_index\n                            pg_largeobject_loid_pn_index\n                        ": "",
    "\n                            pg_enum_typid_label_index\n                            pg_enum_typid_label_index\n                        ": "",
    "\n                            pg_foreign_server_name_index\n                            pg_foreign_server_name_index\n                        ": "",
    "\n                            pg_constraint_contypid_index\n                            pg_constraint_contypid_index\n                        ": "",
    "\n                            pg_collation_name_enc_nsp_index\n                            pg_collation_name_enc_nsp_index\n                        ": "",
    "\n                            pg_toast_2618_index\n                            pg_toast_2618_index\n                        ": "",
    "\n                            pg_replication_origin_roname_index\n                            pg_replication_origin_roname_index\n                        ": "",
    "\n                            pg_authid_rolname_index\n                            pg_authid_rolname_index\n                        ": "",
    "\n                            pg_default_acl_role_nsp_obj_index\n                            pg_default_acl_role_nsp_obj_index\n                        ": "",
    "\n                            pg_namespace_nspname_index\n                            pg_namespace_nspname_index\n                        ": "",
    "\n                            pg_cast_source_target_index\n                            pg_cast_source_target_index\n                        ": "",
    "\n                            pg_subscription_rel_srrelid_srsubid_index\n                            pg_subscription_rel_srrelid_srsubid_index\n                        ": "",
    "\n                            pg_rewrite_rel_rulename_index\n                            pg_rewrite_rel_rulename_index\n                        ": "",
    "\n                            pg_proc_oid_index\n                            pg_proc_oid_index\n                        ": "",
    "\n                            pg_event_trigger_oid_index\n                            pg_event_trigger_oid_index\n                        ": "",
    "\n                            pg_tablespace_spcname_index\n                            pg_tablespace_spcname_index\n                        ": "",
    "\n                            pg_shdepend_depender_index\n                            pg_shdepend_depender_index\n                        ": "",
    "\n                            pg_toast_2606_index\n                            pg_toast_2606_index\n                        ": "",
    "\n                            pg_user_mapping_oid_index\n                            pg_user_mapping_oid_index\n                        ": "",
    "\n                            pg_proc_proname_args_nsp_index\n                            pg_proc_proname_args_nsp_index\n                        ": "",
    "\n                            pg_type_oid_index\n                            pg_type_oid_index\n                        ": "",
    "\n                            pg_namespace_oid_index\n                            pg_namespace_oid_index\n                        ": "",
    "\n                            pg_toast_3429_index\n                            pg_toast_3429_index\n                        ": "",
    "\n                            pg_toast_3350_index\n                            pg_toast_3350_index\n                        ": "",
    "\n                            pg_attrdef_adrelid_adnum_index\n                            pg_attrdef_adrelid_adnum_index\n                        ": "",
    "\n                            pg_pltemplate\n                            pg_pltemplate\n                        ": "",
    "\n                            pg_toast_13280\n                            pg_toast_13280\n                        ": "",
    "\n                            pg_toast_13285\n                            pg_toast_13285\n                        ": "",
    "\n                            pg_namespace\n                            pg_namespace\n                        ": "",
    "\n                            pg_toast_2620\n                            pg_toast_2620\n                        ": "",
    "\n                            pg_toast_2609\n                            pg_toast_2609\n                        ": "",
    "\n                            pg_amproc\n                            pg_amproc\n                        ": "",
    "\n                            pg_attribute\n                            pg_attribute\n                        ": "",
    "\n                            pg_toast_2964\n                            pg_toast_2964\n                        ": "",
    "\n                            pg_toast_3600\n                            pg_toast_3600\n                        ": "",
    "\n                            pg_range\n                            pg_range\n                        ": "",
    "\n                            pg_init_privs\n                            pg_init_privs\n                        ": "",
    "\n                            pg_toast_3466\n                            pg_toast_3466\n                        ": "",
    "\n                            pg_toast_2606\n                            pg_toast_2606\n                        ": "",
    "\n                            pg_language\n                            pg_language\n                        ": "",
    "\n                            pg_enum\n                            pg_enum\n                        ": "",
    "\n                            pg_statistic_ext\n                            pg_statistic_ext\n                        ": "",
    "\n                            pg_sequence\n                            pg_sequence\n                        ": "",
    "\n                            pg_ts_parser\n                            pg_ts_parser\n                        ": "",
    "\n                            pg_toast_16387\n                            pg_toast_16387\n                        ": "",
    "\n                            pg_subscription_rel\n                            pg_subscription_rel\n                        ": "",
    "\n                            pg_toast_13270\n                            pg_toast_13270\n                        ": "",
    "\n                            pg_toast_1418\n                            pg_toast_1418\n                        ": "",
    "\n                            pg_foreign_server\n                            pg_foreign_server\n                        ": "",
    "\n                            pg_toast_1136\n                            pg_toast_1136\n                        ": "",
    "\n                            pg_toast_2619\n                            pg_toast_2619\n                        ": "",
    "\n                            pg_default_acl\n                            pg_default_acl\n                        ": "",
    "\n                            pg_largeobject\n                            pg_largeobject\n                        ": "",
    "\n                            pg_toast_826\n                            pg_toast_826\n                        ": "",
    "\n                            pg_toast_3596\n                            pg_toast_3596\n                        ": "",
    "\n                            pg_toast_3079\n                            pg_toast_3079\n                        ": "",
    "\n                            pg_toast_2396\n                            pg_toast_2396\n                        ": "",
    "\n                            pg_toast_6100\n                            pg_toast_6100\n                        ": "",
    "\n                            pg_transform\n                            pg_transform\n                        ": "",
    "\n                            pg_toast_6000\n                            pg_toast_6000\n                        ": "",
    "\n                            pg_ts_dict\n                            pg_ts_dict\n                        ": "",
    "\n                            pg_collation\n                            pg_collation\n                        ": "",
    "\n                            pg_extension\n                            pg_extension\n                        ": "",
    "\n                            pg_toast_2604\n                            pg_toast_2604\n                        ": "",
    "\n                            pg_index\n                            pg_index\n                        ": "",
    "\n                            pg_toast_3256\n                            pg_toast_3256\n                        ": "",
    "\n                            pg_toast_2612\n                            pg_toast_2612\n                        ": "",
    "\n                            pg_toast_3118\n                            pg_toast_3118\n                        ": "",
    "\n                            pg_toast_3350\n                            pg_toast_3350\n                        ": "",
    "\n                            pg_foreign_table\n                            pg_foreign_table\n                        ": "",
    "\n                            pg_toast_2600\n                            pg_toast_2600\n                        ": "",
    "\n                            pg_seclabel\n                            pg_seclabel\n                        ": "",
    "\n                            pg_largeobject_metadata\n                            pg_largeobject_metadata\n                        ": "",
    "\n                            pg_shseclabel\n                            pg_shseclabel\n                        ": "",
    "\n                            pg_amop\n                            pg_amop\n                        ": "",
    "\n                            pg_database\n                            pg_database\n                        ": "",
    "\n                            pg_cast\n                            pg_cast\n                        ": "",
    "\n                            pg_toast_1417\n                            pg_toast_1417\n                        ": "",
    "\n                            pg_trigger\n                            pg_trigger\n                        ": "",
    "\n                            pg_depend\n                            pg_depend\n                        ": "",
    "\n                            pg_conversion\n                            pg_conversion\n                        ": "",
    "\n                            pg_operator\n                            pg_operator\n                        ": "",
    "\n                            pg_am\n                            pg_am\n                        ": "",
    "\n                            pg_replication_origin\n                            pg_replication_origin\n                        ": "",
    "\n                            pg_rewrite\n                            pg_rewrite\n                        ": "",
    "\n                            pg_subscription\n                            pg_subscription\n                        ": "",
    "\n                            pg_toast_3429\n                            pg_toast_3429\n                        ": "",
    "\n                            pg_db_role_setting\n                            pg_db_role_setting\n                        ": "",
    "\n                            pg_ts_config_map\n                            pg_ts_config_map\n                        ": "",
    "\n                            pg_publication_rel\n                            pg_publication_rel\n                        ": "",
    "\n                            pg_foreign_data_wrapper\n                            pg_foreign_data_wrapper\n                        ": "",
    "\n                            pg_statistic_ext_data\n                            pg_statistic_ext_data\n                        ": "",
    "\n                            pg_type\n                            pg_type\n                        ": "",
    "\n                            pg_class\n                            pg_class\n                        ": "",
    "\n                            pg_toast_1260\n                            pg_toast_1260\n                        ": "",
    "\n                            pg_auth_members\n                            pg_auth_members\n                        ": "",
    "\n                            pg_proc\n                            pg_proc\n                        ": "",
    "\n                            pg_toast_1213\n                            pg_toast_1213\n                        ": "",
    "\n                            pg_authid\n                            pg_authid\n                        ": "",
    "\n                            pg_toast_1262\n                            pg_toast_1262\n                        ": "",
    "\n                            pg_user_mapping\n                            pg_user_mapping\n                        ": "",
    "\n                            pg_publication\n                            pg_publication\n                        ": "",
    "\n                            pg_toast_2328\n                            pg_toast_2328\n                        ": "",
    "\n                            pg_opfamily\n                            pg_opfamily\n                        ": "",
    "\n                            pg_toast_3381\n                            pg_toast_3381\n                        ": "",
    "\n                            pg_toast_13265\n                            pg_toast_13265\n                        ": "",
    "\n                            pg_toast_2618\n                            pg_toast_2618\n                        ": "",
    "\n                            pg_toast_1247\n                            pg_toast_1247\n                        ": "",
    "\n                            pg_toast_13275\n                            pg_toast_13275\n                        ": "",
    "\n                            pg_shdescription\n                            pg_shdescription\n                        ": "",
    "\n                            pg_partitioned_table\n                            pg_partitioned_table\n                        ": "",
    "\n                            pg_toast_2615\n                            pg_toast_2615\n                        ": "",
    "\n                            pg_aggregate\n                            pg_aggregate\n                        ": "",
    "\n                            pg_attrdef\n                            pg_attrdef\n                        ": "",
    "\n                            pg_description\n                            pg_description\n                        ": "",
    "\n                            pg_toast_3456\n                            pg_toast_3456\n                        ": "",
    "\n                            pg_toast_13290\n                            pg_toast_13290\n                        ": "",
    "\n                            pg_tablespace\n                            pg_tablespace\n                        ": "",
    "\n                            pg_event_trigger\n                            pg_event_trigger\n                        ": "",
    "\n                            pg_shdepend\n                            pg_shdepend\n                        ": "",
    "\n                            pg_toast_13260\n                            pg_toast_13260\n                        ": "",
    "\n                            pg_statistic\n                            pg_statistic\n                        ": "",
    "\n                            pg_toast_1255\n                            pg_toast_1255\n                        ": "",
    "\n                            pg_toast_3592\n                            pg_toast_3592\n                        ": "",
    "\n                            pg_opclass\n                            pg_opclass\n                        ": "",
    "\n                            pg_toast_3394\n                            pg_toast_3394\n                        ": "",
    "\n                            pg_inherits\n                            pg_inherits\n                        ": "",
    "\n                            pg_constraint\n                            pg_constraint\n                        ": "",
    "\n                            pg_ts_config\n                            pg_ts_config\n                        ": "",
    "\n                            pg_policy\n                            pg_policy\n                        ": "",
    "\n                            pg_ts_template\n                            pg_ts_template\n                        ": "",
    "\n                            information_schema\n                            information_schema\n                        ": "",
    "\n                            pg_temp_1\n                            pg_temp_1\n                        ": "",
    "\n                            pg_toast_temp_1\n                            pg_toast_temp_1\n                        ": "",
    "\n                            language = &apos;nepali&apos;, stopwords = &apos;nepali&apos;\n                            language = &apos;nepali&apos;, stopwords = &apos;nepali&apos;\n                        ": "",
    "\n                            language = &apos;irish&apos;\n                            language = &apos;irish&apos;\n                        ": "",
    "\n                            language = &apos;italian&apos;, stopwords = &apos;italian&apos;\n                            language = &apos;italian&apos;, stopwords = &apos;italian&apos;\n                        ": "",
    "\n                            language = &apos;hungarian&apos;, stopwords = &apos;hungarian&apos;\n                            language = &apos;hungarian&apos;, stopwords = &apos;hungarian&apos;\n                        ": "",
    "\n                            language = &apos;danish&apos;, stopwords = &apos;danish&apos;\n                            language = &apos;danish&apos;, stopwords = &apos;danish&apos;\n                        ": "",
    "\n                            language = &apos;finnish&apos;, stopwords = &apos;finnish&apos;\n                            language = &apos;finnish&apos;, stopwords = &apos;finnish&apos;\n                        ": "",
    "\n                            language = &apos;arabic&apos;\n                            language = &apos;arabic&apos;\n                        ": "",
    "\n                            language = &apos;turkish&apos;, stopwords = &apos;turkish&apos;\n                            language = &apos;turkish&apos;, stopwords = &apos;turkish&apos;\n                        ": "",
    "\n                            language = &apos;indonesian&apos;\n                            language = &apos;indonesian&apos;\n                        ": "",
    "\n                            language = &apos;german&apos;, stopwords = &apos;german&apos;\n                            language = &apos;german&apos;, stopwords = &apos;german&apos;\n                        ": "",
    "\n                            language = &apos;dutch&apos;, stopwords = &apos;dutch&apos;\n                            language = &apos;dutch&apos;, stopwords = &apos;dutch&apos;\n                        ": "",
    "\n                            language = &apos;english&apos;, stopwords = &apos;english&apos;\n                            language = &apos;english&apos;, stopwords = &apos;english&apos;\n                        ": "",
    "\n                            language = &apos;lithuanian&apos;\n                            language = &apos;lithuanian&apos;\n                        ": "",
    "\n                            language = &apos;portuguese&apos;, stopwords = &apos;portuguese&apos;\n                            language = &apos;portuguese&apos;, stopwords = &apos;portuguese&apos;\n                        ": "",
    "\n                            language = &apos;swedish&apos;, stopwords = &apos;swedish&apos;\n                            language = &apos;swedish&apos;, stopwords = &apos;swedish&apos;\n                        ": "",
    "\n                            language = &apos;romanian&apos;\n                            language = &apos;romanian&apos;\n                        ": "",
    "\n                            language = &apos;spanish&apos;, stopwords = &apos;spanish&apos;\n                            language = &apos;spanish&apos;, stopwords = &apos;spanish&apos;\n                        ": "",
    "\n                            language = &apos;french&apos;, stopwords = &apos;french&apos;\n                            language = &apos;french&apos;, stopwords = &apos;french&apos;\n                        ": "",
    "\n                            language = &apos;norwegian&apos;, stopwords = &apos;norwegian&apos;\n                            language = &apos;norwegian&apos;, stopwords = &apos;norwegian&apos;\n                        ": "",
    "\n                            language = &apos;tamil&apos;\n                            language = &apos;tamil&apos;\n                        ": "",
    "\n                            language = &apos;russian&apos;, stopwords = &apos;russian&apos;\n                            language = &apos;russian&apos;, stopwords = &apos;russian&apos;\n                        ": "",
    "\n                            dutch_stem\n                            dutch_stem\n                        ": "",
    "\n                            finnish_stem\n                            finnish_stem\n                        ": "",
    "\n                            portuguese_stem\n                            portuguese_stem\n                        ": "",
    "\n                            english_stem\n                            english_stem\n                        ": "",
    "\n                            simple\n                            simple\n                        ": "",
    "\n                            tamil_stem\n                            tamil_stem\n                        ": "",
    "\n                            lithuanian_stem\n                            lithuanian_stem\n                        ": "",
    "\n                            turkish_stem\n                            turkish_stem\n                        ": "",
    "\n                            indonesian_stem\n                            indonesian_stem\n                        ": "",
    "\n                            french_stem\n                            french_stem\n                        ": "",
    "\n                            spanish_stem\n                            spanish_stem\n                        ": "",
    "\n                            norwegian_stem\n                            norwegian_stem\n                        ": "",
    "\n                            romanian_stem\n                            romanian_stem\n                        ": "",
    "\n                            russian_stem\n                            russian_stem\n                        ": "",
    "\n                            irish_stem\n                            irish_stem\n                        ": "",
    "\n                            danish_stem\n                            danish_stem\n                        ": "",
    "\n                            hungarian_stem\n                            hungarian_stem\n                        ": "",
    "\n                            german_stem\n                            german_stem\n                        ": "",
    "\n                            arabic_stem\n                            arabic_stem\n                        ": "",
    "\n                            swedish_stem\n                            swedish_stem\n                        ": "",
    "\n                            nepali_stem\n                            nepali_stem\n                        ": "",
    "\n                            italian_stem\n                            italian_stem\n                        ": "",
    "\n                            sql_sizing\n                            sql_sizing\n                        ": "",
    "\n                            sql_implementation_info\n                            sql_implementation_info\n                        ": "",
    "\n                            sql_parts\n                            sql_parts\n                        ": "",
    "\n                            sql_languages\n                            sql_languages\n                        ": "",
    "\n                            sql_features\n                            sql_features\n                        ": "",
    "\n                            sql_packages\n                            sql_packages\n                        ": "",
    "\n                            sql_sizing_profiles\n                            sql_sizing_profiles\n                        ": "",
    "\n                            SELECT name, description FROM products WHERE category = &apos;Gifts&apos; UNION SELECT query,query FROM pg_stat_activity--&apos; AND released = 1\n                            SELECT name, description FROM products WHERE category = &apos;Gifts&apos; UNION SELECT query,query FROM pg_stat_activity--&apos; AND released = 1\n                        ": "",
    "\n                            \n                            \n                        ": "",
    "\n                            Activity\n                            Activity\n                        ": "",
    "\n                            walwriter\n                            walwriter\n                        ": "",
    "\n                            checkpointer\n                            checkpointer\n                        ": "",
    "\n                            logical replication launcher\n                            logical replication launcher\n                        ": "",
    "\n                            autovacuum launcher\n                            autovacuum launcher\n                        ": "",
    "\n                            background writer\n                            background writer\n                        ": "",
    "\n                            client backend\n                            client backend\n                        ": "",
    "\n                            active\n                            active\n                        ": "",
    "\n                            WalWriterMain\n                            WalWriterMain\n                        ": "",
    "\n                            BgWriterHibernate\n                            BgWriterHibernate\n                        ": "",
    "\n                            CheckpointerMain\n                            CheckpointerMain\n                        ": "",
    "\n                            LogicalLauncherMain\n                            LogicalLauncherMain\n                        ": "",
    "\n                            AutoVacuumMain\n                            AutoVacuumMain\n                        ": "",
    "\n                            ********\n                            ********\n                        ": "",
    "\n                            pg_global\n                            pg_global\n                        ": "",
    "\n                            pg_default\n                            pg_default\n                        ": "",
    "\n                            _RETURN\n                            _RETURN\n                        ": "",
    "\n                            pg_settings_u\n                            pg_settings_u\n                        ": "",
    "\n                            pg_settings_n\n                            pg_settings_n\n                        ": "",
    "\n                            g7fxu2qq3103hz6adc8q\n                            g7fxu2qq3103hz6adc8q\n                        ": "",
    "\n                            2xl2lytoqqxnkwl2clot\n                            2xl2lytoqqxnkwl2clot\n                        ": "",
    "\n                            bxdwx3q67yd18omi8cdb\n                            bxdwx3q67yd18omi8cdb\n                        ": "",
    "\n                            carlos\n                            carlos\n                        ": "",
    "\n                            wiener\n                            wiener\n                        ": "",
    "\n                            administrator\n                            administrator\n                        ": "",
    "\n                            CREATE RULE pg_settings_u AS\n    ON UPDATE TO pg_catalog.pg_settings\n   WHERE (new.name = old.name) DO  SELECT set_config(old.name, new.setting, false) AS set_config;\n                            CREATE RULE pg_settings_u AS\n    ON UPDATE TO pg_catalog.pg_settings\n   WHERE (new.name = old.name) DO  SELECT set_config(old.name, new.setting, false) AS set_config;\n                        ": "",
    "\n                            CREATE RULE pg_settings_n AS\n    ON UPDATE TO pg_catalog.pg_settings DO INSTEAD NOTHING;\n                            CREATE RULE pg_settings_n AS\n    ON UPDATE TO pg_catalog.pg_settings DO INSTEAD NOTHING;\n                        ": "",
    "\n                            pg_settings\n                            pg_settings\n                        ": "",
    "\n                            productcatalog/products/4.jpg\n                            productcatalog/products/4.jpg\n                        ": "",
    "\n                            productcatalog/products/8.jpg\n                            productcatalog/products/8.jpg\n                        ": "",
    "\n                            productcatalog/products/30.jpg\n                            productcatalog/products/30.jpg\n                        ": "",
    "\n                            productcatalog/products/16.jpg\n                            productcatalog/products/16.jpg\n                        ": "",
    "\n                            productcatalog/products/2.jpg\n                            productcatalog/products/2.jpg\n                        ": "",
    "\n                            productcatalog/products/15.jpg\n                            productcatalog/products/15.jpg\n                        ": "",
    "\n                            productcatalog/products/37.jpg\n                            productcatalog/products/37.jpg\n                        ": "",
    "\n                            productcatalog/products/9.jpg\n                            productcatalog/products/9.jpg\n                        ": "",
    "\n                            productcatalog/products/45.jpg\n                            productcatalog/products/45.jpg\n                        ": "",
    "\n                            productcatalog/products/5.jpg\n                            productcatalog/products/5.jpg\n                        ": "",
    "\n                            productcatalog/products/75.jpg\n                            productcatalog/products/75.jpg\n                        ": "",
    "\n                            productcatalog/products/36.jpg\n                            productcatalog/products/36.jpg\n                        ": "",
    "\n                            productcatalog/products/57.jpg\n                            productcatalog/products/57.jpg\n                        ": "",
    "\n                            productcatalog/products/25.jpg\n                            productcatalog/products/25.jpg\n                        ": "",
    "\n                            productcatalog/products/11.jpg\n                            productcatalog/products/11.jpg\n                        ": "",
    "\n                            productcatalog/products/42.jpg\n                            productcatalog/products/42.jpg\n                        ": "",
    "\n                            productcatalog/products/3.jpg\n                            productcatalog/products/3.jpg\n                        ": "",
    "\n                            productcatalog/products/38.jpg\n                            productcatalog/products/38.jpg\n                        ": "",
    "\n                            productcatalog/products/58.jpg\n                            productcatalog/products/58.jpg\n                        ": "",
    "\n                            productcatalog/products/46.jpg\n                            productcatalog/products/46.jpg\n                        ": "",
    "\n                            This All-in-One compact and portable typewriter is on every writer&apos;s wish list. No need for separate bulky printers, just feed the paper in with the handy rolling thing and create print in seconds.\nThis is a must-have gadget for all those who like to print on the go. Its revolutionary instant print mechanism saves you time and money, you no longer need to take your memory stick to the nearest printing outlet, you can type and print at the same time. It is a space saving dream.\nYou need not fear if you are a clumsy typist, all mistakes can quickly be &apos;whited&apos; out with the accompanying bottle of corrective fluid, just apply, blow, and away you go. Every letter of the alphabet is inscribed on the keys making it useful for all your writing needs, numbers are also available especially useful if you need to type up your backlog of invoices.\nThis handy little device comes with a carrying case, and convenient handle weighing in at only 15 pounds. The mobile office has just got that little bit easier.\n                            This All-in-One compact and portable typewriter is on every writer&apos;s wish list. No need for separate bulky printers, just feed the paper in with the handy rolling thing and create print in seconds.\nThis is a must-have gadget for all those who like to print on the go. Its revolutionary instant print mechanism saves you time and money, you no longer need to take your memory stick to the nearest printing outlet, you can type and print at the same time. It is a space saving dream.\nYou need not fear if you are a clumsy typist, all mistakes can quickly be &apos;whited&apos; out with the accompanying bottle of corrective fluid, just apply, blow, and away you go. Every letter of the alphabet is inscribed on the keys making it useful for all your writing needs, numbers are also available especially useful if you need to type up your backlog of invoices.\nThis handy little device comes with a carrying case, and convenient handle weighing in at only 15 pounds. The mobile office has just got that little bit easier.\n                        ": "",
    "\n                            Give your beloved furry friend their dream birthday. Here at PED, we offer unrivaled entertainment at competitive prices. Starting with our best seller, the Balloon Ride.\nA large collection of helium-filled balloons will be attached with a harness to your dog, once we are confident we have enough power for takeoff then it&apos;s up, up and away they go. This adventure is heavily weather dependent as strong winds could prove hazardous as all dogs fly unaccompanied.\nYour dog will travel at 5 mph with the wind in its face, and I expect its tongue hanging out. Better than a trip in the car with the window open. Health &amp; Safety is of paramount importance to us, should the dog, at any time, veer off course we will instantly start firing at the balloons one by one in order to facilitate their safe descent. This should not be any cause for concern as this is our official landing procedure at the end of the ride, and no fatalities have been recorded.\nYou are strongly advised to wear wet weather clothing and carry an umbrella on the day, the dogs can become very excited on this ride and we have little control over where they might hover. Give your best friend the time of its life, book today as all early birds have an added bonus of choosing the colors of the balloons.\n                            Give your beloved furry friend their dream birthday. Here at PED, we offer unrivaled entertainment at competitive prices. Starting with our best seller, the Balloon Ride.\nA large collection of helium-filled balloons will be attached with a harness to your dog, once we are confident we have enough power for takeoff then it&apos;s up, up and away they go. This adventure is heavily weather dependent as strong winds could prove hazardous as all dogs fly unaccompanied.\nYour dog will travel at 5 mph with the wind in its face, and I expect its tongue hanging out. Better than a trip in the car with the window open. Health &amp; Safety is of paramount importance to us, should the dog, at any time, veer off course we will instantly start firing at the balloons one by one in order to facilitate their safe descent. This should not be any cause for concern as this is our official landing procedure at the end of the ride, and no fatalities have been recorded.\nYou are strongly advised to wear wet weather clothing and carry an umbrella on the day, the dogs can become very excited on this ride and we have little control over where they might hover. Give your best friend the time of its life, book today as all early birds have an added bonus of choosing the colors of the balloons.\n                        ": "",
    "\n                            Alert your loved ones to the perils of the bathroom before it&apos;s too late thanks to this novelty sign.\nPerfect for home or even the office, be sure to pop it under your arm and take it to the loo when you&apos;re going for an extended visit. Its bright yellow colour and red caution sign means no one can ever yell at you for not forewarning them what they have to endure following you into the restroom. The foldable design means you simply leave it out as long as is needed and collapse it when it&apos;s safe to return.\nThe sign is also double sided to be absolutely certain that there will be no confusion! It&apos;s the ideal secret Santa gift for that co-worker, you know the one! It also makes a great gag gift and stocking filler!\nBe warned and stay safe with this toilet caution sign!\n                            Alert your loved ones to the perils of the bathroom before it&apos;s too late thanks to this novelty sign.\nPerfect for home or even the office, be sure to pop it under your arm and take it to the loo when you&apos;re going for an extended visit. Its bright yellow colour and red caution sign means no one can ever yell at you for not forewarning them what they have to endure following you into the restroom. The foldable design means you simply leave it out as long as is needed and collapse it when it&apos;s safe to return.\nThe sign is also double sided to be absolutely certain that there will be no confusion! It&apos;s the ideal secret Santa gift for that co-worker, you know the one! It also makes a great gag gift and stocking filler!\nBe warned and stay safe with this toilet caution sign!\n                        ": "",
    "\n                            There was a time when we all thought by car sharing we were helping to save our planet. Even this is an outdated convention, and things have rapidly moved on. We would like to reduce the number of cars on the road even further, aiming one day for it to be none at all.\nThis is where we come in, our new &apos;Hitch A Lift&apos; harness is the future of commuting, improving life on earth, and boosting our own health and fitness in the process. Just strap on a buddy and use what God gave you to get yourselves to work.\nOne of you might be stronger than the other, but you can still take it in turns as our harness can be attached, and unattached, in seconds. There is a maximum recommended weight of 224 lbs so choose your hitch buddy wisely.\nIt is important that the weaker of the two get some practice in, you don&apos;t want to lose muscle power by not using those legs and upper body strength for long periods of time. Say goodbye to traffic jams and pollution, hitch up with a buddy today.\n                            There was a time when we all thought by car sharing we were helping to save our planet. Even this is an outdated convention, and things have rapidly moved on. We would like to reduce the number of cars on the road even further, aiming one day for it to be none at all.\nThis is where we come in, our new &apos;Hitch A Lift&apos; harness is the future of commuting, improving life on earth, and boosting our own health and fitness in the process. Just strap on a buddy and use what God gave you to get yourselves to work.\nOne of you might be stronger than the other, but you can still take it in turns as our harness can be attached, and unattached, in seconds. There is a maximum recommended weight of 224 lbs so choose your hitch buddy wisely.\nIt is important that the weaker of the two get some practice in, you don&apos;t want to lose muscle power by not using those legs and upper body strength for long periods of time. Say goodbye to traffic jams and pollution, hitch up with a buddy today.\n                        ": "",
    "\n                            Made from soft, nylon material and stuffed with cotton, this giant enter key is the ideal office addition. Simply plug it in via a USB port and use it as you&apos;re normal enter button! The only difference being is you can smash the living heck out of it whenever you&apos;re annoyed. This not only saves your existing keyboard from yet another hammering, but also ensures you won&apos;t get billed by your boss for damage to company property.\nThis is also an ideal gift for that angry co-worker or stressed out secretary that you just fear to walk past. So, whether it&apos;s for you or a gift for an agitated friend, this sheer surface size of this button promises you&apos;ll never miss when you go to let that anger out.\n                            Made from soft, nylon material and stuffed with cotton, this giant enter key is the ideal office addition. Simply plug it in via a USB port and use it as you&apos;re normal enter button! The only difference being is you can smash the living heck out of it whenever you&apos;re annoyed. This not only saves your existing keyboard from yet another hammering, but also ensures you won&apos;t get billed by your boss for damage to company property.\nThis is also an ideal gift for that angry co-worker or stressed out secretary that you just fear to walk past. So, whether it&apos;s for you or a gift for an agitated friend, this sheer surface size of this button promises you&apos;ll never miss when you go to let that anger out.\n                        ": "",
    "\n                            We recently discovered, by accident, that vermin and all manner of pets and pests are attracted to umbrellas. Not to just any umbrellas though, they have to be long, pointy ones.\nIt is very hard these days to get hold of an umbrella that isn&apos;t collapsible, these will not work as pest control. So, we decided to start designing and manufacturing our unique Pest Control Umbrella, the only genuine umbrella that will do the job. We have all copyright on these brollies and no other companies are allowed to remotely hint that their umbrellas can be used to rid yourself of those pesky pests.\nNever knowingly undersold we guarantee a price match on any other form of pest control, but not if you use a different umbrella for the job.\nEasy to use, just pop under your arm, pointy end facing behind you and watch the creatures follow your lead. By purchasing this highly effective product you will be well on your way to starting up your own pest control business, a little investment now will pay great dividends in the future for you and your family.\n                            We recently discovered, by accident, that vermin and all manner of pets and pests are attracted to umbrellas. Not to just any umbrellas though, they have to be long, pointy ones.\nIt is very hard these days to get hold of an umbrella that isn&apos;t collapsible, these will not work as pest control. So, we decided to start designing and manufacturing our unique Pest Control Umbrella, the only genuine umbrella that will do the job. We have all copyright on these brollies and no other companies are allowed to remotely hint that their umbrellas can be used to rid yourself of those pesky pests.\nNever knowingly undersold we guarantee a price match on any other form of pest control, but not if you use a different umbrella for the job.\nEasy to use, just pop under your arm, pointy end facing behind you and watch the creatures follow your lead. By purchasing this highly effective product you will be well on your way to starting up your own pest control business, a little investment now will pay great dividends in the future for you and your family.\n                        ": "",
    "\n                            Folding smartphones that open up to reveal a handy little tablet are about to hit the market. Is folding the future of technology? As gadget trends go from large to small, back to large again, small again, huge, I guess folding has to be the answer, the best of both worlds. They are still bulky though, once we start folding everything things have a tendency to get thicker. Purses and briefcases will need to be adjusted to accommodate these new convenient, but bulky items.\nWith this new concept, we can really make outside spaces and coffee houses our home offices. Pitch up in the park on a sunny day, and dig deep into your oversized carpet bag, with magician-like prowess you will be able to unfold your desk, PC, speakers, keyboards and mice until you have everything you need to start your days work. Even your travel mug and flask will conveniently unfold leaving you hydrated in that hot summers sun.\nI was a bit of a trendsetter in this department, I have always folded my paper money, my grandmother used to do it and I guess the influence stuck with me. Little did granny know that 40 years on we would all be folding our money, and everything else we can attach minuscule hinges to. We have always folded our laundry as well, that goes back centuries. Like all good inventions, it takes time to bring these things to market.\nTo be honest I&apos;ve been crying out for a tablet that makes phone calls ever since my eyesight deteriorated. Sadly it will probably only be affordable to those that can afford laser surgery, and they&apos;re just being greedy as they have no problems looking at a tiny cell phone screen. I hate touch screens and have had a folding keyboard for yonks, give me a giant Blackberry any day!\n                            Folding smartphones that open up to reveal a handy little tablet are about to hit the market. Is folding the future of technology? As gadget trends go from large to small, back to large again, small again, huge, I guess folding has to be the answer, the best of both worlds. They are still bulky though, once we start folding everything things have a tendency to get thicker. Purses and briefcases will need to be adjusted to accommodate these new convenient, but bulky items.\nWith this new concept, we can really make outside spaces and coffee houses our home offices. Pitch up in the park on a sunny day, and dig deep into your oversized carpet bag, with magician-like prowess you will be able to unfold your desk, PC, speakers, keyboards and mice until you have everything you need to start your days work. Even your travel mug and flask will conveniently unfold leaving you hydrated in that hot summers sun.\nI was a bit of a trendsetter in this department, I have always folded my paper money, my grandmother used to do it and I guess the influence stuck with me. Little did granny know that 40 years on we would all be folding our money, and everything else we can attach minuscule hinges to. We have always folded our laundry as well, that goes back centuries. Like all good inventions, it takes time to bring these things to market.\nTo be honest I&apos;ve been crying out for a tablet that makes phone calls ever since my eyesight deteriorated. Sadly it will probably only be affordable to those that can afford laser surgery, and they&apos;re just being greedy as they have no problems looking at a tiny cell phone screen. I hate touch screens and have had a folding keyboard for yonks, give me a giant Blackberry any day!\n                        ": "",
    "\n                            We&apos;ve all been there, a deadline is approaching and everyone is pulling together. Well, not quite everyone. There&apos;s always one colleague who secretly wishes you will fail, and they will jump in and save the day, solo!\nNot anymore. With our new &apos;Team&apos; alert there will no longer be any renegades in the pack. The master team sign will sit proudly in your conference room; each time someone uses the word &apos;I&apos; lights will flash and an alarm will sound. Ear piercing sirens that no-one will ever want to hear again.\nSmaller units are available to dot around your office building, there won&apos;t be anywhere safe for a secret meeting, or plots to overthrow your company. With a control panel at your fingertips, the hidden cameras will swiftly pinpoint the culprits, and you will able to talk to them directly through the units.\nOur motto, &apos;teamwork makes dreams work&apos;, says it all. Stamp out the solo flying, get ahead wannabes. We have a team (there&apos;s that word again) of highly skilled installers who will guide you through the process and give you a free estimate today!\n                            We&apos;ve all been there, a deadline is approaching and everyone is pulling together. Well, not quite everyone. There&apos;s always one colleague who secretly wishes you will fail, and they will jump in and save the day, solo!\nNot anymore. With our new &apos;Team&apos; alert there will no longer be any renegades in the pack. The master team sign will sit proudly in your conference room; each time someone uses the word &apos;I&apos; lights will flash and an alarm will sound. Ear piercing sirens that no-one will ever want to hear again.\nSmaller units are available to dot around your office building, there won&apos;t be anywhere safe for a secret meeting, or plots to overthrow your company. With a control panel at your fingertips, the hidden cameras will swiftly pinpoint the culprits, and you will able to talk to them directly through the units.\nOur motto, &apos;teamwork makes dreams work&apos;, says it all. Stamp out the solo flying, get ahead wannabes. We have a team (there&apos;s that word again) of highly skilled installers who will guide you through the process and give you a free estimate today!\n                        ": "",
    "\n                            If you&apos;ve ever been stuck in a traffic jam I expect you&apos;ve been jealous to look up and see those brave youngsters doing their freerunning and parkour overhead. No waiting around for them, always first to the office on a bad traffic day.\nWith our innovative Balance Beams, you can now escape the daily rat race and head up there with the rest of them. No need to spend months in training and age is not a barrier with these handy foldaway planks of wood. Just head up to the roof of your building, unfold them to the length of the space you need to traverse and off you go.\nFully adjustable you will be able to travel a distance of up to 20 meters. The complete kit comes with a handy foldaway parachute for those extra windy days, and a neat little canvas bag for when they&apos;re not in use. Each plank is treated with a special non-slip coating to give extra strength and durability. We do recommend not wearing flip-flops or any other open-toe shoes while in use.\nBe the adventurer you&apos;ve always wanted to be, but do it safely. T&amp;C&apos;s apply, third-party insurance recommended, use at the owners own risk.\n                            If you&apos;ve ever been stuck in a traffic jam I expect you&apos;ve been jealous to look up and see those brave youngsters doing their freerunning and parkour overhead. No waiting around for them, always first to the office on a bad traffic day.\nWith our innovative Balance Beams, you can now escape the daily rat race and head up there with the rest of them. No need to spend months in training and age is not a barrier with these handy foldaway planks of wood. Just head up to the roof of your building, unfold them to the length of the space you need to traverse and off you go.\nFully adjustable you will be able to travel a distance of up to 20 meters. The complete kit comes with a handy foldaway parachute for those extra windy days, and a neat little canvas bag for when they&apos;re not in use. Each plank is treated with a special non-slip coating to give extra strength and durability. We do recommend not wearing flip-flops or any other open-toe shoes while in use.\nBe the adventurer you&apos;ve always wanted to be, but do it safely. T&amp;C&apos;s apply, third-party insurance recommended, use at the owners own risk.\n                        ": "",
    "\n                            How many times have you had a lightbulb moment and not had any way of writing it down, or your cell is out of reach and you&apos;ve forgotten before you find it? Us to. That&apos;s why we have come up with the perfect solution.\n&apos;Lightbulb Moments&apos; are unique, voice-activated, recording software units. Replace all those useless bulbs that give you nothing but light, and you&apos;ll never forget that viral idea again. With bayonet and screw fittings available they will fit easily into every lamp, and overhead light socket, in your home.\nWhen the idea hits you just call out, &apos;Lightbulb Moment&apos;, and your bulbs will be ready to start recording instantly. There is no need for a smartphone or tablet to retrieve your data, just say. &apos;Tell me&apos;, and the bulb will repeat back what you have recorded at a time that is convenient for you.\nEven better still, unlike regular light bulbs, these have a 10-year warranty and will be replaced for a discount of 10% of the original purchase price. No minimum order required, only buy what you need. Never miss that lightbulb moment again.\n                            How many times have you had a lightbulb moment and not had any way of writing it down, or your cell is out of reach and you&apos;ve forgotten before you find it? Us to. That&apos;s why we have come up with the perfect solution.\n&apos;Lightbulb Moments&apos; are unique, voice-activated, recording software units. Replace all those useless bulbs that give you nothing but light, and you&apos;ll never forget that viral idea again. With bayonet and screw fittings available they will fit easily into every lamp, and overhead light socket, in your home.\nWhen the idea hits you just call out, &apos;Lightbulb Moment&apos;, and your bulbs will be ready to start recording instantly. There is no need for a smartphone or tablet to retrieve your data, just say. &apos;Tell me&apos;, and the bulb will repeat back what you have recorded at a time that is convenient for you.\nEven better still, unlike regular light bulbs, these have a 10-year warranty and will be replaced for a discount of 10% of the original purchase price. No minimum order required, only buy what you need. Never miss that lightbulb moment again.\n                        ": "",
    "\n                            Are you one of those people who is put off going to the gym? Sometimes it&apos;s hard to get started as you don&apos;t want to appear all weedy and pale. Making that first step, to have the confidence of being surrounded by other users who are totally ripped it&apos;s just a small cost away.\nThis Gym Suit will help you through those first few months of building up those biceps and triceps. It has the added bonus of anonymity so when you&apos;re ready you can strut your stuff and no-one will ever know you needed a little help on the way.\nYou can continue using this suit in your everyday life if you want to surprise your colleagues, friends, and family with the big reveal on completion of your training. The eyes, nose, and mouth are fully functional allowing you to eat and drink normally. The head is easily removed from the suit for bedtime comfort; should you want to keep the upper muscular feeling beside your loved one by only wearing the chest piece.\nStart Your journey to a healthier, better looking you today. For the advertised price, this gym suit will help you say goodbye to all those first day nerves.\n                            Are you one of those people who is put off going to the gym? Sometimes it&apos;s hard to get started as you don&apos;t want to appear all weedy and pale. Making that first step, to have the confidence of being surrounded by other users who are totally ripped it&apos;s just a small cost away.\nThis Gym Suit will help you through those first few months of building up those biceps and triceps. It has the added bonus of anonymity so when you&apos;re ready you can strut your stuff and no-one will ever know you needed a little help on the way.\nYou can continue using this suit in your everyday life if you want to surprise your colleagues, friends, and family with the big reveal on completion of your training. The eyes, nose, and mouth are fully functional allowing you to eat and drink normally. The head is easily removed from the suit for bedtime comfort; should you want to keep the upper muscular feeling beside your loved one by only wearing the chest piece.\nStart Your journey to a healthier, better looking you today. For the advertised price, this gym suit will help you say goodbye to all those first day nerves.\n                        ": "",
    "\n                            Everyone is getting wise to the nanny cams, and the old fashioned ways of listening in on other people&apos;s conversations. No-one trusts a cute looking teddy bear anymore, who knows what is hidden behind those button eyes. We have designed a foolproof system that will never catch you out with our &apos;Grow Your Own Spy Kit&apos;.\nIn the same easy way you plant a seed, or seedling, you pop the water-resistant bug beneath the surface of some fresh compost. With regular watering and a sprinkling of plant food, your bug pots will thrive until they are ready to be gifted to those you wish to spy on.\nNo-one will suspect what you&apos;re up to, even if they have their suspicions, the only bugs they are going to find hiding amongst the leaves will be greenfly.\nOn purchasing our &apos;Grow Your Own Spy Kit&apos; you will be required to sign a Non-Disclosure Agreement, loose lips cost lives you know.\nWhether you are planning on just having a bit of fun with your family and friends, or you are a serious spy in the making, eavesdropping could not be any easier.\n                            Everyone is getting wise to the nanny cams, and the old fashioned ways of listening in on other people&apos;s conversations. No-one trusts a cute looking teddy bear anymore, who knows what is hidden behind those button eyes. We have designed a foolproof system that will never catch you out with our &apos;Grow Your Own Spy Kit&apos;.\nIn the same easy way you plant a seed, or seedling, you pop the water-resistant bug beneath the surface of some fresh compost. With regular watering and a sprinkling of plant food, your bug pots will thrive until they are ready to be gifted to those you wish to spy on.\nNo-one will suspect what you&apos;re up to, even if they have their suspicions, the only bugs they are going to find hiding amongst the leaves will be greenfly.\nOn purchasing our &apos;Grow Your Own Spy Kit&apos; you will be required to sign a Non-Disclosure Agreement, loose lips cost lives you know.\nWhether you are planning on just having a bit of fun with your family and friends, or you are a serious spy in the making, eavesdropping could not be any easier.\n                        ": "",
    "\n                            The Six Pack Beer Belt - because who wants just one beer?\nSay goodbye to long queues at the bar thanks to this handy belt. This beer belt is fully adjustable up to 50&apos; waist, meaning you can change the size according to how much beer you&apos;re drinking. With its camouflage design, it&apos;s easy to sneak beer into gigs, parties and festivals. This is the perfect gift for a beer lover or just someone who hates paying for drinks at the bar!\nSimply strap it on and load it up with your favourite beer cans or bottles and you&apos;re off! Thanks to this sturdy design, you&apos;ll always be able to boast about having a six pack. Buy this adjustable belt today and never go thirsty again!\n                            The Six Pack Beer Belt - because who wants just one beer?\nSay goodbye to long queues at the bar thanks to this handy belt. This beer belt is fully adjustable up to 50&apos; waist, meaning you can change the size according to how much beer you&apos;re drinking. With its camouflage design, it&apos;s easy to sneak beer into gigs, parties and festivals. This is the perfect gift for a beer lover or just someone who hates paying for drinks at the bar!\nSimply strap it on and load it up with your favourite beer cans or bottles and you&apos;re off! Thanks to this sturdy design, you&apos;ll always be able to boast about having a six pack. Buy this adjustable belt today and never go thirsty again!\n                        ": "",
    "\n                            We&apos;ve all been there, found ourselves in a situation where we find it hard to look interested in what our colleagues, bosses, friends, and family are saying. With our smile insert, you can now fake it like a pro. Easy to use and completely hypoallergenic with one size fits all.\nEver glazed over as your pals regale you with tales of their day on the golf course with the boss? This is the product for you. Not only will you appear fully engaged and happy in their company, but you will also be the object of everyone&apos;s eye as they fawn over your bright, white Cheshire Cat Grin.\nNo need to spill the beans on this one, this insert is available by invitation only and is protected by the rules of the magician&apos;s code. In order to maintain the ruse we will regularly enhance this product by changing the size and shape of the teeth, but always guarantee a huge smile to be proud of.\nFor those of you unlucky enough to have lost the essential front smiling teeth we can make smiles to order. Grab yourself some poster putty, bite down on it and we&apos;ll do the rest. Say &apos;yes&apos; to success today and keep those crashing bores as happy as you look.\n                            We&apos;ve all been there, found ourselves in a situation where we find it hard to look interested in what our colleagues, bosses, friends, and family are saying. With our smile insert, you can now fake it like a pro. Easy to use and completely hypoallergenic with one size fits all.\nEver glazed over as your pals regale you with tales of their day on the golf course with the boss? This is the product for you. Not only will you appear fully engaged and happy in their company, but you will also be the object of everyone&apos;s eye as they fawn over your bright, white Cheshire Cat Grin.\nNo need to spill the beans on this one, this insert is available by invitation only and is protected by the rules of the magician&apos;s code. In order to maintain the ruse we will regularly enhance this product by changing the size and shape of the teeth, but always guarantee a huge smile to be proud of.\nFor those of you unlucky enough to have lost the essential front smiling teeth we can make smiles to order. Grab yourself some poster putty, bite down on it and we&apos;ll do the rest. Say &apos;yes&apos; to success today and keep those crashing bores as happy as you look.\n                        ": "",
    "\n                            Fur babies is a new concept for those of you who live in apartments where the Landlord doesn&apos;t allow pets. We have a huge selection of cute animal suits you can dress your babies in.\nAll suits are made from breathable fabrics keeping your little ones cool, or warm, all year round. If you want a rabbit, what the heck, have a rabbit. If the landlord makes an appearance, just slip the hood down and he/she need never know. The best bit is we all know babies love raw veggies, you can hand feed them and talk to them in that silly voice reserved for animals and children.\nYou will never be refused entry to your favorite restaurants again, your fur baby will be at your side wherever you go. They conveniently poop in a diaper so no early morning walks either. Have the best of both worlds, and surprise your friends and family if you purchase from one of our Wild and Rare ranges.\nJoin the trendsetters of Beverly Hills, show off on Instagram, but remember a fur baby is for life, and not just for Christmas.\n                            Fur babies is a new concept for those of you who live in apartments where the Landlord doesn&apos;t allow pets. We have a huge selection of cute animal suits you can dress your babies in.\nAll suits are made from breathable fabrics keeping your little ones cool, or warm, all year round. If you want a rabbit, what the heck, have a rabbit. If the landlord makes an appearance, just slip the hood down and he/she need never know. The best bit is we all know babies love raw veggies, you can hand feed them and talk to them in that silly voice reserved for animals and children.\nYou will never be refused entry to your favorite restaurants again, your fur baby will be at your side wherever you go. They conveniently poop in a diaper so no early morning walks either. Have the best of both worlds, and surprise your friends and family if you purchase from one of our Wild and Rare ranges.\nJoin the trendsetters of Beverly Hills, show off on Instagram, but remember a fur baby is for life, and not just for Christmas.\n                        ": "",
    "\n                            These backdrops are brought to you in collaboration with our sister company InstaCam. InstaCam is the full package for your social media fake lives. Now you can purchase these add-ons to boost your profile between InstaCam photoshoots.\nNo technical experience is necessary. The backdrops form part of a software photo suite that can paste you in any pose onto the selected backdrop. Spice up your life with thousands of hilarious photobombing scenarios.\nIf you would prefer to take your own photos against a painted canvas, and not bother yourself with digital wizardry we can supply you with everything you need. You must be advised the canvases are pretty big and will take up an extraordinary amount of space in your home. Be selective. There is a big second-hand market for these frames, so you can always sell them on, or add to your existing decor with a brand new, exotic, art collection.\nWe have had incredible feedback for this product, and have been reliably informed that the frames are fully recyclable and have been used in a wide range of DIY projects. Be the envy of your friends and family as they witness your exploits running with photobombing wild horses or apparently dancing with a giraffe (this one is a particularly large canvas). What are you waiting for? Be the person you really want to be today!\n                            These backdrops are brought to you in collaboration with our sister company InstaCam. InstaCam is the full package for your social media fake lives. Now you can purchase these add-ons to boost your profile between InstaCam photoshoots.\nNo technical experience is necessary. The backdrops form part of a software photo suite that can paste you in any pose onto the selected backdrop. Spice up your life with thousands of hilarious photobombing scenarios.\nIf you would prefer to take your own photos against a painted canvas, and not bother yourself with digital wizardry we can supply you with everything you need. You must be advised the canvases are pretty big and will take up an extraordinary amount of space in your home. Be selective. There is a big second-hand market for these frames, so you can always sell them on, or add to your existing decor with a brand new, exotic, art collection.\nWe have had incredible feedback for this product, and have been reliably informed that the frames are fully recyclable and have been used in a wide range of DIY projects. Be the envy of your friends and family as they witness your exploits running with photobombing wild horses or apparently dancing with a giraffe (this one is a particularly large canvas). What are you waiting for? Be the person you really want to be today!\n                        ": "",
    "\n                            BURP is a newly available wind suppressant that will protect you in all those potentially embarrassing situations. This is the only protection proven to work following a study of one hundred users. A delicious sweet that never dissolves, it will constantly protect you in the background as you go about your day.\nThe first long-term solution to hiccups, that can really bring you down and get in the way of productivity. BURP is the latest brand on everyone&apos;s lips and we want to celebrate our success with you by offering you peace of mind, and a money back guarantee if your wind isn&apos;t kept in check.\nBURP&apos;s ultra-sensitive technology can also detect when wind is on its way, you never need to get caught out again, the sweet releases extra chemicals to identify the problem area and hit the spot before the wind can work its way up to your mouth. With zero sugar we ensure your teeth won&apos;t suffer while using our product, if anything your smile will be bigger and brighter as all the stress leaves your body (1 out of 8 users agree).\n                            BURP is a newly available wind suppressant that will protect you in all those potentially embarrassing situations. This is the only protection proven to work following a study of one hundred users. A delicious sweet that never dissolves, it will constantly protect you in the background as you go about your day.\nThe first long-term solution to hiccups, that can really bring you down and get in the way of productivity. BURP is the latest brand on everyone&apos;s lips and we want to celebrate our success with you by offering you peace of mind, and a money back guarantee if your wind isn&apos;t kept in check.\nBURP&apos;s ultra-sensitive technology can also detect when wind is on its way, you never need to get caught out again, the sweet releases extra chemicals to identify the problem area and hit the spot before the wind can work its way up to your mouth. With zero sugar we ensure your teeth won&apos;t suffer while using our product, if anything your smile will be bigger and brighter as all the stress leaves your body (1 out of 8 users agree).\n                        ": "",
    "\n                            We are delighted to introduce you to our new, state of the art, home office. ZZZZZZ Bed is a revolutionary space-saving concept for those of you struggling to fit everything into your tiny home. But it&apos;s not just about its useful integration in your existing room, it&apos;s also about the convenience it offers in your work and leisure time.\nPicture this, you are halfway through your working day and it&apos;s time for a well-earned nap. You will be able to save time by moving your work to one side, as you lie back and drift off without interrupting the natural flow of the day. When you&apos;ve had your power nap, and are ready to get back to it everything is there waiting for you.\nNothing can offer you a work-life balance like the ZZZZZZ bed can. Sleep in comfort when you need to, whatever time of day it is. Wake up and work any time sleep is getting the better of you, your office will always be at your fingertips. Call us today for a free quote and to discuss any of our innovative add-ons you will wonder how you ever lived without\n                            We are delighted to introduce you to our new, state of the art, home office. ZZZZZZ Bed is a revolutionary space-saving concept for those of you struggling to fit everything into your tiny home. But it&apos;s not just about its useful integration in your existing room, it&apos;s also about the convenience it offers in your work and leisure time.\nPicture this, you are halfway through your working day and it&apos;s time for a well-earned nap. You will be able to save time by moving your work to one side, as you lie back and drift off without interrupting the natural flow of the day. When you&apos;ve had your power nap, and are ready to get back to it everything is there waiting for you.\nNothing can offer you a work-life balance like the ZZZZZZ bed can. Sleep in comfort when you need to, whatever time of day it is. Wake up and work any time sleep is getting the better of you, your office will always be at your fingertips. Call us today for a free quote and to discuss any of our innovative add-ons you will wonder how you ever lived without\n                        ": "",
    "\n                            Giant Pillow Thing - Because, why not?\nHave you ever been sat at home or in the office and thought, I&apos;d much rather sit in something that a team of Gurkha guides couldn&apos;t find me in? Well, look no further than this enormous, luxury pillow. It&apos;s ideal for car parks, open air fields, unused basements and big living rooms. Simply drag it in with your team of weight lifters and hide from your loved ones for days. This is the perfect product to lounge in comfort in front of the TV on, have a family reunion in, or land on after jumping out of a plane.\n                            Giant Pillow Thing - Because, why not?\nHave you ever been sat at home or in the office and thought, I&apos;d much rather sit in something that a team of Gurkha guides couldn&apos;t find me in? Well, look no further than this enormous, luxury pillow. It&apos;s ideal for car parks, open air fields, unused basements and big living rooms. Simply drag it in with your team of weight lifters and hide from your loved ones for days. This is the perfect product to lounge in comfort in front of the TV on, have a family reunion in, or land on after jumping out of a plane.\n                        ": "",
    "\n                            The Lazy Dog is brought to you by the same people who invented the wheel. Do you become frustrated when your small dog just can&apos;t keep up the pace, or stubbornly sits and gives up walking altogether? If the answer is yes, then The Lazy Dog is for you!\nAs easy to fit as a harness these remote controlled owl wings are a must have for any dog lover. As soon as your pooch has taken its last step of the day just snap the wings into place and click the red &apos;flapping&apos; button on your handheld remote. After a few seconds, your furry friend will be off the ground and up, up and away.\nOnce at a safe height, WARNING: BEWARE OF LOW HANGING BRANCHES, click the blue button to initiate cruise control. The wings have inbuilt cameras so you can see what your dog sees. When clicking the black button your dog can swoop down and gain speed in the &apos;fake chasing rabbits&apos; mode. This function is used at the owner&apos;s risk as it uses a lot of power, and if the battery pack dies a nasty accident could occur.\nCarrying your pooch has become a thing of the past. With The Lazy Dog, the dog park will become a place to enjoy again. You can also purchase an aviator hat and goggles, extra protection and peace of mind for you and your pooch.\n                            The Lazy Dog is brought to you by the same people who invented the wheel. Do you become frustrated when your small dog just can&apos;t keep up the pace, or stubbornly sits and gives up walking altogether? If the answer is yes, then The Lazy Dog is for you!\nAs easy to fit as a harness these remote controlled owl wings are a must have for any dog lover. As soon as your pooch has taken its last step of the day just snap the wings into place and click the red &apos;flapping&apos; button on your handheld remote. After a few seconds, your furry friend will be off the ground and up, up and away.\nOnce at a safe height, WARNING: BEWARE OF LOW HANGING BRANCHES, click the blue button to initiate cruise control. The wings have inbuilt cameras so you can see what your dog sees. When clicking the black button your dog can swoop down and gain speed in the &apos;fake chasing rabbits&apos; mode. This function is used at the owner&apos;s risk as it uses a lot of power, and if the battery pack dies a nasty accident could occur.\nCarrying your pooch has become a thing of the past. With The Lazy Dog, the dog park will become a place to enjoy again. You can also purchase an aviator hat and goggles, extra protection and peace of mind for you and your pooch.\n                        ": "",
    "\n                            Pets\n                            Pets\n                        ": "",
    "\n                            Lifestyle\n                            Lifestyle\n                        ": "",
    "\n                            Corporate gifts\n                            Corporate gifts\n                        ": "",
    "\n                            Accessories\n                            Accessories\n                        ": "",
    "\n                            Tech gifts\n                            Tech gifts\n                        ": "",
    "\n                            Lightbulb Moments\n                            Lightbulb Moments\n                        ": "",
    "\n                            Hitch A Lift\n                            Hitch A Lift\n                        ": "",
    "\n                            Folding Gadgets\n                            Folding Gadgets\n                        ": "",
    "\n                            The Lazy Dog\n                            The Lazy Dog\n                        ": "",
    "\n                            Cheshire Cat Grin\n                            Cheshire Cat Grin\n                        ": "",
    "\n                            All-in-One Typewriter\n                            All-in-One Typewriter\n                        ": "",
    "\n                            Pet Experience Days\n                            Pet Experience Days\n                        ": "",
    "\n                            Giant Pillow Thing\n                            Giant Pillow Thing\n                        ": "",
    "\n                            Grow Your Own Spy Kit\n                            Grow Your Own Spy Kit\n                        ": "",
    "\n                            Gym Suit\n                            Gym Suit\n                        ": "",
    "\n                            Photobomb Backdrops\n                            Photobomb Backdrops\n                        ": "",
    "\n                            Fur Babies\n                            Fur Babies\n                        ": "",
    "\n                            Balance Beams\n                            Balance Beams\n                        ": "",
    "\n                            ZZZZZZ Bed - Your New Home Office\n                            ZZZZZZ Bed - Your New Home Office\n                        ": "",
    "\n                            The Giant Enter Key\n                            The Giant Enter Key\n                        ": "",
    "\n                            BURP Protection\n                            BURP Protection\n                        ": "",
    "\n                            There is No &apos;I&apos; in Team\n                            There is No &apos;I&apos; in Team\n                        ": "",
    "\n                            Pest Control Umbrella\n                            Pest Control Umbrella\n                        ": "",
    "\n                            Six Pack Beer Belt\n                            Six Pack Beer Belt\n                        ": "",
    "\n                            Caution Sign\n                            Caution Sign\n                        ": "",
    "\n                            default administrative connection database\n                            default administrative connection database\n                        ": "",
    "\n                            default template for new databases\n                            default template for new databases\n                        ": "",
    "\n                            unmodifiable empty database\n                            unmodifiable empty database\n                        ": "",
    "\n                            c\n                            c\n                        ": "",
    "\n                            sql\n                            sql\n                        ": "",
    "\n                            internal\n                            internal\n                        ": "",
    "\n                            utf8_to_windows_1256\n                            utf8_to_windows_1256\n                        ": "",
    "\n                            utf8_to_windows_1253\n                            utf8_to_windows_1253\n                        ": "",
    "\n                            utf8_to_big5\n                            utf8_to_big5\n                        ": "",
    "\n                            iso_8859_2_to_mic\n                            iso_8859_2_to_mic\n                        ": "",
    "\n                            windows_1250_to_mic\n                            windows_1250_to_mic\n                        ": "",
    "\n                            utf8_to_windows_1250\n                            utf8_to_windows_1250\n                        ": "",
    "\n                            iso_8859_3_to_mic\n                            iso_8859_3_to_mic\n                        ": "",
    "\n                            iso_8859_1_to_utf8\n                            iso_8859_1_to_utf8\n                        ": "",
    "\n                            iso_8859_5_to_mic\n                            iso_8859_5_to_mic\n                        ": "",
    "\n                            utf8_to_iso_8859_16\n                            utf8_to_iso_8859_16\n                        ": "",
    "\n                            iso_8859_14_to_utf8\n                            iso_8859_14_to_utf8\n                        ": "",
    "\n                            windows_1251_to_iso_8859_5\n                            windows_1251_to_iso_8859_5\n                        ": "",
    "\n                            iso_8859_16_to_utf8\n                            iso_8859_16_to_utf8\n                        ": "",
    "\n                            iso_8859_4_to_utf8\n                            iso_8859_4_to_utf8\n                        ": "",
    "\n                            gb18030_to_utf8\n                            gb18030_to_utf8\n                        ": "",
    "\n                            iso_8859_13_to_utf8\n                            iso_8859_13_to_utf8\n                        ": "",
    "\n                            uhc_to_utf8\n                            uhc_to_utf8\n                        ": "",
    "\n                            iso_8859_10_to_utf8\n                            iso_8859_10_to_utf8\n                        ": "",
    "\n                            utf8_to_euc_jp\n                            utf8_to_euc_jp\n                        ": "",
    "\n                            utf8_to_iso_8859_2\n                            utf8_to_iso_8859_2\n                        ": "",
    "\n                            windows_1251_to_utf8\n                            windows_1251_to_utf8\n                        ": "",
    "\n                            windows_874_to_utf8\n                            windows_874_to_utf8\n                        ": "",
    "\n                            utf8_to_windows_1257\n                            utf8_to_windows_1257\n                        ": "",
    "\n                            mic_to_iso_8859_4\n                            mic_to_iso_8859_4\n                        ": "",
    "\n                            windows_1250_to_iso_8859_2\n                            windows_1250_to_iso_8859_2\n                        ": "",
    "\n                            mic_to_iso_8859_5\n                            mic_to_iso_8859_5\n                        ": "",
    "\n                            johab_to_utf8\n                            johab_to_utf8\n                        ": "",
    "\n                            euc_tw_to_utf8\n                            euc_tw_to_utf8\n                        ": "",
    "\n                            utf8_to_iso_8859_5\n                            utf8_to_iso_8859_5\n                        ": "",
    "\n                            utf8_to_windows_1258\n                            utf8_to_windows_1258\n                        ": "",
    "\n                            utf8_to_gb18030\n                            utf8_to_gb18030\n                        ": "",
    "\n                            windows_1252_to_utf8\n                            windows_1252_to_utf8\n                        ": "",
    "\n                            windows_1254_to_utf8\n                            windows_1254_to_utf8\n                        ": "",
    "\n                            windows_1250_to_utf8\n                            windows_1250_to_utf8\n                        ": "",
    "\n                            utf8_to_iso_8859_8\n                            utf8_to_iso_8859_8\n                        ": "",
    "\n                            ascii_to_mic\n                            ascii_to_mic\n                        ": "",
    "\n                            utf8_to_iso_8859_13\n                            utf8_to_iso_8859_13\n                        ": "",
    "\n                            mic_to_iso_8859_1\n                            mic_to_iso_8859_1\n                        ": "",
    "\n                            euc_jp_to_mic\n                            euc_jp_to_mic\n                        ": "",
    "\n                            utf8_to_uhc\n                            utf8_to_uhc\n                        ": "",
    "\n                            iso_8859_7_to_utf8\n                            iso_8859_7_to_utf8\n                        ": "",
    "\n                            windows_1253_to_utf8\n                            windows_1253_to_utf8\n                        ": "",
    "\n                            sjis_to_mic\n                            sjis_to_mic\n                        ": "",
    "\n                            windows_866_to_mic\n                            windows_866_to_mic\n                        ": "",
    "\n                            utf8_to_shift_jis_2004\n                            utf8_to_shift_jis_2004\n                        ": "",
    "\n                            utf8_to_windows_874\n                            utf8_to_windows_874\n                        ": "",
    "\n                            euc_jis_2004_to_utf8\n                            euc_jis_2004_to_utf8\n                        ": "",
    "\n                            utf8_to_iso_8859_14\n                            utf8_to_iso_8859_14\n                        ": "",
    "\n                            iso_8859_5_to_windows_1251\n                            iso_8859_5_to_windows_1251\n                        ": "",
    "\n                            utf8_to_sjis\n                            utf8_to_sjis\n                        ": "",
    "\n                            euc_jp_to_utf8\n                            euc_jp_to_utf8\n                        ": "",
    "\n                            windows_866_to_windows_1251\n                            windows_866_to_windows_1251\n                        ": "",
    "\n                            mic_to_euc_jp\n                            mic_to_euc_jp\n                        ": "",
    "\n                            utf8_to_koi8_r\n                            utf8_to_koi8_r\n                        ": "",
    "\n                            windows_866_to_koi8_r\n                            windows_866_to_koi8_r\n                        ": "",
    "\n                            windows_1258_to_utf8\n                            windows_1258_to_utf8\n                        ": "",
    "\n                            mic_to_big5\n                            mic_to_big5\n                        ": "",
    "\n                            mic_to_iso_8859_3\n                            mic_to_iso_8859_3\n                        ": "",
    "\n                            windows_866_to_iso_8859_5\n                            windows_866_to_iso_8859_5\n                        ": "",
    "\n                            utf8_to_euc_tw\n                            utf8_to_euc_tw\n                        ": "",
    "\n                            utf8_to_iso_8859_7\n                            utf8_to_iso_8859_7\n                        ": "",
    "\n                            shift_jis_2004_to_euc_jis_2004\n                            shift_jis_2004_to_euc_jis_2004\n                        ": "",
    "\n                            utf8_to_windows_1251\n                            utf8_to_windows_1251\n                        ": "",
    "\n                            utf8_to_euc_jis_2004\n                            utf8_to_euc_jis_2004\n                        ": "",
    "\n                            koi8_r_to_windows_1251\n                            koi8_r_to_windows_1251\n                        ": "",
    "\n                            utf8_to_iso_8859_6\n                            utf8_to_iso_8859_6\n                        ": "",
    "\n                            mic_to_koi8_r\n                            mic_to_koi8_r\n                        ": "",
    "\n                            big5_to_utf8\n                            big5_to_utf8\n                        ": "",
    "\n                            utf8_to_gbk\n                            utf8_to_gbk\n                        ": "",
    "\n                            euc_cn_to_utf8\n                            euc_cn_to_utf8\n                        ": "",
    "\n                            mic_to_windows_1251\n                            mic_to_windows_1251\n                        ": "",
    "\n                            windows_1251_to_windows_866\n                            windows_1251_to_windows_866\n                        ": "",
    "\n                            utf8_to_koi8_u\n                            utf8_to_koi8_u\n                        ": "",
    "\n                            koi8_u_to_utf8\n                            koi8_u_to_utf8\n                        ": "",
    "\n                            windows_866_to_utf8\n                            windows_866_to_utf8\n                        ": "",
    "\n                            iso_8859_4_to_mic\n                            iso_8859_4_to_mic\n                        ": "",
    "\n                            sjis_to_utf8\n                            sjis_to_utf8\n                        ": "",
    "\n                            utf8_to_iso_8859_3\n                            utf8_to_iso_8859_3\n                        ": "",
    "\n                            mic_to_windows_866\n                            mic_to_windows_866\n                        ": "",
    "\n                            iso_8859_3_to_utf8\n                            iso_8859_3_to_utf8\n                        ": "",
    "\n                            windows_1251_to_mic\n                            windows_1251_to_mic\n                        ": "",
    "\n                            utf8_to_iso_8859_9\n                            utf8_to_iso_8859_9\n                        ": "",
    "\n                            euc_cn_to_mic\n                            euc_cn_to_mic\n                        ": "",
    "\n                            koi8_r_to_windows_866\n                            koi8_r_to_windows_866\n                        ": "",
    "\n                            euc_tw_to_mic\n                            euc_tw_to_mic\n                        ": "",
    "\n                            windows_1251_to_koi8_r\n                            windows_1251_to_koi8_r\n                        ": "",
    "\n                            utf8_to_johab\n                            utf8_to_johab\n                        ": "",
    "\n                            koi8_r_to_utf8\n                            koi8_r_to_utf8\n                        ": "",
    "\n                            euc_jis_2004_to_shift_jis_2004\n                            euc_jis_2004_to_shift_jis_2004\n                        ": "",
    "\n                            iso_8859_8_to_utf8\n                            iso_8859_8_to_utf8\n                        ": "",
    "\n                            mic_to_iso_8859_2\n                            mic_to_iso_8859_2\n                        ": "",
    "\n                            utf8_to_iso_8859_10\n                            utf8_to_iso_8859_10\n                        ": "",
    "\n                            big5_to_mic\n                            big5_to_mic\n                        ": "",
    "\n                            utf8_to_windows_1255\n                            utf8_to_windows_1255\n                        ": "",
    "\n                            iso_8859_6_to_utf8\n                            iso_8859_6_to_utf8\n                        ": "",
    "\n                            iso_8859_5_to_utf8\n                            iso_8859_5_to_utf8\n                        ": "",
    "\n                            windows_1255_to_utf8\n                            windows_1255_to_utf8\n                        ": "",
    "\n                            windows_1257_to_utf8\n                            windows_1257_to_utf8\n                        ": "",
    "\n                            mic_to_euc_kr\n                            mic_to_euc_kr\n                        ": "",
    "\n                            utf8_to_windows_866\n                            utf8_to_windows_866\n                        ": "",
    "\n                            iso_8859_5_to_windows_866\n                            iso_8859_5_to_windows_866\n                        ": "",
    "\n                            euc_tw_to_big5\n                            euc_tw_to_big5\n                        ": "",
    "\n                            koi8_r_to_mic\n                            koi8_r_to_mic\n                        ": "",
    "\n                            shift_jis_2004_to_utf8\n                            shift_jis_2004_to_utf8\n                        ": "",
    "\n                            iso_8859_5_to_koi8_r\n                            iso_8859_5_to_koi8_r\n                        ": "",
    "\n                            iso_8859_9_to_utf8\n                            iso_8859_9_to_utf8\n                        ": "",
    "\n                            big5_to_euc_tw\n                            big5_to_euc_tw\n                        ": "",
    "\n                            euc_jp_to_sjis\n                            euc_jp_to_sjis\n                        ": "",
    "\n                            utf8_to_iso_8859_15\n                            utf8_to_iso_8859_15\n                        ": "",
    "\n                            utf8_to_iso_8859_4\n                            utf8_to_iso_8859_4\n                        ": "",
    "\n                            sjis_to_euc_jp\n                            sjis_to_euc_jp\n                        ": "",
    "\n                            gbk_to_utf8\n                            gbk_to_utf8\n                        ": "",
    "\n                            utf8_to_ascii\n                            utf8_to_ascii\n                        ": "",
    "\n                            utf8_to_windows_1252\n                            utf8_to_windows_1252\n                        ": "",
    "\n                            utf8_to_euc_kr\n                            utf8_to_euc_kr\n                        ": "",
    "\n                            euc_kr_to_utf8\n                            euc_kr_to_utf8\n                        ": "",
    "\n                            koi8_r_to_iso_8859_5\n                            koi8_r_to_iso_8859_5\n                        ": "",
    "\n                            windows_1256_to_utf8\n                            windows_1256_to_utf8\n                        ": "",
    "\n                            mic_to_euc_tw\n                            mic_to_euc_tw\n                        ": "",
    "\n                            mic_to_windows_1250\n                            mic_to_windows_1250\n                        ": "",
    "\n                            euc_kr_to_mic\n                            euc_kr_to_mic\n                        ": "",
    "\n                            mic_to_sjis\n                            mic_to_sjis\n                        ": "",
    "\n                            utf8_to_iso_8859_1\n                            utf8_to_iso_8859_1\n                        ": "",
    "\n                            utf8_to_euc_cn\n                            utf8_to_euc_cn\n                        ": "",
    "\n                            mic_to_ascii\n                            mic_to_ascii\n                        ": "",
    "\n                            mic_to_euc_cn\n                            mic_to_euc_cn\n                        ": "",
    "\n                            iso_8859_2_to_windows_1250\n                            iso_8859_2_to_windows_1250\n                        ": "",
    "\n                            iso_8859_2_to_utf8\n                            iso_8859_2_to_utf8\n                        ": "",
    "\n                            utf8_to_windows_1254\n                            utf8_to_windows_1254\n                        ": "",
    "\n                            iso_8859_1_to_mic\n                            iso_8859_1_to_mic\n                        ": "",
    "\n                            ascii_to_utf8\n                            ascii_to_utf8\n                        ": "",
    "\n                            iso_8859_15_to_utf8\n                            iso_8859_15_to_utf8\n                        ": "",
    "\n                            plpython_validator\n                            plpython_validator\n                        ": "",
    "\n                            plpgsql_validator\n                            plpgsql_validator\n                        ": "",
    "\n                            plpython2_validator\n                            plpython2_validator\n                        ": "",
    "\n                            plpython3_validator\n                            plpython3_validator\n                        ": "",
    "\n                            plperl_validator\n                            plperl_validator\n                        ": "",
    "\n                            plperlu_validator\n                            plperlu_validator\n                        ": "",
    "\n                            plpython2_inline_handler\n                            plpython2_inline_handler\n                        ": "",
    "\n                            plperl_inline_handler\n                            plperl_inline_handler\n                        ": "",
    "\n                            plpgsql_inline_handler\n                            plpgsql_inline_handler\n                        ": "",
    "\n                            plperlu_inline_handler\n                            plperlu_inline_handler\n                        ": "",
    "\n                            plpython_inline_handler\n                            plpython_inline_handler\n                        ": "",
    "\n                            plpython3_inline_handler\n                            plpython3_inline_handler\n                        ": "",
    "\n                            $libdir/plpython2\n                            $libdir/plpython2\n                        ": "",
    "\n                            $libdir/plperl\n                            $libdir/plperl\n                        ": "",
    "\n                            $libdir/plpgsql\n                            $libdir/plpgsql\n                        ": "",
    "\n                            $libdir/plpython3\n                            $libdir/plpython3\n                        ": "",
    "\n                            $libdir/pltcl\n                            $libdir/pltcl\n                        ": "",
    "\n                            plperlu\n                            plperlu\n                        ": "",
    "\n                            plpythonu\n                            plpythonu\n                        ": "",
    "\n                            plpython2u\n                            plpython2u\n                        ": "",
    "\n                            plpython3u\n                            plpython3u\n                        ": "",
    "\n                            pltcl\n                            pltcl\n                        ": "",
    "\n                            plperl\n                            plperl\n                        ": "",
    "\n                            pltclu\n                            pltclu\n                        ": "",
    "\n                            plperl_call_handler\n                            plperl_call_handler\n                        ": "",
    "\n                            pltcl_call_handler\n                            pltcl_call_handler\n                        ": "",
    "\n                            plpython_call_handler\n                            plpython_call_handler\n                        ": "",
    "\n                            plpython3_call_handler\n                            plpython3_call_handler\n                        ": "",
    "\n                            plpython2_call_handler\n                            plpython2_call_handler\n                        ": "",
    "\n                            plpgsql_call_handler\n                            plpgsql_call_handler\n                        ": "",
    "\n                            plperlu_call_handler\n                            plperlu_call_handler\n                        ": "",
    "\n                            pltclu_call_handler\n                            pltclu_call_handler\n                        ": "",
    "\n                            last_autovacuum\n                            last_autovacuum\n                        ": "",
    "\n                            relispopulated\n                            relispopulated\n                        ": "",
    "\n                            result_cast_as_locator\n                            result_cast_as_locator\n                        ": "",
    "\n                            ordering_routine_schema\n                            ordering_routine_schema\n                        ": "",
    "\n                            statistics_name\n                            statistics_name\n                        ": "",
    "\n                            srvversion\n                            srvversion\n                        ": "",
    "\n                            proname\n                            proname\n                        ": "",
    "\n                            opcowner\n                            opcowner\n                        ": "",
    "\n                            schema\n                            schema\n                        ": "",
    "\n                            member\n                            member\n                        ": "",
    "\n                            line_number\n                            line_number\n                        ": "",
    "\n                            routine_definition\n                            routine_definition\n                        ": "",
    "\n                            evtevent\n                            evtevent\n                        ": "",
    "\n                            tmplhandler\n                            tmplhandler\n                        ": "",
    "\n                            parameter_mode\n                            parameter_mode\n                        ": "",
    "\n                            inhparent\n                            inhparent\n                        ": "",
    "\n                            typdefault\n                            typdefault\n                        ": "",
    "\n                            backend_xid\n                            backend_xid\n                        ": "",
    "\n                            integer_value\n                            integer_value\n                        ": "",
    "\n                            amname\n                            amname\n                        ": "",
    "\n                            checkpoints_req\n                            checkpoints_req\n                        ": "",
    "\n                            is_trigger_deletable\n                            is_trigger_deletable\n                        ": "",
    "\n                            relnamespace\n                            relnamespace\n                        ": "",
    "\n                            condeferred\n                            condeferred\n                        ": "",
    "\n                            objnamespace\n                            objnamespace\n                        ": "",
    "\n                            last_failed_wal\n                            last_failed_wal\n                        ": "",
    "\n                            extrelocatable\n                            extrelocatable\n                        ": "",
    "\n                            comment\n                            comment\n                        ": "",
    "\n                            collctype\n                            collctype\n                        ": "",
    "\n                            amprocfamily\n                            amprocfamily\n                        ": "",
    "\n                            tgrelid\n                            tgrelid\n                        ": "",
    "\n                            trftosql\n                            trftosql\n                        ": "",
    "\n                            proargnames\n                            proargnames\n                        ": "",
    "\n                            is_trigger_updatable\n                            is_trigger_updatable\n                        ": "",
    "\n                            table_schema\n                            table_schema\n                        ": "",
    "\n                            constraint_catalog\n                            constraint_catalog\n                        ": "",
    "\n                            collencoding\n                            collencoding\n                        ": "",
    "\n                            boot_val\n                            boot_val\n                        ": "",
    "\n                            stanumbers2\n                            stanumbers2\n                        ": "",
    "\n                            checkpoint_write_time\n                            checkpoint_write_time\n                        ": "",
    "\n                            aggfinalextra\n                            aggfinalextra\n                        ": "",
    "\n                            aggserialfn\n                            aggserialfn\n                        ": "",
    "\n                            lanname\n                            lanname\n                        ": "",
    "\n                            local_id\n                            local_id\n                        ": "",
    "\n                            backend_type\n                            backend_type\n                        ": "",
    "\n                            cmd\n                            cmd\n                        ": "",
    "\n                            result_cast_numeric_scale\n                            result_cast_numeric_scale\n                        ": "",
    "\n                            passwd\n                            passwd\n                        ": "",
    "\n                            table_catalog\n                            table_catalog\n                        ": "",
    "\n                            toast_blks_read\n                            toast_blks_read\n                        ": "",
    "\n                            srvoptions\n                            srvoptions\n                        ": "",
    "\n                            objtype\n                            objtype\n                        ": "",
    "\n                            buffers_checkpoint\n                            buffers_checkpoint\n                        ": "",
    "\n                            last_value\n                            last_value\n                        ": "",
    "\n                            relacl\n                            relacl\n                        ": "",
    "\n                            database\n                            database\n                        ": "",
    "\n                            atthasmissing\n                            atthasmissing\n                        ": "",
    "\n                            domain_catalog\n                            domain_catalog\n                        ": "",
    "\n                            latest_end_time\n                            latest_end_time\n                        ": "",
    "\n                            staop2\n                            staop2\n                        ": "",
    "\n                            view_schema\n                            view_schema\n                        ": "",
    "\n                            extversion\n                            extversion\n                        ": "",
    "\n                            nspacl\n                            nspacl\n                        ": "",
    "\n                            identity_generation\n                            identity_generation\n                        ": "",
    "\n                            datetime_precision\n                            datetime_precision\n                        ": "",
    "\n                            datctype\n                            datctype\n                        ": "",
    "\n                            opfnamespace\n                            opfnamespace\n                        ": "",
    "\n                            is_updatable\n                            is_updatable\n                        ": "",
    "\n                            idx_scan\n                            idx_scan\n                        ": "",
    "\n                            castcontext\n                            castcontext\n                        ": "",
    "\n                            implementation_info_name\n                            implementation_info_name\n                        ": "",
    "\n                            lockers_total\n                            lockers_total\n                        ": "",
    "\n                            temp_bytes\n                            temp_bytes\n                        ": "",
    "\n                            n_tup_ins\n                            n_tup_ins\n                        ": "",
    "\n                            blocks_total\n                            blocks_total\n                        ": "",
    "\n                            mapdict\n                            mapdict\n                        ": "",
    "\n                            privtype\n                            privtype\n                        ": "",
    "\n                            encoding\n                            encoding\n                        ": "",
    "\n                            conninfo\n                            conninfo\n                        ": "",
    "\n                            dictname\n                            dictname\n                        ": "",
    "\n                            collation_name\n                            collation_name\n                        ": "",
    "\n                            fdwoptions\n                            fdwoptions\n                        ": "",
    "\n                            attfdwoptions\n                            attfdwoptions\n                        ": "",
    "\n                            opfowner\n                            opfowner\n                        ": "",
    "\n                            character_maximum_length\n                            character_maximum_length\n                        ": "",
    "\n                            catalog_name\n                            catalog_name\n                        ": "",
    "\n                            character_repertoire\n                            character_repertoire\n                        ": "",
    "\n                            pubname\n                            pubname\n                        ": "",
    "\n                            hasindexes\n                            hasindexes\n                        ": "",
    "\n                            external_name\n                            external_name\n                        ": "",
    "\n                            stavalues4\n                            stavalues4\n                        ": "",
    "\n                            attribute_udt_schema\n                            attribute_udt_schema\n                        ": "",
    "\n                            foreign_data_wrapper_language\n                            foreign_data_wrapper_language\n                        ": "",
    "\n                            is_instantiable\n                            is_instantiable\n                        ": "",
    "\n                            laninline\n                            laninline\n                        ": "",
    "\n                            ordering_routine_catalog\n                            ordering_routine_catalog\n                        ": "",
    "\n                            rngsubdiff\n                            rngsubdiff\n                        ": "",
    "\n                            attbyval\n                            attbyval\n                        ": "",
    "\n                            blks_hit\n                            blks_hit\n                        ": "",
    "\n                            umuser\n                            umuser\n                        ": "",
    "\n                            write_lag\n                            write_lag\n                        ": "",
    "\n                            source\n                            source\n                        ": "",
    "\n                            prslextype\n                            prslextype\n                        ": "",
    "\n                            type_udt_schema\n                            type_udt_schema\n                        ": "",
    "\n                            srsubid\n                            srsubid\n                        ": "",
    "\n                            sync_state\n                            sync_state\n                        ": "",
    "\n                            ev_enabled\n                            ev_enabled\n                        ": "",
    "\n                            xmax\n                            xmax\n                        ": "",
    "\n                            castfunc\n                            castfunc\n                        ": "",
    "\n                            indcollation\n                            indcollation\n                        ": "",
    "\n                            typarray\n                            typarray\n                        ": "",
    "\n                            last_analyze\n                            last_analyze\n                        ": "",
    "\n                            routine_schema\n                            routine_schema\n                        ": "",
    "\n                            spcowner\n                            spcowner\n                        ": "",
    "\n                            replay_lsn\n                            replay_lsn\n                        ": "",
    "\n                            heap_blks_vacuumed\n                            heap_blks_vacuumed\n                        ": "",
    "\n                            cmax\n                            cmax\n                        ": "",
    "\n                            result_cast_numeric_precision\n                            result_cast_numeric_precision\n                        ": "",
    "\n                            ftoptions\n                            ftoptions\n                        ": "",
    "\n                            slot_name\n                            slot_name\n                        ": "",
    "\n                            conflicts\n                            conflicts\n                        ": "",
    "\n                            seqcache\n                            seqcache\n                        ": "",
    "\n                            typcategory\n                            typcategory\n                        ": "",
    "\n                            oprright\n                            oprright\n                        ": "",
    "\n                            conbin\n                            conbin\n                        ": "",
    "\n                            aggkind\n                            aggkind\n                        ": "",
    "\n                            is_grantable\n                            is_grantable\n                        ": "",
    "\n                            condefault\n                            condefault\n                        ": "",
    "\n                            wait_event_type\n                            wait_event_type\n                        ": "",
    "\n                            tidx_blks_read\n                            tidx_blks_read\n                        ": "",
    "\n                            attislocal\n                            attislocal\n                        ": "",
    "\n                            min_val\n                            min_val\n                        ": "",
    "\n                            unique_constraint_name\n                            unique_constraint_name\n                        ": "",
    "\n                            enumsortorder\n                            enumsortorder\n                        ": "",
    "\n                            scope_catalog\n                            scope_catalog\n                        ": "",
    "\n                            event_object_table\n                            event_object_table\n                        ": "",
    "\n                            transaction\n                            transaction\n                        ": "",
    "\n                            aggtranstype\n                            aggtranstype\n                        ": "",
    "\n                            authorization_identifier\n                            authorization_identifier\n                        ": "",
    "\n                            result_cast_type_udt_catalog\n                            result_cast_type_udt_catalog\n                        ": "",
    "\n                            refobjid\n                            refobjid\n                        ": "",
    "\n                            archived_count\n                            archived_count\n                        ": "",
    "\n                            local_lsn\n                            local_lsn\n                        ": "",
    "\n                            setconfig\n                            setconfig\n                        ": "",
    "\n                            character_set_catalog\n                            character_set_catalog\n                        ": "",
    "\n                            opcname\n                            opcname\n                        ": "",
    "\n                            attstorage\n                            attstorage\n                        ": "",
    "\n                            srvacl\n                            srvacl\n                        ": "",
    "\n                            amopsortfamily\n                            amopsortfamily\n                        ": "",
    "\n                            sourceline\n                            sourceline\n                        ": "",
    "\n                            pubinsert\n                            pubinsert\n                        ": "",
    "\n                            cfgparser\n                            cfgparser\n                        ": "",
    "\n                            character_value\n                            character_value\n                        ": "",
    "\n                            mapseqno\n                            mapseqno\n                        ": "",
    "\n                            object_name\n                            object_name\n                        ": "",
    "\n                            rolname\n                            rolname\n                        ": "",
    "\n                            tablename\n                            tablename\n                        ": "",
    "\n                            external_id\n                            external_id\n                        ": "",
    "\n                            confupdtype\n                            confupdtype\n                        ": "",
    "\n                            buffers_alloc\n                            buffers_alloc\n                        ": "",
    "\n                            collname\n                            collname\n                        ": "",
    "\n                            indclass\n                            indclass\n                        ": "",
    "\n                            heap_blks_total\n                            heap_blks_total\n                        ": "",
    "\n                            last_msg_send_time\n                            last_msg_send_time\n                        ": "",
    "\n                            adnum\n                            adnum\n                        ": "",
    "\n                            reference_generation\n                            reference_generation\n                        ": "",
    "\n                            umserver\n                            umserver\n                        ": "",
    "\n                            is_dst\n                            is_dst\n                        ": "",
    "\n                            checkpoint_sync_time\n                            checkpoint_sync_time\n                        ": "",
    "\n                            foreign_table_catalog\n                            foreign_table_catalog\n                        ": "",
    "\n                            trigger_name\n                            trigger_name\n                        ": "",
    "\n                            cache_size\n                            cache_size\n                        ": "",
    "\n                            tmplinit\n                            tmplinit\n                        ": "",
    "\n                            state_change\n                            state_change\n                        ": "",
    "\n                            tginitdeferred\n                            tginitdeferred\n                        ": "",
    "\n                            seqtypid\n                            seqtypid\n                        ": "",
    "\n                            stacoll2\n                            stacoll2\n                        ": "",
    "\n                            sequence_schema\n                            sequence_schema\n                        ": "",
    "\n                            indexrelname\n                            indexrelname\n                        ": "",
    "\n                            sql_data_access\n                            sql_data_access\n                        ": "",
    "\n                            attnotnull\n                            attnotnull\n                        ": "",
    "\n                            typisdefined\n                            typisdefined\n                        ": "",
    "\n                            relhasindex\n                            relhasindex\n                        ": "",
    "\n                            provolatile\n                            provolatile\n                        ": "",
    "\n                            relminmxid\n                            relminmxid\n                        ": "",
    "\n                            most_common_freqs\n                            most_common_freqs\n                        ": "",
    "\n                            gss_authenticated\n                            gss_authenticated\n                        ": "",
    "\n                            attgenerated\n                            attgenerated\n                        ": "",
    "\n                            relam\n                            relam\n                        ": "",
    "\n                            constraint_type\n                            constraint_type\n                        ": "",
    "\n                            confkey\n                            confkey\n                        ": "",
    "\n                            principal\n                            principal\n                        ": "",
    "\n                            backend_start\n                            backend_start\n                        ": "",
    "\n                            sequence_name\n                            sequence_name\n                        ": "",
    "\n                            amtype\n                            amtype\n                        ": "",
    "\n                            domain_default\n                            domain_default\n                        ": "",
    "\n                            restart_lsn\n                            restart_lsn\n                        ": "",
    "\n                            stanumbers5\n                            stanumbers5\n                        ": "",
    "\n                            heap_blks_hit\n                            heap_blks_hit\n                        ": "",
    "\n                            self_referencing_column_name\n                            self_referencing_column_name\n                        ": "",
    "\n                            ftserver\n                            ftserver\n                        ": "",
    "\n                            relispartition\n                            relispartition\n                        ": "",
    "\n                            reltype\n                            reltype\n                        ": "",
    "\n                            name\n                            name\n                        ": "",
    "\n                            dtd_identifier\n                            dtd_identifier\n                        ": "",
    "\n                            action_reference_old_table\n                            action_reference_old_table\n                        ": "",
    "\n                            srvid\n                            srvid\n                        ": "",
    "\n                            indoption\n                            indoption\n                        ": "",
    "\n                            last_altered\n                            last_altered\n                        ": "",
    "\n                            ev_action\n                            ev_action\n                        ": "",
    "\n                            stavalues2\n                            stavalues2\n                        ": "",
    "\n                            fastpath\n                            fastpath\n                        ": "",
    "\n                            result_cast_scope_schema\n                            result_cast_scope_schema\n                        ": "",
    "\n                            short_desc\n                            short_desc\n                        ": "",
    "\n                            phase\n                            phase\n                        ": "",
    "\n                            subsynccommit\n                            subsynccommit\n                        ": "",
    "\n                            relid\n                            relid\n                        ": "",
    "\n                            relrowsecurity\n                            relrowsecurity\n                        ": "",
    "\n                            data_type\n                            data_type\n                        ": "",
    "\n                            relfilenode\n                            relfilenode\n                        ": "",
    "\n                            interval_type\n                            interval_type\n                        ": "",
    "\n                            staop4\n                            staop4\n                        ": "",
    "\n                            attcacheoff\n                            attcacheoff\n                        ": "",
    "\n                            seqmin\n                            seqmin\n                        ": "",
    "\n                            comments\n                            comments\n                        ": "",
    "\n                            typlen\n                            typlen\n                        ": "",
    "\n                            typndims\n                            typndims\n                        ": "",
    "\n                            lanpltrusted\n                            lanpltrusted\n                        ": "",
    "\n                            relrewrite\n                            relrewrite\n                        ": "",
    "\n                            atthasdef\n                            atthasdef\n                        ": "",
    "\n                            is_deterministic\n                            is_deterministic\n                        ": "",
    "\n                            domain_name\n                            domain_name\n                        ": "",
    "\n                            type_udt_catalog\n                            type_udt_catalog\n                        ": "",
    "\n                            constraint_name\n                            constraint_name\n                        ": "",
    "\n                            numeric_precision_radix\n                            numeric_precision_radix\n                        ": "",
    "\n                            cmin\n                            cmin\n                        ": "",
    "\n                            action_condition\n                            action_condition\n                        ": "",
    "\n                            pronargdefaults\n                            pronargdefaults\n                        ": "",
    "\n                            collection_type_identifier\n                            collection_type_identifier\n                        ": "",
    "\n                            relreplident\n                            relreplident\n                        ": "",
    "\n                            typnotnull\n                            typnotnull\n                        ": "",
    "\n                            seqincrement\n                            seqincrement\n                        ": "",
    "\n                            aggminvtransfn\n                            aggminvtransfn\n                        ": "",
    "\n                            amopfamily\n                            amopfamily\n                        ": "",
    "\n                            attribute_default\n                            attribute_default\n                        ": "",
    "\n                            issuer_dn\n                            issuer_dn\n                        ": "",
    "\n                            subdbid\n                            subdbid\n                        ": "",
    "\n                            address\n                            address\n                        ": "",
    "\n                            aggcombinefn\n                            aggcombinefn\n                        ": "",
    "\n                            typmodin\n                            typmodin\n                        ": "",
    "\n                            lanacl\n                            lanacl\n                        ": "",
    "\n                            external_language\n                            external_language\n                        ": "",
    "\n                            most_common_elem_freqs\n                            most_common_elem_freqs\n                        ": "",
    "\n                            options\n                            options\n                        ": "",
    "\n                            ispopulated\n                            ispopulated\n                        ": "",
    "\n                            receive_start_lsn\n                            receive_start_lsn\n                        ": "",
    "\n                            polpermissive\n                            polpermissive\n                        ": "",
    "\n                            num_dead_tuples\n                            num_dead_tuples\n                        ": "",
    "\n                            relowner\n                            relowner\n                        ": "",
    "\n                            foreign_table_schema\n                            foreign_table_schema\n                        ": "",
    "\n                            tuples_total\n                            tuples_total\n                        ": "",
    "\n                            trftype\n                            trftype\n                        ": "",
    "\n                            tableowner\n                            tableowner\n                        ": "",
    "\n                            abbrev\n                            abbrev\n                        ": "",
    "\n                            objsubid\n                            objsubid\n                        ": "",
    "\n                            funcname\n                            funcname\n                        ": "",
    "\n                            relnatts\n                            relnatts\n                        ": "",
    "\n                            stawidth\n                            stawidth\n                        ": "",
    "\n                            sql_language_programming_language\n                            sql_language_programming_language\n                        ": "",
    "\n                            xact_rollback\n                            xact_rollback\n                        ": "",
    "\n                            reloptions\n                            reloptions\n                        ": "",
    "\n                            rngcanonical\n                            rngcanonical\n                        ": "",
    "\n                            owner\n                            owner\n                        ": "",
    "\n                            sizing_name\n                            sizing_name\n                        ": "",
    "\n                            atttypmod\n                            atttypmod\n                        ": "",
    "\n                            castsource\n                            castsource\n                        ": "",
    "\n                            delete_rule\n                            delete_rule\n                        ": "",
    "\n                            reply_time\n                            reply_time\n                        ": "",
    "\n                            inhrelid\n                            inhrelid\n                        ": "",
    "\n                            specific_name\n                            specific_name\n                        ": "",
    "\n                            id\n                            id\n                        ": "",
    "\n                            proargtypes\n                            proargtypes\n                        ": "",
    "\n                            tup_updated\n                            tup_updated\n                        ": "",
    "\n                            seq_tup_read\n                            seq_tup_read\n                        ": "",
    "\n                            active_pid\n                            active_pid\n                        ": "",
    "\n                            constraint_schema\n                            constraint_schema\n                        ": "",
    "\n                            pronargs\n                            pronargs\n                        ": "",
    "\n                            useconfig\n                            useconfig\n                        ": "",
    "\n                            prepare_time\n                            prepare_time\n                        ": "",
    "\n                            new_savepoint_level\n                            new_savepoint_level\n                        ": "",
    "\n                            umid\n                            umid\n                        ": "",
    "\n                            partitions_total\n                            partitions_total\n                        ": "",
    "\n                            prolang\n                            prolang\n                        ": "",
    "\n                            as_locator\n                            as_locator\n                        ": "",
    "\n                            stxddependencies\n                            stxddependencies\n                        ": "",
    "\n                            library_name\n                            library_name\n                        ": "",
    "\n                            toast_blks_hit\n                            toast_blks_hit\n                        ": "",
    "\n                            seqrelid\n                            seqrelid\n                        ": "",
    "\n                            default_character_set_catalog\n                            default_character_set_catalog\n                        ": "",
    "\n                            routine_body\n                            routine_body\n                        ": "",
    "\n                            atttypid\n                            atttypid\n                        ": "",
    "\n                            datoid\n                            datoid\n                        ": "",
    "\n                            amproclefttype\n                            amproclefttype\n                        ": "",
    "\n                            attmissingval\n                            attmissingval\n                        ": "",
    "\n                            initprivs\n                            initprivs\n                        ": "",
    "\n                            amoprighttype\n                            amoprighttype\n                        ": "",
    "\n                            numeric_precision\n                            numeric_precision\n                        ": "",
    "\n                            buffers_clean\n                            buffers_clean\n                        ": "",
    "\n                            proowner\n                            proowner\n                        ": "",
    "\n                            typreceive\n                            typreceive\n                        ": "",
    "\n                            loid\n                            loid\n                        ": "",
    "\n                            ordering_routine_name\n                            ordering_routine_name\n                        ": "",
    "\n                            defaclacl\n                            defaclacl\n                        ": "",
    "\n                            ev_type\n                            ev_type\n                        ": "",
    "\n                            bits\n                            bits\n                        ": "",
    "\n                            opcintype\n                            opcintype\n                        ": "",
    "\n                            oprkind\n                            oprkind\n                        ": "",
    "\n                            lockers_done\n                            lockers_done\n                        ": "",
    "\n                            stxoid\n                            stxoid\n                        ": "",
    "\n                            indisreplident\n                            indisreplident\n                        ": "",
    "\n                            result_cast_collation_catalog\n                            result_cast_collation_catalog\n                        ": "",
    "\n                            refobjsubid\n                            refobjsubid\n                        ": "",
    "\n                            stadistinct\n                            stadistinct\n                        ": "",
    "\n                            wait_event\n                            wait_event\n                        ": "",
    "\n                            last_vacuum\n                            last_vacuum\n                        ": "",
    "\n                            stacoll4\n                            stacoll4\n                        ": "",
    "\n                            setting\n                            setting\n                        ": "",
    "\n                            cluster_index_relid\n                            cluster_index_relid\n                        ": "",
    "\n                            subowner\n                            subowner\n                        ": "",
    "\n                            proretset\n                            proretset\n                        ": "",
    "\n                            aggfinalmodify\n                            aggfinalmodify\n                        ": "",
    "\n                            client_port\n                            client_port\n                        ": "",
    "\n                            most_common_vals\n                            most_common_vals\n                        ": "",
    "\n                            most_common_base_freqs\n                            most_common_base_freqs\n                        ": "",
    "\n                            heap_blks_scanned\n                            heap_blks_scanned\n                        ": "",
    "\n                            cfgnamespace\n                            cfgnamespace\n                        ": "",
    "\n                            subslotname\n                            subslotname\n                        ": "",
    "\n                            password_txblci\n                            password_txblci\n                        ": "",
    "\n                            user_defined_type_name\n                            user_defined_type_name\n                        ": "",
    "\n                            srvtype\n                            srvtype\n                        ": "",
    "\n                            proconfig\n                            proconfig\n                        ": "",
    "\n                            typispreferred\n                            typispreferred\n                        ": "",
    "\n                            attrelid\n                            attrelid\n                        ": "",
    "\n                            proacl\n                            proacl\n                        ": "",
    "\n                            object_schema\n                            object_schema\n                        ": "",
    "\n                            unit\n                            unit\n                        ": "",
    "\n                            maximum_cardinality\n                            maximum_cardinality\n                        ": "",
    "\n                            grolist\n                            grolist\n                        ": "",
    "\n                            client_hostname\n                            client_hostname\n                        ": "",
    "\n                            correlation\n                            correlation\n                        ": "",
    "\n                            identity_maximum\n                            identity_maximum\n                        ": "",
    "\n                            tup_fetched\n                            tup_fetched\n                        ": "",
    "\n                            stakind1\n                            stakind1\n                        ": "",
    "\n                            table_name\n                            table_name\n                        ": "",
    "\n                            rngtypid\n                            rngtypid\n                        ": "",
    "\n                            histogram_bounds\n                            histogram_bounds\n                        ": "",
    "\n                            amopstrategy\n                            amopstrategy\n                        ": "",
    "\n                            lanvalidator\n                            lanvalidator\n                        ": "",
    "\n                            stxrelid\n                            stxrelid\n                        ": "",
    "\n                            security_type\n                            security_type\n                        ": "",
    "\n                            confl_deadlock\n                            confl_deadlock\n                        ": "",
    "\n                            typacl\n                            typacl\n                        ": "",
    "\n                            received_lsn\n                            received_lsn\n                        ": "",
    "\n                            chunk_data\n                            chunk_data\n                        ": "",
    "\n                            command\n                            command\n                        ": "",
    "\n                            routine_catalog\n                            routine_catalog\n                        ": "",
    "\n                            action_statement\n                            action_statement\n                        ": "",
    "\n                            evttags\n                            evttags\n                        ": "",
    "\n                            deptype\n                            deptype\n                        ": "",
    "\n                            index_rebuild_count\n                            index_rebuild_count\n                        ": "",
    "\n                            initially_deferred\n                            initially_deferred\n                        ": "",
    "\n                            admin_option\n                            admin_option\n                        ": "",
    "\n                            aggdeserialfn\n                            aggdeserialfn\n                        ": "",
    "\n                            increment_by\n                            increment_by\n                        ": "",
    "\n                            oprjoin\n                            oprjoin\n                        ": "",
    "\n                            unique_constraint_schema\n                            unique_constraint_schema\n                        ": "",
    "\n                            idx_blks_hit\n                            idx_blks_hit\n                        ": "",
    "\n                            agginitval\n                            agginitval\n                        ": "",
    "\n                            action_order\n                            action_order\n                        ": "",
    "\n                            oprnamespace\n                            oprnamespace\n                        ": "",
    "\n                            pronamespace\n                            pronamespace\n                        ": "",
    "\n                            type\n                            type\n                        ": "",
    "\n                            datfrozenxid\n                            datfrozenxid\n                        ": "",
    "\n                            conforencoding\n                            conforencoding\n                        ": "",
    "\n                            adrelid\n                            adrelid\n                        ": "",
    "\n                            tmplname\n                            tmplname\n                        ": "",
    "\n                            confl_bufferpin\n                            confl_bufferpin\n                        ": "",
    "\n                            auth_method\n                            auth_method\n                        ": "",
    "\n                            most_common_val_nulls\n                            most_common_val_nulls\n                        ": "",
    "\n                            fdwhandler\n                            fdwhandler\n                        ": "",
    "\n                            to_sql_specific_catalog\n                            to_sql_specific_catalog\n                        ": "",
    "\n                            extra_desc\n                            extra_desc\n                        ": "",
    "\n                            aggtransfn\n                            aggtransfn\n                        ": "",
    "\n                            spcname\n                            spcname\n                        ": "",
    "\n                            installed_version\n                            installed_version\n                        ": "",
    "\n                            collisdeterministic\n                            collisdeterministic\n                        ": "",
    "\n                            cfgowner\n                            cfgowner\n                        ": "",
    "\n                            stanumbers4\n                            stanumbers4\n                        ": "",
    "\n                            indexrelid\n                            indexrelid\n                        ": "",
    "\n                            datconnlimit\n                            datconnlimit\n                        ": "",
    "\n                            lanispl\n                            lanispl\n                        ": "",
    "\n                            staattnum\n                            staattnum\n                        ": "",
    "\n                            prstoken\n                            prstoken\n                        ": "",
    "\n                            relkind\n                            relkind\n                        ": "",
    "\n                            dicttemplate\n                            dicttemplate\n                        ": "",
    "\n                            staop3\n                            staop3\n                        ": "",
    "\n                            max_dead_tuples\n                            max_dead_tuples\n                        ": "",
    "\n                            oprcode\n                            oprcode\n                        ": "",
    "\n                            cfgname\n                            cfgname\n                        ": "",
    "\n                            usename\n                            usename\n                        ": "",
    "\n                            extname\n                            extname\n                        ": "",
    "\n                            module_schema\n                            module_schema\n                        ": "",
    "\n                            minimum_value\n                            minimum_value\n                        ": "",
    "\n                            datminmxid\n                            datminmxid\n                        ": "",
    "\n                            prsnamespace\n                            prsnamespace\n                        ": "",
    "\n                            stacoll1\n                            stacoll1\n                        ": "",
    "\n                            confdeltype\n                            confdeltype\n                        ": "",
    "\n                            tableoid\n                            tableoid\n                        ": "",
    "\n                            catalog_xmin\n                            catalog_xmin\n                        ": "",
    "\n                            is_typed\n                            is_typed\n                        ": "",
    "\n                            schemaname\n                            schemaname\n                        ": "",
    "\n                            subid\n                            subid\n                        ": "",
    "\n                            attlen\n                            attlen\n                        ": "",
    "\n                            last_autoanalyze\n                            last_autoanalyze\n                        ": "",
    "\n                            viewowner\n                            viewowner\n                        ": "",
    "\n                            sequenceowner\n                            sequenceowner\n                        ": "",
    "\n                            refclassid\n                            refclassid\n                        ": "",
    "\n                            attribute_udt_catalog\n                            attribute_udt_catalog\n                        ": "",
    "\n                            indpred\n                            indpred\n                        ": "",
    "\n                            hasrules\n                            hasrules\n                        ": "",
    "\n                            foreign_data_wrapper_name\n                            foreign_data_wrapper_name\n                        ": "",
    "\n                            latest_end_lsn\n                            latest_end_lsn\n                        ": "",
    "\n                            application_name\n                            application_name\n                        ": "",
    "\n                            status\n                            status\n                        ": "",
    "\n                            opcdefault\n                            opcdefault\n                        ": "",
    "\n                            is_insertable_into\n                            is_insertable_into\n                        ": "",
    "\n                            amprocrighttype\n                            amprocrighttype\n                        ": "",
    "\n                            option_value\n                            option_value\n                        ": "",
    "\n                            foreign_server_name\n                            foreign_server_name\n                        ": "",
    "\n                            objid\n                            objid\n                        ": "",
    "\n                            vartype\n                            vartype\n                        ": "",
    "\n                            typdelim\n                            typdelim\n                        ": "",
    "\n                            aggsortop\n                            aggsortop\n                        ": "",
    "\n                            object_catalog\n                            object_catalog\n                        ": "",
    "\n                            prorettype\n                            prorettype\n                        ": "",
    "\n                            tgnewtable\n                            tgnewtable\n                        ": "",
    "\n                            inhseqno\n                            inhseqno\n                        ": "",
    "\n                            attnum\n                            attnum\n                        ": "",
    "\n                            lomowner\n                            lomowner\n                        ": "",
    "\n                            is_trigger_insertable_into\n                            is_trigger_insertable_into\n                        ": "",
    "\n                            enforced\n                            enforced\n                        ": "",
    "\n                            proargmodes\n                            proargmodes\n                        ": "",
    "\n                            polrelid\n                            polrelid\n                        ": "",
    "\n                            stakind3\n                            stakind3\n                        ": "",
    "\n                            calls\n                            calls\n                        ": "",
    "\n                            form_of_use\n                            form_of_use\n                        ": "",
    "\n                            staop1\n                            staop1\n                        ": "",
    "\n                            statement\n                            statement\n                        ": "",
    "\n                            tgconstrrelid\n                            tgconstrrelid\n                        ": "",
    "\n                            tmpltrusted\n                            tmpltrusted\n                        ": "",
    "\n                            pageno\n                            pageno\n                        ": "",
    "\n                            oprcanmerge\n                            oprcanmerge\n                        ": "",
    "\n                            compression\n                            compression\n                        ": "",
    "\n                            query_start\n                            query_start\n                        ": "",
    "\n                            is_nullable\n                            is_nullable\n                        ": "",
    "\n                            buffers_backend_fsync\n                            buffers_backend_fsync\n                        ": "",
    "\n                            sql_language_source\n                            sql_language_source\n                        ": "",
    "\n                            xmin\n                            xmin\n                        ": "",
    "\n                            dictnamespace\n                            dictnamespace\n                        ": "",
    "\n                            foreign_data_wrapper_catalog\n                            foreign_data_wrapper_catalog\n                        ": "",
    "\n                            is_instead\n                            is_instead\n                        ": "",
    "\n                            result_cast_type_udt_schema\n                            result_cast_type_udt_schema\n                        ": "",
    "\n                            conffeqop\n                            conffeqop\n                        ": "",
    "\n                            roname\n                            roname\n                        ": "",
    "\n                            blks_read\n                            blks_read\n                        ": "",
    "\n                            routine_name\n                            routine_name\n                        ": "",
    "\n                            feature_id\n                            feature_id\n                        ": "",
    "\n                            castmethod\n                            castmethod\n                        ": "",
    "\n                            stanullfrac\n                            stanullfrac\n                        ": "",
    "\n                            prsname\n                            prsname\n                        ": "",
    "\n                            self_time\n                            self_time\n                        ": "",
    "\n                            stxdmcv\n                            stxdmcv\n                        ": "",
    "\n                            numbackends\n                            numbackends\n                        ": "",
    "\n                            seqcycle\n                            seqcycle\n                        ": "",
    "\n                            proallargtypes\n                            proallargtypes\n                        ": "",
    "\n                            userepl\n                            userepl\n                        ": "",
    "\n                            aggmfinalfn\n                            aggmfinalfn\n                        ": "",
    "\n                            typname\n                            typname\n                        ": "",
    "\n                            typowner\n                            typowner\n                        ": "",
    "\n                            proargdefaults\n                            proargdefaults\n                        ": "",
    "\n                            character_set_schema\n                            character_set_schema\n                        ": "",
    "\n                            chunk_id\n                            chunk_id\n                        ": "",
    "\n                            aggnumdirectargs\n                            aggnumdirectargs\n                        ": "",
    "\n                            generation_expression\n                            generation_expression\n                        ": "",
    "\n                            aggmfinalextra\n                            aggmfinalextra\n                        ": "",
    "\n                            aggtransspace\n                            aggtransspace\n                        ": "",
    "\n                            n_mod_since_analyze\n                            n_mod_since_analyze\n                        ": "",
    "\n                            typstorage\n                            typstorage\n                        ": "",
    "\n                            provider\n                            provider\n                        ": "",
    "\n                            nspname\n                            nspname\n                        ": "",
    "\n                            index_relid\n                            index_relid\n                        ": "",
    "\n                            partclass\n                            partclass\n                        ": "",
    "\n                            partitions_done\n                            partitions_done\n                        ": "",
    "\n                            prpubid\n                            prpubid\n                        ": "",
    "\n                            relpartbound\n                            relpartbound\n                        ": "",
    "\n                            relfrozenxid\n                            relfrozenxid\n                        ": "",
    "\n                            oprresult\n                            oprresult\n                        ": "",
    "\n                            max_val\n                            max_val\n                        ": "",
    "\n                            aggmtranstype\n                            aggmtranstype\n                        ": "",
    "\n                            module_name\n                            module_name\n                        ": "",
    "\n                            action_orientation\n                            action_orientation\n                        ": "",
    "\n                            conppeqop\n                            conppeqop\n                        ": "",
    "\n                            inherited\n                            inherited\n                        ": "",
    "\n                            rolcreatedb\n                            rolcreatedb\n                        ": "",
    "\n                            relpersistence\n                            relpersistence\n                        ": "",
    "\n                            tgqual\n                            tgqual\n                        ": "",
    "\n                            ref_dtd_identifier\n                            ref_dtd_identifier\n                        ": "",
    "\n                            user_defined_type_category\n                            user_defined_type_category\n                        ": "",
    "\n                            indisprimary\n                            indisprimary\n                        ": "",
    "\n                            relhastriggers\n                            relhastriggers\n                        ": "",
    "\n                            tmpllibrary\n                            tmpllibrary\n                        ": "",
    "\n                            matviewowner\n                            matviewowner\n                        ": "",
    "\n                            rolcanlogin\n                            rolcanlogin\n                        ": "",
    "\n                            last_msg_receipt_time\n                            last_msg_receipt_time\n                        ": "",
    "\n                            defaclobjtype\n                            defaclobjtype\n                        ": "",
    "\n                            match_option\n                            match_option\n                        ": "",
    "\n                            stavalues3\n                            stavalues3\n                        ": "",
    "\n                            stxnamespace\n                            stxnamespace\n                        ": "",
    "\n                            vacuum_count\n                            vacuum_count\n                        ": "",
    "\n                            umoptions\n                            umoptions\n                        ": "",
    "\n                            released\n                            released\n                        ": "",
    "\n                            action_reference_new_row\n                            action_reference_new_row\n                        ": "",
    "\n                            rowsecurity\n                            rowsecurity\n                        ": "",
    "\n                            attnames\n                            attnames\n                        ": "",
    "\n                            cycle\n                            cycle\n                        ": "",
    "\n                            reltoastrelid\n                            reltoastrelid\n                        ": "",
    "\n                            required_value\n                            required_value\n                        ": "",
    "\n                            roles\n                            roles\n                        ": "",
    "\n                            confl_lock\n                            confl_lock\n                        ": "",
    "\n                            cycle_option\n                            cycle_option\n                        ": "",
    "\n                            relhasrules\n                            relhasrules\n                        ": "",
    "\n                            result_cast_from_data_type\n                            result_cast_from_data_type\n                        ": "",
    "\n                            rngcollation\n                            rngcollation\n                        ": "",
    "\n                            interval_precision\n                            interval_precision\n                        ": "",
    "\n                            client_dn\n                            client_dn\n                        ": "",
    "\n                            is_identity\n                            is_identity\n                        ": "",
    "\n                            datallowconn\n                            datallowconn\n                        ": "",
    "\n                            max_dynamic_result_sets\n                            max_dynamic_result_sets\n                        ": "",
    "\n                            confmatchtype\n                            confmatchtype\n                        ": "",
    "\n                            fdwname\n                            fdwname\n                        ": "",
    "\n                            classid\n                            classid\n                        ": "",
    "\n                            tmplinline\n                            tmplinline\n                        ": "",
    "\n                            rating\n                            rating\n                        ": "",
    "\n                            coninhcount\n                            coninhcount\n                        ": "",
    "\n                            sql_language_year\n                            sql_language_year\n                        ": "",
    "\n                            amhandler\n                            amhandler\n                        ": "",
    "\n                            attstattarget\n                            attstattarget\n                        ": "",
    "\n                            netmask\n                            netmask\n                        ": "",
    "\n                            defaclnamespace\n                            defaclnamespace\n                        ": "",
    "\n                            is_scrollable\n                            is_scrollable\n                        ": "",
    "\n                            subenabled\n                            subenabled\n                        ": "",
    "\n                            object_type\n                            object_type\n                        ": "",
    "\n                            xact_start\n                            xact_start\n                        ": "",
    "\n                            data\n                            data\n                        ": "",
    "\n                            oprowner\n                            oprowner\n                        ": "",
    "\n                            schema_name\n                            schema_name\n                        ": "",
    "\n                            is_null_call\n                            is_null_call\n                        ": "",
    "\n                            typmodout\n                            typmodout\n                        ": "",
    "\n                            identity_minimum\n                            identity_minimum\n                        ": "",
    "\n                            stavalues1\n                            stavalues1\n                        ": "",
    "\n                            trffromsql\n                            trffromsql\n                        ": "",
    "\n                            srsublsn\n                            srsublsn\n                        ": "",
    "\n                            srsubstate\n                            srsubstate\n                        ": "",
    "\n                            tmplvalidator\n                            tmplvalidator\n                        ": "",
    "\n                            confl_tablespace\n                            confl_tablespace\n                        ": "",
    "\n                            typsend\n                            typsend\n                        ": "",
    "\n                            pubtruncate\n                            pubtruncate\n                        ": "",
    "\n                            rolvaliduntil\n                            rolvaliduntil\n                        ": "",
    "\n                            tgname\n                            tgname\n                        ": "",
    "\n                            evtname\n                            evtname\n                        ": "",
    "\n                            encrypted\n                            encrypted\n                        ": "",
    "\n                            replay_lag\n                            replay_lag\n                        ": "",
    "\n                            extowner\n                            extowner\n                        ": "",
    "\n                            state\n                            state\n                        ": "",
    "\n                            pubowner\n                            pubowner\n                        ": "",
    "\n                            polname\n                            polname\n                        ": "",
    "\n                            plugin\n                            plugin\n                        ": "",
    "\n                            action_reference_new_table\n                            action_reference_new_table\n                        ": "",
    "\n                            autoanalyze_count\n                            autoanalyze_count\n                        ": "",
    "\n                            privilege_type\n                            privilege_type\n                        ": "",
    "\n                            enumvals\n                            enumvals\n                        ": "",
    "\n                            conislocal\n                            conislocal\n                        ": "",
    "\n                            subname\n                            subname\n                        ": "",
    "\n                            spcacl\n                            spcacl\n                        ": "",
    "\n                            requires\n                            requires\n                        ": "",
    "\n                            typalign\n                            typalign\n                        ": "",
    "\n                            reloftype\n                            reloftype\n                        ": "",
    "\n                            default_character_set_schema\n                            default_character_set_schema\n                        ": "",
    "\n                            nspowner\n                            nspowner\n                        ": "",
    "\n                            opfmethod\n                            opfmethod\n                        ": "",
    "\n                            created\n                            created\n                        ": "",
    "\n                            conkey\n                            conkey\n                        ": "",
    "\n                            parameter_style\n                            parameter_style\n                        ": "",
    "\n                            policyname\n                            policyname\n                        ": "",
    "\n                            last_archived_wal\n                            last_archived_wal\n                        ": "",
    "\n                            tup_inserted\n                            tup_inserted\n                        ": "",
    "\n                            foreign_table_name\n                            foreign_table_name\n                        ": "",
    "\n                            chunk_seq\n                            chunk_seq\n                        ": "",
    "\n                            pubupdate\n                            pubupdate\n                        ": "",
    "\n                            setdatabase\n                            setdatabase\n                        ": "",
    "\n                            oprrest\n                            oprrest\n                        ": "",
    "\n                            profile_id\n                            profile_id\n                        ": "",
    "\n                            result_cast_numeric_precision_radix\n                            result_cast_numeric_precision_radix\n                        ": "",
    "\n                            sequence_catalog\n                            sequence_catalog\n                        ": "",
    "\n                            blk_write_time\n                            blk_write_time\n                        ": "",
    "\n                            result_cast_scope_name\n                            result_cast_scope_name\n                        ": "",
    "\n                            heap_tuples_written\n                            heap_tuples_written\n                        ": "",
    "\n                            autovacuum_count\n                            autovacuum_count\n                        ": "",
    "\n                            price\n                            price\n                        ": "",
    "\n                            protrftypes\n                            protrftypes\n                        ": "",
    "\n                            classoid\n                            classoid\n                        ": "",
    "\n                            source_dtd_identifier\n                            source_dtd_identifier\n                        ": "",
    "\n                            datcollate\n                            datcollate\n                        ": "",
    "\n                            result_cast_char_set_schema\n                            result_cast_char_set_schema\n                        ": "",
    "\n                            staop5\n                            staop5\n                        ": "",
    "\n                            datid\n                            datid\n                        ": "",
    "\n                            option_name\n                            option_name\n                        ": "",
    "\n                            attname\n                            attname\n                        ": "",
    "\n                            typbyval\n                            typbyval\n                        ": "",
    "\n                            context\n                            context\n                        ": "",
    "\n                            datistemplate\n                            datistemplate\n                        ": "",
    "\n                            datlastsysoid\n                            datlastsysoid\n                        ": "",
    "\n                            is_derived_reference_attribute\n                            is_derived_reference_attribute\n                        ": "",
    "\n                            indkey\n                            indkey\n                        ": "",
    "\n                            most_common_elems\n                            most_common_elems\n                        ": "",
    "\n                            stxdndistinct\n                            stxdndistinct\n                        ": "",
    "\n                            module_catalog\n                            module_catalog\n                        ": "",
    "\n                            oprcanhash\n                            oprcanhash\n                        ": "",
    "\n                            gid\n                            gid\n                        ": "",
    "\n                            indisexclusion\n                            indisexclusion\n                        ": "",
    "\n                            is_verified_by\n                            is_verified_by\n                        ": "",
    "\n                            typnamespace\n                            typnamespace\n                        ": "",
    "\n                            rolpassword\n                            rolpassword\n                        ": "",
    "\n                            polroles\n                            polroles\n                        ": "",
    "\n                            superuser\n                            superuser\n                        ": "",
    "\n                            tmplacl\n                            tmplacl\n                        ": "",
    "\n                            parameter_default\n                            parameter_default\n                        ": "",
    "\n                            typdefaultbin\n                            typdefaultbin\n                        ": "",
    "\n                            position_in_unique_constraint\n                            position_in_unique_constraint\n                        ": "",
    "\n                            amopopr\n                            amopopr\n                        ": "",
    "\n                            failed_count\n                            failed_count\n                        ": "",
    "\n                            result_cast_char_max_length\n                            result_cast_char_max_length\n                        ": "",
    "\n                            is_result\n                            is_result\n                        ": "",
    "\n                            evtowner\n                            evtowner\n                        ": "",
    "\n                            rolreplication\n                            rolreplication\n                        ": "",
    "\n                            dependencies\n                            dependencies\n                        ": "",
    "\n                            ordinal_position\n                            ordinal_position\n                        ": "",
    "\n                            tgfoid\n                            tgfoid\n                        ": "",
    "\n                            current_locker_pid\n                            current_locker_pid\n                        ": "",
    "\n                            n_distinct\n                            n_distinct\n                        ": "",
    "\n                            tmpldbacreate\n                            tmpldbacreate\n                        ": "",
    "\n                            grantor\n                            grantor\n                        ": "",
    "\n                            typrelid\n                            typrelid\n                        ": "",
    "\n                            tgisinternal\n                            tgisinternal\n                        ": "",
    "\n                            indisready\n                            indisready\n                        ": "",
    "\n                            role_name\n                            role_name\n                        ": "",
    "\n                            grantee\n                            grantee\n                        ": "",
    "\n                            amopmethod\n                            amopmethod\n                        ": "",
    "\n                            usecreatedb\n                            usecreatedb\n                        ": "",
    "\n                            idx_tup_fetch\n                            idx_tup_fetch\n                        ": "",
    "\n                            definition\n                            definition\n                        ": "",
    "\n                            spcoptions\n                            spcoptions\n                        ": "",
    "\n                            relhassubclass\n                            relhassubclass\n                        ": "",
    "\n                            ev_qual\n                            ev_qual\n                        ": "",
    "\n                            collprovider\n                            collprovider\n                        ": "",
    "\n                            srvname\n                            srvname\n                        ": "",
    "\n                            rolconfig\n                            rolconfig\n                        ": "",
    "\n                            proparallel\n                            proparallel\n                        ": "",
    "\n                            stavalues5\n                            stavalues5\n                        ": "",
    "\n                            virtualxid\n                            virtualxid\n                        ": "",
    "\n                            aggmfinalmodify\n                            aggmfinalmodify\n                        ": "",
    "\n                            oprcom\n                            oprcom\n                        ": "",
    "\n                            connoinherit\n                            connoinherit\n                        ": "",
    "\n                            view_name\n                            view_name\n                        ": "",
    "\n                            fdwacl\n                            fdwacl\n                        ": "",
    "\n                            foreign_server_type\n                            foreign_server_type\n                        ": "",
    "\n                            total_time\n                            total_time\n                        ": "",
    "\n                            implementation_info_id\n                            implementation_info_id\n                        ": "",
    "\n                            applied\n                            applied\n                        ": "",
    "\n                            conproc\n                            conproc\n                        ": "",
    "\n                            sent_lsn\n                            sent_lsn\n                        ": "",
    "\n                            conrelid\n                            conrelid\n                        ": "",
    "\n                            heap_blks_read\n                            heap_blks_read\n                        ": "",
    "\n                            oprnegate\n                            oprnegate\n                        ": "",
    "\n                            temp_files\n                            temp_files\n                        ": "",
    "\n                            fdwowner\n                            fdwowner\n                        ": "",
    "\n                            amprocnum\n                            amprocnum\n                        ": "",
    "\n                            result_cast_type_udt_name\n                            result_cast_type_udt_name\n                        ": "",
    "\n                            result_cast_scope_catalog\n                            result_cast_scope_catalog\n                        ": "",
    "\n                            tmplnamespace\n                            tmplnamespace\n                        ": "",
    "\n                            default_collate_name\n                            default_collate_name\n                        ": "",
    "\n                            qual\n                            qual\n                        ": "",
    "\n                            schema_level_routine\n                            schema_level_routine\n                        ": "",
    "\n                            result_cast_char_set_catalog\n                            result_cast_char_set_catalog\n                        ": "",
    "\n                            is_deferrable\n                            is_deferrable\n                        ": "",
    "\n                            setrole\n                            setrole\n                        ": "",
    "\n                            maximum_value\n                            maximum_value\n                        ": "",
    "\n                            transactionid\n                            transactionid\n                        ": "",
    "\n                            max_value\n                            max_value\n                        ": "",
    "\n                            xact_commit\n                            xact_commit\n                        ": "",
    "\n                            indexprs\n                            indexprs\n                        ": "",
    "\n                            opckeytype\n                            opckeytype\n                        ": "",
    "\n                            sub_feature_name\n                            sub_feature_name\n                        ": "",
    "\n                            prokind\n                            prokind\n                        ": "",
    "\n                            collation_catalog\n                            collation_catalog\n                        ": "",
    "\n                            min_value\n                            min_value\n                        ": "",
    "\n                            stats_reset\n                            stats_reset\n                        ": "",
    "\n                            opcfamily\n                            opcfamily\n                        ": "",
    "\n                            enumtypid\n                            enumtypid\n                        ": "",
    "\n                            n_live_tup\n                            n_live_tup\n                        ": "",
    "\n                            stanumbers1\n                            stanumbers1\n                        ": "",
    "\n                            column_name\n                            column_name\n                        ": "",
    "\n                            indcheckxmin\n                            indcheckxmin\n                        ": "",
    "\n                            attndims\n                            attndims\n                        ": "",
    "\n                            trigger_catalog\n                            trigger_catalog\n                        ": "",
    "\n                            buffers_backend\n                            buffers_backend\n                        ": "",
    "\n                            sourcefile\n                            sourcefile\n                        ": "",
    "\n                            adbin\n                            adbin\n                        ": "",
    "\n                            attribute_name\n                            attribute_name\n                        ": "",
    "\n                            reference_type\n                            reference_type\n                        ": "",
    "\n                            statistics_owner\n                            statistics_owner\n                        ": "",
    "\n                            udt_name\n                            udt_name\n                        ": "",
    "\n                            stxowner\n                            stxowner\n                        ": "",
    "\n                            client_serial\n                            client_serial\n                        ": "",
    "\n                            aggminitval\n                            aggminitval\n                        ": "",
    "\n                            oid\n                            oid\n                        ": "",
    "\n                            roident\n                            roident\n                        ": "",
    "\n                            seq_scan\n                            seq_scan\n                        ": "",
    "\n                            typanalyze\n                            typanalyze\n                        ": "",
    "\n                            polqual\n                            polqual\n                        ": "",
    "\n                            stakind4\n                            stakind4\n                        ": "",
    "\n                            aggfnoid\n                            aggfnoid\n                        ": "",
    "\n                            datname\n                            datname\n                        ": "",
    "\n                            ev_class\n                            ev_class\n                        ": "",
    "\n                            typelem\n                            typelem\n                        ": "",
    "\n                            typinput\n                            typinput\n                        ": "",
    "\n                            rolsuper\n                            rolsuper\n                        ": "",
    "\n                            n_dead_tup\n                            n_dead_tup\n                        ": "",
    "\n                            conname\n                            conname\n                        ": "",
    "\n                            view_catalog\n                            view_catalog\n                        ": "",
    "\n                            udt_catalog\n                            udt_catalog\n                        ": "",
    "\n                            datacl\n                            datacl\n                        ": "",
    "\n                            relchecks\n                            relchecks\n                        ": "",
    "\n                            virtualtransaction\n                            virtualtransaction\n                        ": "",
    "\n                            stxname\n                            stxname\n                        ": "",
    "\n                            oprleft\n                            oprleft\n                        ": "",
    "\n                            identity_start\n                            identity_start\n                        ": "",
    "\n                            tgdeferrable\n                            tgdeferrable\n                        ": "",
    "\n                            aggfinalfn\n                            aggfinalfn\n                        ": "",
    "\n                            username_gphaga\n                            username_gphaga\n                        ": "",
    "\n                            n_tup_upd\n                            n_tup_upd\n                        ": "",
    "\n                            is_holdable\n                            is_holdable\n                        ": "",
    "\n                            ftrelid\n                            ftrelid\n                        ": "",
    "\n                            hastriggers\n                            hastriggers\n                        ": "",
    "\n                            connamespace\n                            connamespace\n                        ": "",
    "\n                            conexclop\n                            conexclop\n                        ": "",
    "\n                            received_tli\n                            received_tli\n                        ": "",
    "\n                            extnamespace\n                            extnamespace\n                        ": "",
    "\n                            casttarget\n                            casttarget\n                        ": "",
    "\n                            tuples_done\n                            tuples_done\n                        ": "",
    "\n                            error\n                            error\n                        ": "",
    "\n                            sender_port\n                            sender_port\n                        ": "",
    "\n                            prosecdef\n                            prosecdef\n                        ": "",
    "\n                            relisshared\n                            relisshared\n                        ": "",
    "\n                            default_collate_catalog\n                            default_collate_catalog\n                        ": "",
    "\n                            usesysid\n                            usesysid\n                        ": "",
    "\n                            fdwvalidator\n                            fdwvalidator\n                        ": "",
    "\n                            idx_blks_read\n                            idx_blks_read\n                        ": "",
    "\n                            stainherit\n                            stainherit\n                        ": "",
    "\n                            result_cast_collation_schema\n                            result_cast_collation_schema\n                        ": "",
    "\n                            maxwritten_clean\n                            maxwritten_clean\n                        ": "",
    "\n                            prepared\n                            prepared\n                        ": "",
    "\n                            result_cast_interval_precision\n                            result_cast_interval_precision\n                        ": "",
    "\n                            indrelid\n                            indrelid\n                        ": "",
    "\n                            provariadic\n                            provariadic\n                        ": "",
    "\n                            sql_language_binding_style\n                            sql_language_binding_style\n                        ": "",
    "\n                            usebypassrls\n                            usebypassrls\n                        ": "",
    "\n                            attinhcount\n                            attinhcount\n                        ": "",
    "\n                            funcid\n                            funcid\n                        ": "",
    "\n                            event_object_catalog\n                            event_object_catalog\n                        ": "",
    "\n                            result_cast_interval_type\n                            result_cast_interval_type\n                        ": "",
    "\n                            conindid\n                            conindid\n                        ": "",
    "\n                            creation_time\n                            creation_time\n                        ": "",
    "\n                            collversion\n                            collversion\n                        ": "",
    "\n                            collowner\n                            collowner\n                        ": "",
    "\n                            starelid\n                            starelid\n                        ": "",
    "\n                            confl_snapshot\n                            confl_snapshot\n                        ": "",
    "\n                            index_vacuum_count\n                            index_vacuum_count\n                        ": "",
    "\n                            ordering_category\n                            ordering_category\n                        ": "",
    "\n                            stacoll5\n                            stacoll5\n                        ": "",
    "\n                            relpages\n                            relpages\n                        ": "",
    "\n                            sql_language_integrity\n                            sql_language_integrity\n                        ": "",
    "\n                            dictinitoption\n                            dictinitoption\n                        ": "",
    "\n                            condeferrable\n                            condeferrable\n                        ": "",
    "\n                            flush_lag\n                            flush_lag\n                        ": "",
    "\n                            attacl\n                            attacl\n                        ": "",
    "\n                            elem_count_histogram\n                            elem_count_histogram\n                        ": "",
    "\n                            probin\n                            probin\n                        ": "",
    "\n                            polwithcheck\n                            polwithcheck\n                        ": "",
    "\n                            pubdelete\n                            pubdelete\n                        ": "",
    "\n                            feature_name\n                            feature_name\n                        ": "",
    "\n                            collation_schema\n                            collation_schema\n                        ": "",
    "\n                            sql_language_implementation\n                            sql_language_implementation\n                        ": "",
    "\n                            seqstart\n                            seqstart\n                        ": "",
    "\n                            attcollation\n                            attcollation\n                        ": "",
    "\n                            tgconstrindid\n                            tgconstrindid\n                        ": "",
    "\n                            specific_schema\n                            specific_schema\n                        ": "",
    "\n                            seqno\n                            seqno\n                        ": "",
    "\n                            convalidated\n                            convalidated\n                        ": "",
    "\n                            specific_catalog\n                            specific_catalog\n                        ": "",
    "\n                            extcondition\n                            extcondition\n                        ": "",
    "\n                            client_addr\n                            client_addr\n                        ": "",
    "\n                            transform_type\n                            transform_type\n                        ": "",
    "\n                            is_final\n                            is_final\n                        ": "",
    "\n                            amoppurpose\n                            amoppurpose\n                        ": "",
    "\n                            start_value\n                            start_value\n                        ": "",
    "\n                            partexprs\n                            partexprs\n                        ": "",
    "\n                            relocatable\n                            relocatable\n                        ": "",
    "\n                            is_binary\n                            is_binary\n                        ": "",
    "\n                            parameter_name\n                            parameter_name\n                        ": "",
    "\n                            indisunique\n                            indisunique\n                        ": "",
    "\n                            viewname\n                            viewname\n                        ": "",
    "\n                            lanplcallfoid\n                            lanplcallfoid\n                        ": "",
    "\n                            srvowner\n                            srvowner\n                        ": "",
    "\n                            ordering_form\n                            ordering_form\n                        ": "",
    "\n                            roleid\n                            roleid\n                        ": "",
    "\n                            objoid\n                            objoid\n                        ": "",
    "\n                            user_defined_type_schema\n                            user_defined_type_schema\n                        ": "",
    "\n                            backend_xmin\n                            backend_xmin\n                        ": "",
    "\n                            cipher\n                            cipher\n                        ": "",
    "\n                            type_udt_name\n                            type_udt_name\n                        ": "",
    "\n                            permissive\n                            permissive\n                        ": "",
    "\n                            label\n                            label\n                        ": "",
    "\n                            groname\n                            groname\n                        ": "",
    "\n                            contoencoding\n                            contoencoding\n                        ": "",
    "\n                            relforcerowsecurity\n                            relforcerowsecurity\n                        ": "",
    "\n                            polcmd\n                            polcmd\n                        ": "",
    "\n                            is_generated\n                            is_generated\n                        ": "",
    "\n                            objname\n                            objname\n                        ": "",
    "\n                            n_tup_del\n                            n_tup_del\n                        ": "",
    "\n                            tgconstraint\n                            tgconstraint\n                        ": "",
    "\n                            tgoldtable\n                            tgoldtable\n                        ": "",
    "\n                            action_timing\n                            action_timing\n                        ": "",
    "\n                            result_cast_maximum_cardinality\n                            result_cast_maximum_cardinality\n                        ": "",
    "\n                            result_cast_char_octet_length\n                            result_cast_char_octet_length\n                        ": "",
    "\n                            collcollate\n                            collcollate\n                        ": "",
    "\n                            tgnargs\n                            tgnargs\n                        ": "",
    "\n                            scope_name\n                            scope_name\n                        ": "",
    "\n                            trflang\n                            trflang\n                        ": "",
    "\n                            foreign_server_catalog\n                            foreign_server_catalog\n                        ": "",
    "\n                            image\n                            image\n                        ": "",
    "\n                            action_reference_old_row\n                            action_reference_old_row\n                        ": "",
    "\n                            opfname\n                            opfname\n                        ": "",
    "\n                            numeric_scale\n                            numeric_scale\n                        ": "",
    "\n                            sql_path\n                            sql_path\n                        ": "",
    "\n                            is_udt_dependent\n                            is_udt_dependent\n                        ": "",
    "\n                            result_cast_collation_name\n                            result_cast_collation_name\n                        ": "",
    "\n                            pid\n                            pid\n                        ": "",
    "\n                            parameter_types\n                            parameter_types\n                        ": "",
    "\n                            event_object_schema\n                            event_object_schema\n                        ": "",
    "\n                            sequencename\n                            sequencename\n                        ": "",
    "\n                            indexdef\n                            indexdef\n                        ": "",
    "\n                            tablespace\n                            tablespace\n                        ": "",
    "\n                            typtype\n                            typtype\n                        ": "",
    "\n                            schema_owner\n                            schema_owner\n                        ": "",
    "\n                            domain_schema\n                            domain_schema\n                        ": "",
    "\n                            conparentid\n                            conparentid\n                        ": "",
    "\n                            lanowner\n                            lanowner\n                        ": "",
    "\n                            evtenabled\n                            evtenabled\n                        ": "",
    "\n                            indimmediate\n                            indimmediate\n                        ": "",
    "\n                            stxkeys\n                            stxkeys\n                        ": "",
    "\n                            to_sql_specific_name\n                            to_sql_specific_name\n                        ": "",
    "\n                            installed\n                            installed\n                        ": "",
    "\n                            prosrc\n                            prosrc\n                        ": "",
    "\n                            relallvisible\n                            relallvisible\n                        ": "",
    "\n                            page\n                            page\n                        ": "",
    "\n                            commit_action\n                            commit_action\n                        ": "",
    "\n                            ssl\n                            ssl\n                        ": "",
    "\n                            usesuper\n                            usesuper\n                        ": "",
    "\n                            indislive\n                            indislive\n                        ": "",
    "\n                            locktype\n                            locktype\n                        ": "",
    "\n                            heap_tuples_scanned\n                            heap_tuples_scanned\n                        ": "",
    "\n                            rngsubtype\n                            rngsubtype\n                        ": "",
    "\n                            check_option\n                            check_option\n                        ": "",
    "\n                            relname\n                            relname\n                        ": "",
    "\n                            ctid\n                            ctid\n                        ": "",
    "\n                            rolconnlimit\n                            rolconnlimit\n                        ": "",
    "\n                            identity_cycle\n                            identity_cycle\n                        ": "",
    "\n                            with_check\n                            with_check\n                        ": "",
    "\n                            prorows\n                            prorows\n                        ": "",
    "\n                            enumlabel\n                            enumlabel\n                        ": "",
    "\n                            check_clause\n                            check_clause\n                        ": "",
    "\n                            is_user_defined_cast\n                            is_user_defined_cast\n                        ": "",
    "\n                            last_archived_time\n                            last_archived_time\n                        ": "",
    "\n                            blk_read_time\n                            blk_read_time\n                        ": "",
    "\n                            query\n                            query\n                        ": "",
    "\n                            tgattr\n                            tgattr\n                        ": "",
    "\n                            result_cast_dtd_identifier\n                            result_cast_dtd_identifier\n                        ": "",
    "\n                            rolcreaterole\n                            rolcreaterole\n                        ": "",
    "\n                            stakind2\n                            stakind2\n                        ": "",
    "\n                            grosysid\n                            grosysid\n                        ": "",
    "\n                            default_version\n                            default_version\n                        ": "",
    "\n                            event_object_column\n                            event_object_column\n                        ": "",
    "\n                            flush_lsn\n                            flush_lsn\n                        ": "",
    "\n                            granted\n                            granted\n                        ": "",
    "\n                            tuple\n                            tuple\n                        ": "",
    "\n                            pending_restart\n                            pending_restart\n                        ": "",
    "\n                            relation\n                            relation\n                        ": "",
    "\n                            description\n                            description\n                        ": "",
    "\n                            table_type\n                            table_type\n                        ": "",
    "\n                            typcollation\n                            typcollation\n                        ": "",
    "\n                            tup_deleted\n                            tup_deleted\n                        ": "",
    "\n                            prosupport\n                            prosupport\n                        ": "",
    "\n                            user_name\n                            user_name\n                        ": "",
    "\n                            attoptions\n                            attoptions\n                        ": "",
    "\n                            proisstrict\n                            proisstrict\n                        ": "",
    "\n                            prsheadline\n                            prsheadline\n                        ": "",
    "\n                            typbasetype\n                            typbasetype\n                        ": "",
    "\n                            default_character_set_name\n                            default_character_set_name\n                        ": "",
    "\n                            idx_tup_read\n                            idx_tup_read\n                        ": "",
    "\n                            unique_constraint_catalog\n                            unique_constraint_catalog\n                        ": "",
    "\n                            statistics_schemaname\n                            statistics_schemaname\n                        ": "",
    "\n                            typtypmod\n                            typtypmod\n                        ": "",
    "\n                            blocks_done\n                            blocks_done\n                        ": "",
    "\n                            last_failed_time\n                            last_failed_time\n                        ": "",
    "\n                            confirmed_flush_lsn\n                            confirmed_flush_lsn\n                        ": "",
    "\n                            puballtables\n                            puballtables\n                        ": "",
    "\n                            is_supported\n                            is_supported\n                        ": "",
    "\n                            deadlocks\n                            deadlocks\n                        ": "",
    "\n                            aggmtransfn\n                            aggmtransfn\n                        ": "",
    "\n                            srvfdw\n                            srvfdw\n                        ": "",
    "\n                            foreign_server_version\n                            foreign_server_version\n                        ": "",
    "\n                            rngsubopc\n                            rngsubopc\n                        ": "",
    "\n                            supported_value\n                            supported_value\n                        ": "",
    "\n                            checksum_failures\n                            checksum_failures\n                        ": "",
    "\n                            partattrs\n                            partattrs\n                        ": "",
    "\n                            evtfoid\n                            evtfoid\n                        ": "",
    "\n                            dictowner\n                            dictowner\n                        ": "",
    "\n                            rulename\n                            rulename\n                        ": "",
    "\n                            contype\n                            contype\n                        ": "",
    "\n                            dattablespace\n                            dattablespace\n                        ": "",
    "\n                            slot_type\n                            slot_type\n                        ": "",
    "\n                            remote_lsn\n                            remote_lsn\n                        ": "",
    "\n                            sender_host\n                            sender_host\n                        ": "",
    "\n                            version\n                            version\n                        ": "",
    "\n                            character_set_name\n                            character_set_name\n                        ": "",
    "\n                            tmpllexize\n                            tmpllexize\n                        ": "",
    "\n                            amproc\n                            amproc\n                        ": "",
    "\n                            from_sql\n                            from_sql\n                        ": "",
    "\n                            reltuples\n                            reltuples\n                        ": "",
    "\n                            indnatts\n                            indnatts\n                        ": "",
    "\n                            character_octet_length\n                            character_octet_length\n                        ": "",
    "\n                            tgenabled\n                            tgenabled\n                        ": "",
    "\n                            stanumbers3\n                            stanumbers3\n                        ": "",
    "\n                            opcmethod\n                            opcmethod\n                        ": "",
    "\n                            dependent_column\n                            dependent_column\n                        ": "",
    "\n                            oprname\n                            oprname\n                        ": "",
    "\n                            reltablespace\n                            reltablespace\n                        ": "",
    "\n                            attidentity\n                            attidentity\n                        ": "",
    "\n                            update_rule\n                            update_rule\n                        ": "",
    "\n                            extconfig\n                            extconfig\n                        ": "",
    "\n                            n_tup_hot_upd\n                            n_tup_hot_upd\n                        ": "",
    "\n                            increment\n                            increment\n                        ": "",
    "\n                            defaclrole\n                            defaclrole\n                        ": "",
    "\n                            attalign\n                            attalign\n                        ": "",
    "\n                            subpublications\n                            subpublications\n                        ": "",
    "\n                            partstrat\n                            partstrat\n                        ": "",
    "\n                            partrelid\n                            partrelid\n                        ": "",
    "\n                            prsstart\n                            prsstart\n                        ": "",
    "\n                            view_definition\n                            view_definition\n                        ": "",
    "\n                            subconninfo\n                            subconninfo\n                        ": "",
    "\n                            indisvalid\n                            indisvalid\n                        ": "",
    "\n                            matviewname\n                            matviewname\n                        ": "",
    "\n                            prrelid\n                            prrelid\n                        ": "",
    "\n                            result_cast_datetime_precision\n                            result_cast_datetime_precision\n                        ": "",
    "\n                            indnkeyatts\n                            indnkeyatts\n                        ": "",
    "\n                            default_collate_schema\n                            default_collate_schema\n                        ": "",
    "\n                            avg_width\n                            avg_width\n                        ": "",
    "\n                            group_name\n                            group_name\n                        ": "",
    "\n                            is_implicitly_invocable\n                            is_implicitly_invocable\n                        ": "",
    "\n                            attisdropped\n                            attisdropped\n                        ": "",
    "\n                            seqmax\n                            seqmax\n                        ": "",
    "\n                            contypid\n                            contypid\n                        ": "",
    "\n                            checkpoints_timed\n                            checkpoints_timed\n                        ": "",
    "\n                            stxkind\n                            stxkind\n                        ": "",
    "\n                            pad_attribute\n                            pad_attribute\n                        ": "",
    "\n                            receive_start_tli\n                            receive_start_tli\n                        ": "",
    "\n                            maptokentype\n                            maptokentype\n                        ": "",
    "\n                            is_self_referencing\n                            is_self_referencing\n                        ": "",
    "\n                            mapcfg\n                            mapcfg\n                        ": "",
    "\n                            column_default\n                            column_default\n                        ": "",
    "\n                            identity_increment\n                            identity_increment\n                        ": "",
    "\n                            aggmtransspace\n                            aggmtransspace\n                        ": "",
    "\n                            trigger_schema\n                            trigger_schema\n                        ": "",
    "\n                            scope_schema\n                            scope_schema\n                        ": "",
    "\n                            user_defined_type_catalog\n                            user_defined_type_catalog\n                        ": "",
    "\n                            indexname\n                            indexname\n                        ": "",
    "\n                            sub_feature_id\n                            sub_feature_id\n                        ": "",
    "\n                            mode\n                            mode\n                        ": "",
    "\n                            tgargs\n                            tgargs\n                        ": "",
    "\n                            udt_schema\n                            udt_schema\n                        ": "",
    "\n                            confrelid\n                            confrelid\n                        ": "",
    "\n                            opcnamespace\n                            opcnamespace\n                        ": "",
    "\n                            sizing_id\n                            sizing_id\n                        ": "",
    "\n                            rolinherit\n                            rolinherit\n                        ": "",
    "\n                            tgtype\n                            tgtype\n                        ": "",
    "\n                            category\n                            category\n                        ": "",
    "\n                            analyze_count\n                            analyze_count\n                        ": "",
    "\n                            kinds\n                            kinds\n                        ": "",
    "\n                            tup_returned\n                            tup_returned\n                        ": "",
    "\n                            temporary\n                            temporary\n                        ": "",
    "\n                            datdba\n                            datdba\n                        ": "",
    "\n                            checksum_last_failure\n                            checksum_last_failure\n                        ": "",
    "\n                            routine_type\n                            routine_type\n                        ": "",
    "\n                            tidx_blks_hit\n                            tidx_blks_hit\n                        ": "",
    "\n                            srrelid\n                            srrelid\n                        ": "",
    "\n                            result_cast_char_set_name\n                            result_cast_char_set_name\n                        ": "",
    "\n                            sync_priority\n                            sync_priority\n                        ": "",
    "\n                            write_lsn\n                            write_lsn\n                        ": "",
    "\n                            rolbypassrls\n                            rolbypassrls\n                        ": "",
    "\n                            amoplefttype\n                            amoplefttype\n                        ": "",
    "\n                            lomacl\n                            lomacl\n                        ": "",
    "\n                            attribute_udt_name\n                            attribute_udt_name\n                        ": "",
    "\n                            collnamespace\n                            collnamespace\n                        ": "",
    "\n                            conowner\n                            conowner\n                        ": "",
    "\n                            reset_val\n                            reset_val\n                        ": "",
    "\n                            to_sql_specific_schema\n                            to_sql_specific_schema\n                        ": "",
    "\n                            stakind5\n                            stakind5\n                        ": "",
    "\n                            partnatts\n                            partnatts\n                        ": "",
    "\n                            prsend\n                            prsend\n                        ": "",
    "\n                            null_frac\n                            null_frac\n                        ": "",
    "\n                            indisclustered\n                            indisclustered\n                        ": "",
    "\n                            event_manipulation\n                            event_manipulation\n                        ": "",
    "\n                            with_hierarchy\n                            with_hierarchy\n                        ": "",
    "\n                            partdefid\n                            partdefid\n                        ": "",
    "\n                            typoutput\n                            typoutput\n                        ": "",
    "\n                            partcollation\n                            partcollation\n                        ": "",
    "\n                            conpfeqop\n                            conpfeqop\n                        ": "",
    "\n                            valuntil\n                            valuntil\n                        ": "",
    "\n                            utc_offset\n                            utc_offset\n                        ": "",
    "\n                            dbid\n                            dbid\n                        ": "",
    "\n                            proleakproof\n                            proleakproof\n                        ": "",
    "\n                            procost\n                            procost\n                        ": "",
    "\n                            sql_language_conformance\n                            sql_language_conformance\n                        ": "",
    "\n                            stacoll3\n                            stacoll3\n                        ": "",
    "\n                            ExclusiveLock\n                            ExclusiveLock\n                        ": "",
    "\n                            AccessShareLock\n                            AccessShareLock\n                        ": "",
    "\n                            3/3312\n                            3/3312\n                        ": "",
    "\n                            3/3316\n                            3/3316\n                        ": "",
    "\n                            &gt;=\n                            &gt;=\n                        ": "",
    "\n                            -&gt;&gt;\n                            -&gt;&gt;\n                        ": "",
    "\n                            &gt;&gt;\n                            &gt;&gt;\n                        ": "",
    "\n                            &gt;^\n                            &gt;^\n                        ": "",
    "\n                            &lt;\n                            &lt;\n                        ": "",
    "\n                            &lt;&lt;=\n                            &lt;&lt;=\n                        ": "",
    "\n                            *\n                            *\n                        ": "",
    "\n                            &lt;&lt;|\n                            &lt;&lt;|\n                        ": "",
    "\n                            *&gt;\n                            *&gt;\n                        ": "",
    "\n                            !~~\n                            !~~\n                        ": "",
    "\n                            #&gt;&gt;\n                            #&gt;&gt;\n                        ": "",
    "\n                            /\n                            /\n                        ": "",
    "\n                            -|-\n                            -|-\n                        ": "",
    "\n                            ?-|\n                            ?-|\n                        ": "",
    "\n                            ?&amp;\n                            ?&amp;\n                        ": "",
    "\n                            ~=\n                            ~=\n                        ": "",
    "\n                            ~\n                            ~\n                        ": "",
    "\n                            ?\n                            ?\n                        ": "",
    "\n                            &lt;^\n                            &lt;^\n                        ": "",
    "\n                            ?#\n                            ?#\n                        ": "",
    "\n                            &amp;\n                            &amp;\n                        ": "",
    "\n                            ?-\n                            ?-\n                        ": "",
    "\n                            ~&gt;=~\n                            ~&gt;=~\n                        ": "",
    "\n                            &amp;&gt;\n                            &amp;&gt;\n                        ": "",
    "\n                            !\n                            !\n                        ": "",
    "\n                            &lt;-&gt;\n                            &lt;-&gt;\n                        ": "",
    "\n                            ?|\n                            ?|\n                        ": "",
    "\n                            #-\n                            #-\n                        ": "",
    "\n                            *&lt;\n                            *&lt;\n                        ": "",
    "\n                            ~~*\n                            ~~*\n                        ": "",
    "\n                            ~&gt;~\n                            ~&gt;~\n                        ": "",
    "\n                            !!\n                            !!\n                        ": "",
    "\n                            #\n                            #\n                        ": "",
    "\n                            ~&lt;~\n                            ~&lt;~\n                        ": "",
    "\n                            =\n                            =\n                        ": "",
    "\n                            @\n                            @\n                        ": "",
    "\n                            ##\n                            ##\n                        ": "",
    "\n                            *&gt;=\n                            *&gt;=\n                        ": "",
    "\n                            |&gt;&gt;\n                            |&gt;&gt;\n                        ": "",
    "\n                            &amp;&amp;\n                            &amp;&amp;\n                        ": "",
    "\n                            @?\n                            @?\n                        ": "",
    "\n                            &lt;=\n                            &lt;=\n                        ": "",
    "\n                            ~~\n                            ~~\n                        ": "",
    "\n                            @&gt;\n                            @&gt;\n                        ": "",
    "\n                            ||\n                            ||\n                        ": "",
    "\n                            &gt;\n                            &gt;\n                        ": "",
    "\n                            *=\n                            *=\n                        ": "",
    "\n                            &gt;&gt;=\n                            &gt;&gt;=\n                        ": "",
    "\n                            ||/\n                            ||/\n                        ": "",
    "\n                            -&gt;\n                            -&gt;\n                        ": "",
    "\n                            ^\n                            ^\n                        ": "",
    "\n                            %\n                            %\n                        ": "",
    "\n                            @@@\n                            @@@\n                        ": "",
    "\n                            &lt;@\n                            &lt;@\n                        ": "",
    "\n                            ~*\n                            ~*\n                        ": "",
    "\n                            !~~*\n                            !~~*\n                        ": "",
    "\n                            *&lt;&gt;\n                            *&lt;&gt;\n                        ": "",
    "\n                            ?||\n                            ?||\n                        ": "",
    "\n                            &lt;&gt;\n                            &lt;&gt;\n                        ": "",
    "\n                            &amp;&lt;\n                            &amp;&lt;\n                        ": "",
    "\n                            |&amp;&gt;\n                            |&amp;&gt;\n                        ": "",
    "\n                            &lt;&lt;\n                            &lt;&lt;\n                        ": "",
    "\n                            #&gt;\n                            #&gt;\n                        ": "",
    "\n                            +\n                            +\n                        ": "",
    "\n                            &amp;&lt;|\n                            &amp;&lt;|\n                        ": "",
    "\n                            @@\n                            @@\n                        ": "",
    "\n                            *&lt;=\n                            *&lt;=\n                        ": "",
    "\n                            !~*\n                            !~*\n                        ": "",
    "\n                            |\n                            |\n                        ": "",
    "\n                            ~&lt;=~\n                            ~&lt;=~\n                        ": "",
    "\n                            -\n                            -\n                        ": "",
    "\n                            |/\n                            |/\n                        ": "",
    "\n                            !~\n                            !~\n                        ": "",
    "\n                            ^@\n                            ^@\n                        ": "",
    "\n                            @-@\n                            @-@\n                        ": "",
    "\n                            conversion for MULE_INTERNAL to BIG5\n                            conversion for MULE_INTERNAL to BIG5\n                        ": "",
    "\n                            Fulah (Latin, Burkina Faso)\n                            Fulah (Latin, Burkina Faso)\n                        ": "",
    "\n                            timestamp of last replay xact\n                            timestamp of last replay xact\n                        ": "",
    "\n                            is adjacent to\n                            is adjacent to\n                        ": "",
    "\n                            monetary amounts, $d,ddd.cc\n                            monetary amounts, $d,ddd.cc\n                        ": "",
    "\n                            English (Tonga)\n                            English (Tonga)\n                        ": "",
    "\n                            conversion for LATIN6 to UTF8\n                            conversion for LATIN6 to UTF8\n                        ": "",
    "\n                            tablespace location\n                            tablespace location\n                        ": "",
    "\n                            Serbian (Latin, Montenegro)\n                            Serbian (Latin, Montenegro)\n                        ": "",
    "\n                            maximum value of all integer input values\n                            maximum value of all integer input values\n                        ": "",
    "\n                            area of a closed path\n                            area of a closed path\n                        ": "",
    "\n                            English (Jamaica)\n                            English (Jamaica)\n                        ": "",
    "\n                            configuration for swedish language\n                            configuration for swedish language\n                        ": "",
    "\n                            conversion for UTF8 to LATIN4\n                            conversion for UTF8 to LATIN4\n                        ": "",
    "\n                            Meru\n                            Meru\n                        ": "",
    "\n                            convert an int4 range to canonical form\n                            convert an int4 range to canonical form\n                        ": "",
    "\n                            length of string in specified encoding\n                            length of string in specified encoding\n                        ": "",
    "\n                            Chakma (India)\n                            Chakma (India)\n                        ": "",
    "\n                            double-precision floating point number, 8-byte storage\n                            double-precision floating point number, 8-byte storage\n                        ": "",
    "\n                            get transaction Id and commit timestamp of latest transaction commit\n                            get transaction Id and commit timestamp of latest transaction commit\n                        ": "",
    "\n                            convert date and time with time zone to timestamp with time zone\n                            convert date and time with time zone to timestamp with time zone\n                        ": "",
    "\n                            Wolof (Senegal)\n                            Wolof (Senegal)\n                        ": "",
    "\n                            json object aggregate final function\n                            json object aggregate final function\n                        ": "",
    "\n                            Luo (Kenya)\n                            Luo (Kenya)\n                        ": "",
    "\n                            statistics: checkpoint time spent synchronizing buffers to disk, in milliseconds\n                            statistics: checkpoint time spent synchronizing buffers to disk, in milliseconds\n                        ": "",
    "\n                            statistics: reset collected statistics for a single table or index in the current database\n                            statistics: reset collected statistics for a single table or index in the current database\n                        ": "",
    "\n                            statistics: number of tuples read by seqscan\n                            statistics: number of tuples read by seqscan\n                        ": "",
    "\n                            Afrikaans (South Africa)\n                            Afrikaans (South Africa)\n                        ": "",
    "\n                            tangent, degrees\n                            tangent, degrees\n                        ": "",
    "\n                            sequence last value\n                            sequence last value\n                        ": "",
    "\n                            join selectivity of regex match\n                            join selectivity of regex match\n                        ": "",
    "\n                            English (St. Helena)\n                            English (St. Helena)\n                        ": "",
    "\n                            SP-GiST support for quad tree and k-d tree over point\n                            SP-GiST support for quad tree and k-d tree over point\n                        ": "",
    "\n                            Oromo (Kenya)\n                            Oromo (Kenya)\n                        ": "",
    "\n                            pseudo-type for the result of a tablesample method function\n                            pseudo-type for the result of a tablesample method function\n                        ": "",
    "\n                            convert box to polygon\n                            convert box to polygon\n                        ": "",
    "\n                            generate headline from json\n                            generate headline from json\n                        ": "",
    "\n                            get json array element\n                            get json array element\n                        ": "",
    "\n                            char(length), blank-padded string, fixed storage length\n                            char(length), blank-padded string, fixed storage length\n                        ": "",
    "\n                            Basque (Spain)\n                            Basque (Spain)\n                        ": "",
    "\n                            implementation of ~ operator\n                            implementation of ~ operator\n                        ": "",
    "\n                            configuration for finnish language\n                            configuration for finnish language\n                        ": "",
    "\n                            build a json object from pairwise key/value inputs\n                            build a json object from pairwise key/value inputs\n                        ": "",
    "\n                            convert float8 to float4\n                            convert float8 to float4\n                        ": "",
    "\n                            convert macaddr8 to macaddr\n                            convert macaddr8 to macaddr\n                        ": "",
    "\n                            standard POSIX collation\n                            standard POSIX collation\n                        ": "",
    "\n                            get identification of SQL object for pg_get_object_address()\n                            get identification of SQL object for pg_get_object_address()\n                        ": "",
    "\n                            convert timestamp to timestamp with time zone\n                            convert timestamp to timestamp with time zone\n                        ": "",
    "\n                            conversion for UTF8 to LATIN8\n                            conversion for UTF8 to LATIN8\n                        ": "",
    "\n                            conversion for UTF8 to ISO-8859-7\n                            conversion for UTF8 to ISO-8859-7\n                        ": "",
    "\n                            sequence current value\n                            sequence current value\n                        ": "",
    "\n                            not equal by area\n                            not equal by area\n                        ": "",
    "\n                            Northern Luri (Iran)\n                            Northern Luri (Iran)\n                        ": "",
    "\n                            aggregate final function\n                            aggregate final function\n                        ": "",
    "\n                            conversion for ISO-8859-5 to KOI8R\n                            conversion for ISO-8859-5 to KOI8R\n                        ": "",
    "\n                            convert jsonb to int4\n                            convert jsonb to int4\n                        ": "",
    "\n                            matches LIKE expression, case-insensitive\n                            matches LIKE expression, case-insensitive\n                        ": "",
    "\n                            determine if a string is well formed XML\n                            determine if a string is well formed XML\n                        ": "",
    "\n                            restriction selectivity of exact prefix\n                            restriction selectivity of exact prefix\n                        ": "",
    "\n                            Asturian (Spain)\n                            Asturian (Spain)\n                        ": "",
    "\n                            view partition tree tables\n                            view partition tree tables\n                        ": "",
    "\n                            internal conversion function for UTF8 to SJIS\n                            internal conversion function for UTF8 to SJIS\n                        ": "",
    "\n                            add/update ACL item\n                            add/update ACL item\n                        ": "",
    "\n                            source text of a rule\n                            source text of a rule\n                        ": "",
    "\n                            statistics: number of function calls in current transaction\n                            statistics: number of function calls in current transaction\n                        ": "",
    "\n                            population variance of numeric input values (square of the population standard deviation)\n                            population variance of numeric input values (square of the population standard deviation)\n                        ": "",
    "\n                            date and time with time zone\n                            date and time with time zone\n                        ": "",
    "\n                            conversion for UTF8 to EUC_CN\n                            conversion for UTF8 to EUC_CN\n                        ": "",
    "\n                            convert text to date\n                            convert text to date\n                        ": "",
    "\n                            point within closed path, or point on open path\n                            point within closed path, or point on open path\n                        ": "",
    "\n                            conversion for UTF8 to LATIN2\n                            conversion for UTF8 to LATIN2\n                        ": "",
    "\n                            is supernet\n                            is supernet\n                        ": "",
    "\n                            slope between points\n                            slope between points\n                        ": "",
    "\n                            Odia\n                            Odia\n                        ": "",
    "\n                            list objects dropped by the current command\n                            list objects dropped by the current command\n                        ": "",
    "\n                            boolean-and aggregate\n                            boolean-and aggregate\n                        ": "",
    "\n                            Fulah (Latin, Liberia)\n                            Fulah (Latin, Liberia)\n                        ": "",
    "\n                            create a replication origin\n                            create a replication origin\n                        ": "",
    "\n                            all keys exist\n                            all keys exist\n                        ": "",
    "\n                            set byte\n                            set byte\n                        ": "",
    "\n                            pseudo-type representing an internal data structure\n                            pseudo-type representing an internal data structure\n                        ": "",
    "\n                            conversion for MULE_INTERNAL to EUC_JP\n                            conversion for MULE_INTERNAL to EUC_JP\n                        ": "",
    "\n                            Portuguese (Brazil)\n                            Portuguese (Brazil)\n                        ": "",
    "\n                            range intersection\n                            range intersection\n                        ": "",
    "\n                            current user privilege on server by server name\n                            current user privilege on server by server name\n                        ": "",
    "\n                            Nyankole\n                            Nyankole\n                        ": "",
    "\n                            Akan\n                            Akan\n                        ": "",
    "\n                            Zarma\n                            Zarma\n                        ": "",
    "\n                            postmaster start time\n                            postmaster start time\n                        ": "",
    "\n                            English (Christmas Island)\n                            English (Christmas Island)\n                        ": "",
    "\n                            arctangent, degrees\n                            arctangent, degrees\n                        ": "",
    "\n                            horizontal\n                            horizontal\n                        ": "",
    "\n                            collation of the argument; implementation of the COLLATION FOR expression\n                            collation of the argument; implementation of the COLLATION FOR expression\n                        ": "",
    "\n                            geometric path &apos;(pt1,...)&apos;\n                            geometric path &apos;(pt1,...)&apos;\n                        ": "",
    "\n                            nearest integer &gt;= value\n                            nearest integer &gt;= value\n                        ": "",
    "\n                            Dutch (Belgium)\n                            Dutch (Belgium)\n                        ": "",
    "\n                            convert text to name\n                            convert text to name\n                        ": "",
    "\n                            English (Zimbabwe)\n                            English (Zimbabwe)\n                        ": "",
    "\n                            Spanish (Peru)\n                            Spanish (Peru)\n                        ": "",
    "\n                            implementation of ~&gt;=~ operator\n                            implementation of ~&gt;=~ operator\n                        ": "",
    "\n                            current user privilege on server by server oid\n                            current user privilege on server by server oid\n                        ": "",
    "\n                            read text from a file\n                            read text from a file\n                        ": "",
    "\n                            conversion for UHC to UTF8\n                            conversion for UHC to UTF8\n                        ": "",
    "\n                            maximum value of all float8 input values\n                            maximum value of all float8 input values\n                        ": "",
    "\n                            intersect\n                            intersect\n                        ": "",
    "\n                            Tachelhit (Tifinagh)\n                            Tachelhit (Tifinagh)\n                        ": "",
    "\n                            Russian (Kyrgyzstan)\n                            Russian (Kyrgyzstan)\n                        ": "",
    "\n                            Afrikaans (Namibia)\n                            Afrikaans (Namibia)\n                        ": "",
    "\n                            format float4 to text\n                            format float4 to text\n                        ": "",
    "\n                            add points (translate)\n                            add points (translate)\n                        ": "",
    "\n                            conversion for JOHAB to UTF8\n                            conversion for JOHAB to UTF8\n                        ": "",
    "\n                            statistics: last manual analyze time for a table\n                            statistics: last manual analyze time for a table\n                        ": "",
    "\n                            encoding name of current database\n                            encoding name of current database\n                        ": "",
    "\n                            convert UNIX epoch to timestamptz\n                            convert UNIX epoch to timestamptz\n                        ": "",
    "\n                            implementation of @-@ operator\n                            implementation of @-@ operator\n                        ": "",
    "\n                            French (Mayotte)\n                            French (Mayotte)\n                        ": "",
    "\n                            number of lexemes\n                            number of lexemes\n                        ": "",
    "\n                            snowball stemmer for nepali language\n                            snowball stemmer for nepali language\n                        ": "",
    "\n                            less than\n                            less than\n                        ": "",
    "\n                            Yoruba\n                            Yoruba\n                        ": "",
    "\n                            less-equal-greater based on byte images\n                            less-equal-greater based on byte images\n                        ": "",
    "\n                            current user privilege on any column by rel oid\n                            current user privilege on any column by rel oid\n                        ": "",
    "\n                            user privilege on function by username, function oid\n                            user privilege on function by username, function oid\n                        ": "",
    "\n                            internal conversion function for UTF8 to GB18030\n                            internal conversion function for UTF8 to GB18030\n                        ": "",
    "\n                            SHA-256 hash\n                            SHA-256 hash\n                        ": "",
    "\n                            is right of\n                            is right of\n                        ": "",
    "\n                            implementation of = operator\n                            implementation of = operator\n                        ": "",
    "\n                            Cantonese\n                            Cantonese\n                        ": "",
    "\n                            replace all occurrences in string of old_substr with new_substr\n                            replace all occurrences in string of old_substr with new_substr\n                        ": "",
    "\n                            French (Canada)\n                            French (Canada)\n                        ": "",
    "\n                            deprecated, use &lt;@ instead\n                            deprecated, use &lt;@ instead\n                        ": "",
    "\n                            GIN array support (obsolete)\n                            GIN array support (obsolete)\n                        ": "",
    "\n                            implementation of # operator\n                            implementation of # operator\n                        ": "",
    "\n                            convert int4 to numeric\n                            convert int4 to numeric\n                        ": "",
    "\n                            close path\n                            close path\n                        ": "",
    "\n                            statistics: number of tuples updated in current transaction\n                            statistics: number of tuples updated in current transaction\n                        ": "",
    "\n                            sine\n                            sine\n                        ": "",
    "\n                            user privilege on foreign data wrapper by user oid, foreign data wrapper oid\n                            user privilege on foreign data wrapper by user oid, foreign data wrapper oid\n                        ": "",
    "\n                            statistics: number of dead tuples\n                            statistics: number of dead tuples\n                        ": "",
    "\n                            statistics: deadlocks detected in database\n                            statistics: deadlocks detected in database\n                        ": "",
    "\n                            planner support for timestamp length coercion\n                            planner support for timestamp length coercion\n                        ": "",
    "\n                            convert bitstring to int8\n                            convert bitstring to int8\n                        ": "",
    "\n                            Somali (Djibouti)\n                            Somali (Djibouti)\n                        ": "",
    "\n                            referential integrity ON DELETE NO ACTION\n                            referential integrity ON DELETE NO ACTION\n                        ": "",
    "\n                            current user privilege on tablespace by tablespace name\n                            current user privilege on tablespace by tablespace name\n                        ": "",
    "\n                            horizontally aligned\n                            horizontally aligned\n                        ": "",
    "\n                            Serbian (Cyrillic, Montenegro)\n                            Serbian (Cyrillic, Montenegro)\n                        ": "",
    "\n                            Bulgarian (Bulgaria)\n                            Bulgarian (Bulgaria)\n                        ": "",
    "\n                            BRIN inclusion support\n                            BRIN inclusion support\n                        ": "",
    "\n                            current user privilege on sequence by seq name\n                            current user privilege on sequence by seq name\n                        ": "",
    "\n                            Rombo\n                            Rombo\n                        ": "",
    "\n                            join selectivity of &lt; and related operators on scalar datatypes\n                            join selectivity of &lt; and related operators on scalar datatypes\n                        ": "",
    "\n                            convert tsvector to array of lexemes\n                            convert tsvector to array of lexemes\n                        ": "",
    "\n                            exponentiation\n                            exponentiation\n                        ": "",
    "\n                            French (Chad)\n                            French (Chad)\n                        ": "",
    "\n                            copy a logical replication slot, changing temporality and plugin\n                            copy a logical replication slot, changing temporality and plugin\n                        ": "",
    "\n                            French (French Polynesia)\n                            French (French Polynesia)\n                        ": "",
    "\n                            array lower dimension\n                            array lower dimension\n                        ": "",
    "\n                            maximum value of all money input values\n                            maximum value of all money input values\n                        ": "",
    "\n                            Kako\n                            Kako\n                        ": "",
    "\n                            concatenate\n                            concatenate\n                        ": "",
    "\n                            remove any occurrences of an element from an array\n                            remove any occurrences of an element from an array\n                        ": "",
    "\n                            convert role name to regrole\n                            convert role name to regrole\n                        ": "",
    "\n                            variable-length string, no limit specified\n                            variable-length string, no limit specified\n                        ": "",
    "\n                            implementation of -|- operator\n                            implementation of -|- operator\n                        ": "",
    "\n                            conversion for EUC_JIS_2004 to UTF8\n                            conversion for EUC_JIS_2004 to UTF8\n                        ": "",
    "\n                            conversion for UTF8 to WIN1258\n                            conversion for UTF8 to WIN1258\n                        ": "",
    "\n                            conversion for GBK to UTF8\n                            conversion for GBK to UTF8\n                        ": "",
    "\n                            trunc(x/y)\n                            trunc(x/y)\n                        ": "",
    "\n                            English (Hong Kong SAR China)\n                            English (Hong Kong SAR China)\n                        ": "",
    "\n                            Serbian (Latin, Bosnia &amp; Herzegovina)\n                            Serbian (Latin, Bosnia &amp; Herzegovina)\n                        ": "",
    "\n                            overlaps or is left of\n                            overlaps or is left of\n                        ": "",
    "\n                            Icelandic (Iceland)\n                            Icelandic (Iceland)\n                        ": "",
    "\n                            internal conversion function for WIN1250 to LATIN2\n                            internal conversion function for WIN1250 to LATIN2\n                        ": "",
    "\n                            English (U.S. Virgin Islands)\n                            English (U.S. Virgin Islands)\n                        ": "",
    "\n                            bitwise shift right\n                            bitwise shift right\n                        ": "",
    "\n                            restriction selectivity for range operators\n                            restriction selectivity for range operators\n                        ": "",
    "\n                            pseudo-type for the result of a language handler function\n                            pseudo-type for the result of a language handler function\n                        ": "",
    "\n                            join selectivity of NOT LIKE\n                            join selectivity of NOT LIKE\n                        ": "",
    "\n                            statistics: last auto vacuum time for a table\n                            statistics: last auto vacuum time for a table\n                        ": "",
    "\n                            arccosine, degrees\n                            arccosine, degrees\n                        ": "",
    "\n                            bitstring length\n                            bitstring length\n                        ": "",
    "\n                            Uzbek (Cyrillic, Uzbekistan)\n                            Uzbek (Cyrillic, Uzbekistan)\n                        ": "",
    "\n                            build an empty json array\n                            build an empty json array\n                        ": "",
    "\n                            Duala\n                            Duala\n                        ": "",
    "\n                            Spanish (Mexico)\n                            Spanish (Mexico)\n                        ": "",
    "\n                            greater than or equal\n                            greater than or equal\n                        ": "",
    "\n                            get array of PIDs of sessions blocking specified backend PID from acquiring a safe snapshot\n                            get array of PIDs of sessions blocking specified backend PID from acquiring a safe snapshot\n                        ": "",
    "\n                            aggregate transition function\n                            aggregate transition function\n                        ": "",
    "\n                            network part of address\n                            network part of address\n                        ": "",
    "\n                            convert polygon to path\n                            convert polygon to path\n                        ": "",
    "\n                            implementation of -&gt;&gt; operator\n                            implementation of -&gt;&gt; operator\n                        ": "",
    "\n                            English (Micronesia)\n                            English (Micronesia)\n                        ": "",
    "\n                            Western Frisian (Netherlands)\n                            Western Frisian (Netherlands)\n                        ": "",
    "\n                            French (Congo - Brazzaville)\n                            French (Congo - Brazzaville)\n                        ": "",
    "\n                            argument list of a function\n                            argument list of a function\n                        ": "",
    "\n                            hash index access method handler\n                            hash index access method handler\n                        ": "",
    "\n                            user privilege on sequence by username, seq name\n                            user privilege on sequence by username, seq name\n                        ": "",
    "\n                            Soga (Uganda)\n                            Soga (Uganda)\n                        ": "",
    "\n                            Cantonese (Simplified)\n                            Cantonese (Simplified)\n                        ": "",
    "\n                            convert timestamp with time zone to time with time zone\n                            convert timestamp with time zone to time with time zone\n                        ": "",
    "\n                            show address octets only\n                            show address octets only\n                        ": "",
    "\n                            English (Cayman Islands)\n                            English (Cayman Islands)\n                        ": "",
    "\n                            SP-GiST support for radix tree over text\n                            SP-GiST support for radix tree over text\n                        ": "",
    "\n                            conversion for EUC_TW to MULE_INTERNAL\n                            conversion for EUC_TW to MULE_INTERNAL\n                        ": "",
    "\n                            pg_controldata recovery state information as a function\n                            pg_controldata recovery state information as a function\n                        ": "",
    "\n                            implementation of || operator\n                            implementation of || operator\n                        ": "",
    "\n                            Yiddish\n                            Yiddish\n                        ": "",
    "\n                            maximum value of all text input values\n                            maximum value of all text input values\n                        ": "",
    "\n                            convert boolean to text\n                            convert boolean to text\n                        ": "",
    "\n                            Tigrinya (Ethiopia)\n                            Tigrinya (Ethiopia)\n                        ": "",
    "\n                            snowball stemmer for danish language\n                            snowball stemmer for danish language\n                        ": "",
    "\n                            Macedonian\n                            Macedonian\n                        ": "",
    "\n                            sample variance of bigint input values (square of the sample standard deviation)\n                            sample variance of bigint input values (square of the sample standard deviation)\n                        ": "",
    "\n                            truncate timestamp to specified units\n                            truncate timestamp to specified units\n                        ": "",
    "\n                            Yoruba (Benin)\n                            Yoruba (Benin)\n                        ": "",
    "\n                            length in bits\n                            length in bits\n                        ": "",
    "\n                            is the range&apos;s upper bound inclusive?\n                            is the range&apos;s upper bound inclusive?\n                        ": "",
    "\n                            Is JIT compilation available in this session?\n                            Is JIT compilation available in this session?\n                        ": "",
    "\n                            Icelandic\n                            Icelandic\n                        ": "",
    "\n                            return the next oid for a system table\n                            return the next oid for a system table\n                        ": "",
    "\n                            convert int8 to oid\n                            convert int8 to oid\n                        ": "",
    "\n                            Spanish (Nicaragua)\n                            Spanish (Nicaragua)\n                        ": "",
    "\n                            internal conversion function for WIN1251 to MULE_INTERNAL\n                            internal conversion function for WIN1251 to MULE_INTERNAL\n                        ": "",
    "\n                            Portuguese (Portugal)\n                            Portuguese (Portugal)\n                        ": "",
    "\n                            select statement of a view with pretty-print option\n                            select statement of a view with pretty-print option\n                        ": "",
    "\n                            internal conversion function for ISO-8859-5 to WIN866\n                            internal conversion function for ISO-8859-5 to WIN866\n                        ": "",
    "\n                            number of decimal digits in the fractional part\n                            number of decimal digits in the fractional part\n                        ": "",
    "\n                            map rows from cursor to XML\n                            map rows from cursor to XML\n                        ": "",
    "\n                            planner support for numeric length coercion\n                            planner support for numeric length coercion\n                        ": "",
    "\n                            pseudo-type representing a polymorphic base type that is not an array\n                            pseudo-type representing a polymorphic base type that is not an array\n                        ": "",
    "\n                            maximum value of all inet input values\n                            maximum value of all inet input values\n                        ": "",
    "\n                            btree index access method handler\n                            btree index access method handler\n                        ": "",
    "\n                            continuous distribution percentile\n                            continuous distribution percentile\n                        ": "",
    "\n                            French (St. Pierre &amp; Miquelon)\n                            French (St. Pierre &amp; Miquelon)\n                        ": "",
    "\n                            English (Montserrat)\n                            English (Montserrat)\n                        ": "",
    "\n                            get the prepared statements for this session\n                            get the prepared statements for this session\n                        ": "",
    "\n                            output money amount as words\n                            output money amount as words\n                        ": "",
    "\n                            convert circle to 12-vertex polygon\n                            convert circle to 12-vertex polygon\n                        ": "",
    "\n                            statistics: number of manual vacuums for a table\n                            statistics: number of manual vacuums for a table\n                        ": "",
    "\n                            configuration for dutch language\n                            configuration for dutch language\n                        ": "",
    "\n                            Assamese (India)\n                            Assamese (India)\n                        ": "",
    "\n                            distance between endpoints\n                            distance between endpoints\n                        ": "",
    "\n                            range of timestamps with time zone\n                            range of timestamps with time zone\n                        ": "",
    "\n                            sum as numeric across all numeric input values\n                            sum as numeric across all numeric input values\n                        ": "",
    "\n                            statistics: number of blocks fetched in current transaction\n                            statistics: number of blocks fetched in current transaction\n                        ": "",
    "\n                            partition key description\n                            partition key description\n                        ": "",
    "\n                            Nepali\n                            Nepali\n                        ": "",
    "\n                            sum as numeric across all bigint input values\n                            sum as numeric across all bigint input values\n                        ": "",
    "\n                            Luba-Katanga\n                            Luba-Katanga\n                        ": "",
    "\n                            constraint description\n                            constraint description\n                        ": "",
    "\n                            PostgreSQL LSN datatype\n                            PostgreSQL LSN datatype\n                        ": "",
    "\n                            sample standard deviation of float8 input values\n                            sample standard deviation of float8 input values\n                        ": "",
    "\n                            internal conversion function for MULE_INTERNAL to EUC_TW\n                            internal conversion function for MULE_INTERNAL to EUC_TW\n                        ": "",
    "\n                            user privilege on column by user oid, rel name, col attnum\n                            user privilege on column by user oid, rel name, col attnum\n                        ": "",
    "\n                            Zulu\n                            Zulu\n                        ": "",
    "\n                            large object unlink (delete)\n                            large object unlink (delete)\n                        ": "",
    "\n                            statistics: number of tuples fetched by idxscan\n                            statistics: number of tuples fetched by idxscan\n                        ": "",
    "\n                            configuration for nepali language\n                            configuration for nepali language\n                        ": "",
    "\n                            Arabic (Morocco)\n                            Arabic (Morocco)\n                        ": "",
    "\n                            current user privilege on function by function oid\n                            current user privilege on function by function oid\n                        ": "",
    "\n                            emit a textual logical decoding message\n                            emit a textual logical decoding message\n                        ": "",
    "\n                            ispell dictionary\n                            ispell dictionary\n                        ": "",
    "\n                            unary plus\n                            unary plus\n                        ": "",
    "\n                            restriction selectivity for network operators\n                            restriction selectivity for network operators\n                        ": "",
    "\n                            internal conversion function for WIN866 to MULE_INTERNAL\n                            internal conversion function for WIN866 to MULE_INTERNAL\n                        ": "",
    "\n                            implementation of &amp; operator\n                            implementation of &amp; operator\n                        ": "",
    "\n                            Swedish (Finland)\n                            Swedish (Finland)\n                        ": "",
    "\n                            Walser (Switzerland)\n                            Walser (Switzerland)\n                        ": "",
    "\n                            internal conversion function for EUC_JP to SJIS\n                            internal conversion function for EUC_JP to SJIS\n                        ": "",
    "\n                            convert proname to regproc\n                            convert proname to regproc\n                        ": "",
    "\n                            minimum value of all interval input values\n                            minimum value of all interval input values\n                        ": "",
    "\n                            implementation of !~~* operator\n                            implementation of !~~* operator\n                        ": "",
    "\n                            statistics: database ID of backend\n                            statistics: database ID of backend\n                        ": "",
    "\n                            get jsonb array element\n                            get jsonb array element\n                        ": "",
    "\n                            implementation of !! operator\n                            implementation of !! operator\n                        ": "",
    "\n                            statistics: number of buffers written by the bgwriter during checkpoints\n                            statistics: number of buffers written by the bgwriter during checkpoints\n                        ": "",
    "\n                            Arabic (Lebanon)\n                            Arabic (Lebanon)\n                        ": "",
    "\n                            restriction selectivity of tsvector @@ tsquery\n                            restriction selectivity of tsvector @@ tsquery\n                        ": "",
    "\n                            range of bigints\n                            range of bigints\n                        ": "",
    "\n                            Manx\n                            Manx\n                        ": "",
    "\n                            show pg_hba.conf rules\n                            show pg_hba.conf rules\n                        ": "",
    "\n                            build a jsonb array from any inputs\n                            build a jsonb array from any inputs\n                        ": "",
    "\n                            Fulah (Latin, Guinea-Bissau)\n                            Fulah (Latin, Guinea-Bissau)\n                        ": "",
    "\n                            trigger for automatic update of tsvector column\n                            trigger for automatic update of tsvector column\n                        ": "",
    "\n                            pseudo-type representing any type\n                            pseudo-type representing any type\n                        ": "",
    "\n                            join selectivity of = and related operators\n                            join selectivity of = and related operators\n                        ": "",
    "\n                            hyperbolic tangent\n                            hyperbolic tangent\n                        ": "",
    "\n                            Bodo (India)\n                            Bodo (India)\n                        ": "",
    "\n                            convert date to timestamp\n                            convert date to timestamp\n                        ": "",
    "\n                            fractional rank within partition\n                            fractional rank within partition\n                        ": "",
    "\n                            view two-phase transactions\n                            view two-phase transactions\n                        ": "",
    "\n                            French (Tunisia)\n                            French (Tunisia)\n                        ": "",
    "\n                            conversion for UTF8 to WIN1250\n                            conversion for UTF8 to WIN1250\n                        ": "",
    "\n                            adjust timestamptz precision\n                            adjust timestamptz precision\n                        ": "",
    "\n                            Belarusian (Belarus)\n                            Belarusian (Belarus)\n                        ": "",
    "\n                            broadcast address of network\n                            broadcast address of network\n                        ": "",
    "\n                            degrees to radians\n                            degrees to radians\n                        ": "",
    "\n                            large object seek\n                            large object seek\n                        ": "",
    "\n                            sample standard deviation of float4 input values\n                            sample standard deviation of float4 input values\n                        ": "",
    "\n                            English (Madagascar)\n                            English (Madagascar)\n                        ": "",
    "\n                            expand array to set of rows\n                            expand array to set of rows\n                        ": "",
    "\n                            internal conversion function for EUC_JP to UTF8\n                            internal conversion function for EUC_JP to UTF8\n                        ": "",
    "\n                            population variance of integer input values (square of the population standard deviation)\n                            population variance of integer input values (square of the population standard deviation)\n                        ": "",
    "\n                            conversion for UTF8 to LATIN5\n                            conversion for UTF8 to LATIN5\n                        ": "",
    "\n                            population variance of float4 input values (square of the population standard deviation)\n                            population variance of float4 input values (square of the population standard deviation)\n                        ": "",
    "\n                            restriction selectivity of = and related operators\n                            restriction selectivity of = and related operators\n                        ": "",
    "\n                            does not match regular expression, case-sensitive\n                            does not match regular expression, case-sensitive\n                        ": "",
    "\n                            get the channels that the current backend listens to\n                            get the channels that the current backend listens to\n                        ": "",
    "\n                            Nuer\n                            Nuer\n                        ": "",
    "\n                            internal conversion function for WIN1251 to KOI8R\n                            internal conversion function for WIN1251 to KOI8R\n                        ": "",
    "\n                            Tatar (Russia)\n                            Tatar (Russia)\n                        ": "",
    "\n                            Latvian\n                            Latvian\n                        ": "",
    "\n                            Central Kurdish (Iraq)\n                            Central Kurdish (Iraq)\n                        ": "",
    "\n                            row-oriented heap table access method handler\n                            row-oriented heap table access method handler\n                        ": "",
    "\n                            Welsh\n                            Welsh\n                        ": "",
    "\n                            Kabuverdianu (Cape Verde)\n                            Kabuverdianu (Cape Verde)\n                        ": "",
    "\n                            Portuguese (Equatorial Guinea)\n                            Portuguese (Equatorial Guinea)\n                        ": "",
    "\n                            convert date to timestamp with time zone\n                            convert date to timestamp with time zone\n                        ": "",
    "\n                            Arabic (Palestinian Territories)\n                            Arabic (Palestinian Territories)\n                        ": "",
    "\n                            get an individual replication origin&apos;s replication progress\n                            get an individual replication origin&apos;s replication progress\n                        ": "",
    "\n                            abbreviated display of inet value\n                            abbreviated display of inet value\n                        ": "",
    "\n                            Kalenjin\n                            Kalenjin\n                        ": "",
    "\n                            Chechen\n                            Chechen\n                        ": "",
    "\n                            format int4 to text\n                            format int4 to text\n                        ": "",
    "\n                            Rwa\n                            Rwa\n                        ": "",
    "\n                            Indonesian (Indonesia)\n                            Indonesian (Indonesia)\n                        ": "",
    "\n                            Serbian (Cyrillic, Kosovo)\n                            Serbian (Cyrillic, Kosovo)\n                        ": "",
    "\n                            French (Mali)\n                            French (Mali)\n                        ": "",
    "\n                            conversion for ISO-8859-5 to MULE_INTERNAL\n                            conversion for ISO-8859-5 to MULE_INTERNAL\n                        ": "",
    "\n                            Teso\n                            Teso\n                        ": "",
    "\n                            construct interval\n                            construct interval\n                        ": "",
    "\n                            conversion for LATIN7 to UTF8\n                            conversion for LATIN7 to UTF8\n                        ": "",
    "\n                            matches regular expression, case-insensitive\n                            matches regular expression, case-insensitive\n                        ": "",
    "\n                            convert polygon to circle\n                            convert polygon to circle\n                        ": "",
    "\n                            append element onto end of array\n                            append element onto end of array\n                        ": "",
    "\n                            Set part of a jsonb\n                            Set part of a jsonb\n                        ": "",
    "\n                            convert box to circle\n                            convert box to circle\n                        ": "",
    "\n                            statistics: timestamp of the current statistics snapshot\n                            statistics: timestamp of the current statistics snapshot\n                        ": "",
    "\n                            list available extensions\n                            list available extensions\n                        ": "",
    "\n                            filenode identifier of relation\n                            filenode identifier of relation\n                        ": "",
    "\n                            find first match for regexp\n                            find first match for regexp\n                        ": "",
    "\n                            convert a date range to canonical form\n                            convert a date range to canonical form\n                        ": "",
    "\n                            peek at binary changes from replication slot\n                            peek at binary changes from replication slot\n                        ": "",
    "\n                            greater than\n                            greater than\n                        ": "",
    "\n                            current wal flush location\n                            current wal flush location\n                        ": "",
    "\n                            Bodo\n                            Bodo\n                        ": "",
    "\n                            MACADDR8 manufacturer fields\n                            MACADDR8 manufacturer fields\n                        ": "",
    "\n                            export a snapshot\n                            export a snapshot\n                        ": "",
    "\n                            trigger description\n                            trigger description\n                        ": "",
    "\n                            Spanish (Guatemala)\n                            Spanish (Guatemala)\n                        ": "",
    "\n                            abbreviated display of cidr value\n                            abbreviated display of cidr value\n                        ": "",
    "\n                            map query result and structure to XML and XML Schema\n                            map query result and structure to XML and XML Schema\n                        ": "",
    "\n                            maximum value of all anyarray input values\n                            maximum value of all anyarray input values\n                        ": "",
    "\n                            hash a range\n                            hash a range\n                        ": "",
    "\n                            internal conversion function for MULE_INTERNAL to EUC_KR\n                            internal conversion function for MULE_INTERNAL to EUC_KR\n                        ": "",
    "\n                            user privilege on database by user oid, database oid\n                            user privilege on database by user oid, database oid\n                        ": "",
    "\n                            truncate large object\n                            truncate large object\n                        ": "",
    "\n                            internal conversion function for UTF8 to KOI8R\n                            internal conversion function for UTF8 to KOI8R\n                        ": "",
    "\n                            convert float4 to int2\n                            convert float4 to int2\n                        ": "",
    "\n                            configuration for italian language\n                            configuration for italian language\n                        ": "",
    "\n                            Interlingua (World)\n                            Interlingua (World)\n                        ": "",
    "\n                            English (Sierra Leone)\n                            English (Sierra Leone)\n                        ": "",
    "\n                            internal conversion function for UTF8 to EUC_JP\n                            internal conversion function for UTF8 to EUC_JP\n                        ": "",
    "\n                            implementation of #- operator\n                            implementation of #- operator\n                        ": "",
    "\n                            Friulian (Italy)\n                            Friulian (Italy)\n                        ": "",
    "\n                            German (Belgium)\n                            German (Belgium)\n                        ": "",
    "\n                            convert char to int4\n                            convert char to int4\n                        ": "",
    "\n                            is table visible in search path?\n                            is table visible in search path?\n                        ": "",
    "\n                            SQL-language functions\n                            SQL-language functions\n                        ": "",
    "\n                            Kwasio\n                            Kwasio\n                        ": "",
    "\n                            concatenate array elements, using delimiter and null string, into text\n                            concatenate array elements, using delimiter and null string, into text\n                        ": "",
    "\n                            extract field from date\n                            extract field from date\n                        ": "",
    "\n                            Albanian (Kosovo)\n                            Albanian (Kosovo)\n                        ": "",
    "\n                            the average (arithmetic mean) as numeric of all integer values\n                            the average (arithmetic mean) as numeric of all integer values\n                        ": "",
    "\n                            for use by pg_upgrade\n                            for use by pg_upgrade\n                        ": "",
    "\n                            user privilege on tablespace by username, tablespace name\n                            user privilege on tablespace by username, tablespace name\n                        ": "",
    "\n                            convert text to regclass\n                            convert text to regclass\n                        ": "",
    "\n                            convert time to time with time zone\n                            convert time to time with time zone\n                        ": "",
    "\n                            Thai\n                            Thai\n                        ": "",
    "\n                            wal filename and byte offset, given a wal location\n                            wal filename and byte offset, given a wal location\n                        ": "",
    "\n                            latest tid of a tuple\n                            latest tid of a tuple\n                        ": "",
    "\n                            convert int8 to bitstring\n                            convert int8 to bitstring\n                        ": "",
    "\n                            statistics: tuples fetched for database\n                            statistics: tuples fetched for database\n                        ": "",
    "\n                            true if server is in online backup\n                            true if server is in online backup\n                        ": "",
    "\n                            conversion for EUC_CN to UTF8\n                            conversion for EUC_CN to UTF8\n                        ": "",
    "\n                            Koyraboro Senni\n                            Koyraboro Senni\n                        ": "",
    "\n                            cumulative distribution of hypothetical row\n                            cumulative distribution of hypothetical row\n                        ": "",
    "\n                            Gusii (Kenya)\n                            Gusii (Kenya)\n                        ": "",
    "\n                            snowball stemmer for indonesian language\n                            snowball stemmer for indonesian language\n                        ": "",
    "\n                            Chinese (Traditional, Taiwan)\n                            Chinese (Traditional, Taiwan)\n                        ": "",
    "\n                            Arabic (Israel)\n                            Arabic (Israel)\n                        ": "",
    "\n                            average of the independent variable (sum(X)/N)\n                            average of the independent variable (sum(X)/N)\n                        ": "",
    "\n                            Bosnian (Latin, Bosnia &amp; Herzegovina)\n                            Bosnian (Latin, Bosnia &amp; Herzegovina)\n                        ": "",
    "\n                            statistics: start time for current backend session\n                            statistics: start time for current backend session\n                        ": "",
    "\n                            internal conversion function for SQL_ASCII to UTF8\n                            internal conversion function for SQL_ASCII to UTF8\n                        ": "",
    "\n                            Machame\n                            Machame\n                        ": "",
    "\n                            population standard deviation of smallint input values\n                            population standard deviation of smallint input values\n                        ": "",
    "\n                            population variance of smallint input values (square of the population standard deviation)\n                            population variance of smallint input values (square of the population standard deviation)\n                        ": "",
    "\n                            maximum value of all interval input values\n                            maximum value of all interval input values\n                        ": "",
    "\n                            statistics: user ID of backend\n                            statistics: user ID of backend\n                        ": "",
    "\n                            database&apos;s default collation\n                            database&apos;s default collation\n                        ": "",
    "\n                            quote a possibly-null data value for usage in a querystring\n                            quote a possibly-null data value for usage in a querystring\n                        ": "",
    "\n                            IP address/netmask, host address, netmask optional\n                            IP address/netmask, host address, netmask optional\n                        ": "",
    "\n                            internal conversion function for WIN to UTF8\n                            internal conversion function for WIN to UTF8\n                        ": "",
    "\n                            statistics of tsvector column\n                            statistics of tsvector column\n                        ": "",
    "\n                            pseudo-type representing a polymorphic base type that is an enum\n                            pseudo-type representing a polymorphic base type that is an enum\n                        ": "",
    "\n                            terminate a server process\n                            terminate a server process\n                        ": "",
    "\n                            configuration for portuguese language\n                            configuration for portuguese language\n                        ": "",
    "\n                            get current tsearch configuration\n                            get current tsearch configuration\n                        ": "",
    "\n                            English (Belize)\n                            English (Belize)\n                        ": "",
    "\n                            English (Vanuatu)\n                            English (Vanuatu)\n                        ": "",
    "\n                            Nama (Namibia)\n                            Nama (Namibia)\n                        ": "",
    "\n                            write data at offset\n                            write data at offset\n                        ": "",
    "\n                            statistics: total execution time of function, in milliseconds\n                            statistics: total execution time of function, in milliseconds\n                        ": "",
    "\n                            French (Equatorial Guinea)\n                            French (Equatorial Guinea)\n                        ": "",
    "\n                            Urdu\n                            Urdu\n                        ": "",
    "\n                            conversion for MULE_INTERNAL to SJIS\n                            conversion for MULE_INTERNAL to SJIS\n                        ": "",
    "\n                            Masai (Kenya)\n                            Masai (Kenya)\n                        ": "",
    "\n                            statistics: number of function calls\n                            statistics: number of function calls\n                        ": "",
    "\n                            Cantonese (Traditional)\n                            Cantonese (Traditional)\n                        ": "",
    "\n                            send a notification event\n                            send a notification event\n                        ": "",
    "\n                            get record fields from a json object\n                            get record fields from a json object\n                        ": "",
    "\n                            current user privilege on database by database oid\n                            current user privilege on database by database oid\n                        ": "",
    "\n                            implementation of | operator\n                            implementation of | operator\n                        ": "",
    "\n                            Koyra Chiini (Mali)\n                            Koyra Chiini (Mali)\n                        ": "",
    "\n                            nearest integer &lt;= value\n                            nearest integer &lt;= value\n                        ": "",
    "\n                            sum as float4 across all float4 input values\n                            sum as float4 across all float4 input values\n                        ": "",
    "\n                            German (Germany)\n                            German (Germany)\n                        ": "",
    "\n                            value truncated to &apos;scale&apos;\n                            value truncated to &apos;scale&apos;\n                        ": "",
    "\n                            internal conversion function for LATIN4 to MULE_INTERNAL\n                            internal conversion function for LATIN4 to MULE_INTERNAL\n                        ": "",
    "\n                            Bosnian (Cyrillic)\n                            Bosnian (Cyrillic)\n                        ": "",
    "\n                            French (Belgium)\n                            French (Belgium)\n                        ": "",
    "\n                            snowball stemmer for portuguese language\n                            snowball stemmer for portuguese language\n                        ": "",
    "\n                            copy a physical replication slot, changing temporality\n                            copy a physical replication slot, changing temporality\n                        ": "",
    "\n                            adjust timestamp to new time zone\n                            adjust timestamp to new time zone\n                        ": "",
    "\n                            bitwise-or bigint aggregate\n                            bitwise-or bigint aggregate\n                        ": "",
    "\n                            English (Guam)\n                            English (Guam)\n                        ": "",
    "\n                            internal conversion function for MULE_INTERNAL to EUC_JP\n                            internal conversion function for MULE_INTERNAL to EUC_JP\n                        ": "",
    "\n                            French (Algeria)\n                            French (Algeria)\n                        ": "",
    "\n                            internal conversion function for SQL_ASCII to MULE_INTERNAL\n                            internal conversion function for SQL_ASCII to MULE_INTERNAL\n                        ": "",
    "\n                            implementation of ?|| operator\n                            implementation of ?|| operator\n                        ": "",
    "\n                            configuration for danish language\n                            configuration for danish language\n                        ": "",
    "\n                            Sinhala\n                            Sinhala\n                        ": "",
    "\n                            Armenian (Armenia)\n                            Armenian (Armenia)\n                        ": "",
    "\n                            decrement, ignores second argument\n                            decrement, ignores second argument\n                        ": "",
    "\n                            English (Canada)\n                            English (Canada)\n                        ": "",
    "\n                            Faroese\n                            Faroese\n                        ": "",
    "\n                            Filipino\n                            Filipino\n                        ": "",
    "\n                            Italian (Vatican City)\n                            Italian (Vatican City)\n                        ": "",
    "\n                            multiple continuous percentiles\n                            multiple continuous percentiles\n                        ": "",
    "\n                            sample variance of float8 input values (square of the sample standard deviation)\n                            sample variance of float8 input values (square of the sample standard deviation)\n                        ": "",
    "\n                            convert timestamp with time zone to timestamp\n                            convert timestamp with time zone to timestamp\n                        ": "",
    "\n                            Somali (Kenya)\n                            Somali (Kenya)\n                        ": "",
    "\n                            does not match LIKE expression, case-insensitive\n                            does not match LIKE expression, case-insensitive\n                        ": "",
    "\n                            configuration for indonesian language\n                            configuration for indonesian language\n                        ": "",
    "\n                            get jsonb object field\n                            get jsonb object field\n                        ": "",
    "\n                            Slovenian (Slovenia)\n                            Slovenian (Slovenia)\n                        ": "",
    "\n                            historical alias for stddev_samp\n                            historical alias for stddev_samp\n                        ": "",
    "\n                            French (French Guiana)\n                            French (French Guiana)\n                        ": "",
    "\n                            Sakha (Russia)\n                            Sakha (Russia)\n                        ": "",
    "\n                            English (Mauritius)\n                            English (Mauritius)\n                        ": "",
    "\n                            Nama\n                            Nama\n                        ": "",
    "\n                            adjust char() to typmod length\n                            adjust char() to typmod length\n                        ": "",
    "\n                            conversion for WIN866 to MULE_INTERNAL\n                            conversion for WIN866 to MULE_INTERNAL\n                        ": "",
    "\n                            Lower Sorbian\n                            Lower Sorbian\n                        ": "",
    "\n                            Masai (Tanzania)\n                            Masai (Tanzania)\n                        ": "",
    "\n                            internal conversion function for UTF8 to EUC_TW\n                            internal conversion function for UTF8 to EUC_TW\n                        ": "",
    "\n                            internal conversion function for UTF8 to KOI8U\n                            internal conversion function for UTF8 to KOI8U\n                        ": "",
    "\n                            Makhuwa-Meetto (Mozambique)\n                            Makhuwa-Meetto (Mozambique)\n                        ": "",
    "\n                            user privilege on language by user oid, language name\n                            user privilege on language by user oid, language name\n                        ": "",
    "\n                            convert int4 to money\n                            convert int4 to money\n                        ": "",
    "\n                            concatenate name and oid\n                            concatenate name and oid\n                        ": "",
    "\n                            conversion for BIG5 to EUC_TW\n                            conversion for BIG5 to EUC_TW\n                        ": "",
    "\n                            Maltese (Malta)\n                            Maltese (Malta)\n                        ": "",
    "\n                            Kabyle\n                            Kabyle\n                        ": "",
    "\n                            conversion for EUC_JP to MULE_INTERNAL\n                            conversion for EUC_JP to MULE_INTERNAL\n                        ": "",
    "\n                            statistics: address of client connected to backend\n                            statistics: address of client connected to backend\n                        ": "",
    "\n                            registered text search configuration\n                            registered text search configuration\n                        ": "",
    "\n                            arctangent, two arguments, degrees\n                            arctangent, two arguments, degrees\n                        ": "",
    "\n                            Mundang\n                            Mundang\n                        ": "",
    "\n                            convert jsonb to int8\n                            convert jsonb to int8\n                        ": "",
    "\n                            Chinese (Simplified, Hong Kong SAR China)\n                            Chinese (Simplified, Hong Kong SAR China)\n                        ": "",
    "\n                            Turkmen (Turkmenistan)\n                            Turkmen (Turkmenistan)\n                        ": "",
    "\n                            English (Singapore)\n                            English (Singapore)\n                        ": "",
    "\n                            Arabic (Kuwait)\n                            Arabic (Kuwait)\n                        ": "",
    "\n                            Chinese (Traditional, Hong Kong SAR China)\n                            Chinese (Traditional, Hong Kong SAR China)\n                        ": "",
    "\n                            join selectivity of LIKE\n                            join selectivity of LIKE\n                        ": "",
    "\n                            internal conversion function for UTF8 to SQL_ASCII\n                            internal conversion function for UTF8 to SQL_ASCII\n                        ": "",
    "\n                            population standard deviation of float8 input values\n                            population standard deviation of float8 input values\n                        ": "",
    "\n                            French (Martinique)\n                            French (Martinique)\n                        ": "",
    "\n                            French (Switzerland)\n                            French (Switzerland)\n                        ": "",
    "\n                            English (Uganda)\n                            English (Uganda)\n                        ": "",
    "\n                            array dimensions\n                            array dimensions\n                        ": "",
    "\n                            implementation of &lt;&lt;= operator\n                            implementation of &lt;&lt;= operator\n                        ": "",
    "\n                            current user privilege on sequence by seq oid\n                            current user privilege on sequence by seq oid\n                        ": "",
    "\n                            implementation of @ operator\n                            implementation of @ operator\n                        ": "",
    "\n                            configuration for romanian language\n                            configuration for romanian language\n                        ": "",
    "\n                            Fulah (Latin, Cameroon)\n                            Fulah (Latin, Cameroon)\n                        ": "",
    "\n                            length\n                            length\n                        ": "",
    "\n                            internal conversion function for GB18030 to UTF8\n                            internal conversion function for GB18030 to UTF8\n                        ": "",
    "\n                            perpendicular\n                            perpendicular\n                        ": "",
    "\n                            transform string values from jsonb to tsvector\n                            transform string values from jsonb to tsvector\n                        ": "",
    "\n                            statistics: number of blocks found in cache\n                            statistics: number of blocks found in cache\n                        ": "",
    "\n                            delete given lexemes\n                            delete given lexemes\n                        ": "",
    "\n                            Welsh (United Kingdom)\n                            Welsh (United Kingdom)\n                        ": "",
    "\n                            Ngiemboon (Cameroon)\n                            Ngiemboon (Cameroon)\n                        ": "",
    "\n                            box width\n                            box width\n                        ": "",
    "\n                            Bafia\n                            Bafia\n                        ": "",
    "\n                            delete lexeme\n                            delete lexeme\n                        ": "",
    "\n                            internal conversion function for WIN866 to KOI8R\n                            internal conversion function for WIN866 to KOI8R\n                        ": "",
    "\n                            map cursor structure to XML Schema\n                            map cursor structure to XML Schema\n                        ": "",
    "\n                            French (Syria)\n                            French (Syria)\n                        ": "",
    "\n                            implementation of ^ operator\n                            implementation of ^ operator\n                        ": "",
    "\n                            pseudo-type for the result of an index AM handler function\n                            pseudo-type for the result of an index AM handler function\n                        ": "",
    "\n                            current user privilege on any column by rel name\n                            current user privilege on any column by rel name\n                        ": "",
    "\n                            convert int8 number to hex\n                            convert int8 number to hex\n                        ": "",
    "\n                            French (Vanuatu)\n                            French (Vanuatu)\n                        ": "",
    "\n                            get description for table column\n                            get description for table column\n                        ": "",
    "\n                            French (Togo)\n                            French (Togo)\n                        ": "",
    "\n                            standard C collation\n                            standard C collation\n                        ": "",
    "\n                            relevance\n                            relevance\n                        ": "",
    "\n                            Yangben\n                            Yangben\n                        ": "",
    "\n                            less-equal-greater\n                            less-equal-greater\n                        ": "",
    "\n                            conversion for UTF8 to EUC_JIS_2004\n                            conversion for UTF8 to EUC_JIS_2004\n                        ": "",
    "\n                            release shared advisory lock\n                            release shared advisory lock\n                        ": "",
    "\n                            Swahili (Tanzania)\n                            Swahili (Tanzania)\n                        ": "",
    "\n                            less than or equal\n                            less than or equal\n                        ": "",
    "\n                            North Ndebele (Zimbabwe)\n                            North Ndebele (Zimbabwe)\n                        ": "",
    "\n                            English (Marshall Islands)\n                            English (Marshall Islands)\n                        ": "",
    "\n                            conversion for LATIN9 to UTF8\n                            conversion for LATIN9 to UTF8\n                        ": "",
    "\n                            internal conversion function for UTF8 to SHIFT_JIS_2004\n                            internal conversion function for UTF8 to SHIFT_JIS_2004\n                        ": "",
    "\n                            Vunjo (Tanzania)\n                            Vunjo (Tanzania)\n                        ": "",
    "\n                            bitwise shift left\n                            bitwise shift left\n                        ": "",
    "\n                            Hausa (Ghana)\n                            Hausa (Ghana)\n                        ": "",
    "\n                            German (Liechtenstein)\n                            German (Liechtenstein)\n                        ": "",
    "\n                            delete array element\n                            delete array element\n                        ": "",
    "\n                            Malagasy\n                            Malagasy\n                        ": "",
    "\n                            convert char(n) to name\n                            convert char(n) to name\n                        ": "",
    "\n                            conversion for EUC_KR to UTF8\n                            conversion for EUC_KR to UTF8\n                        ": "",
    "\n                            English (Isle of Man)\n                            English (Isle of Man)\n                        ": "",
    "\n                            get jsonb object field as text\n                            get jsonb object field as text\n                        ": "",
    "\n                            divide\n                            divide\n                        ": "",
    "\n                            English (United States, Computer)\n                            English (United States, Computer)\n                        ": "",
    "\n                            Kashmiri\n                            Kashmiri\n                        ": "",
    "\n                            statistics: number of auto analyzes for a table\n                            statistics: number of auto analyzes for a table\n                        ": "",
    "\n                            setup the transaction&apos;s origin lsn and timestamp\n                            setup the transaction&apos;s origin lsn and timestamp\n                        ": "",
    "\n                            Pashto\n                            Pashto\n                        ": "",
    "\n                            snowball stemmer for hungarian language\n                            snowball stemmer for hungarian language\n                        ": "",
    "\n                            arccosine\n                            arccosine\n                        ": "",
    "\n                            delete object fields\n                            delete object fields\n                        ": "",
    "\n                            Finnish\n                            Finnish\n                        ": "",
    "\n                            convert LIKE pattern to use backslash escapes\n                            convert LIKE pattern to use backslash escapes\n                        ": "",
    "\n                            statistics: number of tuples fetched by idxscan in current transaction\n                            statistics: number of tuples fetched by idxscan in current transaction\n                        ": "",
    "\n                            configure session to maintain replication progress tracking for the passed in origin\n                            configure session to maintain replication progress tracking for the passed in origin\n                        ": "",
    "\n                            bitwise-and bit aggregate\n                            bitwise-and bit aggregate\n                        ": "",
    "\n                            Konkani\n                            Konkani\n                        ": "",
    "\n                            Indonesian\n                            Indonesian\n                        ": "",
    "\n                            statistics: number of live tuples\n                            statistics: number of live tuples\n                        ": "",
    "\n                            aggregate inputs into jsonb object\n                            aggregate inputs into jsonb object\n                        ": "",
    "\n                            Tamil\n                            Tamil\n                        ": "",
    "\n                            hyperbolic cosine\n                            hyperbolic cosine\n                        ": "",
    "\n                            conversion for EUC_TW to UTF8\n                            conversion for EUC_TW to UTF8\n                        ": "",
    "\n                            SHOW X as a function\n                            SHOW X as a function\n                        ": "",
    "\n                            convert type name to regtype\n                            convert type name to regtype\n                        ": "",
    "\n                            population standard deviation of bigint input values\n                            population standard deviation of bigint input values\n                        ": "",
    "\n                            get description for object id and shared catalog name\n                            get description for object id and shared catalog name\n                        ": "",
    "\n                            English (British Indian Ocean Territory)\n                            English (British Indian Ocean Territory)\n                        ": "",
    "\n                            internal conversion function for EUC_JIS_2004 to UTF8\n                            internal conversion function for EUC_JIS_2004 to UTF8\n                        ": "",
    "\n                            user privilege on server by username, server name\n                            user privilege on server by username, server name\n                        ": "",
    "\n                            English (Sweden)\n                            English (Sweden)\n                        ": "",
    "\n                            add\n                            add\n                        ": "",
    "\n                            divide (rotate/scale path)\n                            divide (rotate/scale path)\n                        ": "",
    "\n                            reference to cursor (portal name)\n                            reference to cursor (portal name)\n                        ": "",
    "\n                            implementation of ~&lt;~ operator\n                            implementation of ~&lt;~ operator\n                        ": "",
    "\n                            trigger description with pretty-print option\n                            trigger description with pretty-print option\n                        ": "",
    "\n                            conversion for WIN1255 to UTF8\n                            conversion for WIN1255 to UTF8\n                        ": "",
    "\n                            conversion for SHIFT_JIS_2004 to UTF8\n                            conversion for SHIFT_JIS_2004 to UTF8\n                        ": "",
    "\n                            Vietnamese (Vietnam)\n                            Vietnamese (Vietnam)\n                        ": "",
    "\n                            English (Eswatini)\n                            English (Eswatini)\n                        ": "",
    "\n                            Slovak\n                            Slovak\n                        ": "",
    "\n                            bucket number of operand given a sorted array of bucket lower bounds\n                            bucket number of operand given a sorted array of bucket lower bounds\n                        ": "",
    "\n                            maximum value of all tid input values\n                            maximum value of all tid input values\n                        ": "",
    "\n                            Lower Sorbian (Germany)\n                            Lower Sorbian (Germany)\n                        ": "",
    "\n                            trim spaces from right end of string\n                            trim spaces from right end of string\n                        ": "",
    "\n                            Spanish (Cuba)\n                            Spanish (Cuba)\n                        ": "",
    "\n                            GIN array support\n                            GIN array support\n                        ": "",
    "\n                            multivariate MCV list\n                            multivariate MCV list\n                        ": "",
    "\n                            sample variance of integer input values (square of the sample standard deviation)\n                            sample variance of integer input values (square of the sample standard deviation)\n                        ": "",
    "\n                            Dutch (Netherlands)\n                            Dutch (Netherlands)\n                        ": "",
    "\n                            Central Atlas Tamazight (Morocco)\n                            Central Atlas Tamazight (Morocco)\n                        ": "",
    "\n                            single-precision floating point number, 4-byte storage\n                            single-precision floating point number, 4-byte storage\n                        ": "",
    "\n                            configuration for arabic language\n                            configuration for arabic language\n                        ": "",
    "\n                            numrange constructor\n                            numrange constructor\n                        ": "",
    "\n                            Central Atlas Tamazight\n                            Central Atlas Tamazight\n                        ": "",
    "\n                            French (Haiti)\n                            French (Haiti)\n                        ": "",
    "\n                            conversion for UTF8 to LATIN6\n                            conversion for UTF8 to LATIN6\n                        ": "",
    "\n                            get OIDs of tables in a publication\n                            get OIDs of tables in a publication\n                        ": "",
    "\n                            Spanish (Ecuador)\n                            Spanish (Ecuador)\n                        ": "",
    "\n                            get OID of current session&apos;s temp schema, if any\n                            get OID of current session&apos;s temp schema, if any\n                        ": "",
    "\n                            fetch the Nth following row value\n                            fetch the Nth following row value\n                        ": "",
    "\n                            adjust time with time zone precision\n                            adjust time with time zone precision\n                        ": "",
    "\n                            planner support for generate_series\n                            planner support for generate_series\n                        ": "",
    "\n                            obtain shared advisory lock if available\n                            obtain shared advisory lock if available\n                        ": "",
    "\n                            statistics: number of tuples inserted in current transaction\n                            statistics: number of tuples inserted in current transaction\n                        ": "",
    "\n                            snowball stemmer for lithuanian language\n                            snowball stemmer for lithuanian language\n                        ": "",
    "\n                            Embu\n                            Embu\n                        ": "",
    "\n                            Kyrgyz (Kyrgyzstan)\n                            Kyrgyz (Kyrgyzstan)\n                        ": "",
    "\n                            configuration for norwegian language\n                            configuration for norwegian language\n                        ": "",
    "\n                            sum as bigint across all smallint input values\n                            sum as bigint across all smallint input values\n                        ": "",
    "\n                            is below (allows touching)\n                            is below (allows touching)\n                        ": "",
    "\n                            sine, degrees\n                            sine, degrees\n                        ": "",
    "\n                            Japanese (Japan)\n                            Japanese (Japan)\n                        ": "",
    "\n                            Italian (Italy)\n                            Italian (Italy)\n                        ": "",
    "\n                            registered operator\n                            registered operator\n                        ": "",
    "\n                            implementation of &gt;&gt; operator\n                            implementation of &gt;&gt; operator\n                        ": "",
    "\n                            statistics: number of bytes in temporary files written\n                            statistics: number of bytes in temporary files written\n                        ": "",
    "\n                            Arabic (Sudan)\n                            Arabic (Sudan)\n                        ": "",
    "\n                            conversion for LATIN4 to UTF8\n                            conversion for LATIN4 to UTF8\n                        ": "",
    "\n                            convert jsonb to numeric\n                            convert jsonb to numeric\n                        ": "",
    "\n                            get machine-parseable identification of SQL object\n                            get machine-parseable identification of SQL object\n                        ": "",
    "\n                            Inari Sami (Finland)\n                            Inari Sami (Finland)\n                        ": "",
    "\n                            json aggregate final function\n                            json aggregate final function\n                        ": "",
    "\n                            Hungarian\n                            Hungarian\n                        ": "",
    "\n                            restriction selectivity of &lt;&gt; and related operators\n                            restriction selectivity of &lt;&gt; and related operators\n                        ": "",
    "\n                            int4range constructor\n                            int4range constructor\n                        ": "",
    "\n                            get the available time zone names\n                            get the available time zone names\n                        ": "",
    "\n                            is text search template visible in search path?\n                            is text search template visible in search path?\n                        ": "",
    "\n                            Sango\n                            Sango\n                        ": "",
    "\n                            current user privilege on column by rel name, col attnum\n                            current user privilege on column by rel name, col attnum\n                        ": "",
    "\n                            array subscripts generator\n                            array subscripts generator\n                        ": "",
    "\n                            implementation of !~* operator\n                            implementation of !~* operator\n                        ": "",
    "\n                            snowball stemmer for dutch language\n                            snowball stemmer for dutch language\n                        ": "",
    "\n                            Fulah (Latin, Niger)\n                            Fulah (Latin, Niger)\n                        ": "",
    "\n                            convert int8 to numeric\n                            convert int8 to numeric\n                        ": "",
    "\n                            convert float8 to int4\n                            convert float8 to int4\n                        ": "",
    "\n                            French (Senegal)\n                            French (Senegal)\n                        ": "",
    "\n                            SHOW ALL as a function\n                            SHOW ALL as a function\n                        ": "",
    "\n                            key value pairs of a json object\n                            key value pairs of a json object\n                        ": "",
    "\n                            access control list\n                            access control list\n                        ": "",
    "\n                            French (Wallis &amp; Futuna)\n                            French (Wallis &amp; Futuna)\n                        ": "",
    "\n                            set sequence value and is_called status\n                            set sequence value and is_called status\n                        ": "",
    "\n                            distance between\n                            distance between\n                        ": "",
    "\n                            statistics: recovery conflicts in database caused by shared buffer pin\n                            statistics: recovery conflicts in database caused by shared buffer pin\n                        ": "",
    "\n                            English (Cameroon)\n                            English (Cameroon)\n                        ": "",
    "\n                            configuration for french language\n                            configuration for french language\n                        ": "",
    "\n                            Czech (Czechia)\n                            Czech (Czechia)\n                        ": "",
    "\n                            convert char(n) to text\n                            convert char(n) to text\n                        ": "",
    "\n                            convert classname to regclass\n                            convert classname to regclass\n                        ": "",
    "\n                            MACADDR manufacturer fields\n                            MACADDR manufacturer fields\n                        ": "",
    "\n                            registered role\n                            registered role\n                        ": "",
    "\n                            bounding box of two boxes\n                            bounding box of two boxes\n                        ": "",
    "\n                            user privilege on role by user oid, role name\n                            user privilege on role by user oid, role name\n                        ": "",
    "\n                            referential integrity ON DELETE SET NULL\n                            referential integrity ON DELETE SET NULL\n                        ": "",
    "\n                            conversion for UTF8 to SJIS\n                            conversion for UTF8 to SJIS\n                        ": "",
    "\n                            elements of jsonb array\n                            elements of jsonb array\n                        ": "",
    "\n                            Kalaallisut\n                            Kalaallisut\n                        ": "",
    "\n                            Inari Sami\n                            Inari Sami\n                        ": "",
    "\n                            referential integrity ON DELETE SET DEFAULT\n                            referential integrity ON DELETE SET DEFAULT\n                        ": "",
    "\n                            number of input rows\n                            number of input rows\n                        ": "",
    "\n                            smaller of two\n                            smaller of two\n                        ": "",
    "\n                            NOT tsquery\n                            NOT tsquery\n                        ": "",
    "\n                            view system lock information\n                            view system lock information\n                        ": "",
    "\n                            internal conversion function for LATIN2 to WIN1250\n                            internal conversion function for LATIN2 to WIN1250\n                        ": "",
    "\n                            array cardinality\n                            array cardinality\n                        ": "",
    "\n                            internal conversion function for UTF8 to LATIN1\n                            internal conversion function for UTF8 to LATIN1\n                        ": "",
    "\n                            English (Tokelau)\n                            English (Tokelau)\n                        ": "",
    "\n                            pseudo-type for the result of an FDW handler function\n                            pseudo-type for the result of an FDW handler function\n                        ": "",
    "\n                            user privilege on column by user oid, rel oid, col name\n                            user privilege on column by user oid, rel oid, col name\n                        ": "",
    "\n                            snowball stemmer for norwegian language\n                            snowball stemmer for norwegian language\n                        ": "",
    "\n                            tstzrange constructor\n                            tstzrange constructor\n                        ": "",
    "\n                            restriction selectivity of LIKE\n                            restriction selectivity of LIKE\n                        ": "",
    "\n                            Kikuyu\n                            Kikuyu\n                        ": "",
    "\n                            get value from json as text with path elements\n                            get value from json as text with path elements\n                        ": "",
    "\n                            snowball stemmer for spanish language\n                            snowball stemmer for spanish language\n                        ": "",
    "\n                            bitwise exclusive or\n                            bitwise exclusive or\n                        ": "",
    "\n                            determine if a string is well formed XML document\n                            determine if a string is well formed XML document\n                        ": "",
    "\n                            Romanian\n                            Romanian\n                        ": "",
    "\n                            Akan (Ghana)\n                            Akan (Ghana)\n                        ": "",
    "\n                            statistics: number of tuples changed since last analyze\n                            statistics: number of tuples changed since last analyze\n                        ": "",
    "\n                            oid of replica identity index if any\n                            oid of replica identity index if any\n                        ": "",
    "\n                            statistics: tuples inserted in database\n                            statistics: tuples inserted in database\n                        ": "",
    "\n                            Kabuverdianu\n                            Kabuverdianu\n                        ": "",
    "\n                            English (Anguilla)\n                            English (Anguilla)\n                        ": "",
    "\n                            minimum value of all float4 input values\n                            minimum value of all float4 input values\n                        ": "",
    "\n                            elements of a jsonb array\n                            elements of a jsonb array\n                        ": "",
    "\n                            Aghem\n                            Aghem\n                        ": "",
    "\n                            convert int4 to int8\n                            convert int4 to int8\n                        ": "",
    "\n                            Malay (Brunei)\n                            Malay (Brunei)\n                        ": "",
    "\n                            snowball stemmer for finnish language\n                            snowball stemmer for finnish language\n                        ": "",
    "\n                            Central Kurdish\n                            Central Kurdish\n                        ": "",
    "\n                            minimum value of all numeric input values\n                            minimum value of all numeric input values\n                        ": "",
    "\n                            split string by pattern\n                            split string by pattern\n                        ": "",
    "\n                            cotangent\n                            cotangent\n                        ": "",
    "\n                            maximum value of all timestamp with time zone input values\n                            maximum value of all timestamp with time zone input values\n                        ": "",
    "\n                            French (Luxembourg)\n                            French (Luxembourg)\n                        ": "",
    "\n                            Tajik (Tajikistan)\n                            Tajik (Tajikistan)\n                        ": "",
    "\n                            Kannada\n                            Kannada\n                        ": "",
    "\n                            import collations from operating system\n                            import collations from operating system\n                        ": "",
    "\n                            Javanese (Indonesia)\n                            Javanese (Indonesia)\n                        ": "",
    "\n                            sample variance of smallint input values (square of the sample standard deviation)\n                            sample variance of smallint input values (square of the sample standard deviation)\n                        ": "",
    "\n                            convert timestamp to time\n                            convert timestamp to time\n                        ": "",
    "\n                            referential integrity ON UPDATE SET NULL\n                            referential integrity ON UPDATE SET NULL\n                        ": "",
    "\n                            Igbo\n                            Igbo\n                        ": "",
    "\n                            sample variance of numeric input values (square of the sample standard deviation)\n                            sample variance of numeric input values (square of the sample standard deviation)\n                        ": "",
    "\n                            internal conversion function for KOI8R to ISO-8859-5\n                            internal conversion function for KOI8R to ISO-8859-5\n                        ": "",
    "\n                            Tajik\n                            Tajik\n                        ": "",
    "\n                            Punjabi (Arabic)\n                            Punjabi (Arabic)\n                        ": "",
    "\n                            multiply points (scale/rotate)\n                            multiply points (scale/rotate)\n                        ": "",
    "\n                            SHA-384 hash\n                            SHA-384 hash\n                        ": "",
    "\n                            population standard deviation of integer input values\n                            population standard deviation of integer input values\n                        ": "",
    "\n                            implementation of ||/ operator\n                            implementation of ||/ operator\n                        ": "",
    "\n                            int8range constructor\n                            int8range constructor\n                        ": "",
    "\n                            configuration for spanish language\n                            configuration for spanish language\n                        ": "",
    "\n                            subtract (translate path)\n                            subtract (translate path)\n                        ": "",
    "\n                            Ngomba (Cameroon)\n                            Ngomba (Cameroon)\n                        ": "",
    "\n                            less than or equal by length\n                            less than or equal by length\n                        ": "",
    "\n                            English (Bermuda)\n                            English (Bermuda)\n                        ": "",
    "\n                            negate\n                            negate\n                        ": "",
    "\n                            implementation of ^@ operator\n                            implementation of ^@ operator\n                        ": "",
    "\n                            user privilege on relation by user oid, rel oid\n                            user privilege on relation by user oid, rel oid\n                        ": "",
    "\n                            bitwise and\n                            bitwise and\n                        ": "",
    "\n                            get jsonb object keys\n                            get jsonb object keys\n                        ": "",
    "\n                            statistics: tuples deleted in database\n                            statistics: tuples deleted in database\n                        ": "",
    "\n                            Ossetic (Russia)\n                            Ossetic (Russia)\n                        ": "",
    "\n                            Malayalam (India)\n                            Malayalam (India)\n                        ": "",
    "\n                            get set of records with fields from a json array of objects\n                            get set of records with fields from a json array of objects\n                        ": "",
    "\n                            implementation of ~&lt;=~ operator\n                            implementation of ~&lt;=~ operator\n                        ": "",
    "\n                            conversion for MULE_INTERNAL to LATIN3\n                            conversion for MULE_INTERNAL to LATIN3\n                        ": "",
    "\n                            gin index access method handler\n                            gin index access method handler\n                        ": "",
    "\n                            truncate to integer\n                            truncate to integer\n                        ": "",
    "\n                            conversion for WIN1250 to MULE_INTERNAL\n                            conversion for WIN1250 to MULE_INTERNAL\n                        ": "",
    "\n                            implementation of ?| operator\n                            implementation of ?| operator\n                        ": "",
    "\n                            Irish\n                            Irish\n                        ": "",
    "\n                            Persian (Iran)\n                            Persian (Iran)\n                        ": "",
    "\n                            Colognian\n                            Colognian\n                        ": "",
    "\n                            is text search dictionary visible in search path?\n                            is text search dictionary visible in search path?\n                        ": "",
    "\n                            pseudo-type for the result of a trigger function\n                            pseudo-type for the result of a trigger function\n                        ": "",
    "\n                            constraint description with pretty-print option\n                            constraint description with pretty-print option\n                        ": "",
    "\n                            Azerbaijani\n                            Azerbaijani\n                        ": "",
    "\n                            convert numeric to int4\n                            convert numeric to int4\n                        ": "",
    "\n                            Assamese\n                            Assamese\n                        ": "",
    "\n                            Javanese\n                            Javanese\n                        ": "",
    "\n                            convert name to text\n                            convert name to text\n                        ": "",
    "\n                            French (Guadeloupe)\n                            French (Guadeloupe)\n                        ": "",
    "\n                            subtract point from box (translate)\n                            subtract point from box (translate)\n                        ": "",
    "\n                            internal conversion function for WIN1250 to MULE_INTERNAL\n                            internal conversion function for WIN1250 to MULE_INTERNAL\n                        ": "",
    "\n                            implementation of ~~* operator\n                            implementation of ~~* operator\n                        ": "",
    "\n                            Russian\n                            Russian\n                        ": "",
    "\n                            English (Burundi)\n                            English (Burundi)\n                        ": "",
    "\n                            statistics: reset collected statistics for a single function in the current database\n                            statistics: reset collected statistics for a single function in the current database\n                        ": "",
    "\n                            current user privilege on relation by rel name\n                            current user privilege on relation by rel name\n                        ": "",
    "\n                            referential integrity ON UPDATE CASCADE\n                            referential integrity ON UPDATE CASCADE\n                        ": "",
    "\n                            Shambala\n                            Shambala\n                        ": "",
    "\n                            implementation of @&gt; operator\n                            implementation of @&gt; operator\n                        ": "",
    "\n                            get value from json with path elements\n                            get value from json with path elements\n                        ": "",
    "\n                            center of\n                            center of\n                        ": "",
    "\n                            list DDL actions being executed by the current command\n                            list DDL actions being executed by the current command\n                        ": "",
    "\n                            bitwise-or smallint aggregate\n                            bitwise-or smallint aggregate\n                        ": "",
    "\n                            Ewondo (Cameroon)\n                            Ewondo (Cameroon)\n                        ": "",
    "\n                            Scottish Gaelic (United Kingdom)\n                            Scottish Gaelic (United Kingdom)\n                        ": "",
    "\n                            implementation of &lt;-&gt; operator\n                            implementation of &lt;-&gt; operator\n                        ": "",
    "\n                            Cantonese (Simplified, China)\n                            Cantonese (Simplified, China)\n                        ": "",
    "\n                            join selectivity of NOT ILIKE\n                            join selectivity of NOT ILIKE\n                        ": "",
    "\n                            get set of in-progress txids in snapshot\n                            get set of in-progress txids in snapshot\n                        ": "",
    "\n                            Arabic (Western Sahara)\n                            Arabic (Western Sahara)\n                        ": "",
    "\n                            aggregate input into a json object\n                            aggregate input into a json object\n                        ": "",
    "\n                            aggregate input into jsonb\n                            aggregate input into jsonb\n                        ": "",
    "\n                            sample standard deviation of bigint input values\n                            sample standard deviation of bigint input values\n                        ": "",
    "\n                            conversion for WIN1250 to UTF8\n                            conversion for WIN1250 to UTF8\n                        ": "",
    "\n                            internal type for passing CollectedCommand\n                            internal type for passing CollectedCommand\n                        ": "",
    "\n                            Shambala (Tanzania)\n                            Shambala (Tanzania)\n                        ": "",
    "\n                            French (Comoros)\n                            French (Comoros)\n                        ": "",
    "\n                            Catalan (Spain)\n                            Catalan (Spain)\n                        ": "",
    "\n                            conversion for KOI8R to MULE_INTERNAL\n                            conversion for KOI8R to MULE_INTERNAL\n                        ": "",
    "\n                            statistics: current backend PID\n                            statistics: current backend PID\n                        ": "",
    "\n                            implementation of !~ operator\n                            implementation of !~ operator\n                        ": "",
    "\n                            German\n                            German\n                        ": "",
    "\n                            convert int2 to float4\n                            convert int2 to float4\n                        ": "",
    "\n                            bitwise-and smallint aggregate\n                            bitwise-and smallint aggregate\n                        ": "",
    "\n                            Sindhi (Pakistan)\n                            Sindhi (Pakistan)\n                        ": "",
    "\n                            statistics: number of tuples hot updated\n                            statistics: number of tuples hot updated\n                        ": "",
    "\n                            large object position (64 bit)\n                            large object position (64 bit)\n                        ": "",
    "\n                            Rundi (Burundi)\n                            Rundi (Burundi)\n                        ": "",
    "\n                            Spanish (Equatorial Guinea)\n                            Spanish (Equatorial Guinea)\n                        ": "",
    "\n                            convert int8 to float8\n                            convert int8 to float8\n                        ": "",
    "\n                            Italian (Switzerland)\n                            Italian (Switzerland)\n                        ": "",
    "\n                            y-intercept of the least-squares-fit linear equation determined by the (X, Y) pairs\n                            y-intercept of the least-squares-fit linear equation determined by the (X, Y) pairs\n                        ": "",
    "\n                            quote a data value for usage in a querystring\n                            quote a data value for usage in a querystring\n                        ": "",
    "\n                            get OID-based object address from name/args arrays\n                            get OID-based object address from name/args arrays\n                        ": "",
    "\n                            planner support for network_sub/superset\n                            planner support for network_sub/superset\n                        ": "",
    "\n                            Spanish (Latin America)\n                            Spanish (Latin America)\n                        ": "",
    "\n                            Lithuanian (Lithuania)\n                            Lithuanian (Lithuania)\n                        ": "",
    "\n                            increment by one\n                            increment by one\n                        ": "",
    "\n                            Arabic (Saudi Arabia)\n                            Arabic (Saudi Arabia)\n                        ": "",
    "\n                            conversion for WIN1251 to KOI8R\n                            conversion for WIN1251 to KOI8R\n                        ": "",
    "\n                            Estonian\n                            Estonian\n                        ": "",
    "\n                            Northern Luri (Iraq)\n                            Northern Luri (Iraq)\n                        ": "",
    "\n                            Armenian\n                            Armenian\n                        ": "",
    "\n                            statistics: block write time, in milliseconds\n                            statistics: block write time, in milliseconds\n                        ": "",
    "\n                            French (Morocco)\n                            French (Morocco)\n                        ": "",
    "\n                            implementation of ! operator\n                            implementation of ! operator\n                        ": "",
    "\n                            conversion for EUC_JP to SJIS\n                            conversion for EUC_JP to SJIS\n                        ": "",
    "\n                            extract portion of string\n                            extract portion of string\n                        ": "",
    "\n                            Rwa (Tanzania)\n                            Rwa (Tanzania)\n                        ": "",
    "\n                            internal conversion function for BIG5 to EUC_TW\n                            internal conversion function for BIG5 to EUC_TW\n                        ": "",
    "\n                            Russian (Kazakhstan)\n                            Russian (Kazakhstan)\n                        ": "",
    "\n                            large object open\n                            large object open\n                        ": "",
    "\n                            French (Burundi)\n                            French (Burundi)\n                        ": "",
    "\n                            Persian\n                            Persian\n                        ": "",
    "\n                            view members of a multixactid\n                            view members of a multixactid\n                        ": "",
    "\n                            French (Burkina Faso)\n                            French (Burkina Faso)\n                        ": "",
    "\n                            open path\n                            open path\n                        ": "",
    "\n                            English (Lesotho)\n                            English (Lesotho)\n                        ": "",
    "\n                            internal conversion function for EUC_CN to MULE_INTERNAL\n                            internal conversion function for EUC_CN to MULE_INTERNAL\n                        ": "",
    "\n                            user privilege on column by user oid, rel oid, col attnum\n                            user privilege on column by user oid, rel oid, col attnum\n                        ": "",
    "\n                            configuration for lithuanian language\n                            configuration for lithuanian language\n                        ": "",
    "\n                            conversion for KOI8R to WIN1251\n                            conversion for KOI8R to WIN1251\n                        ": "",
    "\n                            Faroese (Faroe Islands)\n                            Faroese (Faroe Islands)\n                        ": "",
    "\n                            internal conversion function for KOI8R to WIN1251\n                            internal conversion function for KOI8R to WIN1251\n                        ": "",
    "\n                            get value from jsonb as text with path elements\n                            get value from jsonb as text with path elements\n                        ": "",
    "\n                            cosine, degrees\n                            cosine, degrees\n                        ": "",
    "\n                            internal conversion function for EUC_KR to MULE_INTERNAL\n                            internal conversion function for EUC_KR to MULE_INTERNAL\n                        ": "",
    "\n                            Makonde\n                            Makonde\n                        ": "",
    "\n                            format text message\n                            format text message\n                        ": "",
    "\n                            convert numeric to money\n                            convert numeric to money\n                        ": "",
    "\n                            Czech\n                            Czech\n                        ": "",
    "\n                            internal conversion function for MULE_INTERNAL to ISO-8859-5\n                            internal conversion function for MULE_INTERNAL to ISO-8859-5\n                        ": "",
    "\n                            conversion for UTF8 to LATIN7\n                            conversion for UTF8 to LATIN7\n                        ": "",
    "\n                            sum as interval across all interval input values\n                            sum as interval across all interval input values\n                        ": "",
    "\n                            OR-concatenate\n                            OR-concatenate\n                        ": "",
    "\n                            test XML value against XPath expression\n                            test XML value against XPath expression\n                        ": "",
    "\n                            conversion for LATIN3 to UTF8\n                            conversion for LATIN3 to UTF8\n                        ": "",
    "\n                            set 7th bit in macaddr8\n                            set 7th bit in macaddr8\n                        ": "",
    "\n                            format interval to text\n                            format interval to text\n                        ": "",
    "\n                            arctangent\n                            arctangent\n                        ": "",
    "\n                            GiST tsquery support (obsolete)\n                            GiST tsquery support (obsolete)\n                        ": "",
    "\n                            system catalog schema\n                            system catalog schema\n                        ": "",
    "\n                            conversion for SQL_ASCII to UTF8\n                            conversion for SQL_ASCII to UTF8\n                        ": "",
    "\n                            internal conversion function for LATIN3 to MULE_INTERNAL\n                            internal conversion function for LATIN3 to MULE_INTERNAL\n                        ": "",
    "\n                            internal conversion function for MULE_INTERNAL to LATIN2\n                            internal conversion function for MULE_INTERNAL to LATIN2\n                        ": "",
    "\n                            the smallest range which includes both of the given ranges\n                            the smallest range which includes both of the given ranges\n                        ": "",
    "\n                            brin: desummarize page range\n                            brin: desummarize page range\n                        ": "",
    "\n                            aggregate serial function\n                            aggregate serial function\n                        ": "",
    "\n                            brin index access method handler\n                            brin index access method handler\n                        ": "",
    "\n                            Lingala (Central African Republic)\n                            Lingala (Central African Republic)\n                        ": "",
    "\n                            Bambara\n                            Bambara\n                        ": "",
    "\n                            Interlingua\n                            Interlingua\n                        ": "",
    "\n                            join selectivity for array-containment operators\n                            join selectivity for array-containment operators\n                        ": "",
    "\n                            convert text to char\n                            convert text to char\n                        ": "",
    "\n                            Arabic (Syria)\n                            Arabic (Syria)\n                        ": "",
    "\n                            Catalan (France)\n                            Catalan (France)\n                        ": "",
    "\n                            equal by area\n                            equal by area\n                        ": "",
    "\n                            identical\n                            identical\n                        ": "",
    "\n                            implementation of / operator\n                            implementation of / operator\n                        ": "",
    "\n                            extended statistics object description\n                            extended statistics object description\n                        ": "",
    "\n                            time of day\n                            time of day\n                        ": "",
    "\n                            convert a size in human-readable format with size units into bytes\n                            convert a size in human-readable format with size units into bytes\n                        ": "",
    "\n                            factorial\n                            factorial\n                        ": "",
    "\n                            is supernet or equal\n                            is supernet or equal\n                        ": "",
    "\n                            overlaps or is below\n                            overlaps or is below\n                        ": "",
    "\n                            join selectivity of exact prefix\n                            join selectivity of exact prefix\n                        ": "",
    "\n                            non-persistent series generator\n                            non-persistent series generator\n                        ": "",
    "\n                            statistics: transactions rolled back\n                            statistics: transactions rolled back\n                        ": "",
    "\n                            Dzongkha (Bhutan)\n                            Dzongkha (Bhutan)\n                        ": "",
    "\n                            fetch the Nth preceding row value with default\n                            fetch the Nth preceding row value with default\n                        ": "",
    "\n                            implementation of ~* operator\n                            implementation of ~* operator\n                        ": "",
    "\n                            Fulah (Latin, Sierra Leone)\n                            Fulah (Latin, Sierra Leone)\n                        ": "",
    "\n                            Uyghur (China)\n                            Uyghur (China)\n                        ": "",
    "\n                            rotate log file\n                            rotate log file\n                        ": "",
    "\n                            statistics: number of backend requested checkpoints started by the bgwriter\n                            statistics: number of backend requested checkpoints started by the bgwriter\n                        ": "",
    "\n                            Polish\n                            Polish\n                        ": "",
    "\n                            statistics: when last checksum failure was detected in database\n                            statistics: when last checksum failure was detected in database\n                        ": "",
    "\n                            planner support for textregexeq\n                            planner support for textregexeq\n                        ": "",
    "\n                            larger of two\n                            larger of two\n                        ": "",
    "\n                            conversion for UTF8 to KOI8R\n                            conversion for UTF8 to KOI8R\n                        ": "",
    "\n                            map table structure to XML Schema\n                            map table structure to XML Schema\n                        ": "",
    "\n                            greater than by area\n                            greater than by area\n                        ": "",
    "\n                            statistics: number of temporary files written\n                            statistics: number of temporary files written\n                        ": "",
    "\n                            Swiss German\n                            Swiss German\n                        ": "",
    "\n                            Serbian (Latin)\n                            Serbian (Latin)\n                        ": "",
    "\n                            convert macaddr to macaddr8\n                            convert macaddr to macaddr8\n                        ": "",
    "\n                            user privilege on any column by user oid, rel name\n                            user privilege on any column by user oid, rel name\n                        ": "",
    "\n                            Turkish (Cyprus)\n                            Turkish (Cyprus)\n                        ": "",
    "\n                            arctangent, two arguments\n                            arctangent, two arguments\n                        ": "",
    "\n                            key exists\n                            key exists\n                        ": "",
    "\n                            statistics: blocks fetched for database\n                            statistics: blocks fetched for database\n                        ": "",
    "\n                            statistics: number of manual analyzes for a table\n                            statistics: number of manual analyzes for a table\n                        ": "",
    "\n                            restriction selectivity of case-insensitive regex non-match\n                            restriction selectivity of case-insensitive regex non-match\n                        ": "",
    "\n                            statistics: checksum failures detected in database\n                            statistics: checksum failures detected in database\n                        ": "",
    "\n                            radians to degrees\n                            radians to degrees\n                        ": "",
    "\n                            extract field from timestamp with time zone\n                            extract field from timestamp with time zone\n                        ": "",
    "\n                            English (Puerto Rico)\n                            English (Puerto Rico)\n                        ": "",
    "\n                            determine if a string is well formed XML content\n                            determine if a string is well formed XML content\n                        ": "",
    "\n                            Spanish (El Salvador)\n                            Spanish (El Salvador)\n                        ": "",
    "\n                            conversion for UTF8 to LATIN10\n                            conversion for UTF8 to LATIN10\n                        ": "",
    "\n                            length of json array\n                            length of json array\n                        ": "",
    "\n                            deparse an encoded expression\n                            deparse an encoded expression\n                        ": "",
    "\n                            query representation for text search\n                            query representation for text search\n                        ": "",
    "\n                            Spanish (Costa Rica)\n                            Spanish (Costa Rica)\n                        ": "",
    "\n                            user privilege on server by user oid, server oid\n                            user privilege on server by user oid, server oid\n                        ": "",
    "\n                            convert float8 to numeric\n                            convert float8 to numeric\n                        ": "",
    "\n                            Chechen (Russia)\n                            Chechen (Russia)\n                        ": "",
    "\n                            convert point and radius to circle\n                            convert point and radius to circle\n                        ": "",
    "\n                            user privilege on server by username, server oid\n                            user privilege on server by username, server oid\n                        ": "",
    "\n                            create a physical replication slot\n                            create a physical replication slot\n                        ": "",
    "\n                            map table contents to XML\n                            map table contents to XML\n                        ": "",
    "\n                            current statement time\n                            current statement time\n                        ": "",
    "\n                            SP-GiST support\n                            SP-GiST support\n                        ": "",
    "\n                            sleep until the specified time\n                            sleep until the specified time\n                        ": "",
    "\n                            French (Djibouti)\n                            French (Djibouti)\n                        ": "",
    "\n                            Galician (Spain)\n                            Galician (Spain)\n                        ": "",
    "\n                            conversion for UTF8 to UHC\n                            conversion for UTF8 to UHC\n                        ": "",
    "\n                            maximum value of all time input values\n                            maximum value of all time input values\n                        ": "",
    "\n                            fetch the Nth following row value with default\n                            fetch the Nth following row value with default\n                        ": "",
    "\n                            test property of an index column\n                            test property of an index column\n                        ": "",
    "\n                            is statistics object visible in search path?\n                            is statistics object visible in search path?\n                        ": "",
    "\n                            Teso (Uganda)\n                            Teso (Uganda)\n                        ": "",
    "\n                            list of files in the archive_status directory\n                            list of files in the archive_status directory\n                        ": "",
    "\n                            implementation of -&gt; operator\n                            implementation of -&gt; operator\n                        ": "",
    "\n                            implementation of *&gt; operator\n                            implementation of *&gt; operator\n                        ": "",
    "\n                            round to nearest integer\n                            round to nearest integer\n                        ": "",
    "\n                            current user name\n                            current user name\n                        ": "",
    "\n                            hash partition CHECK constraint\n                            hash partition CHECK constraint\n                        ": "",
    "\n                            user privilege on function by user oid, function name\n                            user privilege on function by user oid, function name\n                        ": "",
    "\n                            PostgreSQL version string\n                            PostgreSQL version string\n                        ": "",
    "\n                            conversion for EUC_JIS_2004 to SHIFT_JIS_2004\n                            conversion for EUC_JIS_2004 to SHIFT_JIS_2004\n                        ": "",
    "\n                            remove object fields with null values from json\n                            remove object fields with null values from json\n                        ": "",
    "\n                            boolean-or aggregate\n                            boolean-or aggregate\n                        ": "",
    "\n                            Vietnamese\n                            Vietnamese\n                        ": "",
    "\n                            conversion for UTF8 to LATIN9\n                            conversion for UTF8 to LATIN9\n                        ": "",
    "\n                            statistics: number of auto vacuums for a table\n                            statistics: number of auto vacuums for a table\n                        ": "",
    "\n                            conversion for UTF8 to WIN866\n                            conversion for UTF8 to WIN866\n                        ": "",
    "\n                            Nepali (Nepal)\n                            Nepali (Nepal)\n                        ": "",
    "\n                            pg_controldata general state information as a function\n                            pg_controldata general state information as a function\n                        ": "",
    "\n                            convert bitstring to int4\n                            convert bitstring to int4\n                        ": "",
    "\n                            deparse an encoded expression with pretty-print option\n                            deparse an encoded expression with pretty-print option\n                        ": "",
    "\n                            English (Antigua &amp; Barbuda)\n                            English (Antigua &amp; Barbuda)\n                        ": "",
    "\n                            length of jsonb array\n                            length of jsonb array\n                        ": "",
    "\n                            trigger to suppress updates when new and old records match\n                            trigger to suppress updates when new and old records match\n                        ": "",
    "\n                            Chinese (Simplified, Singapore)\n                            Chinese (Simplified, Singapore)\n                        ": "",
    "\n                            conversion for UTF8 to LATIN3\n                            conversion for UTF8 to LATIN3\n                        ": "",
    "\n                            Catalan (Italy)\n                            Catalan (Italy)\n                        ": "",
    "\n                            convert x, y to point\n                            convert x, y to point\n                        ": "",
    "\n                            Portuguese (Macao SAR China)\n                            Portuguese (Macao SAR China)\n                        ": "",
    "\n                            French (Rwanda)\n                            French (Rwanda)\n                        ": "",
    "\n                            French (Central African Republic)\n                            French (Central African Republic)\n                        ": "",
    "\n                            quote a literal for usage in a querystring\n                            quote a literal for usage in a querystring\n                        ": "",
    "\n                            is subnet or equal\n                            is subnet or equal\n                        ": "",
    "\n                            historical alias for var_samp\n                            historical alias for var_samp\n                        ": "",
    "\n                            conversion for GB18030 to UTF8\n                            conversion for GB18030 to UTF8\n                        ": "",
    "\n                            restriction selectivity of NOT ILIKE\n                            restriction selectivity of NOT ILIKE\n                        ": "",
    "\n                            statistics: port number of client connected to backend\n                            statistics: port number of client connected to backend\n                        ": "",
    "\n                            convert int8 to int4\n                            convert int8 to int4\n                        ": "",
    "\n                            finite interval?\n                            finite interval?\n                        ": "",
    "\n                            Bangla (Bangladesh)\n                            Bangla (Bangladesh)\n                        ": "",
    "\n                            Burmese\n                            Burmese\n                        ": "",
    "\n                            internal conversion function for MULE_INTERNAL to EUC_CN\n                            internal conversion function for MULE_INTERNAL to EUC_CN\n                        ": "",
    "\n                            Sangu (Tanzania)\n                            Sangu (Tanzania)\n                        ": "",
    "\n                            implementation of &lt;&gt; operator\n                            implementation of &lt;&gt; operator\n                        ": "",
    "\n                            configuration for tamil language\n                            configuration for tamil language\n                        ": "",
    "\n                            Ganda\n                            Ganda\n                        ": "",
    "\n                            conversion for KOI8U to UTF8\n                            conversion for KOI8U to UTF8\n                        ": "",
    "\n                            statistics: discard current transaction&apos;s statistics snapshot\n                            statistics: discard current transaction&apos;s statistics snapshot\n                        ": "",
    "\n                            maximum octet length of a character in given encoding\n                            maximum octet length of a character in given encoding\n                        ": "",
    "\n                            Quechua (Peru)\n                            Quechua (Peru)\n                        ": "",
    "\n                            view ancestors of the partition\n                            view ancestors of the partition\n                        ": "",
    "\n                            dynamically-loaded C functions\n                            dynamically-loaded C functions\n                        ": "",
    "\n                            user privilege on database by username, database oid\n                            user privilege on database by username, database oid\n                        ": "",
    "\n                            Arabic (Djibouti)\n                            Arabic (Djibouti)\n                        ": "",
    "\n                            partition constraint description\n                            partition constraint description\n                        ": "",
    "\n                            statistics: last manual vacuum time for a table\n                            statistics: last manual vacuum time for a table\n                        ": "",
    "\n                            get bit\n                            get bit\n                        ": "",
    "\n                            sample standard deviation of smallint input values\n                            sample standard deviation of smallint input values\n                        ": "",
    "\n                            English (Fiji)\n                            English (Fiji)\n                        ": "",
    "\n                            Danish (Greenland)\n                            Danish (Greenland)\n                        ": "",
    "\n                            Spanish (Argentina)\n                            Spanish (Argentina)\n                        ": "",
    "\n                            current wal write location\n                            current wal write location\n                        ": "",
    "\n                            generate headline from jsonb\n                            generate headline from jsonb\n                        ": "",
    "\n                            statistics: number of buffer allocations\n                            statistics: number of buffer allocations\n                        ": "",
    "\n                            intersection point\n                            intersection point\n                        ": "",
    "\n                            bitwise-or integer aggregate\n                            bitwise-or integer aggregate\n                        ": "",
    "\n                            correlation coefficient\n                            correlation coefficient\n                        ": "",
    "\n                            box intersection\n                            box intersection\n                        ": "",
    "\n                            not identical\n                            not identical\n                        ": "",
    "\n                            Spanish (Puerto Rico)\n                            Spanish (Puerto Rico)\n                        ": "",
    "\n                            Chinese\n                            Chinese\n                        ": "",
    "\n                            conversion for MULE_INTERNAL to EUC_TW\n                            conversion for MULE_INTERNAL to EUC_TW\n                        ": "",
    "\n                            number of points\n                            number of points\n                        ": "",
    "\n                            adjust varchar() to typmod length\n                            adjust varchar() to typmod length\n                        ": "",
    "\n                            Duala (Cameroon)\n                            Duala (Cameroon)\n                        ": "",
    "\n                            Korean (South Korea)\n                            Korean (South Korea)\n                        ": "",
    "\n                            concatenate values with separators\n                            concatenate values with separators\n                        ": "",
    "\n                            format timestamp to text\n                            format timestamp to text\n                        ": "",
    "\n                            change netmask of inet\n                            change netmask of inet\n                        ": "",
    "\n                            statistics: number of buffers written by the bgwriter for cleaning dirty buffers\n                            statistics: number of buffers written by the bgwriter for cleaning dirty buffers\n                        ": "",
    "\n                            Kashmiri (India)\n                            Kashmiri (India)\n                        ": "",
    "\n                            English (Guyana)\n                            English (Guyana)\n                        ": "",
    "\n                            statistics: recovery conflicts in database caused by buffer deadlock\n                            statistics: recovery conflicts in database caused by buffer deadlock\n                        ": "",
    "\n                            replace text using regexp\n                            replace text using regexp\n                        ": "",
    "\n                            map array to json\n                            map array to json\n                        ": "",
    "\n                            cancel a server process&apos; current query\n                            cancel a server process&apos; current query\n                        ": "",
    "\n                            restriction selectivity of regex match\n                            restriction selectivity of regex match\n                        ": "",
    "\n                            implementation of &lt;&lt;| operator\n                            implementation of &lt;&lt;| operator\n                        ": "",
    "\n                            Vai (Latin, Liberia)\n                            Vai (Latin, Liberia)\n                        ": "",
    "\n                            implementation of &gt; operator\n                            implementation of &gt; operator\n                        ": "",
    "\n                            fetch the Nth preceding row value\n                            fetch the Nth preceding row value\n                        ": "",
    "\n                            conversion for SJIS to EUC_JP\n                            conversion for SJIS to EUC_JP\n                        ": "",
    "\n                            pg_config binary as a function\n                            pg_config binary as a function\n                        ": "",
    "\n                            English (Gambia)\n                            English (Gambia)\n                        ": "",
    "\n                            internal conversion function for ISO-8859-5 to WIN1251\n                            internal conversion function for ISO-8859-5 to WIN1251\n                        ": "",
    "\n                            Luba-Katanga (Congo - Kinshasa)\n                            Luba-Katanga (Congo - Kinshasa)\n                        ": "",
    "\n                            format numeric to text\n                            format numeric to text\n                        ": "",
    "\n                            rewrite tsquery\n                            rewrite tsquery\n                        ": "",
    "\n                            Kinyarwanda\n                            Kinyarwanda\n                        ": "",
    "\n                            conversion for SJIS to MULE_INTERNAL\n                            conversion for SJIS to MULE_INTERNAL\n                        ": "",
    "\n                            adjust time with time zone to new zone\n                            adjust time with time zone to new zone\n                        ": "",
    "\n                            English (Niue)\n                            English (Niue)\n                        ": "",
    "\n                            adjust bit() to typmod length\n                            adjust bit() to typmod length\n                        ": "",
    "\n                            promote standby server\n                            promote standby server\n                        ": "",
    "\n                            inet address of the server\n                            inet address of the server\n                        ": "",
    "\n                            English (Kiribati)\n                            English (Kiribati)\n                        ": "",
    "\n                            Vunjo\n                            Vunjo\n                        ": "",
    "\n                            cotangent, degrees\n                            cotangent, degrees\n                        ": "",
    "\n                            convert proname to regprocedure\n                            convert proname to regprocedure\n                        ": "",
    "\n                            Tigrinya (Eritrea)\n                            Tigrinya (Eritrea)\n                        ": "",
    "\n                            statistics: number of scans done for table/index\n                            statistics: number of scans done for table/index\n                        ": "",
    "\n                            total disk space usage for the specified database\n                            total disk space usage for the specified database\n                        ": "",
    "\n                            implementation of &lt;&lt; operator\n                            implementation of &lt;&lt; operator\n                        ": "",
    "\n                            float8 difference of two timestamp values\n                            float8 difference of two timestamp values\n                        ": "",
    "\n                            get OIDs of databases in a tablespace\n                            get OIDs of databases in a tablespace\n                        ": "",
    "\n                            Luyia (Kenya)\n                            Luyia (Kenya)\n                        ": "",
    "\n                            get json array element as text\n                            get json array element as text\n                        ": "",
    "\n                            English (India)\n                            English (India)\n                        ": "",
    "\n                            Arabic (Algeria)\n                            Arabic (Algeria)\n                        ": "",
    "\n                            Langi (Tanzania)\n                            Langi (Tanzania)\n                        ": "",
    "\n                            Vai\n                            Vai\n                        ": "",
    "\n                            spgist index access method handler\n                            spgist index access method handler\n                        ": "",
    "\n                            Kannada (India)\n                            Kannada (India)\n                        ": "",
    "\n                            multiply box by point (scale)\n                            multiply box by point (scale)\n                        ": "",
    "\n                            -32 thousand to 32 thousand, 2-byte storage\n                            -32 thousand to 32 thousand, 2-byte storage\n                        ": "",
    "\n                            conversion for UTF8 to ISO-8859-6\n                            conversion for UTF8 to ISO-8859-6\n                        ": "",
    "\n                            BRIN minmax support\n                            BRIN minmax support\n                        ": "",
    "\n                            truncate interval to specified units\n                            truncate interval to specified units\n                        ": "",
    "\n                            user privilege on type by user oid, type oid\n                            user privilege on type by user oid, type oid\n                        ": "",
    "\n                            is below\n                            is below\n                        ": "",
    "\n                            map database contents to XML\n                            map database contents to XML\n                        ": "",
    "\n                            maximum value of all numeric input values\n                            maximum value of all numeric input values\n                        ": "",
    "\n                            Bulgarian\n                            Bulgarian\n                        ": "",
    "\n                            difference in bytes, given two wal locations\n                            difference in bytes, given two wal locations\n                        ": "",
    "\n                            Kamba (Kenya)\n                            Kamba (Kenya)\n                        ": "",
    "\n                            function argument default\n                            function argument default\n                        ": "",
    "\n                            Serbian (Cyrillic, Serbia)\n                            Serbian (Cyrillic, Serbia)\n                        ": "",
    "\n                            Chiga\n                            Chiga\n                        ": "",
    "\n                            current user privilege on role by role name\n                            current user privilege on role by role name\n                        ": "",
    "\n                            internal conversion function for LATIN1 to MULE_INTERNAL\n                            internal conversion function for LATIN1 to MULE_INTERNAL\n                        ": "",
    "\n                            user privilege on function by username, function name\n                            user privilege on function by username, function name\n                        ": "",
    "\n                            Spanish (Belize)\n                            Spanish (Belize)\n                        ": "",
    "\n                            conversion for UTF8 to EUC_KR\n                            conversion for UTF8 to EUC_KR\n                        ": "",
    "\n                            current user privilege on language by language oid\n                            current user privilege on language by language oid\n                        ": "",
    "\n                            configuration for german language\n                            configuration for german language\n                        ": "",
    "\n                            fetch the preceding row value\n                            fetch the preceding row value\n                        ": "",
    "\n                            convert int8 to money\n                            convert int8 to money\n                        ": "",
    "\n                            SP-GiST support for quad tree over point\n                            SP-GiST support for quad tree over point\n                        ": "",
    "\n                            conversion for ISO-8859-6 to UTF8\n                            conversion for ISO-8859-6 to UTF8\n                        ": "",
    "\n                            simple configuration\n                            simple configuration\n                        ": "",
    "\n                            minimum value of all bigint input values\n                            minimum value of all bigint input values\n                        ": "",
    "\n                            concatenate aggregate input into a bytea\n                            concatenate aggregate input into a bytea\n                        ": "",
    "\n                            date and time\n                            date and time\n                        ": "",
    "\n                            Russian (Ukraine)\n                            Russian (Ukraine)\n                        ": "",
    "\n                            statistics: number of times the bgwriter stopped processing when it had written too many buffers while cleaning\n                            statistics: number of times the bgwriter stopped processing when it had written too many buffers while cleaning\n                        ": "",
    "\n                            trim spaces from both ends of string\n                            trim spaces from both ends of string\n                        ": "",
    "\n                            intervals overlap?\n                            intervals overlap?\n                        ": "",
    "\n                            internal conversion function for EUC_TW to MULE_INTERNAL\n                            internal conversion function for EUC_TW to MULE_INTERNAL\n                        ": "",
    "\n                            convert numeric to float8\n                            convert numeric to float8\n                        ": "",
    "\n                            pseudo-type representing a polymorphic base type that is a range\n                            pseudo-type representing a polymorphic base type that is a range\n                        ": "",
    "\n                            is function visible in search path?\n                            is function visible in search path?\n                        ": "",
    "\n                            conversion for UTF8 to EUC_TW\n                            conversion for UTF8 to EUC_TW\n                        ": "",
    "\n                            less than by length\n                            less than by length\n                        ": "",
    "\n                            conversion for WIN866 to ISO-8859-5\n                            conversion for WIN866 to ISO-8859-5\n                        ": "",
    "\n                            Chiga (Uganda)\n                            Chiga (Uganda)\n                        ": "",
    "\n                            Sinhala (Sri Lanka)\n                            Sinhala (Sri Lanka)\n                        ": "",
    "\n                            Chinese (Simplified, China)\n                            Chinese (Simplified, China)\n                        ": "",
    "\n                            English (Finland)\n                            English (Finland)\n                        ": "",
    "\n                            Arabic (Comoros)\n                            Arabic (Comoros)\n                        ": "",
    "\n                            French (Monaco)\n                            French (Monaco)\n                        ": "",
    "\n                            Spanish\n                            Spanish\n                        ": "",
    "\n                            internal conversion function for EUC_KR to UTF8\n                            internal conversion function for EUC_KR to UTF8\n                        ": "",
    "\n                            English (Cyprus)\n                            English (Cyprus)\n                        ": "",
    "\n                            internal conversion function for MULE_INTERNAL to WIN866\n                            internal conversion function for MULE_INTERNAL to WIN866\n                        ": "",
    "\n                            Uzbek (Latin)\n                            Uzbek (Latin)\n                        ": "",
    "\n                            is collation visible in search path?\n                            is collation visible in search path?\n                        ": "",
    "\n                            truncate large object (64 bit)\n                            truncate large object (64 bit)\n                        ": "",
    "\n                            copy a logical replication slot\n                            copy a logical replication slot\n                        ": "",
    "\n                            configuration load time\n                            configuration load time\n                        ": "",
    "\n                            map schema contents to XML\n                            map schema contents to XML\n                        ": "",
    "\n                            Arabic (Iraq)\n                            Arabic (Iraq)\n                        ": "",
    "\n                            Tongan\n                            Tongan\n                        ": "",
    "\n                            Arabic (Egypt)\n                            Arabic (Egypt)\n                        ": "",
    "\n                            trim spaces from left end of string\n                            trim spaces from left end of string\n                        ": "",
    "\n                            name of the current database\n                            name of the current database\n                        ": "",
    "\n                            discrete percentile\n                            discrete percentile\n                        ": "",
    "\n                            join selectivity of &lt;= and related operators on scalar datatypes\n                            join selectivity of &lt;= and related operators on scalar datatypes\n                        ": "",
    "\n                            row number within partition\n                            row number within partition\n                        ": "",
    "\n                            implementation of ?-| operator\n                            implementation of ?-| operator\n                        ": "",
    "\n                            internal conversion function for ISO-8859 2-16 to UTF8\n                            internal conversion function for ISO-8859 2-16 to UTF8\n                        ": "",
    "\n                            convert jsonb to float8\n                            convert jsonb to float8\n                        ": "",
    "\n                            map text array of key value pairs to jsonb object\n                            map text array of key value pairs to jsonb object\n                        ": "",
    "\n                            current user privilege on language by language name\n                            current user privilege on language by language name\n                        ": "",
    "\n                            get jsonb array element as text\n                            get jsonb array element as text\n                        ": "",
    "\n                            implementation of *&lt;= operator\n                            implementation of *&lt;= operator\n                        ": "",
    "\n                            convert time and date to timestamp\n                            convert time and date to timestamp\n                        ": "",
    "\n                            obtain exclusive advisory lock\n                            obtain exclusive advisory lock\n                        ": "",
    "\n                            Tasawaq\n                            Tasawaq\n                        ": "",
    "\n                            user privilege on type by username, type name\n                            user privilege on type by username, type name\n                        ": "",
    "\n                            sample standard deviation of numeric input values\n                            sample standard deviation of numeric input values\n                        ": "",
    "\n                            set sequence value\n                            set sequence value\n                        ": "",
    "\n                            Portuguese (Angola)\n                            Portuguese (Angola)\n                        ": "",
    "\n                            finite date?\n                            finite date?\n                        ": "",
    "\n                            convert float8 to int8\n                            convert float8 to int8\n                        ": "",
    "\n                            row security for current context active on table by table name\n                            row security for current context active on table by table name\n                        ": "",
    "\n                            read large object from offset for length\n                            read large object from offset for length\n                        ": "",
    "\n                            user privilege on type by user oid, type name\n                            user privilege on type by user oid, type name\n                        ": "",
    "\n                            map schema structure to XML Schema\n                            map schema structure to XML Schema\n                        ": "",
    "\n                            Northern Sami (Sweden)\n                            Northern Sami (Sweden)\n                        ": "",
    "\n                            conversion for BIG5 to MULE_INTERNAL\n                            conversion for BIG5 to MULE_INTERNAL\n                        ": "",
    "\n                            drop replication origin identified by its name\n                            drop replication origin identified by its name\n                        ": "",
    "\n                            convert point to empty box\n                            convert point to empty box\n                        ": "",
    "\n                            convert numeric to int2\n                            convert numeric to int2\n                        ": "",
    "\n                            Russian (Russia)\n                            Russian (Russia)\n                        ": "",
    "\n                            Aghem (Cameroon)\n                            Aghem (Cameroon)\n                        ": "",
    "\n                            construct timestamp with time zone\n                            construct timestamp with time zone\n                        ": "",
    "\n                            English (Slovenia)\n                            English (Slovenia)\n                        ": "",
    "\n                            Upper Sorbian (Germany)\n                            Upper Sorbian (Germany)\n                        ": "",
    "\n                            English (Malaysia)\n                            English (Malaysia)\n                        ": "",
    "\n                            change netmask of cidr\n                            change netmask of cidr\n                        ": "",
    "\n                            Taita (Kenya)\n                            Taita (Kenya)\n                        ": "",
    "\n                            Ossetic\n                            Ossetic\n                        ": "",
    "\n                            Greek (Greece)\n                            Greek (Greece)\n                        ": "",
    "\n                            XML content\n                            XML content\n                        ": "",
    "\n                            natural exponential (e^x)\n                            natural exponential (e^x)\n                        ": "",
    "\n                            Catalan\n                            Catalan\n                        ": "",
    "\n                            convert a numeric to a human readable text using size units\n                            convert a numeric to a human readable text using size units\n                        ": "",
    "\n                            float8 difference of two int4 values\n                            float8 difference of two int4 values\n                        ": "",
    "\n                            C-style string\n                            C-style string\n                        ": "",
    "\n                            is above (allows touching)\n                            is above (allows touching)\n                        ": "",
    "\n                            GIN tsvector support (obsolete)\n                            GIN tsvector support (obsolete)\n                        ": "",
    "\n                            Serbian (Latin, Kosovo)\n                            Serbian (Latin, Kosovo)\n                        ": "",
    "\n                            advance logical replication slot\n                            advance logical replication slot\n                        ": "",
    "\n                            statistics: information about WAL archiver\n                            statistics: information about WAL archiver\n                        ": "",
    "\n                            Malay (Singapore)\n                            Malay (Singapore)\n                        ": "",
    "\n                            current user privilege on column by rel oid, col attnum\n                            current user privilege on column by rel oid, col attnum\n                        ": "",
    "\n                            matches LIKE expression\n                            matches LIKE expression\n                        ": "",
    "\n                            map database contents and structure to XML and XML Schema\n                            map database contents and structure to XML and XML Schema\n                        ": "",
    "\n                            Vai (Vai)\n                            Vai (Vai)\n                        ": "",
    "\n                            show real useful query for GiST index\n                            show real useful query for GiST index\n                        ": "",
    "\n                            planner support for interval length coercion\n                            planner support for interval length coercion\n                        ": "",
    "\n                            emit a binary logical decoding message\n                            emit a binary logical decoding message\n                        ": "",
    "\n                            Swiss German (Liechtenstein)\n                            Swiss German (Liechtenstein)\n                        ": "",
    "\n                            Uzbek (Arabic)\n                            Uzbek (Arabic)\n                        ": "",
    "\n                            details about MCV list items\n                            details about MCV list items\n                        ": "",
    "\n                            English (Palau)\n                            English (Palau)\n                        ": "",
    "\n                            Somali\n                            Somali\n                        ": "",
    "\n                            arcsine, degrees\n                            arcsine, degrees\n                        ": "",
    "\n                            Turkish\n                            Turkish\n                        ": "",
    "\n                            Spanish (Uruguay)\n                            Spanish (Uruguay)\n                        ": "",
    "\n                            maximum value of all timestamp input values\n                            maximum value of all timestamp input values\n                        ": "",
    "\n                            snowball stemmer for tamil language\n                            snowball stemmer for tamil language\n                        ": "",
    "\n                            transform specified values from json to tsvector\n                            transform specified values from json to tsvector\n                        ": "",
    "\n                            is the range empty?\n                            is the range empty?\n                        ": "",
    "\n                            Dutch (Caribbean Netherlands)\n                            Dutch (Caribbean Netherlands)\n                        ": "",
    "\n                            user privilege on sequence by user oid, seq name\n                            user privilege on sequence by user oid, seq name\n                        ": "",
    "\n                            concatenate values\n                            concatenate values\n                        ": "",
    "\n                            minimum value of all bpchar input values\n                            minimum value of all bpchar input values\n                        ": "",
    "\n                            statistics: number of buffers written by backends\n                            statistics: number of buffers written by backends\n                        ": "",
    "\n                            array upper dimension\n                            array upper dimension\n                        ": "",
    "\n                            Uzbek (Latin, Uzbekistan)\n                            Uzbek (Latin, Uzbekistan)\n                        ": "",
    "\n                            random value\n                            random value\n                        ": "",
    "\n                            Nuer (South Sudan)\n                            Nuer (South Sudan)\n                        ": "",
    "\n                            debug function for text search configuration\n                            debug function for text search configuration\n                        ": "",
    "\n                            implementation of &lt; operator\n                            implementation of &lt; operator\n                        ": "",
    "\n                            Azerbaijani (Latin)\n                            Azerbaijani (Latin)\n                        ": "",
    "\n                            implementation of * operator\n                            implementation of * operator\n                        ": "",
    "\n                            implementation of &gt;^ operator\n                            implementation of &gt;^ operator\n                        ": "",
    "\n                            Japanese\n                            Japanese\n                        ": "",
    "\n                            is contained by\n                            is contained by\n                        ": "",
    "\n                            Serbian (Cyrillic, Bosnia &amp; Herzegovina)\n                            Serbian (Cyrillic, Bosnia &amp; Herzegovina)\n                        ": "",
    "\n                            Bafia (Cameroon)\n                            Bafia (Cameroon)\n                        ": "",
    "\n                            sum of path segment lengths\n                            sum of path segment lengths\n                        ": "",
    "\n                            convert int2 to float8\n                            convert int2 to float8\n                        ": "",
    "\n                            encode text from encoding to ASCII text\n                            encode text from encoding to ASCII text\n                        ": "",
    "\n                            conversion for WIN1253 to UTF8\n                            conversion for WIN1253 to UTF8\n                        ": "",
    "\n                            statistics: number of tuples deleted\n                            statistics: number of tuples deleted\n                        ": "",
    "\n                            English (Tanzania)\n                            English (Tanzania)\n                        ": "",
    "\n                            English (World)\n                            English (World)\n                        ": "",
    "\n                            implementation of ?# operator\n                            implementation of ?# operator\n                        ": "",
    "\n                            set up a logical replication slot\n                            set up a logical replication slot\n                        ": "",
    "\n                            current user privilege on relation by rel oid\n                            current user privilege on relation by rel oid\n                        ": "",
    "\n                            replace any occurrences of an element in an array\n                            replace any occurrences of an element in an array\n                        ": "",
    "\n                            clean up GIN pending list\n                            clean up GIN pending list\n                        ": "",
    "\n                            Fulah (Latin, Ghana)\n                            Fulah (Latin, Ghana)\n                        ": "",
    "\n                            convert char to char(n)\n                            convert char to char(n)\n                        ": "",
    "\n                            English (St. Vincent &amp; Grenadines)\n                            English (St. Vincent &amp; Grenadines)\n                        ": "",
    "\n                            French (St. Martin)\n                            French (St. Martin)\n                        ": "",
    "\n                            minimum value of all timestamp with time zone input values\n                            minimum value of all timestamp with time zone input values\n                        ": "",
    "\n                            implementation of &gt;= operator\n                            implementation of &gt;= operator\n                        ": "",
    "\n                            JSON stored as text\n                            JSON stored as text\n                        ": "",
    "\n                            the average (arithmetic mean) as float8 of all float4 values\n                            the average (arithmetic mean) as float8 of all float4 values\n                        ": "",
    "\n                            split string by field_sep and return field_num\n                            split string by field_sep and return field_num\n                        ": "",
    "\n                            built-in functions\n                            built-in functions\n                        ": "",
    "\n                            convert int2 to int4\n                            convert int2 to int4\n                        ": "",
    "\n                            total disk space usage for the specified tablespace\n                            total disk space usage for the specified tablespace\n                        ": "",
    "\n                            server&apos;s port number for this connection\n                            server&apos;s port number for this connection\n                        ": "",
    "\n                            current user privilege on foreign data wrapper by foreign data wrapper name\n                            current user privilege on foreign data wrapper by foreign data wrapper name\n                        ": "",
    "\n                            statistics: blocks found in cache for database\n                            statistics: blocks found in cache for database\n                        ": "",
    "\n                            large object export\n                            large object export\n                        ": "",
    "\n                            return name of given index build phase\n                            return name of given index build phase\n                        ": "",
    "\n                            Xhosa (South Africa)\n                            Xhosa (South Africa)\n                        ": "",
    "\n                            minimum value of all timestamp input values\n                            minimum value of all timestamp input values\n                        ": "",
    "\n                            conversion for EUC_CN to MULE_INTERNAL\n                            conversion for EUC_CN to MULE_INTERNAL\n                        ": "",
    "\n                            English (Botswana)\n                            English (Botswana)\n                        ": "",
    "\n                            current user privilege on tablespace by tablespace oid\n                            current user privilege on tablespace by tablespace oid\n                        ": "",
    "\n                            upper bound of range\n                            upper bound of range\n                        ": "",
    "\n                            restriction selectivity for array-containment operators\n                            restriction selectivity for array-containment operators\n                        ": "",
    "\n                            I/O\n                            I/O\n                        ": "",
    "\n                            subtract points (translate)\n                            subtract points (translate)\n                        ": "",
    "\n                            Sangu\n                            Sangu\n                        ": "",
    "\n                            Punjabi (Arabic, Pakistan)\n                            Punjabi (Arabic, Pakistan)\n                        ": "",
    "\n                            Langi\n                            Langi\n                        ": "",
    "\n                            Ewe (Togo)\n                            Ewe (Togo)\n                        ": "",
    "\n                            release exclusive advisory lock\n                            release exclusive advisory lock\n                        ": "",
    "\n                            time of day with time zone\n                            time of day with time zone\n                        ": "",
    "\n                            sequence next value\n                            sequence next value\n                        ": "",
    "\n                            Cherokee\n                            Cherokee\n                        ": "",
    "\n                            subtract\n                            subtract\n                        ": "",
    "\n                            json aggregate transition function\n                            json aggregate transition function\n                        ": "",
    "\n                            user privilege on sequence by username, seq oid\n                            user privilege on sequence by username, seq oid\n                        ": "",
    "\n                            English (Switzerland)\n                            English (Switzerland)\n                        ": "",
    "\n                            Quechua\n                            Quechua\n                        ": "",
    "\n                            minimum value of all time with time zone input values\n                            minimum value of all time with time zone input values\n                        ": "",
    "\n                            Quechua (Ecuador)\n                            Quechua (Ecuador)\n                        ": "",
    "\n                            statistics: tuples updated in database\n                            statistics: tuples updated in database\n                        ": "",
    "\n                            json object aggregate transition function\n                            json object aggregate transition function\n                        ": "",
    "\n                            adjust numeric to typmod precision/scale\n                            adjust numeric to typmod precision/scale\n                        ": "",
    "\n                            jsonpath query first item\n                            jsonpath query first item\n                        ": "",
    "\n                            SYSTEM tablesample method handler\n                            SYSTEM tablesample method handler\n                        ": "",
    "\n                            large object import\n                            large object import\n                        ": "",
    "\n                            is left of\n                            is left of\n                        ": "",
    "\n                            b-tree index access method\n                            b-tree index access method\n                        ": "",
    "\n                            divide box by point (scale)\n                            divide box by point (scale)\n                        ": "",
    "\n                            hyperbolic sine\n                            hyperbolic sine\n                        ": "",
    "\n                            English (Seychelles)\n                            English (Seychelles)\n                        ": "",
    "\n                            English (Dominica)\n                            English (Dominica)\n                        ": "",
    "\n                            conversion for UTF8 to EUC_JP\n                            conversion for UTF8 to EUC_JP\n                        ": "",
    "\n                            Azerbaijani (Latin, Azerbaijan)\n                            Azerbaijani (Latin, Azerbaijan)\n                        ": "",
    "\n                            statistics: recovery conflicts in database caused by snapshot expiry\n                            statistics: recovery conflicts in database caused by snapshot expiry\n                        ": "",
    "\n                            conversion for LATIN4 to MULE_INTERNAL\n                            conversion for LATIN4 to MULE_INTERNAL\n                        ": "",
    "\n                            Dutch (Aruba)\n                            Dutch (Aruba)\n                        ": "",
    "\n                            English (Liberia)\n                            English (Liberia)\n                        ": "",
    "\n                            convert char to text\n                            convert char to text\n                        ": "",
    "\n                            large object close\n                            large object close\n                        ": "",
    "\n                            Bemba\n                            Bemba\n                        ": "",
    "\n                            extract text matching regular expression\n                            extract text matching regular expression\n                        ": "",
    "\n                            range typanalyze\n                            range typanalyze\n                        ": "",
    "\n                            convert SQL99 regexp pattern to POSIX style\n                            convert SQL99 regexp pattern to POSIX style\n                        ": "",
    "\n                            convert float4 to float8\n                            convert float4 to float8\n                        ": "",
    "\n                            Arabic (Libya)\n                            Arabic (Libya)\n                        ": "",
    "\n                            date difference from today preserving months and years\n                            date difference from today preserving months and years\n                        ": "",
    "\n                            returns whether a relation can be part of a publication\n                            returns whether a relation can be part of a publication\n                        ": "",
    "\n                            German (Austria)\n                            German (Austria)\n                        ": "",
    "\n                            statistics: number of timed checkpoints started by the bgwriter\n                            statistics: number of timed checkpoints started by the bgwriter\n                        ": "",
    "\n                            statistics: information about currently active replication\n                            statistics: information about currently active replication\n                        ": "",
    "\n                            user privilege on role by user oid, role oid\n                            user privilege on role by user oid, role oid\n                        ": "",
    "\n                            user privilege on column by user oid, rel name, col name\n                            user privilege on column by user oid, rel name, col name\n                        ": "",
    "\n                            read text from a file - old version for adminpack 1.0\n                            read text from a file - old version for adminpack 1.0\n                        ": "",
    "\n                            French (Benin)\n                            French (Benin)\n                        ": "",
    "\n                            convert int4 to bitstring\n                            convert int4 to bitstring\n                        ": "",
    "\n                            number of nodes\n                            number of nodes\n                        ": "",
    "\n                            Hausa\n                            Hausa\n                        ": "",
    "\n                            planner support for varchar length coercion\n                            planner support for varchar length coercion\n                        ": "",
    "\n                            convert numeric to float4\n                            convert numeric to float4\n                        ": "",
    "\n                            current transaction time\n                            current transaction time\n                        ": "",
    "\n                            (block, offset), physical location of tuple\n                            (block, offset), physical location of tuple\n                        ": "",
    "\n                            is conversion visible in search path?\n                            is conversion visible in search path?\n                        ": "",
    "\n                            object identifier(oid), maximum 4 billion\n                            object identifier(oid), maximum 4 billion\n                        ": "",
    "\n                            hash\n                            hash\n                        ": "",
    "\n                            Hebrew (Israel)\n                            Hebrew (Israel)\n                        ": "",
    "\n                            English (Ireland)\n                            English (Ireland)\n                        ": "",
    "\n                            Cornish\n                            Cornish\n                        ": "",
    "\n                            geometric polygon &apos;(pt1,...)&apos;\n                            geometric polygon &apos;(pt1,...)&apos;\n                        ": "",
    "\n                            network IP address/netmask, network address\n                            network IP address/netmask, network address\n                        ": "",
    "\n                            pseudo-type representing a polymorphic array type\n                            pseudo-type representing a polymorphic array type\n                        ": "",
    "\n                            English (Malawi)\n                            English (Malawi)\n                        ": "",
    "\n                            convert int2 to numeric\n                            convert int2 to numeric\n                        ": "",
    "\n                            Italian\n                            Italian\n                        ": "",
    "\n                            construct time\n                            construct time\n                        ": "",
    "\n                            conversion for WIN874 to UTF8\n                            conversion for WIN874 to UTF8\n                        ": "",
    "\n                            Masai\n                            Masai\n                        ": "",
    "\n                            Tibetan\n                            Tibetan\n                        ": "",
    "\n                            multiply\n                            multiply\n                        ": "",
    "\n                            Cornish (United Kingdom)\n                            Cornish (United Kingdom)\n                        ": "",
    "\n                            current user privilege on role by role oid\n                            current user privilege on role by role oid\n                        ": "",
    "\n                            implementation of ?- operator\n                            implementation of ?- operator\n                        ": "",
    "\n                            copy a logical replication slot, changing temporality\n                            copy a logical replication slot, changing temporality\n                        ": "",
    "\n                            cosine\n                            cosine\n                        ": "",
    "\n                            English (Jersey)\n                            English (Jersey)\n                        ": "",
    "\n                            statistics: number of tuples deleted in current transaction\n                            statistics: number of tuples deleted in current transaction\n                        ": "",
    "\n                            user privilege on foreign data wrapper by username, foreign data wrapper oid\n                            user privilege on foreign data wrapper by username, foreign data wrapper oid\n                        ": "",
    "\n                            index description (full create statement or single expression) with pretty-print option\n                            index description (full create statement or single expression) with pretty-print option\n                        ": "",
    "\n                            is txid visible in snapshot?\n                            is txid visible in snapshot?\n                        ": "",
    "\n                            Samburu\n                            Samburu\n                        ": "",
    "\n                            normalize one word by dictionary\n                            normalize one word by dictionary\n                        ": "",
    "\n                            gist index access method handler\n                            gist index access method handler\n                        ": "",
    "\n                            BERNOULLI tablesample method handler\n                            BERNOULLI tablesample method handler\n                        ": "",
    "\n                            convert varchar to name\n                            convert varchar to name\n                        ": "",
    "\n                            extract field from time with time zone\n                            extract field from time with time zone\n                        ": "",
    "\n                            Dutch\n                            Dutch\n                        ": "",
    "\n                            Lingala (Congo - Brazzaville)\n                            Lingala (Congo - Brazzaville)\n                        ": "",
    "\n                            pseudo-type for the result of a function with no real result\n                            pseudo-type for the result of a function with no real result\n                        ": "",
    "\n                            join selectivity for network operators\n                            join selectivity for network operators\n                        ": "",
    "\n                            implementation of &lt;@ operator\n                            implementation of &lt;@ operator\n                        ": "",
    "\n                            synonym dictionary: replace word by its synonym\n                            synonym dictionary: replace word by its synonym\n                        ": "",
    "\n                            implementation of ## operator\n                            implementation of ## operator\n                        ": "",
    "\n                            row security for current context active on table by table oid\n                            row security for current context active on table by table oid\n                        ": "",
    "\n                            transform to tsquery\n                            transform to tsquery\n                        ": "",
    "\n                            Low German (Germany)\n                            Low German (Germany)\n                        ": "",
    "\n                            conversion for MULE_INTERNAL to SQL_ASCII\n                            conversion for MULE_INTERNAL to SQL_ASCII\n                        ": "",
    "\n                            Wolof\n                            Wolof\n                        ": "",
    "\n                            internal conversion function for SHIFT_JIS_2004 to EUC_JIS_2004\n                            internal conversion function for SHIFT_JIS_2004 to EUC_JIS_2004\n                        ": "",
    "\n                            aggregate deserial function\n                            aggregate deserial function\n                        ": "",
    "\n                            Persian (Afghanistan)\n                            Persian (Afghanistan)\n                        ": "",
    "\n                            join selectivity of case-insensitive regex non-match\n                            join selectivity of case-insensitive regex non-match\n                        ": "",
    "\n                            convert an int8 range to canonical form\n                            convert an int8 range to canonical form\n                        ": "",
    "\n                            Oromo\n                            Oromo\n                        ": "",
    "\n                            referential integrity ON UPDATE NO ACTION\n                            referential integrity ON UPDATE NO ACTION\n                        ": "",
    "\n                            current trigger depth\n                            current trigger depth\n                        ": "",
    "\n                            Tachelhit (Latin)\n                            Tachelhit (Latin)\n                        ": "",
    "\n                            create new large object with given content\n                            create new large object with given content\n                        ": "",
    "\n                            sum of path segments\n                            sum of path segments\n                        ": "",
    "\n                            minimum value of all float8 input values\n                            minimum value of all float8 input values\n                        ": "",
    "\n                            wal filename, given a wal location\n                            wal filename, given a wal location\n                        ": "",
    "\n                            expand tsvector to set of rows\n                            expand tsvector to set of rows\n                        ": "",
    "\n                            @ &lt;number&gt; &lt;units&gt;, time interval\n                            @ &lt;number&gt; &lt;units&gt;, time interval\n                        ": "",
    "\n                            Tachelhit (Tifinagh, Morocco)\n                            Tachelhit (Tifinagh, Morocco)\n                        ": "",
    "\n                            statistics: recovery conflicts in database caused by relation lock\n                            statistics: recovery conflicts in database caused by relation lock\n                        ": "",
    "\n                            Zulu (South Africa)\n                            Zulu (South Africa)\n                        ": "",
    "\n                            SP-GiST support for quad tree over polygons\n                            SP-GiST support for quad tree over polygons\n                        ": "",
    "\n                            Ewe\n                            Ewe\n                        ": "",
    "\n                            population variance of float8 input values (square of the population standard deviation)\n                            population variance of float8 input values (square of the population standard deviation)\n                        ": "",
    "\n                            internal conversion function for EUC_JIS_2004 to SHIFT_JIS_2004\n                            internal conversion function for EUC_JIS_2004 to SHIFT_JIS_2004\n                        ": "",
    "\n                            Gujarati (India)\n                            Gujarati (India)\n                        ": "",
    "\n                            SHA-224 hash\n                            SHA-224 hash\n                        ": "",
    "\n                            Koyraboro Senni (Mali)\n                            Koyraboro Senni (Mali)\n                        ": "",
    "\n                            internal conversion function for SJIS to MULE_INTERNAL\n                            internal conversion function for SJIS to MULE_INTERNAL\n                        ": "",
    "\n                            convert jsonb to float4\n                            convert jsonb to float4\n                        ": "",
    "\n                            Spanish (Brazil)\n                            Spanish (Brazil)\n                        ": "",
    "\n                            integer rank with gaps\n                            integer rank with gaps\n                        ": "",
    "\n                            Sichuan Yi\n                            Sichuan Yi\n                        ": "",
    "\n                            registered operator (with args)\n                            registered operator (with args)\n                        ": "",
    "\n                            promote groups of 30 days to numbers of months\n                            promote groups of 30 days to numbers of months\n                        ": "",
    "\n                            validate an operator class\n                            validate an operator class\n                        ": "",
    "\n                            client&apos;s port number for this connection\n                            client&apos;s port number for this connection\n                        ": "",
    "\n                            is the range&apos;s lower bound inclusive?\n                            is the range&apos;s lower bound inclusive?\n                        ": "",
    "\n                            conversion for UTF8 to ISO-8859-8\n                            conversion for UTF8 to ISO-8859-8\n                        ": "",
    "\n                            Danish\n                            Danish\n                        ": "",
    "\n                            evaluate XPath expression\n                            evaluate XPath expression\n                        ": "",
    "\n                            convert int4 to boolean\n                            convert int4 to boolean\n                        ": "",
    "\n                            fixed-length bit string\n                            fixed-length bit string\n                        ": "",
    "\n                            internal conversion function for MULE_INTERNAL to LATIN3\n                            internal conversion function for MULE_INTERNAL to LATIN3\n                        ": "",
    "\n                            rotate log file - old version for adminpack 1.0\n                            rotate log file - old version for adminpack 1.0\n                        ": "",
    "\n                            is text search parser visible in search path?\n                            is text search parser visible in search path?\n                        ": "",
    "\n                            Fulah (Latin, Guinea)\n                            Fulah (Latin, Guinea)\n                        ": "",
    "\n                            convert jsonb to int2\n                            convert jsonb to int2\n                        ": "",
    "\n                            Esperanto\n                            Esperanto\n                        ": "",
    "\n                            Gusii\n                            Gusii\n                        ": "",
    "\n                            map row to json\n                            map row to json\n                        ": "",
    "\n                            current user privilege on column by rel oid, col name\n                            current user privilege on column by rel oid, col name\n                        ": "",
    "\n                            first value of the input enum type\n                            first value of the input enum type\n                        ": "",
    "\n                            integer rank without gaps\n                            integer rank without gaps\n                        ": "",
    "\n                            Irish (United Kingdom)\n                            Irish (United Kingdom)\n                        ": "",
    "\n                            Hungarian (Hungary)\n                            Hungarian (Hungary)\n                        ": "",
    "\n                            restriction selectivity of NOT LIKE\n                            restriction selectivity of NOT LIKE\n                        ": "",
    "\n                            get top-most partition root parent\n                            get top-most partition root parent\n                        ": "",
    "\n                            Tachelhit (Latin, Morocco)\n                            Tachelhit (Latin, Morocco)\n                        ": "",
    "\n                            Kyrgyz\n                            Kyrgyz\n                        ": "",
    "\n                            Polish (Poland)\n                            Polish (Poland)\n                        ": "",
    "\n                            reload configuration files\n                            reload configuration files\n                        ": "",
    "\n                            modulus\n                            modulus\n                        ": "",
    "\n                            value rounded to &apos;scale&apos; of zero\n                            value rounded to &apos;scale&apos; of zero\n                        ": "",
    "\n                            disk space usage for the main fork of the specified table or index\n                            disk space usage for the main fork of the specified table or index\n                        ": "",
    "\n                            minimum value of all oid input values\n                            minimum value of all oid input values\n                        ": "",
    "\n                            float8 difference of two numeric values\n                            float8 difference of two numeric values\n                        ": "",
    "\n                            result type of a function\n                            result type of a function\n                        ": "",
    "\n                            array constructor with value\n                            array constructor with value\n                        ": "",
    "\n                            SP-GiST support for quad tree over range\n                            SP-GiST support for quad tree over range\n                        ": "",
    "\n                            French (Mauritania)\n                            French (Mauritania)\n                        ": "",
    "\n                            teardown configured replication progress tracking\n                            teardown configured replication progress tracking\n                        ": "",
    "\n                            Punjabi (Gurmukhi)\n                            Punjabi (Gurmukhi)\n                        ": "",
    "\n                            conversion for WIN866 to KOI8R\n                            conversion for WIN866 to KOI8R\n                        ": "",
    "\n                            convert text to timestamp with time zone\n                            convert text to timestamp with time zone\n                        ": "",
    "\n                            less than or equal by area\n                            less than or equal by area\n                        ": "",
    "\n                            phrase-concatenate\n                            phrase-concatenate\n                        ": "",
    "\n                            user privilege on any column by user oid, rel oid\n                            user privilege on any column by user oid, rel oid\n                        ": "",
    "\n                            user privilege on column by username, rel name, col name\n                            user privilege on column by username, rel name, col name\n                        ": "",
    "\n                            Yiddish (World)\n                            Yiddish (World)\n                        ": "",
    "\n                            internal conversion function for SJIS to UTF8\n                            internal conversion function for SJIS to UTF8\n                        ": "",
    "\n                            txid snapshot\n                            txid snapshot\n                        ": "",
    "\n                            JSON path\n                            JSON path\n                        ": "",
    "\n                            get xmin of snapshot\n                            get xmin of snapshot\n                        ": "",
    "\n                            jsonpath match\n                            jsonpath match\n                        ": "",
    "\n                            range difference\n                            range difference\n                        ": "",
    "\n                            conversion for UTF8 to LATIN1\n                            conversion for UTF8 to LATIN1\n                        ": "",
    "\n                            English (Europe)\n                            English (Europe)\n                        ": "",
    "\n                            list files in the log directory\n                            list files in the log directory\n                        ": "",
    "\n                            transform string values from json to tsvector\n                            transform string values from json to tsvector\n                        ": "",
    "\n                            English (Barbados)\n                            English (Barbados)\n                        ": "",
    "\n                            build tsvector from array of lexemes\n                            build tsvector from array of lexemes\n                        ": "",
    "\n                            Kalaallisut (Greenland)\n                            Kalaallisut (Greenland)\n                        ": "",
    "\n                            natural logarithm\n                            natural logarithm\n                        ": "",
    "\n                            GiST tsquery support\n                            GiST tsquery support\n                        ": "",
    "\n                            internal conversion function for SHIFT_JIS_2004 to UTF8\n                            internal conversion function for SHIFT_JIS_2004 to UTF8\n                        ": "",
    "\n                            right-pad string to length\n                            right-pad string to length\n                        ": "",
    "\n                            date\n                            date\n                        ": "",
    "\n                            Oromo (Ethiopia)\n                            Oromo (Ethiopia)\n                        ": "",
    "\n                            the average (arithmetic mean) as numeric of all numeric values\n                            the average (arithmetic mean) as numeric of all numeric values\n                        ": "",
    "\n                            snowball stemmer for arabic language\n                            snowball stemmer for arabic language\n                        ": "",
    "\n                            Cebuano\n                            Cebuano\n                        ": "",
    "\n                            user privilege on schema by user oid, schema oid\n                            user privilege on schema by user oid, schema oid\n                        ": "",
    "\n                            statistics: number of tuples read by seqscan in current transaction\n                            statistics: number of tuples read by seqscan in current transaction\n                        ": "",
    "\n                            statistics: number of tuples inserted\n                            statistics: number of tuples inserted\n                        ": "",
    "\n                            deprecated, use ! instead\n                            deprecated, use ! instead\n                        ": "",
    "\n                            type of the argument\n                            type of the argument\n                        ": "",
    "\n                            bucket number of operand in equal-width histogram\n                            bucket number of operand in equal-width histogram\n                        ": "",
    "\n                            Korean\n                            Korean\n                        ": "",
    "\n                            convert ACL item array to table, primarily for use by information schema\n                            convert ACL item array to table, primarily for use by information schema\n                        ": "",
    "\n                            English (Cocos [Keeling] Islands)\n                            English (Cocos [Keeling] Islands)\n                        ": "",
    "\n                            convert interval to time\n                            convert interval to time\n                        ": "",
    "\n                            user privilege on database by user oid, database name\n                            user privilege on database by user oid, database name\n                        ": "",
    "\n                            Albanian (North Macedonia)\n                            Albanian (North Macedonia)\n                        ": "",
    "\n                            Ukrainian (Ukraine)\n                            Ukrainian (Ukraine)\n                        ": "",
    "\n                            snowball stemmer for english language\n                            snowball stemmer for english language\n                        ": "",
    "\n                            implementation of |&gt;&gt; operator\n                            implementation of |&gt;&gt; operator\n                        ": "",
    "\n                            Albanian\n                            Albanian\n                        ": "",
    "\n                            statistics: block read time, in milliseconds\n                            statistics: block read time, in milliseconds\n                        ": "",
    "\n                            Asu (Tanzania)\n                            Asu (Tanzania)\n                        ": "",
    "\n                            area of circle\n                            area of circle\n                        ": "",
    "\n                            Kako (Cameroon)\n                            Kako (Cameroon)\n                        ": "",
    "\n                            Yangben (Cameroon)\n                            Yangben (Cameroon)\n                        ": "",
    "\n                            Odia (India)\n                            Odia (India)\n                        ": "",
    "\n                            SP-GiST support for k-d tree over point\n                            SP-GiST support for k-d tree over point\n                        ": "",
    "\n                            Slovenian\n                            Slovenian\n                        ": "",
    "\n                            delete path\n                            delete path\n                        ": "",
    "\n                            returns an array of offsets of some value in array\n                            returns an array of offsets of some value in array\n                        ": "",
    "\n                            Xhosa\n                            Xhosa\n                        ": "",
    "\n                            English (Northern Mariana Islands)\n                            English (Northern Mariana Islands)\n                        ": "",
    "\n                            UUID datatype\n                            UUID datatype\n                        ": "",
    "\n                            English (United Kingdom)\n                            English (United Kingdom)\n                        ": "",
    "\n                            Tamil (Sri Lanka)\n                            Tamil (Sri Lanka)\n                        ": "",
    "\n                            referential integrity ON DELETE RESTRICT\n                            referential integrity ON DELETE RESTRICT\n                        ": "",
    "\n                            Turkmen\n                            Turkmen\n                        ": "",
    "\n                            lseg on line\n                            lseg on line\n                        ": "",
    "\n                            registered namespace\n                            registered namespace\n                        ": "",
    "\n                            boolean, &apos;true&apos;/&apos;false&apos;\n                            boolean, &apos;true&apos;/&apos;false&apos;\n                        ": "",
    "\n                            format a type oid and atttypmod to canonical SQL\n                            format a type oid and atttypmod to canonical SQL\n                        ": "",
    "\n                            restriction selectivity of &gt;= and related operators on scalar datatypes\n                            restriction selectivity of &gt;= and related operators on scalar datatypes\n                        ": "",
    "\n                            convert oid to int8\n                            convert oid to int8\n                        ": "",
    "\n                            implementation of &lt;^ operator\n                            implementation of &lt;^ operator\n                        ": "",
    "\n                            maximum value of all bpchar input values\n                            maximum value of all bpchar input values\n                        ": "",
    "\n                            implementation of !~~ operator\n                            implementation of !~~ operator\n                        ": "",
    "\n                            split rows into N groups\n                            split rows into N groups\n                        ": "",
    "\n                            text representation for text search\n                            text representation for text search\n                        ": "",
    "\n                            fractional row number within partition\n                            fractional row number within partition\n                        ": "",
    "\n                            Tamil (Singapore)\n                            Tamil (Singapore)\n                        ": "",
    "\n                            restriction selectivity of regex non-match\n                            restriction selectivity of regex non-match\n                        ": "",
    "\n                            user privilege on language by user oid, language oid\n                            user privilege on language by user oid, language oid\n                        ": "",
    "\n                            English (Falkland Islands)\n                            English (Falkland Islands)\n                        ": "",
    "\n                            user privilege on database by username, database name\n                            user privilege on database by username, database name\n                        ": "",
    "\n                            true if wal replay is paused\n                            true if wal replay is paused\n                        ": "",
    "\n                            commit status of transaction\n                            commit status of transaction\n                        ": "",
    "\n                            statistics: information about WAL receiver\n                            statistics: information about WAL receiver\n                        ": "",
    "\n                            conversion for MULE_INTERNAL to LATIN2\n                            conversion for MULE_INTERNAL to LATIN2\n                        ": "",
    "\n                            conversion for LATIN2 to UTF8\n                            conversion for LATIN2 to UTF8\n                        ": "",
    "\n                            return reason code for table getting rewritten\n                            return reason code for table getting rewritten\n                        ": "",
    "\n                            internal conversion function for MULE_INTERNAL to BIG5\n                            internal conversion function for MULE_INTERNAL to BIG5\n                        ": "",
    "\n                            restriction selectivity for area-comparison operators\n                            restriction selectivity for area-comparison operators\n                        ": "",
    "\n                            implementation of ~= operator\n                            implementation of ~= operator\n                        ": "",
    "\n                            split delimited text into text[]\n                            split delimited text into text[]\n                        ": "",
    "\n                            range union\n                            range union\n                        ": "",
    "\n                            planner support for varbit length coercion\n                            planner support for varbit length coercion\n                        ": "",
    "\n                            PI\n                            PI\n                        ": "",
    "\n                            remove object fields with null values from jsonb\n                            remove object fields with null values from jsonb\n                        ": "",
    "\n                            extract the last n characters\n                            extract the last n characters\n                        ": "",
    "\n                            inverse hyperbolic tangent\n                            inverse hyperbolic tangent\n                        ": "",
    "\n                            conversion for LATIN8 to UTF8\n                            conversion for LATIN8 to UTF8\n                        ": "",
    "\n                            Arabic (Qatar)\n                            Arabic (Qatar)\n                        ": "",
    "\n                            fetch the Nth row value\n                            fetch the Nth row value\n                        ": "",
    "\n                            netmask of address\n                            netmask of address\n                        ": "",
    "\n                            position of sub-bitstring\n                            position of sub-bitstring\n                        ": "",
    "\n                            Tigrinya\n                            Tigrinya\n                        ": "",
    "\n                            French (Guinea)\n                            French (Guinea)\n                        ": "",
    "\n                            list an extension&apos;s version update paths\n                            list an extension&apos;s version update paths\n                        ": "",
    "\n                            Bemba (Zambia)\n                            Bemba (Zambia)\n                        ": "",
    "\n                            concatenate XML values\n                            concatenate XML values\n                        ": "",
    "\n                            map text arrays of keys and values to json object\n                            map text arrays of keys and values to json object\n                        ": "",
    "\n                            conversion for ISO-8859-5 to UTF8\n                            conversion for ISO-8859-5 to UTF8\n                        ": "",
    "\n                            Faroese (Denmark)\n                            Faroese (Denmark)\n                        ": "",
    "\n                            get parser&apos;s token types\n                            get parser&apos;s token types\n                        ": "",
    "\n                            implementation of *&lt; operator\n                            implementation of *&lt; operator\n                        ": "",
    "\n                            the average (arithmetic mean) as numeric of all bigint values\n                            the average (arithmetic mean) as numeric of all bigint values\n                        ": "",
    "\n                            Swahili (Kenya)\n                            Swahili (Kenya)\n                        ": "",
    "\n                            English (Malta)\n                            English (Malta)\n                        ": "",
    "\n                            tsvector typanalyze\n                            tsvector typanalyze\n                        ": "",
    "\n                            statistics: number of blocks fetched\n                            statistics: number of blocks fetched\n                        ": "",
    "\n                            release all advisory locks\n                            release all advisory locks\n                        ": "",
    "\n                            Chinese (Simplified, Macao SAR China)\n                            Chinese (Simplified, Macao SAR China)\n                        ": "",
    "\n                            English (Norfolk Island)\n                            English (Norfolk Island)\n                        ": "",
    "\n                            conversion for SJIS to UTF8\n                            conversion for SJIS to UTF8\n                        ": "",
    "\n                            internal conversion function for LATIN1 to UTF8\n                            internal conversion function for LATIN1 to UTF8\n                        ": "",
    "\n                            Hawaiian\n                            Hawaiian\n                        ": "",
    "\n                            restriction selectivity of &lt;= and related operators on scalar datatypes\n                            restriction selectivity of &lt;= and related operators on scalar datatypes\n                        ": "",
    "\n                            internal conversion function for BIG5 to MULE_INTERNAL\n                            internal conversion function for BIG5 to MULE_INTERNAL\n                        ": "",
    "\n                            conversion for WIN1257 to UTF8\n                            conversion for WIN1257 to UTF8\n                        ": "",
    "\n                            prepare for taking an online backup\n                            prepare for taking an online backup\n                        ": "",
    "\n                            Filipino (Philippines)\n                            Filipino (Philippines)\n                        ": "",
    "\n                            obtain exclusive advisory lock if available\n                            obtain exclusive advisory lock if available\n                        ": "",
    "\n                            English (Philippines)\n                            English (Philippines)\n                        ": "",
    "\n                            SET X as a function\n                            SET X as a function\n                        ": "",
    "\n                            Basque\n                            Basque\n                        ": "",
    "\n                            current user privilege on function by function name\n                            current user privilege on function by function name\n                        ": "",
    "\n                            get the type of a json value\n                            get the type of a json value\n                        ": "",
    "\n                            conversion for UTF8 to WIN1253\n                            conversion for UTF8 to WIN1253\n                        ": "",
    "\n                            concatenate aggregate input into an array\n                            concatenate aggregate input into an array\n                        ": "",
    "\n                            Yoruba (Nigeria)\n                            Yoruba (Nigeria)\n                        ": "",
    "\n                            list all files in a directory\n                            list all files in a directory\n                        ": "",
    "\n                            maximum value of all date input values\n                            maximum value of all date input values\n                        ": "",
    "\n                            Georgian (Georgia)\n                            Georgian (Georgia)\n                        ": "",
    "\n                            internal conversion function for WIN1251 to ISO-8859-5\n                            internal conversion function for WIN1251 to ISO-8859-5\n                        ": "",
    "\n                            truncate timestamp with time zone to specified units\n                            truncate timestamp with time zone to specified units\n                        ": "",
    "\n                            Azerbaijani (Cyrillic, Azerbaijan)\n                            Azerbaijani (Cyrillic, Azerbaijan)\n                        ": "",
    "\n                            English (United Arab Emirates)\n                            English (United Arab Emirates)\n                        ": "",
    "\n                            Jola-Fonyi (Senegal)\n                            Jola-Fonyi (Senegal)\n                        ": "",
    "\n                            user privilege on schema by username, schema name\n                            user privilege on schema by username, schema name\n                        ": "",
    "\n                            value rounded to &apos;scale&apos;\n                            value rounded to &apos;scale&apos;\n                        ": "",
    "\n                            Arabic (Tunisia)\n                            Arabic (Tunisia)\n                        ": "",
    "\n                            English (Pitcairn Islands)\n                            English (Pitcairn Islands)\n                        ": "",
    "\n                            convert int4 to float8\n                            convert int4 to float8\n                        ": "",
    "\n                            Lakota (United States)\n                            Lakota (United States)\n                        ": "",
    "\n                            convert string with specified source encoding name\n                            convert string with specified source encoding name\n                        ": "",
    "\n                            build a json array from any inputs\n                            build a json array from any inputs\n                        ": "",
    "\n                            Hausa (Nigeria)\n                            Hausa (Nigeria)\n                        ": "",
    "\n                            deprecated, use @&gt; instead\n                            deprecated, use @&gt; instead\n                        ": "",
    "\n                            extract text matching SQL99 regular expression\n                            extract text matching SQL99 regular expression\n                        ": "",
    "\n                            French (France)\n                            French (France)\n                        ": "",
    "\n                            convert circle to box\n                            convert circle to box\n                        ": "",
    "\n                            Lakota\n                            Lakota\n                        ": "",
    "\n                            get actual version of collation from operating system\n                            get actual version of collation from operating system\n                        ": "",
    "\n                            set given weight for given lexemes\n                            set given weight for given lexemes\n                        ": "",
    "\n                            average of the dependent variable (sum(Y)/N)\n                            average of the dependent variable (sum(Y)/N)\n                        ": "",
    "\n                            Machame (Tanzania)\n                            Machame (Tanzania)\n                        ": "",
    "\n                            Sena (Mozambique)\n                            Sena (Mozambique)\n                        ": "",
    "\n                            Walser\n                            Walser\n                        ": "",
    "\n                            implementation of *&gt;= operator\n                            implementation of *&gt;= operator\n                        ": "",
    "\n                            returns an offset of value in array with start index\n                            returns an offset of value in array with start index\n                        ": "",
    "\n                            current date and time - increments during transactions\n                            current date and time - increments during transactions\n                        ": "",
    "\n                            Luyia\n                            Luyia\n                        ": "",
    "\n                            implementation of + operator\n                            implementation of + operator\n                        ": "",
    "\n                            geometric circle &apos;(center,radius)&apos;\n                            geometric circle &apos;(center,radius)&apos;\n                        ": "",
    "\n                            GIN support\n                            GIN support\n                        ": "",
    "\n                            user privilege on schema by user oid, schema name\n                            user privilege on schema by user oid, schema name\n                        ": "",
    "\n                            user privilege on relation by username, rel oid\n                            user privilege on relation by username, rel oid\n                        ": "",
    "\n                            text search match\n                            text search match\n                        ": "",
    "\n                            format timestamp with time zone to text\n                            format timestamp with time zone to text\n                        ": "",
    "\n                            varchar(length), non-blank-padded string, variable storage length\n                            varchar(length), non-blank-padded string, variable storage length\n                        ": "",
    "\n                            minimum value of all time input values\n                            minimum value of all time input values\n                        ": "",
    "\n                            path closed?\n                            path closed?\n                        ": "",
    "\n                            point inside box\n                            point inside box\n                        ": "",
    "\n                            Bosnian (Cyrillic, Bosnia &amp; Herzegovina)\n                            Bosnian (Cyrillic, Bosnia &amp; Herzegovina)\n                        ": "",
    "\n                            implementation of |&amp;&gt; operator\n                            implementation of |&amp;&gt; operator\n                        ": "",
    "\n                            truncate timestamp with time zone to specified units in specified time zone\n                            truncate timestamp with time zone to specified units in specified time zone\n                        ": "",
    "\n                            user privilege on tablespace by user oid, tablespace oid\n                            user privilege on tablespace by user oid, tablespace oid\n                        ": "",
    "\n                            planner support for time length coercion\n                            planner support for time length coercion\n                        ": "",
    "\n                            extract field from interval\n                            extract field from interval\n                        ": "",
    "\n                            hash index access method\n                            hash index access method\n                        ": "",
    "\n                            trim selected characters from left end of string\n                            trim selected characters from left end of string\n                        ": "",
    "\n                            perform a non-validating parse of a character string to produce an XML value\n                            perform a non-validating parse of a character string to produce an XML value\n                        ": "",
    "\n                            Fulah (Latin, Nigeria)\n                            Fulah (Latin, Nigeria)\n                        ": "",
    "\n                            join selectivity for containment comparison operators\n                            join selectivity for containment comparison operators\n                        ": "",
    "\n                            Quechua (Bolivia)\n                            Quechua (Bolivia)\n                        ": "",
    "\n                            conversion for KOI8R to ISO-8859-5\n                            conversion for KOI8R to ISO-8859-5\n                        ": "",
    "\n                            create a named restore point\n                            create a named restore point\n                        ": "",
    "\n                            internal conversion function for UTF8 to GBK\n                            internal conversion function for UTF8 to GBK\n                        ": "",
    "\n                            replicate string n times\n                            replicate string n times\n                        ": "",
    "\n                            convert float4 to numeric\n                            convert float4 to numeric\n                        ": "",
    "\n                            convert polygon to bounding box\n                            convert polygon to bounding box\n                        ": "",
    "\n                            conversion for LATIN1 to UTF8\n                            conversion for LATIN1 to UTF8\n                        ": "",
    "\n                            the average (arithmetic mean) as interval of all interval values\n                            the average (arithmetic mean) as interval of all interval values\n                        ": "",
    "\n                            Spanish (Philippines)\n                            Spanish (Philippines)\n                        ": "",
    "\n                            variable-length bit string\n                            variable-length bit string\n                        ": "",
    "\n                            snowball stemmer for french language\n                            snowball stemmer for french language\n                        ": "",
    "\n                            English (Kenya)\n                            English (Kenya)\n                        ": "",
    "\n                            transaction id\n                            transaction id\n                        ": "",
    "\n                            bytes required to store the value, perhaps with compression\n                            bytes required to store the value, perhaps with compression\n                        ": "",
    "\n                            conversion for UTF8 to KOI8U\n                            conversion for UTF8 to KOI8U\n                        ": "",
    "\n                            Lithuanian\n                            Lithuanian\n                        ": "",
    "\n                            English (Gibraltar)\n                            English (Gibraltar)\n                        ": "",
    "\n                            conversion for UTF8 to WIN1255\n                            conversion for UTF8 to WIN1255\n                        ": "",
    "\n                            Rombo (Tanzania)\n                            Rombo (Tanzania)\n                        ": "",
    "\n                            Northern Luri\n                            Northern Luri\n                        ": "",
    "\n                            range of timestamps without time zone\n                            range of timestamps without time zone\n                        ": "",
    "\n                            large object create\n                            large object create\n                        ": "",
    "\n                            Ngiemboon\n                            Ngiemboon\n                        ": "",
    "\n                            Arabic\n                            Arabic\n                        ": "",
    "\n                            array of oids, used in system tables\n                            array of oids, used in system tables\n                        ": "",
    "\n                            ~18 digit integer, 8-byte storage\n                            ~18 digit integer, 8-byte storage\n                        ": "",
    "\n                            internal conversion function for UTF8 to WIN\n                            internal conversion function for UTF8 to WIN\n                        ": "",
    "\n                            jsonpath query wrapped into array\n                            jsonpath query wrapped into array\n                        ": "",
    "\n                            Greek\n                            Greek\n                        ": "",
    "\n                            conversion for ISO-8859-5 to WIN866\n                            conversion for ISO-8859-5 to WIN866\n                        ": "",
    "\n                            internal conversion function for MULE_INTERNAL to SJIS\n                            internal conversion function for MULE_INTERNAL to SJIS\n                        ": "",
    "\n                            Burmese (Myanmar [Burma])\n                            Burmese (Myanmar [Burma])\n                        ": "",
    "\n                            convert time with time zone and date to timestamp with time zone\n                            convert time with time zone and date to timestamp with time zone\n                        ": "",
    "\n                            Bosnian (Latin)\n                            Bosnian (Latin)\n                        ": "",
    "\n                            get value from jsonb with path elements\n                            get value from jsonb with path elements\n                        ": "",
    "\n                            tangent\n                            tangent\n                        ": "",
    "\n                            minimum value of all date input values\n                            minimum value of all date input values\n                        ": "",
    "\n                            strip position information\n                            strip position information\n                        ": "",
    "\n                            disk space usage for all indexes attached to the specified table\n                            disk space usage for all indexes attached to the specified table\n                        ": "",
    "\n                            French (Niger)\n                            French (Niger)\n                        ": "",
    "\n                            delete lexemes that do not have one of the given weights\n                            delete lexemes that do not have one of the given weights\n                        ": "",
    "\n                            base 10 logarithm\n                            base 10 logarithm\n                        ": "",
    "\n                            copy a physical replication slot\n                            copy a physical replication slot\n                        ": "",
    "\n                            internal conversion function for WIN866 to WIN1251\n                            internal conversion function for WIN866 to WIN1251\n                        ": "",
    "\n                            Vai (Latin)\n                            Vai (Latin)\n                        ": "",
    "\n                            set bit\n                            set bit\n                        ": "",
    "\n                            geometric point &apos;(x, y)&apos;\n                            geometric point &apos;(x, y)&apos;\n                        ": "",
    "\n                            square root\n                            square root\n                        ": "",
    "\n                            list of SQL keywords\n                            list of SQL keywords\n                        ": "",
    "\n                            English (St. Kitts &amp; Nevis)\n                            English (St. Kitts &amp; Nevis)\n                        ": "",
    "\n                            generate XML comment\n                            generate XML comment\n                        ": "",
    "\n                            implementation of &amp;&gt; operator\n                            implementation of &amp;&gt; operator\n                        ": "",
    "\n                            Punjabi (Gurmukhi, India)\n                            Punjabi (Gurmukhi, India)\n                        ": "",
    "\n                            make ACL item\n                            make ACL item\n                        ": "",
    "\n                            block range index (BRIN) access method\n                            block range index (BRIN) access method\n                        ": "",
    "\n                            elements of json array\n                            elements of json array\n                        ": "",
    "\n                            conversion for LATIN10 to UTF8\n                            conversion for LATIN10 to UTF8\n                        ": "",
    "\n                            starts with\n                            starts with\n                        ": "",
    "\n                            greater than or equal by area\n                            greater than or equal by area\n                        ": "",
    "\n                            English (St. Lucia)\n                            English (St. Lucia)\n                        ": "",
    "\n                            Fulah (Latin, Senegal)\n                            Fulah (Latin, Senegal)\n                        ": "",
    "\n                            snowball stemmer\n                            snowball stemmer\n                        ": "",
    "\n                            English (Papua New Guinea)\n                            English (Papua New Guinea)\n                        ": "",
    "\n                            range of dates\n                            range of dates\n                        ": "",
    "\n                            statistics: number of backend buffer writes that did their own fsync\n                            statistics: number of backend buffer writes that did their own fsync\n                        ": "",
    "\n                            definition of a function\n                            definition of a function\n                        ": "",
    "\n                            Lingala (Congo - Kinshasa)\n                            Lingala (Congo - Kinshasa)\n                        ": "",
    "\n                            Croatian (Croatia)\n                            Croatian (Croatia)\n                        ": "",
    "\n                            Chakma\n                            Chakma\n                        ": "",
    "\n                            convert ascii-encoded text string into bytea value\n                            convert ascii-encoded text string into bytea value\n                        ": "",
    "\n                            Arabic (World)\n                            Arabic (World)\n                        ": "",
    "\n                            English (Australia)\n                            English (Australia)\n                        ": "",
    "\n                            Punjabi\n                            Punjabi\n                        ": "",
    "\n                            conversion for MULE_INTERNAL to KOI8R\n                            conversion for MULE_INTERNAL to KOI8R\n                        ": "",
    "\n                            get binary changes from replication slot\n                            get binary changes from replication slot\n                        ": "",
    "\n                            jsonpath exists test\n                            jsonpath exists test\n                        ": "",
    "\n                            the average (arithmetic mean) as numeric of all smallint values\n                            the average (arithmetic mean) as numeric of all smallint values\n                        ": "",
    "\n                            configuration for hungarian language\n                            configuration for hungarian language\n                        ": "",
    "\n                            array typanalyze\n                            array typanalyze\n                        ": "",
    "\n                            does not match LIKE expression\n                            does not match LIKE expression\n                        ": "",
    "\n                            English (Trinidad &amp; Tobago)\n                            English (Trinidad &amp; Tobago)\n                        ": "",
    "\n                            internal conversion function for KOI8U to UTF8\n                            internal conversion function for KOI8U to UTF8\n                        ": "",
    "\n                            Latvian (Latvia)\n                            Latvian (Latvia)\n                        ": "",
    "\n                            translate the replication origin&apos;s name to its id\n                            translate the replication origin&apos;s name to its id\n                        ": "",
    "\n                            transform to tsvector\n                            transform to tsvector\n                        ": "",
    "\n                            construct timestamp\n                            construct timestamp\n                        ": "",
    "\n                            Arabic (Somalia)\n                            Arabic (Somalia)\n                        ": "",
    "\n                            internal conversion function for UHC to UTF8\n                            internal conversion function for UHC to UTF8\n                        ": "",
    "\n                            French (New Caledonia)\n                            French (New Caledonia)\n                        ": "",
    "\n                            switch to new wal file\n                            switch to new wal file\n                        ": "",
    "\n                            English (Rwanda)\n                            English (Rwanda)\n                        ": "",
    "\n                            conversion for MULE_INTERNAL to WIN1251\n                            conversion for MULE_INTERNAL to WIN1251\n                        ": "",
    "\n                            conversion for UTF8 to WIN1254\n                            conversion for UTF8 to WIN1254\n                        ": "",
    "\n                            current user privilege on type by type name\n                            current user privilege on type by type name\n                        ": "",
    "\n                            get the fraction of the asynchronous notification queue currently in use\n                            get the fraction of the asynchronous notification queue currently in use\n                        ": "",
    "\n                            statistics: start time for current query of backend\n                            statistics: start time for current query of backend\n                        ": "",
    "\n                            internal conversion function for SJIS to EUC_JP\n                            internal conversion function for SJIS to EUC_JP\n                        ": "",
    "\n                            current schema search list\n                            current schema search list\n                        ": "",
    "\n                            the average (arithmetic mean) as float8 of all float8 values\n                            the average (arithmetic mean) as float8 of all float8 values\n                        ": "",
    "\n                            English (Macao SAR China)\n                            English (Macao SAR China)\n                        ": "",
    "\n                            Low German (Netherlands)\n                            Low German (Netherlands)\n                        ": "",
    "\n                            increment, ignores second argument\n                            increment, ignores second argument\n                        ": "",
    "\n                            German (Italy)\n                            German (Italy)\n                        ": "",
    "\n                            statistics: transactions committed\n                            statistics: transactions committed\n                        ": "",
    "\n                            Uyghur\n                            Uyghur\n                        ": "",
    "\n                            internal conversion function for LATIN2 to MULE_INTERNAL\n                            internal conversion function for LATIN2 to MULE_INTERNAL\n                        ": "",
    "\n                            implementation of &gt;&gt;= operator\n                            implementation of &gt;&gt;= operator\n                        ": "",
    "\n                            conversion for WIN1251 to MULE_INTERNAL\n                            conversion for WIN1251 to MULE_INTERNAL\n                        ": "",
    "\n                            pseudo-type for the result of an event trigger function\n                            pseudo-type for the result of an event trigger function\n                        ": "",
    "\n                            statistics: current query of backend\n                            statistics: current query of backend\n                        ": "",
    "\n                            Tasawaq (Niger)\n                            Tasawaq (Niger)\n                        ": "",
    "\n                            minimum value of all tid input values\n                            minimum value of all tid input values\n                        ": "",
    "\n                            Malayalam\n                            Malayalam\n                        ": "",
    "\n                            Dzongkha\n                            Dzongkha\n                        ": "",
    "\n                            adjust varbit() to typmod length\n                            adjust varbit() to typmod length\n                        ": "",
    "\n                            Ossetic (Georgia)\n                            Ossetic (Georgia)\n                        ": "",
    "\n                            map a set of characters appearing in string\n                            map a set of characters appearing in string\n                        ": "",
    "\n                            current user privilege on database by database name\n                            current user privilege on database by database name\n                        ": "",
    "\n                            sample covariance\n                            sample covariance\n                        ": "",
    "\n                            internal conversion function for UTF8 to EUC_KR\n                            internal conversion function for UTF8 to EUC_KR\n                        ": "",
    "\n                            internal conversion function for EUC_JP to MULE_INTERNAL\n                            internal conversion function for EUC_JP to MULE_INTERNAL\n                        ": "",
    "\n                            Lao\n                            Lao\n                        ": "",
    "\n                            Ganda (Uganda)\n                            Ganda (Uganda)\n                        ": "",
    "\n                            single character\n                            single character\n                        ": "",
    "\n                            value truncated to &apos;scale&apos; of zero\n                            value truncated to &apos;scale&apos; of zero\n                        ": "",
    "\n                            read entire large object\n                            read entire large object\n                        ": "",
    "\n                            Esperanto (World)\n                            Esperanto (World)\n                        ": "",
    "\n                            English (Sint Maarten)\n                            English (Sint Maarten)\n                        ": "",
    "\n                            deprecated, use current_user instead\n                            deprecated, use current_user instead\n                        ": "",
    "\n                            Arabic (Jordan)\n                            Arabic (Jordan)\n                        ": "",
    "\n                            Somali (Somalia)\n                            Somali (Somalia)\n                        ": "",
    "\n                            statistics: last auto analyze time for a table\n                            statistics: last auto analyze time for a table\n                        ": "",
    "\n                            maximum value of all smallint input values\n                            maximum value of all smallint input values\n                        ": "",
    "\n                            Tamil (Malaysia)\n                            Tamil (Malaysia)\n                        ": "",
    "\n                            implementation of &amp;&lt;| operator\n                            implementation of &amp;&lt;| operator\n                        ": "",
    "\n                            internal conversion function for WIN866 to ISO-8859-5\n                            internal conversion function for WIN866 to ISO-8859-5\n                        ": "",
    "\n                            user privilege on tablespace by username, tablespace oid\n                            user privilege on tablespace by username, tablespace oid\n                        ": "",
    "\n                            thesaurus dictionary: phrase by phrase substitution\n                            thesaurus dictionary: phrase by phrase substitution\n                        ": "",
    "\n                            maximum value of all time with time zone input values\n                            maximum value of all time with time zone input values\n                        ": "",
    "\n                            English (Turks &amp; Caicos Islands)\n                            English (Turks &amp; Caicos Islands)\n                        ": "",
    "\n                            conversion for MULE_INTERNAL to LATIN1\n                            conversion for MULE_INTERNAL to LATIN1\n                        ": "",
    "\n                            internal conversion function for MULE_INTERNAL to LATIN4\n                            internal conversion function for MULE_INTERNAL to LATIN4\n                        ": "",
    "\n                            convert name to char(n)\n                            convert name to char(n)\n                        ": "",
    "\n                            sum as money across all money input values\n                            sum as money across all money input values\n                        ": "",
    "\n                            serialize an XML value to a character string\n                            serialize an XML value to a character string\n                        ": "",
    "\n                            Spanish (Dominican Republic)\n                            Spanish (Dominican Republic)\n                        ": "",
    "\n                            GiST index access method\n                            GiST index access method\n                        ": "",
    "\n                            Amharic (Ethiopia)\n                            Amharic (Ethiopia)\n                        ": "",
    "\n                            registered type\n                            registered type\n                        ": "",
    "\n                            prepend element onto front of array\n                            prepend element onto front of array\n                        ": "",
    "\n                            number of input rows in which both expressions are not null\n                            number of input rows in which both expressions are not null\n                        ": "",
    "\n                            Romansh\n                            Romansh\n                        ": "",
    "\n                            conversion for UTF8 to WIN1257\n                            conversion for UTF8 to WIN1257\n                        ": "",
    "\n                            restriction selectivity of &lt; and related operators on scalar datatypes\n                            restriction selectivity of &lt; and related operators on scalar datatypes\n                        ": "",
    "\n                            Tibetan (China)\n                            Tibetan (China)\n                        ": "",
    "\n                            convert operator name to regoper\n                            convert operator name to regoper\n                        ": "",
    "\n                            statistics: information about progress of backends running maintenance command\n                            statistics: information about progress of backends running maintenance command\n                        ": "",
    "\n                            statistics: last reset for the bgwriter\n                            statistics: last reset for the bgwriter\n                        ": "",
    "\n                            read bytea from a file\n                            read bytea from a file\n                        ": "",
    "\n                            Shona\n                            Shona\n                        ": "",
    "\n                            Standard Moroccan Tamazight (Morocco)\n                            Standard Moroccan Tamazight (Morocco)\n                        ": "",
    "\n                            statistics: number of backends in database\n                            statistics: number of backends in database\n                        ": "",
    "\n                            maximum value of all bigint input values\n                            maximum value of all bigint input values\n                        ": "",
    "\n                            Breton (France)\n                            Breton (France)\n                        ": "",
    "\n                            conversion for MULE_INTERNAL to WIN866\n                            conversion for MULE_INTERNAL to WIN866\n                        ": "",
    "\n                            current value from last used sequence\n                            current value from last used sequence\n                        ": "",
    "\n                            resume wal replay, if it was paused\n                            resume wal replay, if it was paused\n                        ": "",
    "\n                            finish taking an online backup\n                            finish taking an online backup\n                        ": "",
    "\n                            English (U.S. Outlying Islands)\n                            English (U.S. Outlying Islands)\n                        ": "",
    "\n                            Basaa\n                            Basaa\n                        ": "",
    "\n                            get json object field\n                            get json object field\n                        ": "",
    "\n                            Swedish (Sweden)\n                            Swedish (Sweden)\n                        ": "",
    "\n                            Bena\n                            Bena\n                        ": "",
    "\n                            Luxembourgish\n                            Luxembourgish\n                        ": "",
    "\n                            French (Cameroon)\n                            French (Cameroon)\n                        ": "",
    "\n                            convert time to interval\n                            convert time to interval\n                        ": "",
    "\n                            Catalan (Andorra)\n                            Catalan (Andorra)\n                        ": "",
    "\n                            multiply (rotate/scale path)\n                            multiply (rotate/scale path)\n                        ": "",
    "\n                            configuration for irish language\n                            configuration for irish language\n                        ": "",
    "\n                            Sakha\n                            Sakha\n                        ": "",
    "\n                            find match(es) for regexp\n                            find match(es) for regexp\n                        ": "",
    "\n                            session user name\n                            session user name\n                        ": "",
    "\n                            Spanish (Chile)\n                            Spanish (Chile)\n                        ": "",
    "\n                            deprecated, use @@ instead\n                            deprecated, use @@ instead\n                        ": "",
    "\n                            convert time with time zone to time\n                            convert time with time zone to time\n                        ": "",
    "\n                            SP-GiST support for quad tree over box\n                            SP-GiST support for quad tree over box\n                        ": "",
    "\n                            conversion for SQL_ASCII to MULE_INTERNAL\n                            conversion for SQL_ASCII to MULE_INTERNAL\n                        ": "",
    "\n                            Telugu\n                            Telugu\n                        ": "",
    "\n                            snowball stemmer for german language\n                            snowball stemmer for german language\n                        ": "",
    "\n                            Bangla (India)\n                            Bangla (India)\n                        ": "",
    "\n                            Swahili\n                            Swahili\n                        ": "",
    "\n                            get xmax of snapshot\n                            get xmax of snapshot\n                        ": "",
    "\n                            join selectivity of case-insensitive regex match\n                            join selectivity of case-insensitive regex match\n                        ": "",
    "\n                            geometric line\n                            geometric line\n                        ": "",
    "\n                            internal conversion function for UTF8 to EUC_CN\n                            internal conversion function for UTF8 to EUC_CN\n                        ": "",
    "\n                            character length\n                            character length\n                        ": "",
    "\n                            Tongan (Tonga)\n                            Tongan (Tonga)\n                        ": "",
    "\n                            snowball stemmer for irish language\n                            snowball stemmer for irish language\n                        ": "",
    "\n                            Arabic (South Sudan)\n                            Arabic (South Sudan)\n                        ": "",
    "\n                            convert namespace name to regnamespace\n                            convert namespace name to regnamespace\n                        ": "",
    "\n                            Northern Sami\n                            Northern Sami\n                        ": "",
    "\n                            English (Namibia)\n                            English (Namibia)\n                        ": "",
    "\n                            Portuguese (Cape Verde)\n                            Portuguese (Cape Verde)\n                        ": "",
    "\n                            sum as bigint across all integer input values\n                            sum as bigint across all integer input values\n                        ": "",
    "\n                            Serbian\n                            Serbian\n                        ": "",
    "\n                            configuration for turkish language\n                            configuration for turkish language\n                        ": "",
    "\n                            internal conversion function for UTF8 to EUC_JIS_2004\n                            internal conversion function for UTF8 to EUC_JIS_2004\n                        ": "",
    "\n                            conversion for KOI8R to UTF8\n                            conversion for KOI8R to UTF8\n                        ": "",
    "\n                            conversion for UTF8 to WIN874\n                            conversion for UTF8 to WIN874\n                        ": "",
    "\n                            parse qualified identifier to array of identifiers\n                            parse qualified identifier to array of identifiers\n                        ": "",
    "\n                            Fulah (Latin)\n                            Fulah (Latin)\n                        ": "",
    "\n                            convert operator name to regoperator\n                            convert operator name to regoperator\n                        ": "",
    "\n                            Hawaiian (United States)\n                            Hawaiian (United States)\n                        ": "",
    "\n                            capitalize each word\n                            capitalize each word\n                        ": "",
    "\n                            MD5 hash\n                            MD5 hash\n                        ": "",
    "\n                            Tamil (India)\n                            Tamil (India)\n                        ": "",
    "\n                            Teso (Kenya)\n                            Teso (Kenya)\n                        ": "",
    "\n                            array length\n                            array length\n                        ": "",
    "\n                            conversion for WIN1251 to ISO-8859-5\n                            conversion for WIN1251 to ISO-8859-5\n                        ": "",
    "\n                            adjust timestamp precision\n                            adjust timestamp precision\n                        ": "",
    "\n                            extract field from time\n                            extract field from time\n                        ": "",
    "\n                            get byte\n                            get byte\n                        ": "",
    "\n                            Chinese (Traditional, Macao SAR China)\n                            Chinese (Traditional, Macao SAR China)\n                        ": "",
    "\n                            implementation of &amp;&lt; operator\n                            implementation of &amp;&lt; operator\n                        ": "",
    "\n                            name of sequence for a serial column\n                            name of sequence for a serial column\n                        ": "",
    "\n                            deprecated, use two-argument form instead\n                            deprecated, use two-argument form instead\n                        ": "",
    "\n                            join selectivity of &lt;&gt; and related operators\n                            join selectivity of &lt;&gt; and related operators\n                        ": "",
    "\n                            pg_controldata init state information as a function\n                            pg_controldata init state information as a function\n                        ": "",
    "\n                            greater than or equal by length\n                            greater than or equal by length\n                        ": "",
    "\n                            Urdu (Pakistan)\n                            Urdu (Pakistan)\n                        ": "",
    "\n                            Malagasy (Madagascar)\n                            Malagasy (Madagascar)\n                        ": "",
    "\n                            English (Israel)\n                            English (Israel)\n                        ": "",
    "\n                            conversion for WIN1252 to UTF8\n                            conversion for WIN1252 to UTF8\n                        ": "",
    "\n                            Sena\n                            Sena\n                        ": "",
    "\n                            statistics: start time for backend&apos;s current transaction\n                            statistics: start time for backend&apos;s current transaction\n                        ": "",
    "\n                            internal conversion function for UTF8 to JOHAB\n                            internal conversion function for UTF8 to JOHAB\n                        ": "",
    "\n                            range of numerics\n                            range of numerics\n                        ": "",
    "\n                            convert date and time to timestamp with time zone\n                            convert date and time to timestamp with time zone\n                        ": "",
    "\n                            absolute value\n                            absolute value\n                        ": "",
    "\n                            pseudo-type representing any composite type\n                            pseudo-type representing any composite type\n                        ": "",
    "\n                            internal conversion function for EUC_TW to BIG5\n                            internal conversion function for EUC_TW to BIG5\n                        ": "",
    "\n                            English (Netherlands)\n                            English (Netherlands)\n                        ": "",
    "\n                            show config file settings\n                            show config file settings\n                        ": "",
    "\n                            English (Zambia)\n                            English (Zambia)\n                        ": "",
    "\n                            any key exists\n                            any key exists\n                        ": "",
    "\n                            Telugu (India)\n                            Telugu (India)\n                        ": "",
    "\n                            uppercase\n                            uppercase\n                        ": "",
    "\n                            remove ACL item\n                            remove ACL item\n                        ": "",
    "\n                            Fulah (Latin, Gambia)\n                            Fulah (Latin, Gambia)\n                        ": "",
    "\n                            Kwasio (Cameroon)\n                            Kwasio (Cameroon)\n                        ": "",
    "\n                            identity argument list of a function\n                            identity argument list of a function\n                        ": "",
    "\n                            implementation of ~&gt;~ operator\n                            implementation of ~&gt;~ operator\n                        ": "",
    "\n                            get json object keys\n                            get json object keys\n                        ": "",
    "\n                            Malay (Malaysia)\n                            Malay (Malaysia)\n                        ": "",
    "\n                            Luxembourgish (Luxembourg)\n                            Luxembourgish (Luxembourg)\n                        ": "",
    "\n                            Portuguese (Mozambique)\n                            Portuguese (Mozambique)\n                        ": "",
    "\n                            minimum value of all integer input values\n                            minimum value of all integer input values\n                        ": "",
    "\n                            convert points to box\n                            convert points to box\n                        ": "",
    "\n                            list files in the pgsql_tmp directory\n                            list files in the pgsql_tmp directory\n                        ": "",
    "\n                            get set of records with fields from a jsonb array of objects\n                            get set of records with fields from a jsonb array of objects\n                        ": "",
    "\n                            range of integers\n                            range of integers\n                        ": "",
    "\n                            Arabic (United Arab Emirates)\n                            Arabic (United Arab Emirates)\n                        ": "",
    "\n                            Khmer (Cambodia)\n                            Khmer (Cambodia)\n                        ": "",
    "\n                            sample variance of float4 input values (square of the sample standard deviation)\n                            sample variance of float4 input values (square of the sample standard deviation)\n                        ": "",
    "\n                            Arabic (Oman)\n                            Arabic (Oman)\n                        ": "",
    "\n                            get record fields from a jsonb object\n                            get record fields from a jsonb object\n                        ": "",
    "\n                            registered procedure (with args)\n                            registered procedure (with args)\n                        ": "",
    "\n                            user privilege on column by username, rel oid, col attnum\n                            user privilege on column by username, rel oid, col attnum\n                        ": "",
    "\n                            user privilege on any column by username, rel name\n                            user privilege on any column by username, rel name\n                        ": "",
    "\n                            radius of circle\n                            radius of circle\n                        ": "",
    "\n                            last wal replay location\n                            last wal replay location\n                        ": "",
    "\n                            statistics: information about subscription\n                            statistics: information about subscription\n                        ": "",
    "\n                            conversion for MULE_INTERNAL to EUC_KR\n                            conversion for MULE_INTERNAL to EUC_KR\n                        ": "",
    "\n                            overlaps\n                            overlaps\n                        ": "",
    "\n                            internal conversion function for GBK to UTF8\n                            internal conversion function for GBK to UTF8\n                        ": "",
    "\n                            jsonb object aggregate final function\n                            jsonb object aggregate final function\n                        ": "",
    "\n                            user privilege on column by username, rel oid, col name\n                            user privilege on column by username, rel oid, col name\n                        ": "",
    "\n                            user privilege on column by username, rel name, col attnum\n                            user privilege on column by username, rel name, col attnum\n                        ": "",
    "\n                            current user privilege on foreign data wrapper by foreign data wrapper oid\n                            current user privilege on foreign data wrapper by foreign data wrapper oid\n                        ": "",
    "\n                            user privilege on function by user oid, function oid\n                            user privilege on function by user oid, function oid\n                        ": "",
    "\n                            conversion for UTF8 to SHIFT_JIS_2004\n                            conversion for UTF8 to SHIFT_JIS_2004\n                        ": "",
    "\n                            encode text from DB encoding to ASCII text\n                            encode text from DB encoding to ASCII text\n                        ": "",
    "\n                            convert timestamp with time zone to date\n                            convert timestamp with time zone to date\n                        ": "",
    "\n                            get the open cursors for this session\n                            get the open cursors for this session\n                        ": "",
    "\n                            Ukrainian\n                            Ukrainian\n                        ": "",
    "\n                            Morisyen\n                            Morisyen\n                        ": "",
    "\n                            Norwegian Nynorsk\n                            Norwegian Nynorsk\n                        ": "",
    "\n                            planner support for textlike\n                            planner support for textlike\n                        ": "",
    "\n                            bitwise or\n                            bitwise or\n                        ": "",
    "\n                            test property of an index\n                            test property of an index\n                        ": "",
    "\n                            sum of squares of the independent variable (sum(X^2) - sum(X)^2/N)\n                            sum of squares of the independent variable (sum(X^2) - sum(X)^2/N)\n                        ": "",
    "\n                            Upper Sorbian\n                            Upper Sorbian\n                        ": "",
    "\n                            Turkish (Turkey)\n                            Turkish (Turkey)\n                        ": "",
    "\n                            Kazakh (Kazakhstan)\n                            Kazakh (Kazakhstan)\n                        ": "",
    "\n                            internal conversion function for MULE_INTERNAL to KOI8R\n                            internal conversion function for MULE_INTERNAL to KOI8R\n                        ": "",
    "\n                            peek at changes from replication slot\n                            peek at changes from replication slot\n                        ": "",
    "\n                            statistics: recovery conflicts in database\n                            statistics: recovery conflicts in database\n                        ": "",
    "\n                            date difference preserving months and years\n                            date difference preserving months and years\n                        ": "",
    "\n                            construct date\n                            construct date\n                        ": "",
    "\n                            conversion for MULE_INTERNAL to WIN1250\n                            conversion for MULE_INTERNAL to WIN1250\n                        ": "",
    "\n                            Greek (Cyprus)\n                            Greek (Cyprus)\n                        ": "",
    "\n                            adjust time precision\n                            adjust time precision\n                        ": "",
    "\n                            Spanish (Ceuta &amp; Melilla)\n                            Spanish (Ceuta &amp; Melilla)\n                        ": "",
    "\n                            implementation of - operator\n                            implementation of - operator\n                        ": "",
    "\n                            English (Germany)\n                            English (Germany)\n                        ": "",
    "\n                            convert string with specified encoding names\n                            convert string with specified encoding names\n                        ": "",
    "\n                            conversion for WIN1256 to UTF8\n                            conversion for WIN1256 to UTF8\n                        ": "",
    "\n                            convert vertex count and circle to polygon\n                            convert vertex count and circle to polygon\n                        ": "",
    "\n                            conversion for WIN1251 to WIN866\n                            conversion for WIN1251 to WIN866\n                        ": "",
    "\n                            user privilege on schema by username, schema oid\n                            user privilege on schema by username, schema oid\n                        ": "",
    "\n                            is a column updatable\n                            is a column updatable\n                        ": "",
    "\n                            format float8 to text\n                            format float8 to text\n                        ": "",
    "\n                            tsrange constructor\n                            tsrange constructor\n                        ": "",
    "\n                            GiST tsvector support (obsolete)\n                            GiST tsvector support (obsolete)\n                        ": "",
    "\n                            Rundi\n                            Rundi\n                        ": "",
    "\n                            Sichuan Yi (China)\n                            Sichuan Yi (China)\n                        ": "",
    "\n                            statistics: self execution time of function in current transaction, in milliseconds\n                            statistics: self execution time of function in current transaction, in milliseconds\n                        ": "",
    "\n                            Western Frisian\n                            Western Frisian\n                        ": "",
    "\n                            variable-length string, binary values escaped\n                            variable-length string, binary values escaped\n                        ": "",
    "\n                            file path of relation\n                            file path of relation\n                        ": "",
    "\n                            test XML value against XPath expression, with namespace support\n                            test XML value against XPath expression, with namespace support\n                        ": "",
    "\n                            English (Bahamas)\n                            English (Bahamas)\n                        ": "",
    "\n                            fetch the following row value\n                            fetch the following row value\n                        ": "",
    "\n                            Konkani (India)\n                            Konkani (India)\n                        ": "",
    "\n                            point on line\n                            point on line\n                        ": "",
    "\n                            planner support for texticlike\n                            planner support for texticlike\n                        ": "",
    "\n                            English (Sudan)\n                            English (Sudan)\n                        ": "",
    "\n                            heap table access method\n                            heap table access method\n                        ": "",
    "\n                            make tsquery\n                            make tsquery\n                        ": "",
    "\n                            jsonpath exists\n                            jsonpath exists\n                        ": "",
    "\n                            Swedish\n                            Swedish\n                        ": "",
    "\n                            convert float4 to int4\n                            convert float4 to int4\n                        ": "",
    "\n                            Tibetan (India)\n                            Tibetan (India)\n                        ": "",
    "\n                            snowball stemmer for italian language\n                            snowball stemmer for italian language\n                        ": "",
    "\n                            float8 difference of two int8 values\n                            float8 difference of two int8 values\n                        ": "",
    "\n                            statistics: currently active backend IDs\n                            statistics: currently active backend IDs\n                        ": "",
    "\n                            user privilege on tablespace by user oid, tablespace name\n                            user privilege on tablespace by user oid, tablespace name\n                        ": "",
    "\n                            range of the given enum type, as an ordered array\n                            range of the given enum type, as an ordered array\n                        ": "",
    "\n                            advance replication origin to specific location\n                            advance replication origin to specific location\n                        ": "",
    "\n                            promote groups of 24 hours to numbers of days\n                            promote groups of 24 hours to numbers of days\n                        ": "",
    "\n                            greater than by length\n                            greater than by length\n                        ": "",
    "\n                            Spanish (United States)\n                            Spanish (United States)\n                        ": "",
    "\n                            debug function for current text search configuration\n                            debug function for current text search configuration\n                        ": "",
    "\n                            quote a possibly-null literal for usage in a querystring\n                            quote a possibly-null literal for usage in a querystring\n                        ": "",
    "\n                            simple dictionary: just lower case and check for stopword\n                            simple dictionary: just lower case and check for stopword\n                        ": "",
    "\n                            convert text to numeric\n                            convert text to numeric\n                        ": "",
    "\n                            substitute portion of string\n                            substitute portion of string\n                        ": "",
    "\n                            conversion for EUC_KR to MULE_INTERNAL\n                            conversion for EUC_KR to MULE_INTERNAL\n                        ": "",
    "\n                            convert numeric to int8\n                            convert numeric to int8\n                        ": "",
    "\n                            internal conversion function for KOI8R to UTF8\n                            internal conversion function for KOI8R to UTF8\n                        ": "",
    "\n                            overlaps (is subnet or supernet)\n                            overlaps (is subnet or supernet)\n                        ": "",
    "\n                            Samburu (Kenya)\n                            Samburu (Kenya)\n                        ": "",
    "\n                            Portuguese (Switzerland)\n                            Portuguese (Switzerland)\n                        ": "",
    "\n                            add (translate path)\n                            add (translate path)\n                        ": "",
    "\n                            Mundang (Cameroon)\n                            Mundang (Cameroon)\n                        ": "",
    "\n                            convert float4 to int8\n                            convert float4 to int8\n                        ": "",
    "\n                            implementation of &lt;= operator\n                            implementation of &lt;= operator\n                        ": "",
    "\n                            minimum value of all money input values\n                            minimum value of all money input values\n                        ": "",
    "\n                            statistics: reset collected statistics shared across the cluster\n                            statistics: reset collected statistics shared across the cluster\n                        ": "",
    "\n                            convert string with specified destination encoding name\n                            convert string with specified destination encoding name\n                        ": "",
    "\n                            jsonb object aggregate transition function\n                            jsonb object aggregate transition function\n                        ": "",
    "\n                            relation OID for filenode and tablespace\n                            relation OID for filenode and tablespace\n                        ": "",
    "\n                            restriction selectivity of &gt; and related operators on scalar datatypes\n                            restriction selectivity of &gt; and related operators on scalar datatypes\n                        ": "",
    "\n                            get array of PIDs of sessions blocking specified backend PID from acquiring a heavyweight lock\n                            get array of PIDs of sessions blocking specified backend PID from acquiring a heavyweight lock\n                        ": "",
    "\n                            get current snapshot\n                            get current snapshot\n                        ": "",
    "\n                            convert timestamp to date\n                            convert timestamp to date\n                        ": "",
    "\n                            logarithm base m of n\n                            logarithm base m of n\n                        ": "",
    "\n                            multivariate dependencies\n                            multivariate dependencies\n                        ": "",
    "\n                            box area\n                            box area\n                        ": "",
    "\n                            conversion for WIN866 to UTF8\n                            conversion for WIN866 to UTF8\n                        ": "",
    "\n                            list available extension versions\n                            list available extension versions\n                        ": "",
    "\n                            get the type of a jsonb value\n                            get the type of a jsonb value\n                        ": "",
    "\n                            overlaps or is right of\n                            overlaps or is right of\n                        ": "",
    "\n                            convert timestamp with time zone to time\n                            convert timestamp with time zone to time\n                        ": "",
    "\n                            source text of a rule with pretty-print option\n                            source text of a rule with pretty-print option\n                        ": "",
    "\n                            get the replication progress of the current session\n                            get the replication progress of the current session\n                        ": "",
    "\n                            return Oid of the table getting rewritten\n                            return Oid of the table getting rewritten\n                        ": "",
    "\n                            disk space usage for the specified fork of a table or index\n                            disk space usage for the specified fork of a table or index\n                        ": "",
    "\n                            conversion for LATIN2 to MULE_INTERNAL\n                            conversion for LATIN2 to MULE_INTERNAL\n                        ": "",
    "\n                            conversion for MULE_INTERNAL to EUC_CN\n                            conversion for MULE_INTERNAL to EUC_CN\n                        ": "",
    "\n                            decrement\n                            decrement\n                        ": "",
    "\n                            Kikuyu (Kenya)\n                            Kikuyu (Kenya)\n                        ": "",
    "\n                            sleep for the specified interval\n                            sleep for the specified interval\n                        ": "",
    "\n                            generate headline\n                            generate headline\n                        ": "",
    "\n                            map schema contents and structure to XML and XML Schema\n                            map schema contents and structure to XML and XML Schema\n                        ": "",
    "\n                            implementation of % operator\n                            implementation of % operator\n                        ": "",
    "\n                            diameter of circle\n                            diameter of circle\n                        ": "",
    "\n                            map table contents and structure to XML and XML Schema\n                            map table contents and structure to XML and XML Schema\n                        ": "",
    "\n                            Colognian (Germany)\n                            Colognian (Germany)\n                        ": "",
    "\n                            minus\n                            minus\n                        ": "",
    "\n                            63-byte type for storing system identifiers\n                            63-byte type for storing system identifiers\n                        ": "",
    "\n                            minimum value of all smallint input values\n                            minimum value of all smallint input values\n                        ": "",
    "\n                            SHOW X as a function, optionally no error for missing variable\n                            SHOW X as a function, optionally no error for missing variable\n                        ": "",
    "\n                            French (Congo - Kinshasa)\n                            French (Congo - Kinshasa)\n                        ": "",
    "\n                            box diagonal\n                            box diagonal\n                        ": "",
    "\n                            English (Nauru)\n                            English (Nauru)\n                        ": "",
    "\n                            address family (4 for IPv4, 6 for IPv6)\n                            address family (4 for IPv4, 6 for IPv6)\n                        ": "",
    "\n                            Manx (Isle of Man)\n                            Manx (Isle of Man)\n                        ": "",
    "\n                            Makhuwa-Meetto\n                            Makhuwa-Meetto\n                        ": "",
    "\n                            Kalenjin (Kenya)\n                            Kalenjin (Kenya)\n                        ": "",
    "\n                            join selectivity of regex non-match\n                            join selectivity of regex non-match\n                        ": "",
    "\n                            Marathi (India)\n                            Marathi (India)\n                        ": "",
    "\n                            default word parser\n                            default word parser\n                        ": "",
    "\n                            user privilege on language by username, language oid\n                            user privilege on language by username, language oid\n                        ": "",
    "\n                            Bangla\n                            Bangla\n                        ": "",
    "\n                            extract the first n characters\n                            extract the first n characters\n                        ": "",
    "\n                            Arabic (Mauritania)\n                            Arabic (Mauritania)\n                        ": "",
    "\n                            drop a replication slot\n                            drop a replication slot\n                        ": "",
    "\n                            English (Diego Garcia)\n                            English (Diego Garcia)\n                        ": "",
    "\n                            English (Belgium)\n                            English (Belgium)\n                        ": "",
    "\n                            statistics: tuples returned for database\n                            statistics: tuples returned for database\n                        ": "",
    "\n                            sign of value\n                            sign of value\n                        ": "",
    "\n                            promote groups of 24 hours to numbers of days and promote groups of 30 days to numbers of months\n                            promote groups of 24 hours to numbers of days and promote groups of 30 days to numbers of months\n                        ": "",
    "\n                            is a replication origin configured in this session\n                            is a replication origin configured in this session\n                        ": "",
    "\n                            Korean (North Korea)\n                            Korean (North Korea)\n                        ": "",
    "\n                            join selectivity for position-comparison operators\n                            join selectivity for position-comparison operators\n                        ": "",
    "\n                            Galician\n                            Galician\n                        ": "",
    "\n                            convert int2 to int8\n                            convert int2 to int8\n                        ": "",
    "\n                            internal conversion function for WIN1251 to WIN866\n                            internal conversion function for WIN1251 to WIN866\n                        ": "",
    "\n                            get information about file\n                            get information about file\n                        ": "",
    "\n                            convert encoding name to encoding id\n                            convert encoding name to encoding id\n                        ": "",
    "\n                            pause wal replay\n                            pause wal replay\n                        ": "",
    "\n                            conversion for EUC_TW to BIG5\n                            conversion for EUC_TW to BIG5\n                        ": "",
    "\n                            English (Denmark)\n                            English (Denmark)\n                        ": "",
    "\n                            fetch the last row value\n                            fetch the last row value\n                        ": "",
    "\n                            get changes from replication slot\n                            get changes from replication slot\n                        ": "",
    "\n                            snowball stemmer for turkish language\n                            snowball stemmer for turkish language\n                        ": "",
    "\n                            GiST tsvector support\n                            GiST tsvector support\n                        ": "",
    "\n                            Cebuano (Philippines)\n                            Cebuano (Philippines)\n                        ": "",
    "\n                            snowball stemmer for russian language\n                            snowball stemmer for russian language\n                        ": "",
    "\n                            Kazakh\n                            Kazakh\n                        ": "",
    "\n                            key value pairs of a jsonb object\n                            key value pairs of a jsonb object\n                        ": "",
    "\n                            statistics: number of tuples updated\n                            statistics: number of tuples updated\n                        ": "",
    "\n                            sample standard deviation of integer input values\n                            sample standard deviation of integer input values\n                        ": "",
    "\n                            conversion for UTF8 to WIN1252\n                            conversion for UTF8 to WIN1252\n                        ": "",
    "\n                            user privilege on relation by username, rel name\n                            user privilege on relation by username, rel name\n                        ": "",
    "\n                            Ewe (Ghana)\n                            Ewe (Ghana)\n                        ": "",
    "\n                            user privilege on foreign data wrapper by username, foreign data wrapper name\n                            user privilege on foreign data wrapper by username, foreign data wrapper name\n                        ": "",
    "\n                            matches regular expression, case-sensitive\n                            matches regular expression, case-sensitive\n                        ": "",
    "\n                            conversion for LATIN2 to WIN1250\n                            conversion for LATIN2 to WIN1250\n                        ": "",
    "\n                            English (South Sudan)\n                            English (South Sudan)\n                        ": "",
    "\n                            Chinese (Traditional)\n                            Chinese (Traditional)\n                        ": "",
    "\n                            get commit timestamp of a transaction\n                            get commit timestamp of a transaction\n                        ": "",
    "\n                            float8 difference of two timestamp with time zone values\n                            float8 difference of two timestamp with time zone values\n                        ": "",
    "\n                            conversion for UTF8 to SQL_ASCII\n                            conversion for UTF8 to SQL_ASCII\n                        ": "",
    "\n                            German (Luxembourg)\n                            German (Luxembourg)\n                        ": "",
    "\n                            geometric line segment &apos;(pt1,pt2)&apos;\n                            geometric line segment &apos;(pt1,pt2)&apos;\n                        ": "",
    "\n                            referential integrity ON DELETE CASCADE\n                            referential integrity ON DELETE CASCADE\n                        ": "",
    "\n                            convert date and time to timestamp\n                            convert date and time to timestamp\n                        ": "",
    "\n                            Ewondo\n                            Ewondo\n                        ": "",
    "\n                            Swahili (Uganda)\n                            Swahili (Uganda)\n                        ": "",
    "\n                            is subnet\n                            is subnet\n                        ": "",
    "\n                            join selectivity of &gt;= and related operators on scalar datatypes\n                            join selectivity of &gt;= and related operators on scalar datatypes\n                        ": "",
    "\n                            Hausa (Niger)\n                            Hausa (Niger)\n                        ": "",
    "\n                            is text search configuration visible in search path?\n                            is text search configuration visible in search path?\n                        ": "",
    "\n                            minimum value of all text values\n                            minimum value of all text values\n                        ": "",
    "\n                            concatenate aggregate input into a string\n                            concatenate aggregate input into a string\n                        ": "",
    "\n                            Somali (Ethiopia)\n                            Somali (Ethiopia)\n                        ": "",
    "\n                            join selectivity of &gt; and related operators on scalar datatypes\n                            join selectivity of &gt; and related operators on scalar datatypes\n                        ": "",
    "\n                            last value of the input enum type\n                            last value of the input enum type\n                        ": "",
    "\n                            Slovak (Slovakia)\n                            Slovak (Slovakia)\n                        ": "",
    "\n                            convert int4 number to hex\n                            convert int4 number to hex\n                        ": "",
    "\n                            age of a multi-transaction ID, in multi-transactions before current multi-transaction\n                            age of a multi-transaction ID, in multi-transactions before current multi-transaction\n                        ": "",
    "\n                            convert int4 to int2\n                            convert int4 to int2\n                        ": "",
    "\n                            Soga\n                            Soga\n                        ": "",
    "\n                            English\n                            English\n                        ": "",
    "\n                            Serbian (Cyrillic)\n                            Serbian (Cyrillic)\n                        ": "",
    "\n                            pseudo-type representing an undetermined type\n                            pseudo-type representing an undetermined type\n                        ": "",
    "\n                            list of files in the WAL directory\n                            list of files in the WAL directory\n                        ": "",
    "\n                            Amharic\n                            Amharic\n                        ": "",
    "\n                            large object seek (64 bit)\n                            large object seek (64 bit)\n                        ": "",
    "\n                            map text array of key value pairs to json object\n                            map text array of key value pairs to json object\n                        ": "",
    "\n                            divide points (scale/rotate)\n                            divide points (scale/rotate)\n                        ": "",
    "\n                            Irish (Ireland)\n                            Irish (Ireland)\n                        ": "",
    "\n                            English (Guernsey)\n                            English (Guernsey)\n                        ": "",
    "\n                            show hardwired default privileges, primarily for use by the information schema\n                            show hardwired default privileges, primarily for use by the information schema\n                        ": "",
    "\n                            sequence parameters, for use by information schema\n                            sequence parameters, for use by information schema\n                        ": "",
    "\n                            registered class\n                            registered class\n                        ": "",
    "\n                            conversion for ISO-8859-5 to WIN1251\n                            conversion for ISO-8859-5 to WIN1251\n                        ": "",
    "\n                            build a jsonb object from pairwise key/value inputs\n                            build a jsonb object from pairwise key/value inputs\n                        ": "",
    "\n                            Spanish (Panama)\n                            Spanish (Panama)\n                        ": "",
    "\n                            conversion for UTF8 to GBK\n                            conversion for UTF8 to GBK\n                        ": "",
    "\n                            Arabic (Chad)\n                            Arabic (Chad)\n                        ": "",
    "\n                            map array to json with optional pretty printing\n                            map array to json with optional pretty printing\n                        ": "",
    "\n                            Unknown language\n                            Unknown language\n                        ": "",
    "\n                            Lingala (Angola)\n                            Lingala (Angola)\n                        ": "",
    "\n                            conversion for ISO-8859-8 to UTF8\n                            conversion for ISO-8859-8 to UTF8\n                        ": "",
    "\n                            select statement of a view\n                            select statement of a view\n                        ": "",
    "\n                            statistics: information about currently active backends\n                            statistics: information about currently active backends\n                        ": "",
    "\n                            geometric box &apos;(lower left,upper right)&apos;\n                            geometric box &apos;(lower left,upper right)&apos;\n                        ": "",
    "\n                            vertically aligned\n                            vertically aligned\n                        ": "",
    "\n                            inverse hyperbolic cosine\n                            inverse hyperbolic cosine\n                        ": "",
    "\n                            get the currently executing query\n                            get the currently executing query\n                        ": "",
    "\n                            AND-concatenate\n                            AND-concatenate\n                        ": "",
    "\n                            is above\n                            is above\n                        ": "",
    "\n                            conversion for MULE_INTERNAL to LATIN4\n                            conversion for MULE_INTERNAL to LATIN4\n                        ": "",
    "\n                            disk space usage for the specified table, including TOAST, free space and visibility map\n                            disk space usage for the specified table, including TOAST, free space and visibility map\n                        ": "",
    "\n                            jsonb aggregate final function\n                            jsonb aggregate final function\n                        ": "",
    "\n                            statistics: wait event on which backend is currently waiting\n                            statistics: wait event on which backend is currently waiting\n                        ": "",
    "\n                            Zarma (Niger)\n                            Zarma (Niger)\n                        ": "",
    "\n                            minimum value of all inet input values\n                            minimum value of all inet input values\n                        ": "",
    "\n                            conversion for WIN1254 to UTF8\n                            conversion for WIN1254 to UTF8\n                        ": "",
    "\n                            Central Kurdish (Iran)\n                            Central Kurdish (Iran)\n                        ": "",
    "\n                            Insert value into a jsonb\n                            Insert value into a jsonb\n                        ": "",
    "\n                            internal conversion function for EUC_CN to UTF8\n                            internal conversion function for EUC_CN to UTF8\n                        ": "",
    "\n                            statistics: number of blocks found in cache in current transaction\n                            statistics: number of blocks found in cache in current transaction\n                        ": "",
    "\n                            Dutch (Sint Maarten)\n                            Dutch (Sint Maarten)\n                        ": "",
    "\n                            sum as float8 across all float8 input values\n                            sum as float8 across all float8 input values\n                        ": "",
    "\n                            large object read\n                            large object read\n                        ": "",
    "\n                            left-pad string to length\n                            left-pad string to length\n                        ": "",
    "\n                            GIN tsvector support\n                            GIN tsvector support\n                        ": "",
    "\n                            most common value\n                            most common value\n                        ": "",
    "\n                            returns an offset of value in array\n                            returns an offset of value in array\n                        ": "",
    "\n                            internal conversion function for KOI8R to WIN866\n                            internal conversion function for KOI8R to WIN866\n                        ": "",
    "\n                            Marathi\n                            Marathi\n                        ": "",
    "\n                            conversion for WIN1258 to UTF8\n                            conversion for WIN1258 to UTF8\n                        ": "",
    "\n                            snowball stemmer for romanian language\n                            snowball stemmer for romanian language\n                        ": "",
    "\n                            build an empty jsonb array\n                            build an empty jsonb array\n                        ": "",
    "\n                            configuration for english language\n                            configuration for english language\n                        ": "",
    "\n                            Portuguese (Guinea-Bissau)\n                            Portuguese (Guinea-Bissau)\n                        ": "",
    "\n                            Pashto (Pakistan)\n                            Pashto (Pakistan)\n                        ": "",
    "\n                            conversion for WIN1251 to UTF8\n                            conversion for WIN1251 to UTF8\n                        ": "",
    "\n                            Georgian\n                            Georgian\n                        ": "",
    "\n                            Spanish (Spain)\n                            Spanish (Spain)\n                        ": "",
    "\n                            evaluate XPath expression, with namespaces support\n                            evaluate XPath expression, with namespaces support\n                        ": "",
    "\n                            Spanish (Canary Islands)\n                            Spanish (Canary Islands)\n                        ": "",
    "\n                            numeric(precision, decimal), arbitrary precision number\n                            numeric(precision, decimal), arbitrary precision number\n                        ": "",
    "\n                            internal conversion function for MULE_INTERNAL to WIN1251\n                            internal conversion function for MULE_INTERNAL to WIN1251\n                        ": "",
    "\n                            Uzbek (Arabic, Afghanistan)\n                            Uzbek (Arabic, Afghanistan)\n                        ": "",
    "\n                            Vai (Vai, Liberia)\n                            Vai (Vai, Liberia)\n                        ": "",
    "\n                            conversion for UTF8 to GB18030\n                            conversion for UTF8 to GB18030\n                        ": "",
    "\n                            implementation of *&lt;&gt; operator\n                            implementation of *&lt;&gt; operator\n                        ": "",
    "\n                            Shona (Zimbabwe)\n                            Shona (Zimbabwe)\n                        ": "",
    "\n                            join selectivity of tsvector @@ tsquery\n                            join selectivity of tsvector @@ tsquery\n                        ": "",
    "\n                            statistics: total execution time of function in current transaction, in milliseconds\n                            statistics: total execution time of function in current transaction, in milliseconds\n                        ": "",
    "\n                            convert inet to cidr\n                            convert inet to cidr\n                        ": "",
    "\n                            Macedonian (North Macedonia)\n                            Macedonian (North Macedonia)\n                        ": "",
    "\n                            string representing an internal node tree\n                            string representing an internal node tree\n                        ": "",
    "\n                            hostmask of address\n                            hostmask of address\n                        ": "",
    "\n                            restriction selectivity for containment comparison operators\n                            restriction selectivity for containment comparison operators\n                        ": "",
    "\n                            Swiss German (France)\n                            Swiss German (France)\n                        ": "",
    "\n                            maximum value of all enum input values\n                            maximum value of all enum input values\n                        ": "",
    "\n                            Spanish (Colombia)\n                            Spanish (Colombia)\n                        ": "",
    "\n                            internal conversion function for JOHAB to UTF8\n                            internal conversion function for JOHAB to UTF8\n                        ": "",
    "\n                            Bambara (Mali)\n                            Bambara (Mali)\n                        ": "",
    "\n                            current wal insert location\n                            current wal insert location\n                        ": "",
    "\n                            German (Switzerland)\n                            German (Switzerland)\n                        ": "",
    "\n                            current user privilege on schema by schema oid\n                            current user privilege on schema by schema oid\n                        ": "",
    "\n                            extract portion of bitstring\n                            extract portion of bitstring\n                        ": "",
    "\n                            English (British Virgin Islands)\n                            English (British Virgin Islands)\n                        ": "",
    "\n                            validate an XML value\n                            validate an XML value\n                        ": "",
    "\n                            Kurdish (Turkey)\n                            Kurdish (Turkey)\n                        ": "",
    "\n                            current logging collector file location\n                            current logging collector file location\n                        ": "",
    "\n                            parallel\n                            parallel\n                        ": "",
    "\n                            transform specified values from jsonb to tsvector\n                            transform specified values from jsonb to tsvector\n                        ": "",
    "\n                            reverse text\n                            reverse text\n                        ": "",
    "\n                            implementation of ~~ operator\n                            implementation of ~~ operator\n                        ": "",
    "\n                            format int8 to text\n                            format int8 to text\n                        ": "",
    "\n                            position of substring\n                            position of substring\n                        ": "",
    "\n                            show all parts of inet/cidr value\n                            show all parts of inet/cidr value\n                        ": "",
    "\n                            Luo\n                            Luo\n                        ": "",
    "\n                            convert money to numeric\n                            convert money to numeric\n                        ": "",
    "\n                            internal conversion function for MULE_INTERNAL to SQL_ASCII\n                            internal conversion function for MULE_INTERNAL to SQL_ASCII\n                        ": "",
    "\n                            maximum value of all float4 input values\n                            maximum value of all float4 input values\n                        ": "",
    "\n                            is operator visible in search path?\n                            is operator visible in search path?\n                        ": "",
    "\n                            convert points to line segment\n                            convert points to line segment\n                        ": "",
    "\n                            conversion for SHIFT_JIS_2004 to EUC_JIS_2004\n                            conversion for SHIFT_JIS_2004 to EUC_JIS_2004\n                        ": "",
    "\n                            quote an identifier for usage in a querystring\n                            quote an identifier for usage in a querystring\n                        ": "",
    "\n                            set given weight for whole tsvector\n                            set given weight for whole tsvector\n                        ": "",
    "\n                            -2 billion to 2 billion integer, 4-byte storage\n                            -2 billion to 2 billion integer, 4-byte storage\n                        ": "",
    "\n                            test property of an index access method\n                            test property of an index access method\n                        ": "",
    "\n                            internal conversion function for BIG5 to UTF8\n                            internal conversion function for BIG5 to UTF8\n                        ": "",
    "\n                            Romanian (Moldova)\n                            Romanian (Moldova)\n                        ": "",
    "\n                            conversion for LATIN3 to MULE_INTERNAL\n                            conversion for LATIN3 to MULE_INTERNAL\n                        ": "",
    "\n                            Dutch (Suriname)\n                            Dutch (Suriname)\n                        ": "",
    "\n                            snowball stemmer for swedish language\n                            snowball stemmer for swedish language\n                        ": "",
    "\n                            Thai (Thailand)\n                            Thai (Thailand)\n                        ": "",
    "\n                            reserved schema for TOAST tables\n                            reserved schema for TOAST tables\n                        ": "",
    "\n                            bitwise-and integer aggregate\n                            bitwise-and integer aggregate\n                        ": "",
    "\n                            conversion for ISO-8859-7 to UTF8\n                            conversion for ISO-8859-7 to UTF8\n                        ": "",
    "\n                            Italian (San Marino)\n                            Italian (San Marino)\n                        ": "",
    "\n                            Portuguese (Luxembourg)\n                            Portuguese (Luxembourg)\n                        ": "",
    "\n                            bitwise-and bigint aggregate\n                            bitwise-and bigint aggregate\n                        ": "",
    "\n                            Arabic (Bahrain)\n                            Arabic (Bahrain)\n                        ": "",
    "\n                            internal conversion function for MULE_INTERNAL to WIN1250\n                            internal conversion function for MULE_INTERNAL to WIN1250\n                        ": "",
    "\n                            English (Pakistan)\n                            English (Pakistan)\n                        ": "",
    "\n                            select statement of a view with pretty-printing and specified line wrapping\n                            select statement of a view with pretty-printing and specified line wrapping\n                        ": "",
    "\n                            Maori (New Zealand)\n                            Maori (New Zealand)\n                        ": "",
    "\n                            join selectivity of ILIKE\n                            join selectivity of ILIKE\n                        ": "",
    "\n                            Hindi\n                            Hindi\n                        ": "",
    "\n                            conversion for EUC_JP to UTF8\n                            conversion for EUC_JP to UTF8\n                        ": "",
    "\n                            range between the two given enum values, as an ordered array\n                            range between the two given enum values, as an ordered array\n                        ": "",
    "\n                            print type names of oidvector field\n                            print type names of oidvector field\n                        ": "",
    "\n                            English (Grenada)\n                            English (Grenada)\n                        ": "",
    "\n                            deferred UNIQUE constraint check\n                            deferred UNIQUE constraint check\n                        ": "",
    "\n                            planner support for texticregexeq\n                            planner support for texticregexeq\n                        ": "",
    "\n                            implementation of ? operator\n                            implementation of ? operator\n                        ": "",
    "\n                            SP-GiST index access method\n                            SP-GiST index access method\n                        ": "",
    "\n                            sum of products of independent times dependent variable (sum(X*Y) - sum(X) * sum(Y)/N)\n                            sum of products of independent times dependent variable (sum(X*Y) - sum(X) * sum(Y)/N)\n                        ": "",
    "\n                            English (United States)\n                            English (United States)\n                        ": "",
    "\n                            statistics: PID of backend\n                            statistics: PID of backend\n                        ": "",
    "\n                            Meru (Kenya)\n                            Meru (Kenya)\n                        ": "",
    "\n                            inet address of the client\n                            inet address of the client\n                        ": "",
    "\n                            adjust interval precision\n                            adjust interval precision\n                        ": "",
    "\n                            Northern Sami (Finland)\n                            Northern Sami (Finland)\n                        ": "",
    "\n                            fetch the first row value\n                            fetch the first row value\n                        ": "",
    "\n                            Afrikaans\n                            Afrikaans\n                        ": "",
    "\n                            Danish (Denmark)\n                            Danish (Denmark)\n                        ": "",
    "\n                            current user privilege on type by type oid\n                            current user privilege on type by type oid\n                        ": "",
    "\n                            sort support\n                            sort support\n                        ": "",
    "\n                            Swahili (Congo - Kinshasa)\n                            Swahili (Congo - Kinshasa)\n                        ": "",
    "\n                            internal conversion function for UTF8 to UHC\n                            internal conversion function for UTF8 to UHC\n                        ": "",
    "\n                            is schema another session&apos;s temp schema?\n                            is schema another session&apos;s temp schema?\n                        ": "",
    "\n                            XX:XX:XX:XX:XX:XX, MAC address\n                            XX:XX:XX:XX:XX:XX, MAC address\n                        ": "",
    "\n                            sleep for the specified time in seconds\n                            sleep for the specified time in seconds\n                        ": "",
    "\n                            Norwegian Nynorsk (Norway)\n                            Norwegian Nynorsk (Norway)\n                        ": "",
    "\n                            total disk space usage for the specified table and associated indexes\n                            total disk space usage for the specified table and associated indexes\n                        ": "",
    "\n                            configuration for russian language\n                            configuration for russian language\n                        ": "",
    "\n                            Makonde (Tanzania)\n                            Makonde (Tanzania)\n                        ": "",
    "\n                            index description\n                            index description\n                        ": "",
    "\n                            French (Madagascar)\n                            French (Madagascar)\n                        ": "",
    "\n                            Spanish (Venezuela)\n                            Spanish (Venezuela)\n                        ": "",
    "\n                            get current transaction ID\n                            get current transaction ID\n                        ": "",
    "\n                            Malay\n                            Malay\n                        ": "",
    "\n                            Swiss German (Switzerland)\n                            Swiss German (Switzerland)\n                        ": "",
    "\n                            referential integrity ON UPDATE SET DEFAULT\n                            referential integrity ON UPDATE SET DEFAULT\n                        ": "",
    "\n                            conversion for UTF8 to BIG5\n                            conversion for UTF8 to BIG5\n                        ": "",
    "\n                            Cantonese (Traditional, Hong Kong SAR China)\n                            Cantonese (Traditional, Hong Kong SAR China)\n                        ": "",
    "\n                            trim selected characters from right end of string\n                            trim selected characters from right end of string\n                        ": "",
    "\n                            Low German\n                            Low German\n                        ": "",
    "\n                            command identifier type, sequence in transaction id\n                            command identifier type, sequence in transaction id\n                        ": "",
    "\n                            is the range&apos;s upper bound infinite?\n                            is the range&apos;s upper bound infinite?\n                        ": "",
    "\n                            internal conversion function for ISO-8859-5 to MULE_INTERNAL\n                            internal conversion function for ISO-8859-5 to MULE_INTERNAL\n                        ": "",
    "\n                            isolationtester support function\n                            isolationtester support function\n                        ": "",
    "\n                            Morisyen (Mauritius)\n                            Morisyen (Mauritius)\n                        ": "",
    "\n                            diagonal of\n                            diagonal of\n                        ": "",
    "\n                            Romanian (Romania)\n                            Romanian (Romania)\n                        ": "",
    "\n                            finite timestamp?\n                            finite timestamp?\n                        ": "",
    "\n                            square of the correlation coefficient\n                            square of the correlation coefficient\n                        ": "",
    "\n                            conversion for WIN866 to WIN1251\n                            conversion for WIN866 to WIN1251\n                        ": "",
    "\n                            minimum value of all anyarray input values\n                            minimum value of all anyarray input values\n                        ": "",
    "\n                            true if server is in recovery\n                            true if server is in recovery\n                        ": "",
    "\n                            Fulah\n                            Fulah\n                        ": "",
    "\n                            Chakma (Bangladesh)\n                            Chakma (Bangladesh)\n                        ": "",
    "\n                            Bena (Tanzania)\n                            Bena (Tanzania)\n                        ": "",
    "\n                            convert encoding id to encoding name\n                            convert encoding id to encoding name\n                        ": "",
    "\n                            minimum value of all enum input values\n                            minimum value of all enum input values\n                        ": "",
    "\n                            Lingala\n                            Lingala\n                        ": "",
    "\n                            statistics: number of tuples hot updated in current transaction\n                            statistics: number of tuples hot updated in current transaction\n                        ": "",
    "\n                            referential integrity FOREIGN KEY ... REFERENCES\n                            referential integrity FOREIGN KEY ... REFERENCES\n                        ": "",
    "\n                            map row to json with optional pretty printing\n                            map row to json with optional pretty printing\n                        ": "",
    "\n                            Spanish (Paraguay)\n                            Spanish (Paraguay)\n                        ": "",
    "\n                            is opclass visible in search path?\n                            is opclass visible in search path?\n                        ": "",
    "\n                            Tatar\n                            Tatar\n                        ": "",
    "\n                            Kamba\n                            Kamba\n                        ": "",
    "\n                            pg_controldata checkpoint state information as a function\n                            pg_controldata checkpoint state information as a function\n                        ": "",
    "\n                            Portuguese\n                            Portuguese\n                        ": "",
    "\n                            Breton\n                            Breton\n                        ": "",
    "\n                            English (Ghana)\n                            English (Ghana)\n                        ": "",
    "\n                            statistics: last reset for a database\n                            statistics: last reset for a database\n                        ": "",
    "\n                            map input to jsonb\n                            map input to jsonb\n                        ": "",
    "\n                            current user privilege on column by rel name, col name\n                            current user privilege on column by rel name, col name\n                        ": "",
    "\n                            start time of an online backup\n                            start time of an online backup\n                        ": "",
    "\n                            large object write\n                            large object write\n                        ": "",
    "\n                            map database structure to XML Schema\n                            map database structure to XML Schema\n                        ": "",
    "\n                            implementation of ?&amp; operator\n                            implementation of ?&amp; operator\n                        ": "",
    "\n                            Finnish (Finland)\n                            Finnish (Finland)\n                        ": "",
    "\n                            user privilege on type by username, type oid\n                            user privilege on type by username, type oid\n                        ": "",
    "\n                            get description for object id and catalog name\n                            get description for object id and catalog name\n                        ": "",
    "\n                            convert bytea value into some ascii-only text string\n                            convert bytea value into some ascii-only text string\n                        ": "",
    "\n                            implementation of &amp;&amp; operator\n                            implementation of &amp;&amp; operator\n                        ": "",
    "\n                            English (Austria)\n                            English (Austria)\n                        ": "",
    "\n                            Northern Sami (Norway)\n                            Northern Sami (Norway)\n                        ": "",
    "\n                            registered text search dictionary\n                            registered text search dictionary\n                        ": "",
    "\n                            user privilege on foreign data wrapper by user oid, foreign data wrapper name\n                            user privilege on foreign data wrapper by user oid, foreign data wrapper name\n                        ": "",
    "\n                            not equal\n                            not equal\n                        ": "",
    "\n                            obtain shared advisory lock\n                            obtain shared advisory lock\n                        ": "",
    "\n                            Croatian (Bosnia &amp; Herzegovina)\n                            Croatian (Bosnia &amp; Herzegovina)\n                        ": "",
    "\n                            conversion for UTF8 to WIN1256\n                            conversion for UTF8 to WIN1256\n                        ": "",
    "\n                            reset the transaction&apos;s origin lsn and timestamp\n                            reset the transaction&apos;s origin lsn and timestamp\n                        ": "",
    "\n                            same as\n                            same as\n                        ": "",
    "\n                            Romansh (Switzerland)\n                            Romansh (Switzerland)\n                        ": "",
    "\n                            North Ndebele\n                            North Ndebele\n                        ": "",
    "\n                            Spanish (Honduras)\n                            Spanish (Honduras)\n                        ": "",
    "\n                            convert int4 to float4\n                            convert int4 to float4\n                        ": "",
    "\n                            role name by OID (with fallback)\n                            role name by OID (with fallback)\n                        ": "",
    "\n                            less than by area\n                            less than by area\n                        ": "",
    "\n                            count the number of non-NULL arguments\n                            count the number of non-NULL arguments\n                        ": "",
    "\n                            arcsine\n                            arcsine\n                        ": "",
    "\n                            Pashto (Afghanistan)\n                            Pashto (Afghanistan)\n                        ": "",
    "\n                            Khmer\n                            Khmer\n                        ": "",
    "\n                            restriction selectivity of case-insensitive regex match\n                            restriction selectivity of case-insensitive regex match\n                        ": "",
    "\n                            English (New Zealand)\n                            English (New Zealand)\n                        ": "",
    "\n                            internal conversion function for ISO-8859-5 to KOI8R\n                            internal conversion function for ISO-8859-5 to KOI8R\n                        ": "",
    "\n                            multiple discrete percentiles\n                            multiple discrete percentiles\n                        ": "",
    "\n                            Friulian\n                            Friulian\n                        ": "",
    "\n                            English (American Samoa)\n                            English (American Samoa)\n                        ": "",
    "\n                            Kinyarwanda (Rwanda)\n                            Kinyarwanda (Rwanda)\n                        ": "",
    "\n                            convert boolean to int4\n                            convert boolean to int4\n                        ": "",
    "\n                            get the available time zone abbreviations\n                            get the available time zone abbreviations\n                        ": "",
    "\n                            rank of hypothetical row without gaps\n                            rank of hypothetical row without gaps\n                        ": "",
    "\n                            GIN index access method\n                            GIN index access method\n                        ": "",
    "\n                            construct line from points\n                            construct line from points\n                        ": "",
    "\n                            English (Solomon Islands)\n                            English (Solomon Islands)\n                        ": "",
    "\n                            path open?\n                            path open?\n                        ": "",
    "\n                            Gujarati\n                            Gujarati\n                        ": "",
    "\n                            XX:XX:XX:XX:XX:XX:XX:XX, MAC address\n                            XX:XX:XX:XX:XX:XX:XX:XX, MAC address\n                        ": "",
    "\n                            user privilege on server by user oid, server name\n                            user privilege on server by user oid, server name\n                        ": "",
    "\n                            convert float8 to int2\n                            convert float8 to int2\n                        ": "",
    "\n                            population standard deviation of float4 input values\n                            population standard deviation of float4 input values\n                        ": "",
    "\n                            conversion for MULE_INTERNAL to ISO-8859-5\n                            conversion for MULE_INTERNAL to ISO-8859-5\n                        ": "",
    "\n                            statistics: recovery conflicts in database caused by drop tablespace\n                            statistics: recovery conflicts in database caused by drop tablespace\n                        ": "",
    "\n                            convert int8 to float4\n                            convert int8 to float4\n                        ": "",
    "\n                            brin: standalone scan new table pages\n                            brin: standalone scan new table pages\n                        ": "",
    "\n                            Kabyle (Algeria)\n                            Kabyle (Algeria)\n                        ": "",
    "\n                            Cherokee (United States)\n                            Cherokee (United States)\n                        ": "",
    "\n                            population standard deviation of numeric input values\n                            population standard deviation of numeric input values\n                        ": "",
    "\n                            Russian (Moldova)\n                            Russian (Moldova)\n                        ": "",
    "\n                            is the range&apos;s lower bound infinite?\n                            is the range&apos;s lower bound infinite?\n                        ": "",
    "\n                            the smallest network which includes both of the given networks\n                            the smallest network which includes both of the given networks\n                        ": "",
    "\n                            sum of squares of the dependent variable (sum(Y^2) - sum(Y)^2/N)\n                            sum of squares of the dependent variable (sum(Y^2) - sum(Y)^2/N)\n                        ": "",
    "\n                            overlaps or is above\n                            overlaps or is above\n                        ": "",
    "\n                            GiST support\n                            GiST support\n                        ": "",
    "\n                            internal conversion function for UTF8 to BIG5\n                            internal conversion function for UTF8 to BIG5\n                        ": "",
    "\n                            internal conversion function for KOI8R to MULE_INTERNAL\n                            internal conversion function for KOI8R to MULE_INTERNAL\n                        ": "",
    "\n                            map query result to XML\n                            map query result to XML\n                        ": "",
    "\n                            Arabic (Yemen)\n                            Arabic (Yemen)\n                        ": "",
    "\n                            Mongolian (Mongolia)\n                            Mongolian (Mongolia)\n                        ": "",
    "\n                            conversion for KOI8R to WIN866\n                            conversion for KOI8R to WIN866\n                        ": "",
    "\n                            does not match regular expression, case-insensitive\n                            does not match regular expression, case-insensitive\n                        ": "",
    "\n                            bitwise-or bit aggregate\n                            bitwise-or bit aggregate\n                        ": "",
    "\n                            implementation of |/ operator\n                            implementation of |/ operator\n                        ": "",
    "\n                            float8 difference of two date values\n                            float8 difference of two date values\n                        ": "",
    "\n                            concatenate array elements, using delimiter, into text\n                            concatenate array elements, using delimiter, into text\n                        ": "",
    "\n                            deprecated, use &amp;&amp; instead\n                            deprecated, use &amp;&amp; instead\n                        ": "",
    "\n                            is type visible in search path?\n                            is type visible in search path?\n                        ": "",
    "\n                            aggregate combine function\n                            aggregate combine function\n                        ": "",
    "\n                            English (Cook Islands)\n                            English (Cook Islands)\n                        ": "",
    "\n                            fractional rank of hypothetical row\n                            fractional rank of hypothetical row\n                        ": "",
    "\n                            jsonpath query\n                            jsonpath query\n                        ": "",
    "\n                            user privilege on any column by username, rel oid\n                            user privilege on any column by username, rel oid\n                        ": "",
    "\n                            Russian (Belarus)\n                            Russian (Belarus)\n                        ": "",
    "\n                            restriction selectivity of ILIKE\n                            restriction selectivity of ILIKE\n                        ": "",
    "\n                            Belarusian\n                            Belarusian\n                        ": "",
    "\n                            Koyra Chiini\n                            Koyra Chiini\n                        ": "",
    "\n                            get identification of SQL object\n                            get identification of SQL object\n                        ": "",
    "\n                            Basaa (Cameroon)\n                            Basaa (Cameroon)\n                        ": "",
    "\n                            Igbo (Nigeria)\n                            Igbo (Nigeria)\n                        ": "",
    "\n                            lower bound of range\n                            lower bound of range\n                        ": "",
    "\n                            Croatian\n                            Croatian\n                        ": "",
    "\n                            Binary JSON\n                            Binary JSON\n                        ": "",
    "\n                            Albanian (Albania)\n                            Albanian (Albania)\n                        ": "",
    "\n                            implementation of @@ operator\n                            implementation of @@ operator\n                        ": "",
    "\n                            population covariance\n                            population covariance\n                        ": "",
    "\n                            French (Mauritius)\n                            French (Mauritius)\n                        ": "",
    "\n                            (internal)\n                            (internal)\n                        ": "",
    "\n                            daterange constructor\n                            daterange constructor\n                        ": "",
    "\n                            Asturian\n                            Asturian\n                        ": "",
    "\n                            convert int8 to int2\n                            convert int8 to int2\n                        ": "",
    "\n                            array of int2, used in system tables\n                            array of int2, used in system tables\n                        ": "",
    "\n                            conversion for LATIN5 to UTF8\n                            conversion for LATIN5 to UTF8\n                        ": "",
    "\n                            multivariate ndistinct coefficients\n                            multivariate ndistinct coefficients\n                        ": "",
    "\n                            Lao (Laos)\n                            Lao (Laos)\n                        ": "",
    "\n                            Sango (Central African Republic)\n                            Sango (Central African Republic)\n                        ": "",
    "\n                            restriction selectivity for position-comparison operators\n                            restriction selectivity for position-comparison operators\n                        ": "",
    "\n                            Hebrew\n                            Hebrew\n                        ": "",
    "\n                            Hindi (India)\n                            Hindi (India)\n                        ": "",
    "\n                            information about replication slots currently in use\n                            information about replication slots currently in use\n                        ": "",
    "\n                            Embu (Kenya)\n                            Embu (Kenya)\n                        ": "",
    "\n                            bitwise not\n                            bitwise not\n                        ": "",
    "\n                            number of input rows for which the input expression is not null\n                            number of input rows for which the input expression is not null\n                        ": "",
    "\n                            aggregate input into json\n                            aggregate input into json\n                        ": "",
    "\n                            are the addresses from the same family?\n                            are the addresses from the same family?\n                        ": "",
    "\n                            user privilege on role by username, role name\n                            user privilege on role by username, role name\n                        ": "",
    "\n                            Serbian (Latin, Serbia)\n                            Serbian (Latin, Serbia)\n                        ": "",
    "\n                            Azerbaijani (Cyrillic)\n                            Azerbaijani (Cyrillic)\n                        ": "",
    "\n                            inverse hyperbolic sine\n                            inverse hyperbolic sine\n                        ": "",
    "\n                            Sindhi\n                            Sindhi\n                        ": "",
    "\n                            equal\n                            equal\n                        ": "",
    "\n                            number of array dimensions\n                            number of array dimensions\n                        ": "",
    "\n                            current user privilege on schema by schema name\n                            current user privilege on schema by schema name\n                        ": "",
    "\n                            convert first char to int4\n                            convert first char to int4\n                        ": "",
    "\n                            rank of hypothetical row\n                            rank of hypothetical row\n                        ": "",
    "\n                            Mongolian\n                            Mongolian\n                        ": "",
    "\n                            split delimited text into text[], with null string\n                            split delimited text into text[], with null string\n                        ": "",
    "\n                            Maltese\n                            Maltese\n                        ": "",
    "\n                            Tachelhit\n                            Tachelhit\n                        ": "",
    "\n                            user privilege on language by username, language name\n                            user privilege on language by username, language name\n                        ": "",
    "\n                            map query result structure to XML Schema\n                            map query result structure to XML Schema\n                        ": "",
    "\n                            convert a long int to a human readable text using size units\n                            convert a long int to a human readable text using size units\n                        ": "",
    "\n                            lowercase\n                            lowercase\n                        ": "",
    "\n                            French (Gabon)\n                            French (Gabon)\n                        ": "",
    "\n                            GiST index internal text representation for text search\n                            GiST index internal text representation for text search\n                        ": "",
    "\n                            Standard Moroccan Tamazight\n                            Standard Moroccan Tamazight\n                        ": "",
    "\n                            Portuguese (Timor-Leste)\n                            Portuguese (Timor-Leste)\n                        ": "",
    "\n                            Nyankole (Uganda)\n                            Nyankole (Uganda)\n                        ": "",
    "\n                            conversion for WIN1250 to LATIN2\n                            conversion for WIN1250 to LATIN2\n                        ": "",
    "\n                            statistics: checkpoint time spent writing buffers to disk, in milliseconds\n                            statistics: checkpoint time spent writing buffers to disk, in milliseconds\n                        ": "",
    "\n                            Mazanderani (Iran)\n                            Mazanderani (Iran)\n                        ": "",
    "\n                            internal conversion function for UTF8 to ISO-8859 2-16\n                            internal conversion function for UTF8 to ISO-8859 2-16\n                        ": "",
    "\n                            English (South Africa)\n                            English (South Africa)\n                        ": "",
    "\n                            Nepali (India)\n                            Nepali (India)\n                        ": "",
    "\n                            SHA-512 hash\n                            SHA-512 hash\n                        ": "",
    "\n                            conversion for UTF8 to WIN1251\n                            conversion for UTF8 to WIN1251\n                        ": "",
    "\n                            Fulah (Latin, Mauritania)\n                            Fulah (Latin, Mauritania)\n                        ": "",
    "\n                            statistics: self execution time of function, in milliseconds\n                            statistics: self execution time of function, in milliseconds\n                        ": "",
    "\n                            convert jsonb to boolean\n                            convert jsonb to boolean\n                        ": "",
    "\n                            Urdu (India)\n                            Urdu (India)\n                        ": "",
    "\n                            user privilege on sequence by user oid, seq oid\n                            user privilege on sequence by user oid, seq oid\n                        ": "",
    "\n                            build an empty jsonb object\n                            build an empty jsonb object\n                        ": "",
    "\n                            statistics: wait event type on which backend is currently waiting\n                            statistics: wait event type on which backend is currently waiting\n                        ": "",
    "\n                            maximum value of all oid input values\n                            maximum value of all oid input values\n                        ": "",
    "\n                            build an empty json object\n                            build an empty json object\n                        ": "",
    "\n                            set random seed\n                            set random seed\n                        ": "",
    "\n                            join selectivity for area-comparison operators\n                            join selectivity for area-comparison operators\n                        ": "",
    "\n                            is a relation insertable/updatable/deletable\n                            is a relation insertable/updatable/deletable\n                        ": "",
    "\n                            Chinese (Simplified)\n                            Chinese (Simplified)\n                        ": "",
    "\n                            phrase-concatenate with distance\n                            phrase-concatenate with distance\n                        ": "",
    "\n                            Ngomba\n                            Ngomba\n                        ": "",
    "\n                            Kurdish\n                            Kurdish\n                        ": "",
    "\n                            convert name to varchar\n                            convert name to varchar\n                        ": "",
    "\n                            Mazanderani\n                            Mazanderani\n                        ": "",
    "\n                            trim selected characters from both ends of string\n                            trim selected characters from both ends of string\n                        ": "",
    "\n                            French\n                            French\n                        ": "",
    "\n                            convert int4 to char\n                            convert int4 to char\n                        ": "",
    "\n                            user privilege on relation by user oid, rel name\n                            user privilege on relation by user oid, rel name\n                        ": "",
    "\n                            jsonb aggregate transition function\n                            jsonb aggregate transition function\n                        ": "",
    "\n                            slope of the least-squares-fit linear equation determined by the (X, Y) pairs\n                            slope of the least-squares-fit linear equation determined by the (X, Y) pairs\n                        ": "",
    "\n                            Indented text from jsonb\n                            Indented text from jsonb\n                        ": "",
    "\n                            obsolete, deprecated pseudo-type\n                            obsolete, deprecated pseudo-type\n                        ": "",
    "\n                            Uzbek\n                            Uzbek\n                        ": "",
    "\n                            get json object field as text\n                            get json object field as text\n                        ": "",
    "\n                            user privilege on role by username, role oid\n                            user privilege on role by username, role oid\n                        ": "",
    "\n                            pseudo-type representing a polymorphic base type\n                            pseudo-type representing a polymorphic base type\n                        ": "",
    "\n                            netmask length\n                            netmask length\n                        ": "",
    "\n                            Taita\n                            Taita\n                        ": "",
    "\n                            registered procedure\n                            registered procedure\n                        ": "",
    "\n                            delete object field\n                            delete object field\n                        ": "",
    "\n                            Jola-Fonyi\n                            Jola-Fonyi\n                        ": "",
    "\n                            octet length\n                            octet length\n                        ": "",
    "\n                            statistics: number of scans done for table/index in current transaction\n                            statistics: number of scans done for table/index in current transaction\n                        ": "",
    "\n                            Spanish (Bolivia)\n                            Spanish (Bolivia)\n                        ": "",
    "\n                            implementation of @? operator\n                            implementation of @? operator\n                        ": "",
    "\n                            I/O typmod\n                            I/O typmod\n                        ": "",
    "\n                            parse text to tokens\n                            parse text to tokens\n                        ": "",
    "\n                            internal conversion function for EUC_TW to UTF8\n                            internal conversion function for EUC_TW to UTF8\n                        ": "",
    "\n                            large object position\n                            large object position\n                        ": "",
    "\n                            planner support for array_unnest\n                            planner support for array_unnest\n                        ": "",
    "\n                            English (Eritrea)\n                            English (Eritrea)\n                        ": "",
    "\n                            window RANGE support\n                            window RANGE support\n                        ": "",
    "\n                            convert path to polygon\n                            convert path to polygon\n                        ": "",
    "\n                            current clock time\n                            current clock time\n                        ": "",
    "\n                            trim both ends of string\n                            trim both ends of string\n                        ": "",
    "\n                            Estonian (Estonia)\n                            Estonian (Estonia)\n                        ": "",
    "\n                            age of a transaction ID, in transactions before current transaction\n                            age of a transaction ID, in transactions before current transaction\n                        ": "",
    "\n                            Bosnian\n                            Bosnian\n                        ": "",
    "\n                            conversion for LATIN1 to MULE_INTERNAL\n                            conversion for LATIN1 to MULE_INTERNAL\n                        ": "",
    "\n                            is opfamily visible in search path?\n                            is opfamily visible in search path?\n                        ": "",
    "\n                            closest point to A on B\n                            closest point to A on B\n                        ": "",
    "\n                            cube root\n                            cube root\n                        ": "",
    "\n                            map input to json\n                            map input to json\n                        ": "",
    "\n                            vertical\n                            vertical\n                        ": "",
    "\n                            count the number of NULL arguments\n                            count the number of NULL arguments\n                        ": "",
    "\n                            Scottish Gaelic\n                            Scottish Gaelic\n                        ": "",
    "\n                            Maori\n                            Maori\n                        ": "",
    "\n                            referential integrity ON UPDATE RESTRICT\n                            referential integrity ON UPDATE RESTRICT\n                        ": "",
    "\n                            statistics: reset collected statistics for current database\n                            statistics: reset collected statistics for current database\n                        ": "",
    "\n                            English (Samoa)\n                            English (Samoa)\n                        ": "",
    "\n                            French (Seychelles)\n                            French (Seychelles)\n                        ": "",
    "\n                            population variance of bigint input values (square of the population standard deviation)\n                            population variance of bigint input values (square of the population standard deviation)\n                        ": "",
    "\n                            Asu\n                            Asu\n                        ": "",
    "\n                            box height\n                            box height\n                        ": "",
    "\n                            current schema name\n                            current schema name\n                        ": "",
    "\n                            standard public schema\n                            standard public schema\n                        ": "",
    "\n                            conversion for BIG5 to UTF8\n                            conversion for BIG5 to UTF8\n                        ": "",
    "\n                            contains\n                            contains\n                        ": "",
    "\n                            conversion for UTF8 to ISO-8859-5\n                            conversion for UTF8 to ISO-8859-5\n                        ": "",
    "\n                            Uzbek (Cyrillic)\n                            Uzbek (Cyrillic)\n                        ": "",
    "\n                            implementation of *= operator\n                            implementation of *= operator\n                        ": "",
    "\n                            convert generic options array to name/value table\n                            convert generic options array to name/value table\n                        ": "",
    "\n                            internal conversion function for MULE_INTERNAL to LATIN1\n                            internal conversion function for MULE_INTERNAL to LATIN1\n                        ": "",
    "\n                            English (Tuvalu)\n                            English (Tuvalu)\n                        ": "",
    "\n                            substitute portion of bitstring\n                            substitute portion of bitstring\n                        ": "",
    "\n                            Arabic (Eritrea)\n                            Arabic (Eritrea)\n                        ": "",
    "\n                            English (Nigeria)\n                            English (Nigeria)\n                        ": "",
    "\n                            extract field from timestamp\n                            extract field from timestamp\n                        ": "",
    "\n                            get progress for all replication origins\n                            get progress for all replication origins\n                        ": "",
    "\n                            SP-GiST support for quad tree over 2-D types represented by their bounding boxes\n                            SP-GiST support for quad tree over 2-D types represented by their bounding boxes\n                        ": "",
    "\n                            conversion for UTF8 to JOHAB\n                            conversion for UTF8 to JOHAB\n                        ": "",
    "\n                            flag an extension&apos;s table contents to be emitted by pg_dump\n                            flag an extension&apos;s table contents to be emitted by pg_dump\n                        ": "",
    "\n                            add point to box (translate)\n                            add point to box (translate)\n                        ": "",
    "\n                            255.255.255.255\n                            255.255.255.255\n                        ": "",
    "\n                            ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\n                            ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\n                        ": "",
    "\n                            md5\n                            md5\n                        ": "",
    "\n                            peer\n                            peer\n                        ": "",
    "\n                            ::1\n                            ::1\n                        ": "",
    "\n                            127.0.0.1\n                            127.0.0.1\n                        ": "",
    "\n                            host\n                            host\n                        ": "",
    "\n                            local\n                            local\n                        ": "",
    "\n                            &apos;--build=x86_64-linux-gnu&apos; &apos;--prefix=/usr&apos; &apos;--includedir=/usr/include&apos; &apos;--mandir=/usr/share/man&apos; &apos;--infodir=/usr/share/info&apos; &apos;--sysconfdir=/etc&apos; &apos;--localstatedir=/var&apos; &apos;--disable-silent-rules&apos; &apos;--libdir=/usr/lib/x86_64-linux-gnu&apos; &apos;--libexecdir=/usr/lib/x86_64-linux-gnu&apos; &apos;--disable-maintainer-mode&apos; &apos;--disable-dependency-tracking&apos; &apos;--with-icu&apos; &apos;--with-tcl&apos; &apos;--with-perl&apos; &apos;--with-python&apos; &apos;--with-pam&apos; &apos;--with-openssl&apos; &apos;--with-libxml&apos; &apos;--with-libxslt&apos; &apos;PYTHON=/usr/bin/python3&apos; &apos;--mandir=/usr/share/postgresql/12/man&apos; &apos;--docdir=/usr/share/doc/postgresql-doc-12&apos; &apos;--sysconfdir=/etc/postgresql-common&apos; &apos;--datarootdir=/usr/share/&apos; &apos;--datadir=/usr/share/postgresql/12&apos; &apos;--bindir=/usr/lib/postgresql/12/bin&apos; &apos;--libdir=/usr/lib/x86_64-linux-gnu/&apos; &apos;--libexecdir=/usr/lib/postgresql/&apos; &apos;--includedir=/usr/include/postgresql/&apos; &apos;--with-extra-version= (Ubuntu 12.11-0ubuntu0.20.04.1)&apos; &apos;--enable-nls&apos; &apos;--enable-integer-datetimes&apos; &apos;--enable-thread-safety&apos; &apos;--enable-tap-tests&apos; &apos;--enable-debug&apos; &apos;--enable-dtrace&apos; &apos;--disable-rpath&apos; &apos;--with-uuid=e2fs&apos; &apos;--with-gnu-ld&apos; &apos;--with-pgport=5432&apos; &apos;--with-system-tzdata=/usr/share/zoneinfo&apos; &apos;--with-llvm&apos; &apos;LLVM_CONFIG=/usr/bin/llvm-config-10&apos; &apos;CLANG=/usr/bin/clang-10&apos; &apos;--with-systemd&apos; &apos;--with-selinux&apos; &apos;MKDIR_P=/bin/mkdir -p&apos; &apos;TAR=/bin/tar&apos; &apos;CFLAGS=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -fno-omit-frame-pointer&apos; &apos;LDFLAGS=-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now&apos; &apos;--with-gssapi&apos; &apos;--with-ldap&apos; &apos;--with-includes=/usr/include/mit-krb5&apos; &apos;--with-libs=/usr/lib/mit-krb5&apos; &apos;--with-libs=/usr/lib/x86_64-linux-gnu/mit-krb5&apos; &apos;build_alias=x86_64-linux-gnu&apos; &apos;CPPFLAGS=-Wdate-time -D_FORTIFY_SOURCE=2&apos; &apos;CXXFLAGS=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security&apos;\n                            &apos;--build=x86_64-linux-gnu&apos; &apos;--prefix=/usr&apos; &apos;--includedir=/usr/include&apos; &apos;--mandir=/usr/share/man&apos; &apos;--infodir=/usr/share/info&apos; &apos;--sysconfdir=/etc&apos; &apos;--localstatedir=/var&apos; &apos;--disable-silent-rules&apos; &apos;--libdir=/usr/lib/x86_64-linux-gnu&apos; &apos;--libexecdir=/usr/lib/x86_64-linux-gnu&apos; &apos;--disable-maintainer-mode&apos; &apos;--disable-dependency-tracking&apos; &apos;--with-icu&apos; &apos;--with-tcl&apos; &apos;--with-perl&apos; &apos;--with-python&apos; &apos;--with-pam&apos; &apos;--with-openssl&apos; &apos;--with-libxml&apos; &apos;--with-libxslt&apos; &apos;PYTHON=/usr/bin/python3&apos; &apos;--mandir=/usr/share/postgresql/12/man&apos; &apos;--docdir=/usr/share/doc/postgresql-doc-12&apos; &apos;--sysconfdir=/etc/postgresql-common&apos; &apos;--datarootdir=/usr/share/&apos; &apos;--datadir=/usr/share/postgresql/12&apos; &apos;--bindir=/usr/lib/postgresql/12/bin&apos; &apos;--libdir=/usr/lib/x86_64-linux-gnu/&apos; &apos;--libexecdir=/usr/lib/postgresql/&apos; &apos;--includedir=/usr/include/postgresql/&apos; &apos;--with-extra-version= (Ubuntu 12.11-0ubuntu0.20.04.1)&apos; &apos;--enable-nls&apos; &apos;--enable-integer-datetimes&apos; &apos;--enable-thread-safety&apos; &apos;--enable-tap-tests&apos; &apos;--enable-debug&apos; &apos;--enable-dtrace&apos; &apos;--disable-rpath&apos; &apos;--with-uuid=e2fs&apos; &apos;--with-gnu-ld&apos; &apos;--with-pgport=5432&apos; &apos;--with-system-tzdata=/usr/share/zoneinfo&apos; &apos;--with-llvm&apos; &apos;LLVM_CONFIG=/usr/bin/llvm-config-10&apos; &apos;CLANG=/usr/bin/clang-10&apos; &apos;--with-systemd&apos; &apos;--with-selinux&apos; &apos;MKDIR_P=/bin/mkdir -p&apos; &apos;TAR=/bin/tar&apos; &apos;CFLAGS=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -fno-omit-frame-pointer&apos; &apos;LDFLAGS=-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now&apos; &apos;--with-gssapi&apos; &apos;--with-ldap&apos; &apos;--with-includes=/usr/include/mit-krb5&apos; &apos;--with-libs=/usr/lib/mit-krb5&apos; &apos;--with-libs=/usr/lib/x86_64-linux-gnu/mit-krb5&apos; &apos;build_alias=x86_64-linux-gnu&apos; &apos;CPPFLAGS=-Wdate-time -D_FORTIFY_SOURCE=2&apos; &apos;CXXFLAGS=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security&apos;\n                        ": "",
    "\n                            -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -Wno-format-truncation -Wno-stringop-truncation -g -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -fno-omit-frame-pointer\n                            -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Werror=vla -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -fexcess-precision=standard -Wno-format-truncation -Wno-stringop-truncation -g -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -fno-omit-frame-pointer\n                        ": "",
    "\n                            /usr/include/postgresql/12/server\n                            /usr/include/postgresql/12/server\n                        ": "",
    "\n                            gcc\n                            gcc\n                        ": "",
    "\n                            PostgreSQL 12.11 (Ubuntu 12.11-0ubuntu0.20.04.1)\n                            PostgreSQL 12.11 (Ubuntu 12.11-0ubuntu0.20.04.1)\n                        ": "",
    "\n                            /usr/lib/postgresql/12/lib\n                            /usr/lib/postgresql/12/lib\n                        ": "",
    "\n                            /usr/share/postgresql/12\n                            /usr/share/postgresql/12\n                        ": "",
    "\n                            -lpgcommon -lpgport -lpthread -lselinux -lxslt -lxml2 -lpam -lssl -lcrypto -lgssapi_krb5 -lz -ledit -lrt -lcrypt -ldl -lm \n                            -lpgcommon -lpgport -lpthread -lselinux -lxslt -lxml2 -lpam -lssl -lcrypto -lgssapi_krb5 -lz -ledit -lrt -lcrypt -ldl -lm \n                        ": "",
    "\n                            /usr/lib/postgresql/12/bin\n                            /usr/lib/postgresql/12/bin\n                        ": "",
    "\n                            /usr/lib/x86_64-linux-gnu\n                            /usr/lib/x86_64-linux-gnu\n                        ": "",
    "\n                            /usr/share/locale\n                            /usr/share/locale\n                        ": "",
    "\n                            /etc/postgresql-common\n                            /etc/postgresql-common\n                        ": "",
    "\n                            /usr/share/postgresql/12/man\n                            /usr/share/postgresql/12/man\n                        ": "",
    "\n                            /usr/share/doc/postgresql-doc-12\n                            /usr/share/doc/postgresql-doc-12\n                        ": "",
    "\n                            -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -L/usr/lib/llvm-10/lib -L/usr/lib/x86_64-linux-gnu/mit-krb5 -Wl,--as-needed\n                            -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -L/usr/lib/llvm-10/lib -L/usr/lib/x86_64-linux-gnu/mit-krb5 -Wl,--as-needed\n                        ": "",
    "\n                            /usr/lib/postgresql/12/lib/pgxs/src/makefiles/pgxs.mk\n                            /usr/lib/postgresql/12/lib/pgxs/src/makefiles/pgxs.mk\n                        ": "",
    "\n                            -fPIC\n                            -fPIC\n                        ": "",
    "\n                            /usr/include/postgresql\n                            /usr/include/postgresql\n                        ": "",
    "\n                            -Wdate-time -D_FORTIFY_SOURCE=2 -D_GNU_SOURCE -I/usr/include/libxml2 -I/usr/include/mit-krb5\n                            -Wdate-time -D_FORTIFY_SOURCE=2 -D_GNU_SOURCE -I/usr/include/libxml2 -I/usr/include/mit-krb5\n                        ": "",
    "\n                            INCLUDEDIR\n                            INCLUDEDIR\n                        ": "",
    "\n                            PKGINCLUDEDIR\n                            PKGINCLUDEDIR\n                        ": "",
    "\n                            LDFLAGS_EX\n                            LDFLAGS_EX\n                        ": "",
    "\n                            LDFLAGS\n                            LDFLAGS\n                        ": "",
    "\n                            CPPFLAGS\n                            CPPFLAGS\n                        ": "",
    "\n                            CC\n                            CC\n                        ": "",
    "\n                            MANDIR\n                            MANDIR\n                        ": "",
    "\n                            LIBS\n                            LIBS\n                        ": "",
    "\n                            CONFIGURE\n                            CONFIGURE\n                        ": "",
    "\n                            CFLAGS\n                            CFLAGS\n                        ": "",
    "\n                            VERSION\n                            VERSION\n                        ": "",
    "\n                            PGXS\n                            PGXS\n                        ": "",
    "\n                            HTMLDIR\n                            HTMLDIR\n                        ": "",
    "\n                            PKGLIBDIR\n                            PKGLIBDIR\n                        ": "",
    "\n                            LIBDIR\n                            LIBDIR\n                        ": "",
    "\n                            BINDIR\n                            BINDIR\n                        ": "",
    "\n                            SHAREDIR\n                            SHAREDIR\n                        ": "",
    "\n                            DOCDIR\n                            DOCDIR\n                        ": "",
    "\n                            SYSCONFDIR\n                            SYSCONFDIR\n                        ": "",
    "\n                            INCLUDEDIR-SERVER\n                            INCLUDEDIR-SERVER\n                        ": "",
    "\n                            CFLAGS_SL\n                            CFLAGS_SL\n                        ": "",
    "\n                            LDFLAGS_SL\n                            LDFLAGS_SL\n                        ": "",
    "\n                            LOCALEDIR\n                            LOCALEDIR\n                        ": "",
    "\n                            pg_signal_backend\n                            pg_signal_backend\n                        ": "",
    "\n                            pg_read_all_settings\n                            pg_read_all_settings\n                        ": "",
    "\n                            pg_write_server_files\n                            pg_write_server_files\n                        ": "",
    "\n                            pg_execute_server_program\n                            pg_execute_server_program\n                        ": "",
    "\n                            pg_read_all_stats\n                            pg_read_all_stats\n                        ": "",
    "\n                            pg_stat_scan_tables\n                            pg_stat_scan_tables\n                        ": "",
    "\n                            pg_monitor\n                            pg_monitor\n                        ": "",
    "\n                            pg_read_server_files\n                            pg_read_server_files\n                        ": "",
    "\n                            varbit_minmax_ops\n                            varbit_minmax_ops\n                        ": "",
    "\n                            poly_ops\n                            poly_ops\n                        ": "",
    "\n                            date_minmax_ops\n                            date_minmax_ops\n                        ": "",
    "\n                            box_ops\n                            box_ops\n                        ": "",
    "\n                            name_ops\n                            name_ops\n                        ": "",
    "\n                            macaddr_ops\n                            macaddr_ops\n                        ": "",
    "\n                            box_inclusion_ops\n                            box_inclusion_ops\n                        ": "",
    "\n                            bit_ops\n                            bit_ops\n                        ": "",
    "\n                            varchar_ops\n                            varchar_ops\n                        ": "",
    "\n                            pg_lsn_ops\n                            pg_lsn_ops\n                        ": "",
    "\n                            numeric_minmax_ops\n                            numeric_minmax_ops\n                        ": "",
    "\n                            inet_inclusion_ops\n                            inet_inclusion_ops\n                        ": "",
    "\n                            tid_ops\n                            tid_ops\n                        ": "",
    "\n                            range_ops\n                            range_ops\n                        ": "",
    "\n                            varchar_pattern_ops\n                            varchar_pattern_ops\n                        ": "",
    "\n                            jsonb_ops\n                            jsonb_ops\n                        ": "",
    "\n                            bytea_minmax_ops\n                            bytea_minmax_ops\n                        ": "",
    "\n                            bool_ops\n                            bool_ops\n                        ": "",
    "\n                            tsvector_ops\n                            tsvector_ops\n                        ": "",
    "\n                            text_pattern_ops\n                            text_pattern_ops\n                        ": "",
    "\n                            enum_ops\n                            enum_ops\n                        ": "",
    "\n                            timetz_ops\n                            timetz_ops\n                        ": "",
    "\n                            macaddr8_ops\n                            macaddr8_ops\n                        ": "",
    "\n                            tsquery_ops\n                            tsquery_ops\n                        ": "",
    "\n                            cidr_ops\n                            cidr_ops\n                        ": "",
    "\n                            int8_minmax_ops\n                            int8_minmax_ops\n                        ": "",
    "\n                            array_ops\n                            array_ops\n                        ": "",
    "\n                            float8_ops\n                            float8_ops\n                        ": "",
    "\n                            bit_minmax_ops\n                            bit_minmax_ops\n                        ": "",
    "\n                            time_minmax_ops\n                            time_minmax_ops\n                        ": "",
    "\n                            bytea_ops\n                            bytea_ops\n                        ": "",
    "\n                            range_inclusion_ops\n                            range_inclusion_ops\n                        ": "",
    "\n                            char_ops\n                            char_ops\n                        ": "",
    "\n                            name_minmax_ops\n                            name_minmax_ops\n                        ": "",
    "\n                            bpchar_pattern_ops\n                            bpchar_pattern_ops\n                        ": "",
    "\n                            macaddr_minmax_ops\n                            macaddr_minmax_ops\n                        ": "",
    "\n                            int4_minmax_ops\n                            int4_minmax_ops\n                        ": "",
    "\n                            oid_ops\n                            oid_ops\n                        ": "",
    "\n                            timestamp_minmax_ops\n                            timestamp_minmax_ops\n                        ": "",
    "\n                            timestamp_ops\n                            timestamp_ops\n                        ": "",
    "\n                            tid_minmax_ops\n                            tid_minmax_ops\n                        ": "",
    "\n                            record_image_ops\n                            record_image_ops\n                        ": "",
    "\n                            float8_minmax_ops\n                            float8_minmax_ops\n                        ": "",
    "\n                            inet_ops\n                            inet_ops\n                        ": "",
    "\n                            aclitem_ops\n                            aclitem_ops\n                        ": "",
    "\n                            cid_ops\n                            cid_ops\n                        ": "",
    "\n                            timestamptz_minmax_ops\n                            timestamptz_minmax_ops\n                        ": "",
    "\n                            macaddr8_minmax_ops\n                            macaddr8_minmax_ops\n                        ": "",
    "\n                            float4_ops\n                            float4_ops\n                        ": "",
    "\n                            circle_ops\n                            circle_ops\n                        ": "",
    "\n                            uuid_minmax_ops\n                            uuid_minmax_ops\n                        ": "",
    "\n                            interval_ops\n                            interval_ops\n                        ": "",
    "\n                            date_ops\n                            date_ops\n                        ": "",
    "\n                            quad_point_ops\n                            quad_point_ops\n                        ": "",
    "\n                            interval_minmax_ops\n                            interval_minmax_ops\n                        ": "",
    "\n                            record_ops\n                            record_ops\n                        ": "",
    "\n                            float4_minmax_ops\n                            float4_minmax_ops\n                        ": "",
    "\n                            bpchar_ops\n                            bpchar_ops\n                        ": "",
    "\n                            jsonb_path_ops\n                            jsonb_path_ops\n                        ": "",
    "\n                            timestamptz_ops\n                            timestamptz_ops\n                        ": "",
    "\n                            inet_minmax_ops\n                            inet_minmax_ops\n                        ": "",
    "\n                            pg_lsn_minmax_ops\n                            pg_lsn_minmax_ops\n                        ": "",
    "\n                            numeric_ops\n                            numeric_ops\n                        ": "",
    "\n                            int8_ops\n                            int8_ops\n                        ": "",
    "\n                            int2_ops\n                            int2_ops\n                        ": "",
    "\n                            int2_minmax_ops\n                            int2_minmax_ops\n                        ": "",
    "\n                            char_minmax_ops\n                            char_minmax_ops\n                        ": "",
    "\n                            timetz_minmax_ops\n                            timetz_minmax_ops\n                        ": "",
    "\n                            int4_ops\n                            int4_ops\n                        ": "",
    "\n                            oid_minmax_ops\n                            oid_minmax_ops\n                        ": "",
    "\n                            text_ops\n                            text_ops\n                        ": "",
    "\n                            time_ops\n                            time_ops\n                        ": "",
    "\n                            money_ops\n                            money_ops\n                        ": "",
    "\n                            varbit_ops\n                            varbit_ops\n                        ": "",
    "\n                            text_minmax_ops\n                            text_minmax_ops\n                        ": "",
    "\n                            kd_point_ops\n                            kd_point_ops\n                        ": "",
    "\n                            point_ops\n                            point_ops\n                        ": "",
    "\n                            xid_ops\n                            xid_ops\n                        ": "",
    "\n                            oidvector_ops\n                            oidvector_ops\n                        ": "",
    "\n                            uuid_ops\n                            uuid_ops\n                        ": "",
    "\n                            bpchar_minmax_ops\n                            bpchar_minmax_ops\n                        ": "",
    "\n                            mk-MK\n                            mk-MK\n                        ": "",
    "\n                            ru-RU\n                            ru-RU\n                        ": "",
    "\n                            sr-Latn-BA\n                            sr-Latn-BA\n                        ": "",
    "\n                            te\n                            te\n                        ": "",
    "\n                            vai-Vaii\n                            vai-Vaii\n                        ": "",
    "\n                            bg\n                            bg\n                        ": "",
    "\n                            qu-PE\n                            qu-PE\n                        ": "",
    "\n                            ar-YE\n                            ar-YE\n                        ": "",
    "\n                            ar-KM\n                            ar-KM\n                        ": "",
    "\n                            pt-GQ\n                            pt-GQ\n                        ": "",
    "\n                            yi-001\n                            yi-001\n                        ": "",
    "\n                            rof-TZ\n                            rof-TZ\n                        ": "",
    "\n                            vai-Latn\n                            vai-Latn\n                        ": "",
    "\n                            om\n                            om\n                        ": "",
    "\n                            ii\n                            ii\n                        ": "",
    "\n                            fr-BE\n                            fr-BE\n                        ": "",
    "\n                            en-IL\n                            en-IL\n                        ": "",
    "\n                            teo-UG\n                            teo-UG\n                        ": "",
    "\n                            en-BW\n                            en-BW\n                        ": "",
    "\n                            mi-NZ\n                            mi-NZ\n                        ": "",
    "\n                            fil-PH\n                            fil-PH\n                        ": "",
    "\n                            en-SE\n                            en-SE\n                        ": "",
    "\n                            bem-ZM\n                            bem-ZM\n                        ": "",
    "\n                            en-UM\n                            en-UM\n                        ": "",
    "\n                            haw-US\n                            haw-US\n                        ": "",
    "\n                            en-MG\n                            en-MG\n                        ": "",
    "\n                            km-KH\n                            km-KH\n                        ": "",
    "\n                            ff-Latn-SN\n                            ff-Latn-SN\n                        ": "",
    "\n                            so-KE\n                            so-KE\n                        ": "",
    "\n                            bm\n                            bm\n                        ": "",
    "\n                            zu-ZA\n                            zu-ZA\n                        ": "",
    "\n                            dje-NE\n                            dje-NE\n                        ": "",
    "\n                            fr-DJ\n                            fr-DJ\n                        ": "",
    "\n                            en-TT\n                            en-TT\n                        ": "",
    "\n                            ar-MR\n                            ar-MR\n                        ": "",
    "\n                            kk\n                            kk\n                        ": "",
    "\n                            cy-GB\n                            cy-GB\n                        ": "",
    "\n                            ti-ET\n                            ti-ET\n                        ": "",
    "\n                            bez\n                            bez\n                        ": "",
    "\n                            zh-Hans-CN\n                            zh-Hans-CN\n                        ": "",
    "\n                            teo\n                            teo\n                        ": "",
    "\n                            en-BZ\n                            en-BZ\n                        ": "",
    "\n                            tt-RU\n                            tt-RU\n                        ": "",
    "\n                            sw-CD\n                            sw-CD\n                        ": "",
    "\n                            cgg-UG\n                            cgg-UG\n                        ": "",
    "\n                            ar-PS\n                            ar-PS\n                        ": "",
    "\n                            yo\n                            yo\n                        ": "",
    "\n                            so-ET\n                            so-ET\n                        ": "",
    "\n                            mzn\n                            mzn\n                        ": "",
    "\n                            es-BO\n                            es-BO\n                        ": "",
    "\n                            jv-ID\n                            jv-ID\n                        ": "",
    "\n                            en-TC\n                            en-TC\n                        ": "",
    "\n                            dyo-SN\n                            dyo-SN\n                        ": "",
    "\n                            en-TO\n                            en-TO\n                        ": "",
    "\n                            lg\n                            lg\n                        ": "",
    "\n                            ff-Latn-SL\n                            ff-Latn-SL\n                        ": "",
    "\n                            und\n                            und\n                        ": "",
    "\n                            en-NA\n                            en-NA\n                        ": "",
    "\n                            nnh-CM\n                            nnh-CM\n                        ": "",
    "\n                            nn-NO\n                            nn-NO\n                        ": "",
    "\n                            xog-UG\n                            xog-UG\n                        ": "",
    "\n                            zh-Hant-TW\n                            zh-Hant-TW\n                        ": "",
    "\n                            fa-AF\n                            fa-AF\n                        ": "",
    "\n                            zh-Hant-MO\n                            zh-Hant-MO\n                        ": "",
    "\n                            chr\n                            chr\n                        ": "",
    "\n                            sd-PK\n                            sd-PK\n                        ": "",
    "\n                            bn-IN\n                            bn-IN\n                        ": "",
    "\n                            kde\n                            kde\n                        ": "",
    "\n                            fr-TD\n                            fr-TD\n                        ": "",
    "\n                            gsw-CH\n                            gsw-CH\n                        ": "",
    "\n                            sw-TZ\n                            sw-TZ\n                        ": "",
    "\n                            fr-PF\n                            fr-PF\n                        ": "",
    "\n                            mg-MG\n                            mg-MG\n                        ": "",
    "\n                            sr-Cyrl-RS\n                            sr-Cyrl-RS\n                        ": "",
    "\n                            es-UY\n                            es-UY\n                        ": "",
    "\n                            kn\n                            kn\n                        ": "",
    "\n                            guz-KE\n                            guz-KE\n                        ": "",
    "\n                            en-SB\n                            en-SB\n                        ": "",
    "\n                            kea-CV\n                            kea-CV\n                        ": "",
    "\n                            lb\n                            lb\n                        ": "",
    "\n                            el-CY\n                            el-CY\n                        ": "",
    "\n                            af\n                            af\n                        ": "",
    "\n                            sr-Cyrl-BA\n                            sr-Cyrl-BA\n                        ": "",
    "\n                            rwk-TZ\n                            rwk-TZ\n                        ": "",
    "\n                            my\n                            my\n                        ": "",
    "\n                            en-CY\n                            en-CY\n                        ": "",
    "\n                            sl\n                            sl\n                        ": "",
    "\n                            en-NU\n                            en-NU\n                        ": "",
    "\n                            en-SZ\n                            en-SZ\n                        ": "",
    "\n                            et\n                            et\n                        ": "",
    "\n                            en-SH\n                            en-SH\n                        ": "",
    "\n                            it-SM\n                            it-SM\n                        ": "",
    "\n                            agq\n                            agq\n                        ": "",
    "\n                            uk-UA\n                            uk-UA\n                        ": "",
    "\n                            ko\n                            ko\n                        ": "",
    "\n                            en-ZM\n                            en-ZM\n                        ": "",
    "\n                            en-US\n                            en-US\n                        ": "",
    "\n                            ti\n                            ti\n                        ": "",
    "\n                            ru-MD\n                            ru-MD\n                        ": "",
    "\n                            fr-YT\n                            fr-YT\n                        ": "",
    "\n                            ga-IE\n                            ga-IE\n                        ": "",
    "\n                            ceb\n                            ceb\n                        ": "",
    "\n                            sah-RU\n                            sah-RU\n                        ": "",
    "\n                            ses-ML\n                            ses-ML\n                        ": "",
    "\n                            tg\n                            tg\n                        ": "",
    "\n                            fr-BI\n                            fr-BI\n                        ": "",
    "\n                            fr-SN\n                            fr-SN\n                        ": "",
    "\n                            nd\n                            nd\n                        ": "",
    "\n                            sl-SI\n                            sl-SI\n                        ": "",
    "\n                            ar-SO\n                            ar-SO\n                        ": "",
    "\n                            es-EA\n                            es-EA\n                        ": "",
    "\n                            wae-CH\n                            wae-CH\n                        ": "",
    "\n                            ksh\n                            ksh\n                        ": "",
    "\n                            mgh\n                            mgh\n                        ": "",
    "\n                            az\n                            az\n                        ": "",
    "\n                            es-SV\n                            es-SV\n                        ": "",
    "\n                            pt-CV\n                            pt-CV\n                        ": "",
    "\n                            qu\n                            qu\n                        ": "",
    "\n                            ce\n                            ce\n                        ": "",
    "\n                            ca-ES\n                            ca-ES\n                        ": "",
    "\n                            ru-KG\n                            ru-KG\n                        ": "",
    "\n                            eu-ES\n                            eu-ES\n                        ": "",
    "\n                            ksb\n                            ksb\n                        ": "",
    "\n                            twq-NE\n                            twq-NE\n                        ": "",
    "\n                            en-SX\n                            en-SX\n                        ": "",
    "\n                            fr-MQ\n                            fr-MQ\n                        ": "",
    "\n                            nb-SJ\n                            nb-SJ\n                        ": "",
    "\n                            ta-LK\n                            ta-LK\n                        ": "",
    "\n                            naq-NA\n                            naq-NA\n                        ": "",
    "\n                            ps\n                            ps\n                        ": "",
    "\n                            gsw\n                            gsw\n                        ": "",
    "\n                            fr-CI\n                            fr-CI\n                        ": "",
    "\n                            ee\n                            ee\n                        ": "",
    "\n                            fr-SY\n                            fr-SY\n                        ": "",
    "\n                            ee-GH\n                            ee-GH\n                        ": "",
    "\n                            fr-MG\n                            fr-MG\n                        ": "",
    "\n                            ka-GE\n                            ka-GE\n                        ": "",
    "\n                            en-GG\n                            en-GG\n                        ": "",
    "\n                            kw\n                            kw\n                        ": "",
    "\n                            en-VG\n                            en-VG\n                        ": "",
    "\n                            mua-CM\n                            mua-CM\n                        ": "",
    "\n                            ro-RO\n                            ro-RO\n                        ": "",
    "\n                            to\n                            to\n                        ": "",
    "\n                            luo-KE\n                            luo-KE\n                        ": "",
    "\n                            ne\n                            ne\n                        ": "",
    "\n                            en-JE\n                            en-JE\n                        ": "",
    "\n                            nl-SX\n                            nl-SX\n                        ": "",
    "\n                            si-LK\n                            si-LK\n                        ": "",
    "\n                            hu-HU\n                            hu-HU\n                        ": "",
    "\n                            bn-BD\n                            bn-BD\n                        ": "",
    "\n                            sr-Cyrl\n                            sr-Cyrl\n                        ": "",
    "\n                            es-PR\n                            es-PR\n                        ": "",
    "\n                            ko-KP\n                            ko-KP\n                        ": "",
    "\n                            es-PA\n                            es-PA\n                        ": "",
    "\n                            bg-BG\n                            bg-BG\n                        ": "",
    "\n                            ia-001\n                            ia-001\n                        ": "",
    "\n                            ar-001\n                            ar-001\n                        ": "",
    "\n                            en-CH\n                            en-CH\n                        ": "",
    "\n                            es-PH\n                            es-PH\n                        ": "",
    "\n                            guz\n                            guz\n                        ": "",
    "\n                            ewo-CM\n                            ewo-CM\n                        ": "",
    "\n                            hi\n                            hi\n                        ": "",
    "\n                            jgo\n                            jgo\n                        ": "",
    "\n                            bn\n                            bn\n                        ": "",
    "\n                            fo-DK\n                            fo-DK\n                        ": "",
    "\n                            khq-ML\n                            khq-ML\n                        ": "",
    "\n                            en-RW\n                            en-RW\n                        ": "",
    "\n                            kea\n                            kea\n                        ": "",
    "\n                            en-MY\n                            en-MY\n                        ": "",
    "\n                            vai-Vaii-LR\n                            vai-Vaii-LR\n                        ": "",
    "\n                            da\n                            da\n                        ": "",
    "\n                            kam-KE\n                            kam-KE\n                        ": "",
    "\n                            en-FJ\n                            en-FJ\n                        ": "",
    "\n                            se-NO\n                            se-NO\n                        ": "",
    "\n                            jv\n                            jv\n                        ": "",
    "\n                            fr-PM\n                            fr-PM\n                        ": "",
    "\n                            zh-Hans-MO\n                            zh-Hans-MO\n                        ": "",
    "\n                            da-DK\n                            da-DK\n                        ": "",
    "\n                            hy\n                            hy\n                        ": "",
    "\n                            en-DM\n                            en-DM\n                        ": "",
    "\n                            ms-SG\n                            ms-SG\n                        ": "",
    "\n                            ar-JO\n                            ar-JO\n                        ": "",
    "\n                            yav-CM\n                            yav-CM\n                        ": "",
    "\n                            sq-XK\n                            sq-XK\n                        ": "",
    "\n                            ckb-IR\n                            ckb-IR\n                        ": "",
    "\n                            ar-MA\n                            ar-MA\n                        ": "",
    "\n                            ta-IN\n                            ta-IN\n                        ": "",
    "\n                            en-FM\n                            en-FM\n                        ": "",
    "\n                            tg-TJ\n                            tg-TJ\n                        ": "",
    "\n                            sq-AL\n                            sq-AL\n                        ": "",
    "\n                            vun-TZ\n                            vun-TZ\n                        ": "",
    "\n                            vun\n                            vun\n                        ": "",
    "\n                            en-IM\n                            en-IM\n                        ": "",
    "\n                            hr\n                            hr\n                        ": "",
    "\n                            vi-VN\n                            vi-VN\n                        ": "",
    "\n                            fr-BJ\n                            fr-BJ\n                        ": "",
    "\n                            hi-IN\n                            hi-IN\n                        ": "",
    "\n                            en-ER\n                            en-ER\n                        ": "",
    "\n                            sbp\n                            sbp\n                        ": "",
    "\n                            de-LI\n                            de-LI\n                        ": "",
    "\n                            nus-SS\n                            nus-SS\n                        ": "",
    "\n                            en-IO\n                            en-IO\n                        ": "",
    "\n                            fr-VU\n                            fr-VU\n                        ": "",
    "\n                            zh-Hant-HK\n                            zh-Hant-HK\n                        ": "",
    "\n                            ms-MY\n                            ms-MY\n                        ": "",
    "\n                            ga-GB\n                            ga-GB\n                        ": "",
    "\n                            bm-ML\n                            bm-ML\n                        ": "",
    "\n                            uz-Latn\n                            uz-Latn\n                        ": "",
    "\n                            br\n                            br\n                        ": "",
    "\n                            pt\n                            pt\n                        ": "",
    "\n                            km\n                            km\n                        ": "",
    "\n                            uz\n                            uz\n                        ": "",
    "\n                            mn-MN\n                            mn-MN\n                        ": "",
    "\n                            ar-QA\n                            ar-QA\n                        ": "",
    "\n                            yo-BJ\n                            yo-BJ\n                        ": "",
    "\n                            nl\n                            nl\n                        ": "",
    "\n                            yi\n                            yi\n                        ": "",
    "\n                            se-SE\n                            se-SE\n                        ": "",
    "\n                            qu-EC\n                            qu-EC\n                        ": "",
    "\n                            dz-BT\n                            dz-BT\n                        ": "",
    "\n                            wae\n                            wae\n                        ": "",
    "\n                            luy-KE\n                            luy-KE\n                        ": "",
    "\n                            bs-Cyrl\n                            bs-Cyrl\n                        ": "",
    "\n                            az-Cyrl\n                            az-Cyrl\n                        ": "",
    "\n                            ku\n                            ku\n                        ": "",
    "\n                            he-IL\n                            he-IL\n                        ": "",
    "\n                            en-SI\n                            en-SI\n                        ": "",
    "\n                            en-TK\n                            en-TK\n                        ": "",
    "\n                            ff-Latn-GW\n                            ff-Latn-GW\n                        ": "",
    "\n                            ksf-CM\n                            ksf-CM\n                        ": "",
    "\n                            ff-Latn-NG\n                            ff-Latn-NG\n                        ": "",
    "\n                            en-VU\n                            en-VU\n                        ": "",
    "\n                            en-PR\n                            en-PR\n                        ": "",
    "\n                            id-ID\n                            id-ID\n                        ": "",
    "\n                            uz-Latn-UZ\n                            uz-Latn-UZ\n                        ": "",
    "\n                            kln\n                            kln\n                        ": "",
    "\n                            ne-IN\n                            ne-IN\n                        ": "",
    "\n                            as\n                            as\n                        ": "",
    "\n                            sv-FI\n                            sv-FI\n                        ": "",
    "\n                            ku-TR\n                            ku-TR\n                        ": "",
    "\n                            es-NI\n                            es-NI\n                        ": "",
    "\n                            kab\n                            kab\n                        ": "",
    "\n                            ha-NE\n                            ha-NE\n                        ": "",
    "\n                            en-TZ\n                            en-TZ\n                        ": "",
    "\n                            en-NG\n                            en-NG\n                        ": "",
    "\n                            lu\n                            lu\n                        ": "",
    "\n                            naq\n                            naq\n                        ": "",
    "\n                            hr-BA\n                            hr-BA\n                        ": "",
    "\n                            yue\n                            yue\n                        ": "",
    "\n                            pt-AO\n                            pt-AO\n                        ": "",
    "\n                            kw-GB\n                            kw-GB\n                        ": "",
    "\n                            ks-IN\n                            ks-IN\n                        ": "",
    "\n                            mer\n                            mer\n                        ": "",
    "\n                            fr-MF\n                            fr-MF\n                        ": "",
    "\n                            is-IS\n                            is-IS\n                        ": "",
    "\n                            sr-Cyrl-XK\n                            sr-Cyrl-XK\n                        ": "",
    "\n                            zh-Hant\n                            zh-Hant\n                        ": "",
    "\n                            vai-Latn-LR\n                            vai-Latn-LR\n                        ": "",
    "\n                            ur\n                            ur\n                        ": "",
    "\n                            pt-BR\n                            pt-BR\n                        ": "",
    "\n                            lkt-US\n                            lkt-US\n                        ": "",
    "\n                            en-AS\n                            en-AS\n                        ": "",
    "\n                            en-PW\n                            en-PW\n                        ": "",
    "\n                            en-AG\n                            en-AG\n                        ": "",
    "\n                            fr-GQ\n                            fr-GQ\n                        ": "",
    "\n                            ig\n                            ig\n                        ": "",
    "\n                            rn-BI\n                            rn-BI\n                        ": "",
    "\n                            en-GY\n                            en-GY\n                        ": "",
    "\n                            en-001\n                            en-001\n                        ": "",
    "\n                            yue-Hant\n                            yue-Hant\n                        ": "",
    "\n                            pa\n                            pa\n                        ": "",
    "\n                            ta-SG\n                            ta-SG\n                        ": "",
    "\n                            es-CU\n                            es-CU\n                        ": "",
    "\n                            it-VA\n                            it-VA\n                        ": "",
    "\n                            si\n                            si\n                        ": "",
    "\n                            fr-MR\n                            fr-MR\n                        ": "",
    "\n                            es-PY\n                            es-PY\n                        ": "",
    "\n                            hr-HR\n                            hr-HR\n                        ": "",
    "\n                            gd\n                            gd\n                        ": "",
    "\n                            ff-Latn-NE\n                            ff-Latn-NE\n                        ": "",
    "\n                            en-MS\n                            en-MS\n                        ": "",
    "\n                            so-DJ\n                            so-DJ\n                        ": "",
    "\n                            lu-CD\n                            lu-CD\n                        ": "",
    "\n                            en-WS\n                            en-WS\n                        ": "",
    "\n                            seh\n                            seh\n                        ": "",
    "\n                            kok-IN\n                            kok-IN\n                        ": "",
    "\n                            nl-NL\n                            nl-NL\n                        ": "",
    "\n                            nus\n                            nus\n                        ": "",
    "\n                            gl-ES\n                            gl-ES\n                        ": "",
    "\n                            da-GL\n                            da-GL\n                        ": "",
    "\n                            gsw-FR\n                            gsw-FR\n                        ": "",
    "\n                            fo\n                            fo\n                        ": "",
    "\n                            kk-KZ\n                            kk-KZ\n                        ": "",
    "\n                            en-KN\n                            en-KN\n                        ": "",
    "\n                            lb-LU\n                            lb-LU\n                        ": "",
    "\n                            en-MP\n                            en-MP\n                        ": "",
    "\n                            ky\n                            ky\n                        ": "",
    "\n                            en-MU\n                            en-MU\n                        ": "",
    "\n                            en-MO\n                            en-MO\n                        ": "",
    "\n                            fr-TN\n                            fr-TN\n                        ": "",
    "\n                            ta\n                            ta\n                        ": "",
    "\n                            fr-MC\n                            fr-MC\n                        ": "",
    "\n                            fy-NL\n                            fy-NL\n                        ": "",
    "\n                            te-IN\n                            te-IN\n                        ": "",
    "\n                            pl-PL\n                            pl-PL\n                        ": "",
    "\n                            ur-IN\n                            ur-IN\n                        ": "",
    "\n                            et-EE\n                            et-EE\n                        ": "",
    "\n                            hu\n                            hu\n                        ": "",
    "\n                            zh-Hans-HK\n                            zh-Hans-HK\n                        ": "",
    "\n                            luo\n                            luo\n                        ": "",
    "\n                            en-PG\n                            en-PG\n                        ": "",
    "\n                            ar-SD\n                            ar-SD\n                        ": "",
    "\n                            pt-MO\n                            pt-MO\n                        ": "",
    "\n                            mi\n                            mi\n                        ": "",
    "\n                            eo\n                            eo\n                        ": "",
    "\n                            as-IN\n                            as-IN\n                        ": "",
    "\n                            ckb-IQ\n                            ckb-IQ\n                        ": "",
    "\n                            lrc-IR\n                            lrc-IR\n                        ": "",
    "\n                            ar-SY\n                            ar-SY\n                        ": "",
    "\n                            ru-UA\n                            ru-UA\n                        ": "",
    "\n                            bs-Cyrl-BA\n                            bs-Cyrl-BA\n                        ": "",
    "\n                            en-IN\n                            en-IN\n                        ": "",
    "\n                            ce-RU\n                            ce-RU\n                        ": "",
    "\n                            en-NL\n                            en-NL\n                        ": "",
    "\n                            vai\n                            vai\n                        ": "",
    "\n                            en-ZW\n                            en-ZW\n                        ": "",
    "\n                            fr-BL\n                            fr-BL\n                        ": "",
    "\n                            nyn\n                            nyn\n                        ": "",
    "\n                            dua\n                            dua\n                        ": "",
    "\n                            lt\n                            lt\n                        ": "",
    "\n                            ar-IQ\n                            ar-IQ\n                        ": "",
    "\n                            es-ES\n                            es-ES\n                        ": "",
    "\n                            kkj-CM\n                            kkj-CM\n                        ": "",
    "\n                            os-RU\n                            os-RU\n                        ": "",
    "\n                            de-CH\n                            de-CH\n                        ": "",
    "\n                            fil\n                            fil\n                        ": "",
    "\n                            en-GD\n                            en-GD\n                        ": "",
    "\n                            ar-IL\n                            ar-IL\n                        ": "",
    "\n                            ms\n                            ms\n                        ": "",
    "\n                            fr-CA\n                            fr-CA\n                        ": "",
    "\n                            en-BM\n                            en-BM\n                        ": "",
    "\n                            en-DE\n                            en-DE\n                        ": "",
    "\n                            fr-LU\n                            fr-LU\n                        ": "",
    "\n                            ewo\n                            ewo\n                        ": "",
    "\n                            ak\n                            ak\n                        ": "",
    "\n                            en-CX\n                            en-CX\n                        ": "",
    "\n                            de\n                            de\n                        ": "",
    "\n                            fr-GN\n                            fr-GN\n                        ": "",
    "\n                            bs\n                            bs\n                        ": "",
    "\n                            tr-CY\n                            tr-CY\n                        ": "",
    "\n                            fr-WF\n                            fr-WF\n                        ": "",
    "\n                            pt-ST\n                            pt-ST\n                        ": "",
    "\n                            or-IN\n                            or-IN\n                        ": "",
    "\n                            it\n                            it\n                        ": "",
    "\n                            fr-TG\n                            fr-TG\n                        ": "",
    "\n                            nyn-UG\n                            nyn-UG\n                        ": "",
    "\n                            nn\n                            nn\n                        ": "",
    "\n                            sv-AX\n                            sv-AX\n                        ": "",
    "\n                            am\n                            am\n                        ": "",
    "\n                            kl-GL\n                            kl-GL\n                        ": "",
    "\n                            sr\n                            sr\n                        ": "",
    "\n                            ka\n                            ka\n                        ": "",
    "\n                            ar-DJ\n                            ar-DJ\n                        ": "",
    "\n                            sr-Latn-RS\n                            sr-Latn-RS\n                        ": "",
    "\n                            ast-ES\n                            ast-ES\n                        ": "",
    "\n                            mgo\n                            mgo\n                        ": "",
    "\n                            brx-IN\n                            brx-IN\n                        ": "",
    "\n                            br-FR\n                            br-FR\n                        ": "",
    "\n                            en-KY\n                            en-KY\n                        ": "",
    "\n                            twq\n                            twq\n                        ": "",
    "\n                            en-AT\n                            en-AT\n                        ": "",
    "\n                            ast\n                            ast\n                        ": "",
    "\n                            kok\n                            kok\n                        ": "",
    "\n                            pa-Arab\n                            pa-Arab\n                        ": "",
    "\n                            fr-GP\n                            fr-GP\n                        ": "",
    "\n                            ccp-IN\n                            ccp-IN\n                        ": "",
    "\n                            ti-ER\n                            ti-ER\n                        ": "",
    "\n                            jmc-TZ\n                            jmc-TZ\n                        ": "",
    "\n                            ru-KZ\n                            ru-KZ\n                        ": "",
    "\n                            nb\n                            nb\n                        ": "",
    "\n                            fr-GF\n                            fr-GF\n                        ": "",
    "\n                            C.UTF-8\n                            C.UTF-8\n                        ": "",
    "\n                            POSIX\n                            POSIX\n                        ": "",
    "\n                            pt-TL\n                            pt-TL\n                        ": "",
    "\n                            ky-KG\n                            ky-KG\n                        ": "",
    "\n                            ar-TN\n                            ar-TN\n                        ": "",
    "\n                            mk\n                            mk\n                        ": "",
    "\n                            sg-CF\n                            sg-CF\n                        ": "",
    "\n                            kn-IN\n                            kn-IN\n                        ": "",
    "\n                            sw-KE\n                            sw-KE\n                        ": "",
    "\n                            brx\n                            brx\n                        ": "",
    "\n                            ar-OM\n                            ar-OM\n                        ": "",
    "\n                            nl-SR\n                            nl-SR\n                        ": "",
    "\n                            fr-HT\n                            fr-HT\n                        ": "",
    "\n                            ur-PK\n                            ur-PK\n                        ": "",
    "\n                            rw\n                            rw\n                        ": "",
    "\n                            ug-CN\n                            ug-CN\n                        ": "",
    "\n                            rw-RW\n                            rw-RW\n                        ": "",
    "\n                            mt-MT\n                            mt-MT\n                        ": "",
    "\n                            en-KE\n                            en-KE\n                        ": "",
    "\n                            pt-PT\n                            pt-PT\n                        ": "",
    "\n                            ki-KE\n                            ki-KE\n                        ": "",
    "\n                            dz\n                            dz\n                        ": "",
    "\n                            fr-NE\n                            fr-NE\n                        ": "",
    "\n                            en-PK\n                            en-PK\n                        ": "",
    "\n                            kab-DZ\n                            kab-DZ\n                        ": "",
    "\n                            fur\n                            fur\n                        ": "",
    "\n                            en-HK\n                            en-HK\n                        ": "",
    "\n                            pa-Guru-IN\n                            pa-Guru-IN\n                        ": "",
    "\n                            khq\n                            khq\n                        ": "",
    "\n                            ja-JP\n                            ja-JP\n                        ": "",
    "\n                            yav\n                            yav\n                        ": "",
    "\n                            agq-CM\n                            agq-CM\n                        ": "",
    "\n                            tr\n                            tr\n                        ": "",
    "\n                            fr-BF\n                            fr-BF\n                        ": "",
    "\n                            rwk\n                            rwk\n                        ": "",
    "\n                            ig-NG\n                            ig-NG\n                        ": "",
    "\n                            es-CO\n                            es-CO\n                        ": "",
    "\n                            en-BI\n                            en-BI\n                        ": "",
    "\n                            ar-BH\n                            ar-BH\n                        ": "",
    "\n                            shi-Latn-MA\n                            shi-Latn-MA\n                        ": "",
    "\n                            mas-TZ\n                            mas-TZ\n                        ": "",
    "\n                            ln\n                            ln\n                        ": "",
    "\n                            en-SG\n                            en-SG\n                        ": "",
    "\n                            eo-001\n                            eo-001\n                        ": "",
    "\n                            en-UG\n                            en-UG\n                        ": "",
    "\n                            mas\n                            mas\n                        ": "",
    "\n                            ko-KR\n                            ko-KR\n                        ": "",
    "\n                            ccp-BD\n                            ccp-BD\n                        ": "",
    "\n                            de-DE\n                            de-DE\n                        ": "",
    "\n                            sv-SE\n                            sv-SE\n                        ": "",
    "\n                            ha-NG\n                            ha-NG\n                        ": "",
    "\n                            xog\n                            xog\n                        ": "",
    "\n                            az-Latn\n                            az-Latn\n                        ": "",
    "\n                            ff-Latn-GH\n                            ff-Latn-GH\n                        ": "",
    "\n                            en-CM\n                            en-CM\n                        ": "",
    "\n                            en-150\n                            en-150\n                        ": "",
    "\n                            ms-BN\n                            ms-BN\n                        ": "",
    "\n                            nl-BE\n                            nl-BE\n                        ": "",
    "\n                            es-VE\n                            es-VE\n                        ": "",
    "\n                            az-Cyrl-AZ\n                            az-Cyrl-AZ\n                        ": "",
    "\n                            ar-ER\n                            ar-ER\n                        ": "",
    "\n                            en-GH\n                            en-GH\n                        ": "",
    "\n                            mr-IN\n                            mr-IN\n                        ": "",
    "\n                            it-CH\n                            it-CH\n                        ": "",
    "\n                            es-AR\n                            es-AR\n                        ": "",
    "\n                            ar-AE\n                            ar-AE\n                        ": "",
    "\n                            en-ZA\n                            en-ZA\n                        ": "",
    "\n                            de-BE\n                            de-BE\n                        ": "",
    "\n                            en-NR\n                            en-NR\n                        ": "",
    "\n                            en-MH\n                            en-MH\n                        ": "",
    "\n                            en-SS\n                            en-SS\n                        ": "",
    "\n                            ff-Latn-GN\n                            ff-Latn-GN\n                        ": "",
    "\n                            fa-IR\n                            fa-IR\n                        ": "",
    "\n                            cs\n                            cs\n                        ": "",
    "\n                            sr-Latn\n                            sr-Latn\n                        ": "",
    "\n                            kde-TZ\n                            kde-TZ\n                        ": "",
    "\n                            fr\n                            fr\n                        ": "",
    "\n                            mgh-MZ\n                            mgh-MZ\n                        ": "",
    "\n                            ar-SA\n                            ar-SA\n                        ": "",
    "\n                            gv\n                            gv\n                        ": "",
    "\n                            sg\n                            sg\n                        ": "",
    "\n                            tzm\n                            tzm\n                        ": "",
    "\n                            en-BB\n                            en-BB\n                        ": "",
    "\n                            lag\n                            lag\n                        ": "",
    "\n                            fr-RE\n                            fr-RE\n                        ": "",
    "\n                            ki\n                            ki\n                        ": "",
    "\n                            dsb-DE\n                            dsb-DE\n                        ": "",
    "\n                            en-LR\n                            en-LR\n                        ": "",
    "\n                            uz-Arab-AF\n                            uz-Arab-AF\n                        ": "",
    "\n                            pa-Arab-PK\n                            pa-Arab-PK\n                        ": "",
    "\n                            sw\n                            sw\n                        ": "",
    "\n                            en-FI\n                            en-FI\n                        ": "",
    "\n                            luy\n                            luy\n                        ": "",
    "\n                            ff-Latn\n                            ff-Latn\n                        ": "",
    "\n                            mfe\n                            mfe\n                        ": "",
    "\n                            bs-Latn-BA\n                            bs-Latn-BA\n                        ": "",
    "\n                            lv\n                            lv\n                        ": "",
    "\n                            dyo\n                            dyo\n                        ": "",
    "\n                            de-IT\n                            de-IT\n                        ": "",
    "\n                            shi-Latn\n                            shi-Latn\n                        ": "",
    "\n                            zh-Hans\n                            zh-Hans\n                        ": "",
    "\n                            en-BE\n                            en-BE\n                        ": "",
    "\n                            en-AU\n                            en-AU\n                        ": "",
    "\n                            lo-LA\n                            lo-LA\n                        ": "",
    "\n                            uz-Cyrl-UZ\n                            uz-Cyrl-UZ\n                        ": "",
    "\n                            shi\n                            shi\n                        ": "",
    "\n                            yue-Hans\n                            yue-Hans\n                        ": "",
    "\n                            it-IT\n                            it-IT\n                        ": "",
    "\n                            ff-Latn-GM\n                            ff-Latn-GM\n                        ": "",
    "\n                            sr-Cyrl-ME\n                            sr-Cyrl-ME\n                        ": "",
    "\n                            ro-MD\n                            ro-MD\n                        ": "",
    "\n                            my-MM\n                            my-MM\n                        ": "",
    "\n                            en-VC\n                            en-VC\n                        ": "",
    "\n                            ceb-PH\n                            ceb-PH\n                        ": "",
    "\n                            ps-AF\n                            ps-AF\n                        ": "",
    "\n                            el\n                            el\n                        ": "",
    "\n                            fr-CF\n                            fr-CF\n                        ": "",
    "\n                            en-MW\n                            en-MW\n                        ": "",
    "\n                            tzm-MA\n                            tzm-MA\n                        ": "",
    "\n                            af-NA\n                            af-NA\n                        ": "",
    "\n                            en-SC\n                            en-SC\n                        ": "",
    "\n                            fa\n                            fa\n                        ": "",
    "\n                            ha-GH\n                            ha-GH\n                        ": "",
    "\n                            en-PN\n                            en-PN\n                        ": "",
    "\n                            pt-GW\n                            pt-GW\n                        ": "",
    "\n                            az-Latn-AZ\n                            az-Latn-AZ\n                        ": "",
    "\n                            ln-CF\n                            ln-CF\n                        ": "",
    "\n                            ga\n                            ga\n                        ": "",
    "\n                            de-AT\n                            de-AT\n                        ": "",
    "\n                            ses\n                            ses\n                        ": "",
    "\n                            en-SD\n                            en-SD\n                        ": "",
    "\n                            ckb\n                            ckb\n                        ": "",
    "\n                            jmc\n                            jmc\n                        ": "",
    "\n                            ln-AO\n                            ln-AO\n                        ": "",
    "\n                            bem\n                            bem\n                        ": "",
    "\n                            fy\n                            fy\n                        ": "",
    "\n                            sah\n                            sah\n                        ": "",
    "\n                            bo-CN\n                            bo-CN\n                        ": "",
    "\n                            nb-NO\n                            nb-NO\n                        ": "",
    "\n                            zu\n                            zu\n                        ": "",
    "\n                            be\n                            be\n                        ": "",
    "\n                            om-KE\n                            om-KE\n                        ": "",
    "\n                            ar-KW\n                            ar-KW\n                        ": "",
    "\n                            pt-MZ\n                            pt-MZ\n                        ": "",
    "\n                            bas\n                            bas\n                        ": "",
    "\n                            hsb\n                            hsb\n                        ": "",
    "\n                            sk\n                            sk\n                        ": "",
    "\n                            fi\n                            fi\n                        ": "",
    "\n                            dsb\n                            dsb\n                        ": "",
    "\n                            sbp-TZ\n                            sbp-TZ\n                        ": "",
    "\n                            nds\n                            nds\n                        ": "",
    "\n                            mas-KE\n                            mas-KE\n                        ": "",
    "\n                            es-BZ\n                            es-BZ\n                        ": "",
    "\n                            nds-DE\n                            nds-DE\n                        ": "",
    "\n                            es-BR\n                            es-BR\n                        ": "",
    "\n                            en-VI\n                            en-VI\n                        ": "",
    "\n                            en-GI\n                            en-GI\n                        ": "",
    "\n                            so-SO\n                            so-SO\n                        ": "",
    "\n                            ru\n                            ru\n                        ": "",
    "\n                            sq-MK\n                            sq-MK\n                        ": "",
    "\n                            hsb-DE\n                            hsb-DE\n                        ": "",
    "\n                            ff-Latn-MR\n                            ff-Latn-MR\n                        ": "",
    "\n                            ml\n                            ml\n                        ": "",
    "\n                            lg-UG\n                            lg-UG\n                        ": "",
    "\n                            en-FK\n                            en-FK\n                        ": "",
    "\n                            sq\n                            sq\n                        ": "",
    "\n                            es-PE\n                            es-PE\n                        ": "",
    "\n                            wo\n                            wo\n                        ": "",
    "\n                            mt\n                            mt\n                        ": "",
    "\n                            sr-Latn-ME\n                            sr-Latn-ME\n                        ": "",
    "\n                            ar-EH\n                            ar-EH\n                        ": "",
    "\n                            bs-Latn\n                            bs-Latn\n                        ": "",
    "\n                            es\n                            es\n                        ": "",
    "\n                            ca-FR\n                            ca-FR\n                        ": "",
    "\n                            en-BS\n                            en-BS\n                        ": "",
    "\n                            se-FI\n                            se-FI\n                        ": "",
    "\n                            saq\n                            saq\n                        ": "",
    "\n                            ee-TG\n                            ee-TG\n                        ": "",
    "\n                            ug\n                            ug\n                        ": "",
    "\n                            sw-UG\n                            sw-UG\n                        ": "",
    "\n                            en-CA\n                            en-CA\n                        ": "",
    "\n                            zh-Hans-SG\n                            zh-Hans-SG\n                        ": "",
    "\n                            ar-LY\n                            ar-LY\n                        ": "",
    "\n                            seh-MZ\n                            seh-MZ\n                        ": "",
    "\n                            teo-KE\n                            teo-KE\n                        ": "",
    "\n                            nmg\n                            nmg\n                        ": "",
    "\n                            mer-KE\n                            mer-KE\n                        ": "",
    "\n                            ccp\n                            ccp\n                        ": "",
    "\n                            gsw-LI\n                            gsw-LI\n                        ": "",
    "\n                            en-NZ\n                            en-NZ\n                        ": "",
    "\n                            eu\n                            eu\n                        ": "",
    "\n                            es-MX\n                            es-MX\n                        ": "",
    "\n                            yo-NG\n                            yo-NG\n                        ": "",
    "\n                            kl\n                            kl\n                        ": "",
    "\n                            he\n                            he\n                        ": "",
    "\n                            am-ET\n                            am-ET\n                        ": "",
    "\n                            mgo-CM\n                            mgo-CM\n                        ": "",
    "\n                            is\n                            is\n                        ": "",
    "\n                            en-US-u-va-posix\n                            en-US-u-va-posix\n                        ": "",
    "\n                            sd\n                            sd\n                        ": "",
    "\n                            nnh\n                            nnh\n                        ": "",
    "\n                            lag-TZ\n                            lag-TZ\n                        ": "",
    "\n                            vi\n                            vi\n                        ": "",
    "\n                            ta-MY\n                            ta-MY\n                        ": "",
    "\n                            mfe-MU\n                            mfe-MU\n                        ": "",
    "\n                            so\n                            so\n                        ": "",
    "\n                            en-DG\n                            en-DG\n                        ": "",
    "\n                            zh\n                            zh\n                        ": "",
    "\n                            kam\n                            kam\n                        ": "",
    "\n                            tt\n                            tt\n                        ": "",
    "\n                            lkt\n                            lkt\n                        ": "",
    "\n                            en-AI\n                            en-AI\n                        ": "",
    "\n                            ps-PK\n                            ps-PK\n                        ": "",
    "\n                            cy\n                            cy\n                        ": "",
    "\n                            ksb-TZ\n                            ksb-TZ\n                        ": "",
    "\n                            es-EC\n                            es-EC\n                        ": "",
    "\n                            th\n                            th\n                        ": "",
    "\n                            se\n                            se\n                        ": "",
    "\n                            dua-CM\n                            dua-CM\n                        ": "",
    "\n                            es-HN\n                            es-HN\n                        ": "",
    "\n                            rn\n                            rn\n                        ": "",
    "\n                            dje\n                            dje\n                        ": "",
    "\n                            sv\n                            sv\n                        ": "",
    "\n                            en-IE\n                            en-IE\n                        ": "",
    "\n                            ar-SS\n                            ar-SS\n                        ": "",
    "\n                            yue-Hans-CN\n                            yue-Hans-CN\n                        ": "",
    "\n                            kkj\n                            kkj\n                        ": "",
    "\n                            lrc\n                            lrc\n                        ": "",
    "\n                            dav-KE\n                            dav-KE\n                        ": "",
    "\n                            mua\n                            mua\n                        ": "",
    "\n                            en-NF\n                            en-NF\n                        ": "",
    "\n                            om-ET\n                            om-ET\n                        ": "",
    "\n                            ks\n                            ks\n                        ": "",
    "\n                            sn\n                            sn\n                        ": "",
    "\n                            asa-TZ\n                            asa-TZ\n                        ": "",
    "\n                            chr-US\n                            chr-US\n                        ": "",
    "\n                            cs-CZ\n                            cs-CZ\n                        ": "",
    "\n                            sk-SK\n                            sk-SK\n                        ": "",
    "\n                            ff-Latn-CM\n                            ff-Latn-CM\n                        ": "",
    "\n                            fr-GA\n                            fr-GA\n                        ": "",
    "\n                            bez-TZ\n                            bez-TZ\n                        ": "",
    "\n                            bas-CM\n                            bas-CM\n                        ": "",
    "\n                            jgo-CM\n                            jgo-CM\n                        ": "",
    "\n                            shi-Tfng-MA\n                            shi-Tfng-MA\n                        ": "",
    "\n                            nl-AW\n                            nl-AW\n                        ": "",
    "\n                            gv-IM\n                            gv-IM\n                        ": "",
    "\n                            es-DO\n                            es-DO\n                        ": "",
    "\n                            fr-FR\n                            fr-FR\n                        ": "",
    "\n                            zgh-MA\n                            zgh-MA\n                        ": "",
    "\n                            gl\n                            gl\n                        ": "",
    "\n                            lt-LT\n                            lt-LT\n                        ": "",
    "\n                            fr-CG\n                            fr-CG\n                        ": "",
    "\n                            en-GB\n                            en-GB\n                        ": "",
    "\n                            fr-NC\n                            fr-NC\n                        ": "",
    "\n                            ksh-DE\n                            ksh-DE\n                        ": "",
    "\n                            pt-CH\n                            pt-CH\n                        ": "",
    "\n                            en-LS\n                            en-LS\n                        ": "",
    "\n                            gu\n                            gu\n                        ": "",
    "\n                            ii-CN\n                            ii-CN\n                        ": "",
    "\n                            es-GT\n                            es-GT\n                        ": "",
    "\n                            ca-IT\n                            ca-IT\n                        ": "",
    "\n                            uk\n                            uk\n                        ": "",
    "\n                            es-CL\n                            es-CL\n                        ": "",
    "\n                            en-PH\n                            en-PH\n                        ": "",
    "\n                            en-AE\n                            en-AE\n                        ": "",
    "\n                            el-GR\n                            el-GR\n                        ": "",
    "\n                            ln-CG\n                            ln-CG\n                        ": "",
    "\n                            fr-CD\n                            fr-CD\n                        ": "",
    "\n                            ha\n                            ha\n                        ": "",
    "\n                            ebu-KE\n                            ebu-KE\n                        ": "",
    "\n                            rof\n                            rof\n                        ": "",
    "\n                            ca-AD\n                            ca-AD\n                        ": "",
    "\n                            ak-GH\n                            ak-GH\n                        ": "",
    "\n                            ff-Latn-LR\n                            ff-Latn-LR\n                        ": "",
    "\n                            es-419\n                            es-419\n                        ": "",
    "\n                            en-LC\n                            en-LC\n                        ": "",
    "\n                            yue-Hant-HK\n                            yue-Hant-HK\n                        ": "",
    "\n                            nds-NL\n                            nds-NL\n                        ": "",
    "\n                            ff-Latn-BF\n                            ff-Latn-BF\n                        ": "",
    "\n                            en-MT\n                            en-MT\n                        ": "",
    "\n                            en-DK\n                            en-DK\n                        ": "",
    "\n                            wo-SN\n                            wo-SN\n                        ": "",
    "\n                            ff\n                            ff\n                        ": "",
    "\n                            uz-Cyrl\n                            uz-Cyrl\n                        ": "",
    "\n                            pa-Guru\n                            pa-Guru\n                        ": "",
    "\n                            or\n                            or\n                        ": "",
    "\n                            bo-IN\n                            bo-IN\n                        ": "",
    "\n                            nl-BQ\n                            nl-BQ\n                        ": "",
    "\n                            ebu\n                            ebu\n                        ": "",
    "\n                            en\n                            en\n                        ": "",
    "\n                            nd-ZW\n                            nd-ZW\n                        ": "",
    "\n                            en-GU\n                            en-GU\n                        ": "",
    "\n                            fr-MU\n                            fr-MU\n                        ": "",
    "\n                            mzn-IR\n                            mzn-IR\n                        ": "",
    "\n                            fr-MA\n                            fr-MA\n                        ": "",
    "\n                            smn-FI\n                            smn-FI\n                        ": "",
    "\n                            ru-BY\n                            ru-BY\n                        ": "",
    "\n                            rm-CH\n                            rm-CH\n                        ": "",
    "\n                            es-GQ\n                            es-GQ\n                        ": "",
    "\n                            zgh\n                            zgh\n                        ": "",
    "\n                            mg\n                            mg\n                        ": "",
    "\n                            haw\n                            haw\n                        ": "",
    "\n                            uz-Arab\n                            uz-Arab\n                        ": "",
    "\n                            fr-ML\n                            fr-ML\n                        ": "",
    "\n                            fr-RW\n                            fr-RW\n                        ": "",
    "\n                            sr-Latn-XK\n                            sr-Latn-XK\n                        ": "",
    "\n                            kln-KE\n                            kln-KE\n                        ": "",
    "\n                            fr-CM\n                            fr-CM\n                        ": "",
    "\n                            nl-CW\n                            nl-CW\n                        ": "",
    "\n                            qu-BO\n                            qu-BO\n                        ": "",
    "\n                            hy-AM\n                            hy-AM\n                        ": "",
    "\n                            ia\n                            ia\n                        ": "",
    "\n                            nmg-CM\n                            nmg-CM\n                        ": "",
    "\n                            fr-KM\n                            fr-KM\n                        ": "",
    "\n                            ml-IN\n                            ml-IN\n                        ": "",
    "\n                            ar-LB\n                            ar-LB\n                        ": "",
    "\n                            fr-SC\n                            fr-SC\n                        ": "",
    "\n                            en-JM\n                            en-JM\n                        ": "",
    "\n                            be-BY\n                            be-BY\n                        ": "",
    "\n                            to-TO\n                            to-TO\n                        ": "",
    "\n                            fr-DZ\n                            fr-DZ\n                        ": "",
    "\n                            ne-NP\n                            ne-NP\n                        ": "",
    "\n                            sn-ZW\n                            sn-ZW\n                        ": "",
    "\n                            xh-ZA\n                            xh-ZA\n                        ": "",
    "\n                            mn\n                            mn\n                        ": "",
    "\n                            gu-IN\n                            gu-IN\n                        ": "",
    "\n                            ksf\n                            ksf\n                        ": "",
    "\n                            tk-TM\n                            tk-TM\n                        ": "",
    "\n                            shi-Tfng\n                            shi-Tfng\n                        ": "",
    "\n                            de-LU\n                            de-LU\n                        ": "",
    "\n                            ar-EG\n                            ar-EG\n                        ": "",
    "\n                            fi-FI\n                            fi-FI\n                        ": "",
    "\n                            fr-CH\n                            fr-CH\n                        ": "",
    "\n                            os-GE\n                            os-GE\n                        ": "",
    "\n                            pt-LU\n                            pt-LU\n                        ": "",
    "\n                            os\n                            os\n                        ": "",
    "\n                            en-CC\n                            en-CC\n                        ": "",
    "\n                            tk\n                            tk\n                        ": "",
    "\n                            dav\n                            dav\n                        ": "",
    "\n                            mr\n                            mr\n                        ": "",
    "\n                            pl\n                            pl\n                        ": "",
    "\n                            xh\n                            xh\n                        ": "",
    "\n                            es-US\n                            es-US\n                        ": "",
    "\n                            ar-TD\n                            ar-TD\n                        ": "",
    "\n                            es-CR\n                            es-CR\n                        ": "",
    "\n                            en-CK\n                            en-CK\n                        ": "",
    "\n                            en-GM\n                            en-GM\n                        ": "",
    "\n                            gd-GB\n                            gd-GB\n                        ": "",
    "\n                            ln-CD\n                            ln-CD\n                        ": "",
    "\n                            ro\n                            ro\n                        ": "",
    "\n                            fo-FO\n                            fo-FO\n                        ": "",
    "\n                            ja\n                            ja\n                        ": "",
    "\n                            es-IC\n                            es-IC\n                        ": "",
    "\n                            en-KI\n                            en-KI\n                        ": "",
    "\n                            lrc-IQ\n                            lrc-IQ\n                        ": "",
    "\n                            en-SL\n                            en-SL\n                        ": "",
    "\n                            asa\n                            asa\n                        ": "",
    "\n                            ca\n                            ca\n                        ": "",
    "\n                            saq-KE\n                            saq-KE\n                        ": "",
    "\n                            rm\n                            rm\n                        ": "",
    "\n                            lv-LV\n                            lv-LV\n                        ": "",
    "\n                            cgg\n                            cgg\n                        ": "",
    "\n                            en-TV\n                            en-TV\n                        ": "",
    "\n                            bo\n                            bo\n                        ": "",
    "\n                            ar-DZ\n                            ar-DZ\n                        ": "",
    "\n                            th-TH\n                            th-TH\n                        ": "",
    "\n                            ar\n                            ar\n                        ": "",
    "\n                            af-ZA\n                            af-ZA\n                        ": "",
    "\n                            tr-TR\n                            tr-TR\n                        ": "",
    "\n                            fur-IT\n                            fur-IT\n                        ": "",
    "\n                            smn\n                            smn\n                        ": "",
    "\n                            en-VI-x-icu\n                            en-VI-x-icu\n                        ": "",
    "\n                            vai-Vaii-x-icu\n                            vai-Vaii-x-icu\n                        ": "",
    "\n                            it-CH-x-icu\n                            it-CH-x-icu\n                        ": "",
    "\n                            fi-FI-x-icu\n                            fi-FI-x-icu\n                        ": "",
    "\n                            ast-x-icu\n                            ast-x-icu\n                        ": "",
    "\n                            bo-CN-x-icu\n                            bo-CN-x-icu\n                        ": "",
    "\n                            ar-BH-x-icu\n                            ar-BH-x-icu\n                        ": "",
    "\n                            ar-DZ-x-icu\n                            ar-DZ-x-icu\n                        ": "",
    "\n                            kab-DZ-x-icu\n                            kab-DZ-x-icu\n                        ": "",
    "\n                            mzn-IR-x-icu\n                            mzn-IR-x-icu\n                        ": "",
    "\n                            khq-ML-x-icu\n                            khq-ML-x-icu\n                        ": "",
    "\n                            es-AR-x-icu\n                            es-AR-x-icu\n                        ": "",
    "\n                            dje-NE-x-icu\n                            dje-NE-x-icu\n                        ": "",
    "\n                            es-DO-x-icu\n                            es-DO-x-icu\n                        ": "",
    "\n                            wo-SN-x-icu\n                            wo-SN-x-icu\n                        ": "",
    "\n                            fil-PH-x-icu\n                            fil-PH-x-icu\n                        ": "",
    "\n                            en-VG-x-icu\n                            en-VG-x-icu\n                        ": "",
    "\n                            bo-IN-x-icu\n                            bo-IN-x-icu\n                        ": "",
    "\n                            fr-GA-x-icu\n                            fr-GA-x-icu\n                        ": "",
    "\n                            bas-CM-x-icu\n                            bas-CM-x-icu\n                        ": "",
    "\n                            en-TC-x-icu\n                            en-TC-x-icu\n                        ": "",
    "\n                            kn-x-icu\n                            kn-x-icu\n                        ": "",
    "\n                            fr-MA-x-icu\n                            fr-MA-x-icu\n                        ": "",
    "\n                            fur-x-icu\n                            fur-x-icu\n                        ": "",
    "\n                            yue-Hans-CN-x-icu\n                            yue-Hans-CN-x-icu\n                        ": "",
    "\n                            nl-AW-x-icu\n                            nl-AW-x-icu\n                        ": "",
    "\n                            en-ER-x-icu\n                            en-ER-x-icu\n                        ": "",
    "\n                            nds-NL-x-icu\n                            nds-NL-x-icu\n                        ": "",
    "\n                            mk-MK-x-icu\n                            mk-MK-x-icu\n                        ": "",
    "\n                            en-JE-x-icu\n                            en-JE-x-icu\n                        ": "",
    "\n                            am-ET-x-icu\n                            am-ET-x-icu\n                        ": "",
    "\n                            fr-HT-x-icu\n                            fr-HT-x-icu\n                        ": "",
    "\n                            or-x-icu\n                            or-x-icu\n                        ": "",
    "\n                            en-SS-x-icu\n                            en-SS-x-icu\n                        ": "",
    "\n                            luy-x-icu\n                            luy-x-icu\n                        ": "",
    "\n                            en-BE-x-icu\n                            en-BE-x-icu\n                        ": "",
    "\n                            sr-Cyrl-RS-x-icu\n                            sr-Cyrl-RS-x-icu\n                        ": "",
    "\n                            cs-x-icu\n                            cs-x-icu\n                        ": "",
    "\n                            sw-x-icu\n                            sw-x-icu\n                        ": "",
    "\n                            en-KN-x-icu\n                            en-KN-x-icu\n                        ": "",
    "\n                            es-419-x-icu\n                            es-419-x-icu\n                        ": "",
    "\n                            sg-CF-x-icu\n                            sg-CF-x-icu\n                        ": "",
    "\n                            dav-KE-x-icu\n                            dav-KE-x-icu\n                        ": "",
    "\n                            ak-x-icu\n                            ak-x-icu\n                        ": "",
    "\n                            ta-IN-x-icu\n                            ta-IN-x-icu\n                        ": "",
    "\n                            en-PH-x-icu\n                            en-PH-x-icu\n                        ": "",
    "\n                            uz-x-icu\n                            uz-x-icu\n                        ": "",
    "\n                            sr-Cyrl-ME-x-icu\n                            sr-Cyrl-ME-x-icu\n                        ": "",
    "\n                            jv-x-icu\n                            jv-x-icu\n                        ": "",
    "\n                            ru-KG-x-icu\n                            ru-KG-x-icu\n                        ": "",
    "\n                            om-x-icu\n                            om-x-icu\n                        ": "",
    "\n                            pt-MO-x-icu\n                            pt-MO-x-icu\n                        ": "",
    "\n                            kde-x-icu\n                            kde-x-icu\n                        ": "",
    "\n                            ca-FR-x-icu\n                            ca-FR-x-icu\n                        ": "",
    "\n                            ccp-BD-x-icu\n                            ccp-BD-x-icu\n                        ": "",
    "\n                            ff-Latn-GN-x-icu\n                            ff-Latn-GN-x-icu\n                        ": "",
    "\n                            be-x-icu\n                            be-x-icu\n                        ": "",
    "\n                            xog-UG-x-icu\n                            xog-UG-x-icu\n                        ": "",
    "\n                            lu-CD-x-icu\n                            lu-CD-x-icu\n                        ": "",
    "\n                            en-BS-x-icu\n                            en-BS-x-icu\n                        ": "",
    "\n                            gv-IM-x-icu\n                            gv-IM-x-icu\n                        ": "",
    "\n                            xh-ZA-x-icu\n                            xh-ZA-x-icu\n                        ": "",
    "\n                            ff-Latn-CM-x-icu\n                            ff-Latn-CM-x-icu\n                        ": "",
    "\n                            so-SO-x-icu\n                            so-SO-x-icu\n                        ": "",
    "\n                            sr-Latn-x-icu\n                            sr-Latn-x-icu\n                        ": "",
    "\n                            en-SL-x-icu\n                            en-SL-x-icu\n                        ": "",
    "\n                            yav-CM-x-icu\n                            yav-CM-x-icu\n                        ": "",
    "\n                            fi-x-icu\n                            fi-x-icu\n                        ": "",
    "\n                            fr-CF-x-icu\n                            fr-CF-x-icu\n                        ": "",
    "\n                            en-SI-x-icu\n                            en-SI-x-icu\n                        ": "",
    "\n                            nl-BQ-x-icu\n                            nl-BQ-x-icu\n                        ": "",
    "\n                            nn-NO-x-icu\n                            nn-NO-x-icu\n                        ": "",
    "\n                            si-x-icu\n                            si-x-icu\n                        ": "",
    "\n                            de-LU-x-icu\n                            de-LU-x-icu\n                        ": "",
    "\n                            zh-Hans-x-icu\n                            zh-Hans-x-icu\n                        ": "",
    "\n                            gu-x-icu\n                            gu-x-icu\n                        ": "",
    "\n                            en-MP-x-icu\n                            en-MP-x-icu\n                        ": "",
    "\n                            vi-VN-x-icu\n                            vi-VN-x-icu\n                        ": "",
    "\n                            zh-Hant-MO-x-icu\n                            zh-Hant-MO-x-icu\n                        ": "",
    "\n                            fr-BJ-x-icu\n                            fr-BJ-x-icu\n                        ": "",
    "\n                            jmc-TZ-x-icu\n                            jmc-TZ-x-icu\n                        ": "",
    "\n                            fr-CM-x-icu\n                            fr-CM-x-icu\n                        ": "",
    "\n                            ebu-KE-x-icu\n                            ebu-KE-x-icu\n                        ": "",
    "\n                            dz-x-icu\n                            dz-x-icu\n                        ": "",
    "\n                            pt-GQ-x-icu\n                            pt-GQ-x-icu\n                        ": "",
    "\n                            ln-CD-x-icu\n                            ln-CD-x-icu\n                        ": "",
    "\n                            lag-TZ-x-icu\n                            lag-TZ-x-icu\n                        ": "",
    "\n                            fy-x-icu\n                            fy-x-icu\n                        ": "",
    "\n                            ar-IQ-x-icu\n                            ar-IQ-x-icu\n                        ": "",
    "\n                            en-150-x-icu\n                            en-150-x-icu\n                        ": "",
    "\n                            tg-x-icu\n                            tg-x-icu\n                        ": "",
    "\n                            nb-SJ-x-icu\n                            nb-SJ-x-icu\n                        ": "",
    "\n                            en-LS-x-icu\n                            en-LS-x-icu\n                        ": "",
    "\n                            pt-CH-x-icu\n                            pt-CH-x-icu\n                        ": "",
    "\n                            ko-KP-x-icu\n                            ko-KP-x-icu\n                        ": "",
    "\n                            os-GE-x-icu\n                            os-GE-x-icu\n                        ": "",
    "\n                            smn-x-icu\n                            smn-x-icu\n                        ": "",
    "\n                            vi-x-icu\n                            vi-x-icu\n                        ": "",
    "\n                            fo-DK-x-icu\n                            fo-DK-x-icu\n                        ": "",
    "\n                            bem-x-icu\n                            bem-x-icu\n                        ": "",
    "\n                            bo-x-icu\n                            bo-x-icu\n                        ": "",
    "\n                            rof-TZ-x-icu\n                            rof-TZ-x-icu\n                        ": "",
    "\n                            ru-UA-x-icu\n                            ru-UA-x-icu\n                        ": "",
    "\n                            fr-MF-x-icu\n                            fr-MF-x-icu\n                        ": "",
    "\n                            es-BZ-x-icu\n                            es-BZ-x-icu\n                        ": "",
    "\n                            seh-x-icu\n                            seh-x-icu\n                        ": "",
    "\n                            tr-CY-x-icu\n                            tr-CY-x-icu\n                        ": "",
    "\n                            mi-x-icu\n                            mi-x-icu\n                        ": "",
    "\n                            hy-AM-x-icu\n                            hy-AM-x-icu\n                        ": "",
    "\n                            kw-GB-x-icu\n                            kw-GB-x-icu\n                        ": "",
    "\n                            fa-x-icu\n                            fa-x-icu\n                        ": "",
    "\n                            en-CX-x-icu\n                            en-CX-x-icu\n                        ": "",
    "\n                            lv-x-icu\n                            lv-x-icu\n                        ": "",
    "\n                            ff-Latn-GW-x-icu\n                            ff-Latn-GW-x-icu\n                        ": "",
    "\n                            sw-UG-x-icu\n                            sw-UG-x-icu\n                        ": "",
    "\n                            pt-ST-x-icu\n                            pt-ST-x-icu\n                        ": "",
    "\n                            mas-TZ-x-icu\n                            mas-TZ-x-icu\n                        ": "",
    "\n                            fr-TG-x-icu\n                            fr-TG-x-icu\n                        ": "",
    "\n                            ml-x-icu\n                            ml-x-icu\n                        ": "",
    "\n                            fr-VU-x-icu\n                            fr-VU-x-icu\n                        ": "",
    "\n                            fr-MC-x-icu\n                            fr-MC-x-icu\n                        ": "",
    "\n                            uz-Arab-AF-x-icu\n                            uz-Arab-AF-x-icu\n                        ": "",
    "\n                            wo-x-icu\n                            wo-x-icu\n                        ": "",
    "\n                            ar-SY-x-icu\n                            ar-SY-x-icu\n                        ": "",
    "\n                            yo-BJ-x-icu\n                            yo-BJ-x-icu\n                        ": "",
    "\n                            ja-x-icu\n                            ja-x-icu\n                        ": "",
    "\n                            fr-BF-x-icu\n                            fr-BF-x-icu\n                        ": "",
    "\n                            fr-SC-x-icu\n                            fr-SC-x-icu\n                        ": "",
    "\n                            ee-GH-x-icu\n                            ee-GH-x-icu\n                        ": "",
    "\n                            ia-x-icu\n                            ia-x-icu\n                        ": "",
    "\n                            fr-YT-x-icu\n                            fr-YT-x-icu\n                        ": "",
    "\n                            kam-KE-x-icu\n                            kam-KE-x-icu\n                        ": "",
    "\n                            en-SB-x-icu\n                            en-SB-x-icu\n                        ": "",
    "\n                            vun-x-icu\n                            vun-x-icu\n                        ": "",
    "\n                            ro-RO-x-icu\n                            ro-RO-x-icu\n                        ": "",
    "\n                            en-MT-x-icu\n                            en-MT-x-icu\n                        ": "",
    "\n                            kkj-CM-x-icu\n                            kkj-CM-x-icu\n                        ": "",
    "\n                            bn-IN-x-icu\n                            bn-IN-x-icu\n                        ": "",
    "\n                            kam-x-icu\n                            kam-x-icu\n                        ": "",
    "\n                            ar-IL-x-icu\n                            ar-IL-x-icu\n                        ": "",
    "\n                            tr-x-icu\n                            tr-x-icu\n                        ": "",
    "\n                            fo-FO-x-icu\n                            fo-FO-x-icu\n                        ": "",
    "\n                            kk-KZ-x-icu\n                            kk-KZ-x-icu\n                        ": "",
    "\n                            af-NA-x-icu\n                            af-NA-x-icu\n                        ": "",
    "\n                            ro-x-icu\n                            ro-x-icu\n                        ": "",
    "\n                            gsw-x-icu\n                            gsw-x-icu\n                        ": "",
    "\n                            sr-Cyrl-XK-x-icu\n                            sr-Cyrl-XK-x-icu\n                        ": "",
    "\n                            ti-ET-x-icu\n                            ti-ET-x-icu\n                        ": "",
    "\n                            ur-x-icu\n                            ur-x-icu\n                        ": "",
    "\n                            zh-Hans-MO-x-icu\n                            zh-Hans-MO-x-icu\n                        ": "",
    "\n                            el-x-icu\n                            el-x-icu\n                        ": "",
    "\n                            bs-Latn-x-icu\n                            bs-Latn-x-icu\n                        ": "",
    "\n                            bs-Latn-BA-x-icu\n                            bs-Latn-BA-x-icu\n                        ": "",
    "\n                            ro-MD-x-icu\n                            ro-MD-x-icu\n                        ": "",
    "\n                            en-MW-x-icu\n                            en-MW-x-icu\n                        ": "",
    "\n                            az-Latn-x-icu\n                            az-Latn-x-icu\n                        ": "",
    "\n                            ar-001-x-icu\n                            ar-001-x-icu\n                        ": "",
    "\n                            kea-x-icu\n                            kea-x-icu\n                        ": "",
    "\n                            luy-KE-x-icu\n                            luy-KE-x-icu\n                        ": "",
    "\n                            pl-x-icu\n                            pl-x-icu\n                        ": "",
    "\n                            os-x-icu\n                            os-x-icu\n                        ": "",
    "\n                            ucs_basic\n                            ucs_basic\n                        ": "",
    "\n                            pa-Guru-IN-x-icu\n                            pa-Guru-IN-x-icu\n                        ": "",
    "\n                            ky-KG-x-icu\n                            ky-KG-x-icu\n                        ": "",
    "\n                            rm-x-icu\n                            rm-x-icu\n                        ": "",
    "\n                            uz-Latn-x-icu\n                            uz-Latn-x-icu\n                        ": "",
    "\n                            fa-AF-x-icu\n                            fa-AF-x-icu\n                        ": "",
    "\n                            zu-x-icu\n                            zu-x-icu\n                        ": "",
    "\n                            en-SC-x-icu\n                            en-SC-x-icu\n                        ": "",
    "\n                            sv-AX-x-icu\n                            sv-AX-x-icu\n                        ": "",
    "\n                            et-x-icu\n                            et-x-icu\n                        ": "",
    "\n                            sr-Latn-RS-x-icu\n                            sr-Latn-RS-x-icu\n                        ": "",
    "\n                            rm-CH-x-icu\n                            rm-CH-x-icu\n                        ": "",
    "\n                            en-NU-x-icu\n                            en-NU-x-icu\n                        ": "",
    "\n                            dyo-SN-x-icu\n                            dyo-SN-x-icu\n                        ": "",
    "\n                            wae-x-icu\n                            wae-x-icu\n                        ": "",
    "\n                            qu-EC-x-icu\n                            qu-EC-x-icu\n                        ": "",
    "\n                            en-BI-x-icu\n                            en-BI-x-icu\n                        ": "",
    "\n                            en-LR-x-icu\n                            en-LR-x-icu\n                        ": "",
    "\n                            en-HK-x-icu\n                            en-HK-x-icu\n                        ": "",
    "\n                            fr-TN-x-icu\n                            fr-TN-x-icu\n                        ": "",
    "\n                            brx-x-icu\n                            brx-x-icu\n                        ": "",
    "\n                            es-MX-x-icu\n                            es-MX-x-icu\n                        ": "",
    "\n                            en-IM-x-icu\n                            en-IM-x-icu\n                        ": "",
    "\n                            yue-Hans-x-icu\n                            yue-Hans-x-icu\n                        ": "",
    "\n                            en-MH-x-icu\n                            en-MH-x-icu\n                        ": "",
    "\n                            en-FM-x-icu\n                            en-FM-x-icu\n                        ": "",
    "\n                            ar-SA-x-icu\n                            ar-SA-x-icu\n                        ": "",
    "\n                            luo-x-icu\n                            luo-x-icu\n                        ": "",
    "\n                            lkt-x-icu\n                            lkt-x-icu\n                        ": "",
    "\n                            en-GH-x-icu\n                            en-GH-x-icu\n                        ": "",
    "\n                            da-GL-x-icu\n                            da-GL-x-icu\n                        ": "",
    "\n                            es-GT-x-icu\n                            es-GT-x-icu\n                        ": "",
    "\n                            de-AT-x-icu\n                            de-AT-x-icu\n                        ": "",
    "\n                            ksb-TZ-x-icu\n                            ksb-TZ-x-icu\n                        ": "",
    "\n                            zh-x-icu\n                            zh-x-icu\n                        ": "",
    "\n                            lkt-US-x-icu\n                            lkt-US-x-icu\n                        ": "",
    "\n                            khq-x-icu\n                            khq-x-icu\n                        ": "",
    "\n                            pa-Guru-x-icu\n                            pa-Guru-x-icu\n                        ": "",
    "\n                            it-IT-x-icu\n                            it-IT-x-icu\n                        ": "",
    "\n                            ar-LY-x-icu\n                            ar-LY-x-icu\n                        ": "",
    "\n                            vai-Latn-x-icu\n                            vai-Latn-x-icu\n                        ": "",
    "\n                            so-DJ-x-icu\n                            so-DJ-x-icu\n                        ": "",
    "\n                            kde-TZ-x-icu\n                            kde-TZ-x-icu\n                        ": "",
    "\n                            cgg-UG-x-icu\n                            cgg-UG-x-icu\n                        ": "",
    "\n                            nl-CW-x-icu\n                            nl-CW-x-icu\n                        ": "",
    "\n                            en-CK-x-icu\n                            en-CK-x-icu\n                        ": "",
    "\n                            ar-SS-x-icu\n                            ar-SS-x-icu\n                        ": "",
    "\n                            mas-x-icu\n                            mas-x-icu\n                        ": "",
    "\n                            nn-x-icu\n                            nn-x-icu\n                        ": "",
    "\n                            sah-RU-x-icu\n                            sah-RU-x-icu\n                        ": "",
    "\n                            bs-x-icu\n                            bs-x-icu\n                        ": "",
    "\n                            lb-LU-x-icu\n                            lb-LU-x-icu\n                        ": "",
    "\n                            zgh-MA-x-icu\n                            zgh-MA-x-icu\n                        ": "",
    "\n                            de-IT-x-icu\n                            de-IT-x-icu\n                        ": "",
    "\n                            bn-x-icu\n                            bn-x-icu\n                        ": "",
    "\n                            es-US-x-icu\n                            es-US-x-icu\n                        ": "",
    "\n                            ksb-x-icu\n                            ksb-x-icu\n                        ": "",
    "\n                            ko-KR-x-icu\n                            ko-KR-x-icu\n                        ": "",
    "\n                            km-x-icu\n                            km-x-icu\n                        ": "",
    "\n                            yo-x-icu\n                            yo-x-icu\n                        ": "",
    "\n                            ast-ES-x-icu\n                            ast-ES-x-icu\n                        ": "",
    "\n                            fr-ML-x-icu\n                            fr-ML-x-icu\n                        ": "",
    "\n                            az-Latn-AZ-x-icu\n                            az-Latn-AZ-x-icu\n                        ": "",
    "\n                            en-CM-x-icu\n                            en-CM-x-icu\n                        ": "",
    "\n                            en-AI-x-icu\n                            en-AI-x-icu\n                        ": "",
    "\n                            ur-IN-x-icu\n                            ur-IN-x-icu\n                        ": "",
    "\n                            ku-TR-x-icu\n                            ku-TR-x-icu\n                        ": "",
    "\n                            sk-x-icu\n                            sk-x-icu\n                        ": "",
    "\n                            ewo-CM-x-icu\n                            ewo-CM-x-icu\n                        ": "",
    "\n                            vai-Vaii-LR-x-icu\n                            vai-Vaii-LR-x-icu\n                        ": "",
    "\n                            kl-x-icu\n                            kl-x-icu\n                        ": "",
    "\n                            ru-x-icu\n                            ru-x-icu\n                        ": "",
    "\n                            sg-x-icu\n                            sg-x-icu\n                        ": "",
    "\n                            bg-BG-x-icu\n                            bg-BG-x-icu\n                        ": "",
    "\n                            en-TV-x-icu\n                            en-TV-x-icu\n                        ": "",
    "\n                            mzn-x-icu\n                            mzn-x-icu\n                        ": "",
    "\n                            mt-MT-x-icu\n                            mt-MT-x-icu\n                        ": "",
    "\n                            de-DE-x-icu\n                            de-DE-x-icu\n                        ": "",
    "\n                            is-IS-x-icu\n                            is-IS-x-icu\n                        ": "",
    "\n                            rwk-TZ-x-icu\n                            rwk-TZ-x-icu\n                        ": "",
    "\n                            en-US-x-icu\n                            en-US-x-icu\n                        ": "",
    "\n                            sr-Latn-ME-x-icu\n                            sr-Latn-ME-x-icu\n                        ": "",
    "\n                            zh-Hans-CN-x-icu\n                            zh-Hans-CN-x-icu\n                        ": "",
    "\n                            ga-IE-x-icu\n                            ga-IE-x-icu\n                        ": "",
    "\n                            yo-NG-x-icu\n                            yo-NG-x-icu\n                        ": "",
    "\n                            yi-001-x-icu\n                            yi-001-x-icu\n                        ": "",
    "\n                            fr-CD-x-icu\n                            fr-CD-x-icu\n                        ": "",
    "\n                            ur-PK-x-icu\n                            ur-PK-x-icu\n                        ": "",
    "\n                            ms-SG-x-icu\n                            ms-SG-x-icu\n                        ": "",
    "\n                            da-x-icu\n                            da-x-icu\n                        ": "",
    "\n                            ug-x-icu\n                            ug-x-icu\n                        ": "",
    "\n                            ps-PK-x-icu\n                            ps-PK-x-icu\n                        ": "",
    "\n                            nnh-CM-x-icu\n                            nnh-CM-x-icu\n                        ": "",
    "\n                            dua-x-icu\n                            dua-x-icu\n                        ": "",
    "\n                            kln-x-icu\n                            kln-x-icu\n                        ": "",
    "\n                            ee-x-icu\n                            ee-x-icu\n                        ": "",
    "\n                            es-IC-x-icu\n                            es-IC-x-icu\n                        ": "",
    "\n                            luo-KE-x-icu\n                            luo-KE-x-icu\n                        ": "",
    "\n                            ms-x-icu\n                            ms-x-icu\n                        ": "",
    "\n                            es-EC-x-icu\n                            es-EC-x-icu\n                        ": "",
    "\n                            es-NI-x-icu\n                            es-NI-x-icu\n                        ": "",
    "\n                            bez-TZ-x-icu\n                            bez-TZ-x-icu\n                        ": "",
    "\n                            ff-Latn-GH-x-icu\n                            ff-Latn-GH-x-icu\n                        ": "",
    "\n                            en-US-u-va-posix-x-icu\n                            en-US-u-va-posix-x-icu\n                        ": "",
    "\n                            en-CA-x-icu\n                            en-CA-x-icu\n                        ": "",
    "\n                            fr-KM-x-icu\n                            fr-KM-x-icu\n                        ": "",
    "\n                            ar-QA-x-icu\n                            ar-QA-x-icu\n                        ": "",
    "\n                            nmg-CM-x-icu\n                            nmg-CM-x-icu\n                        ": "",
    "\n                            hsb-x-icu\n                            hsb-x-icu\n                        ": "",
    "\n                            es-CO-x-icu\n                            es-CO-x-icu\n                        ": "",
    "\n                            ar-LB-x-icu\n                            ar-LB-x-icu\n                        ": "",
    "\n                            ln-AO-x-icu\n                            ln-AO-x-icu\n                        ": "",
    "\n                            te-IN-x-icu\n                            te-IN-x-icu\n                        ": "",
    "\n                            bn-BD-x-icu\n                            bn-BD-x-icu\n                        ": "",
    "\n                            os-RU-x-icu\n                            os-RU-x-icu\n                        ": "",
    "\n                            fr-GP-x-icu\n                            fr-GP-x-icu\n                        ": "",
    "\n                            naq-NA-x-icu\n                            naq-NA-x-icu\n                        ": "",
    "\n                            ha-NE-x-icu\n                            ha-NE-x-icu\n                        ": "",
    "\n                            en-FI-x-icu\n                            en-FI-x-icu\n                        ": "",
    "\n                            fr-LU-x-icu\n                            fr-LU-x-icu\n                        ": "",
    "\n                            en-NL-x-icu\n                            en-NL-x-icu\n                        ": "",
    "\n                            ar-x-icu\n                            ar-x-icu\n                        ": "",
    "\n                            es-UY-x-icu\n                            es-UY-x-icu\n                        ": "",
    "\n                            kok-IN-x-icu\n                            kok-IN-x-icu\n                        ": "",
    "\n                            und-x-icu\n                            und-x-icu\n                        ": "",
    "\n                            en-GG-x-icu\n                            en-GG-x-icu\n                        ": "",
    "\n                            bem-ZM-x-icu\n                            bem-ZM-x-icu\n                        ": "",
    "\n                            ar-MA-x-icu\n                            ar-MA-x-icu\n                        ": "",
    "\n                            lg-UG-x-icu\n                            lg-UG-x-icu\n                        ": "",
    "\n                            rn-BI-x-icu\n                            rn-BI-x-icu\n                        ": "",
    "\n                            br-FR-x-icu\n                            br-FR-x-icu\n                        ": "",
    "\n                            sd-PK-x-icu\n                            sd-PK-x-icu\n                        ": "",
    "\n                            lu-x-icu\n                            lu-x-icu\n                        ": "",
    "\n                            ewo-x-icu\n                            ewo-x-icu\n                        ": "",
    "\n                            ar-SO-x-icu\n                            ar-SO-x-icu\n                        ": "",
    "\n                            nd-x-icu\n                            nd-x-icu\n                        ": "",
    "\n                            sk-SK-x-icu\n                            sk-SK-x-icu\n                        ": "",
    "\n                            fr-NC-x-icu\n                            fr-NC-x-icu\n                        ": "",
    "\n                            en-UM-x-icu\n                            en-UM-x-icu\n                        ": "",
    "\n                            en-TK-x-icu\n                            en-TK-x-icu\n                        ": "",
    "\n                            mua-CM-x-icu\n                            mua-CM-x-icu\n                        ": "",
    "\n                            xh-x-icu\n                            xh-x-icu\n                        ": "",
    "\n                            chr-US-x-icu\n                            chr-US-x-icu\n                        ": "",
    "\n                            ks-IN-x-icu\n                            ks-IN-x-icu\n                        ": "",
    "\n                            de-LI-x-icu\n                            de-LI-x-icu\n                        ": "",
    "\n                            zh-Hans-HK-x-icu\n                            zh-Hans-HK-x-icu\n                        ": "",
    "\n                            ta-SG-x-icu\n                            ta-SG-x-icu\n                        ": "",
    "\n                            guz-x-icu\n                            guz-x-icu\n                        ": "",
    "\n                            pt-BR-x-icu\n                            pt-BR-x-icu\n                        ": "",
    "\n                            en-VU-x-icu\n                            en-VU-x-icu\n                        ": "",
    "\n                            mfe-x-icu\n                            mfe-x-icu\n                        ": "",
    "\n                            ff-Latn-BF-x-icu\n                            ff-Latn-BF-x-icu\n                        ": "",
    "\n                            eu-ES-x-icu\n                            eu-ES-x-icu\n                        ": "",
    "\n                            af-ZA-x-icu\n                            af-ZA-x-icu\n                        ": "",
    "\n                            haw-x-icu\n                            haw-x-icu\n                        ": "",
    "\n                            bg-x-icu\n                            bg-x-icu\n                        ": "",
    "\n                            es-PR-x-icu\n                            es-PR-x-icu\n                        ": "",
    "\n                            eo-x-icu\n                            eo-x-icu\n                        ": "",
    "\n                            en-JM-x-icu\n                            en-JM-x-icu\n                        ": "",
    "\n                            fr-FR-x-icu\n                            fr-FR-x-icu\n                        ": "",
    "\n                            ebu-x-icu\n                            ebu-x-icu\n                        ": "",
    "\n                            ml-IN-x-icu\n                            ml-IN-x-icu\n                        ": "",
    "\n                            ga-x-icu\n                            ga-x-icu\n                        ": "",
    "\n                            sw-CD-x-icu\n                            sw-CD-x-icu\n                        ": "",
    "\n                            en-BB-x-icu\n                            en-BB-x-icu\n                        ": "",
    "\n                            sq-MK-x-icu\n                            sq-MK-x-icu\n                        ": "",
    "\n                            es-PH-x-icu\n                            es-PH-x-icu\n                        ": "",
    "\n                            pt-AO-x-icu\n                            pt-AO-x-icu\n                        ": "",
    "\n                            brx-IN-x-icu\n                            brx-IN-x-icu\n                        ": "",
    "\n                            om-KE-x-icu\n                            om-KE-x-icu\n                        ": "",
    "\n                            shi-Latn-MA-x-icu\n                            shi-Latn-MA-x-icu\n                        ": "",
    "\n                            en-PR-x-icu\n                            en-PR-x-icu\n                        ": "",
    "\n                            vai-x-icu\n                            vai-x-icu\n                        ": "",
    "\n                            en-FK-x-icu\n                            en-FK-x-icu\n                        ": "",
    "\n                            en-NG-x-icu\n                            en-NG-x-icu\n                        ": "",
    "\n                            yav-x-icu\n                            yav-x-icu\n                        ": "",
    "\n                            sl-x-icu\n                            sl-x-icu\n                        ": "",
    "\n                            fr-MQ-x-icu\n                            fr-MQ-x-icu\n                        ": "",
    "\n                            en-BW-x-icu\n                            en-BW-x-icu\n                        ": "",
    "\n                            eo-001-x-icu\n                            eo-001-x-icu\n                        ": "",
    "\n                            ru-KZ-x-icu\n                            ru-KZ-x-icu\n                        ": "",
    "\n                            nl-x-icu\n                            nl-x-icu\n                        ": "",
    "\n                            ug-CN-x-icu\n                            ug-CN-x-icu\n                        ": "",
    "\n                            mer-KE-x-icu\n                            mer-KE-x-icu\n                        ": "",
    "\n                            gl-x-icu\n                            gl-x-icu\n                        ": "",
    "\n                            ne-NP-x-icu\n                            ne-NP-x-icu\n                        ": "",
    "\n                            qu-BO-x-icu\n                            qu-BO-x-icu\n                        ": "",
    "\n                            fr-MR-x-icu\n                            fr-MR-x-icu\n                        ": "",
    "\n                            en-NR-x-icu\n                            en-NR-x-icu\n                        ": "",
    "\n                            dz-BT-x-icu\n                            dz-BT-x-icu\n                        ": "",
    "\n                            pa-Arab-PK-x-icu\n                            pa-Arab-PK-x-icu\n                        ": "",
    "\n                            mua-x-icu\n                            mua-x-icu\n                        ": "",
    "\n                            rw-x-icu\n                            rw-x-icu\n                        ": "",
    "\n                            shi-Tfng-MA-x-icu\n                            shi-Tfng-MA-x-icu\n                        ": "",
    "\n                            en-BM-x-icu\n                            en-BM-x-icu\n                        ": "",
    "\n                            sv-x-icu\n                            sv-x-icu\n                        ": "",
    "\n                            ig-NG-x-icu\n                            ig-NG-x-icu\n                        ": "",
    "\n                            ff-Latn-LR-x-icu\n                            ff-Latn-LR-x-icu\n                        ": "",
    "\n                            es-CU-x-icu\n                            es-CU-x-icu\n                        ": "",
    "\n                            dsb-DE-x-icu\n                            dsb-DE-x-icu\n                        ": "",
    "\n                            sl-SI-x-icu\n                            sl-SI-x-icu\n                        ": "",
    "\n                            en-DE-x-icu\n                            en-DE-x-icu\n                        ": "",
    "\n                            en-BZ-x-icu\n                            en-BZ-x-icu\n                        ": "",
    "\n                            so-ET-x-icu\n                            so-ET-x-icu\n                        ": "",
    "\n                            it-VA-x-icu\n                            it-VA-x-icu\n                        ": "",
    "\n                            ta-LK-x-icu\n                            ta-LK-x-icu\n                        ": "",
    "\n                            te-x-icu\n                            te-x-icu\n                        ": "",
    "\n                            en-NA-x-icu\n                            en-NA-x-icu\n                        ": "",
    "\n                            fr-MU-x-icu\n                            fr-MU-x-icu\n                        ": "",
    "\n                            kkj-x-icu\n                            kkj-x-icu\n                        ": "",
    "\n                            se-FI-x-icu\n                            se-FI-x-icu\n                        ": "",
    "\n                            th-TH-x-icu\n                            th-TH-x-icu\n                        ": "",
    "\n                            nds-DE-x-icu\n                            nds-DE-x-icu\n                        ": "",
    "\n                            am-x-icu\n                            am-x-icu\n                        ": "",
    "\n                            zu-ZA-x-icu\n                            zu-ZA-x-icu\n                        ": "",
    "\n                            ta-MY-x-icu\n                            ta-MY-x-icu\n                        ": "",
    "\n                            en-MG-x-icu\n                            en-MG-x-icu\n                        ": "",
    "\n                            en-AG-x-icu\n                            en-AG-x-icu\n                        ": "",
    "\n                            lg-x-icu\n                            lg-x-icu\n                        ": "",
    "\n                            kn-IN-x-icu\n                            kn-IN-x-icu\n                        ": "",
    "\n                            ak-GH-x-icu\n                            ak-GH-x-icu\n                        ": "",
    "\n                            it-x-icu\n                            it-x-icu\n                        ": "",
    "\n                            en-PW-x-icu\n                            en-PW-x-icu\n                        ": "",
    "\n                            ar-MR-x-icu\n                            ar-MR-x-icu\n                        ": "",
    "\n                            ckb-IQ-x-icu\n                            ckb-IQ-x-icu\n                        ": "",
    "\n                            ne-x-icu\n                            ne-x-icu\n                        ": "",
    "\n                            fr-SY-x-icu\n                            fr-SY-x-icu\n                        ": "",
    "\n                            zh-Hant-x-icu\n                            zh-Hant-x-icu\n                        ": "",
    "\n                            bs-Cyrl-x-icu\n                            bs-Cyrl-x-icu\n                        ": "",
    "\n                            ha-GH-x-icu\n                            ha-GH-x-icu\n                        ": "",
    "\n                            en-IL-x-icu\n                            en-IL-x-icu\n                        ": "",
    "\n                            be-BY-x-icu\n                            be-BY-x-icu\n                        ": "",
    "\n                            en-AS-x-icu\n                            en-AS-x-icu\n                        ": "",
    "\n                            twq-NE-x-icu\n                            twq-NE-x-icu\n                        ": "",
    "\n                            kw-x-icu\n                            kw-x-icu\n                        ": "",
    "\n                            ar-YE-x-icu\n                            ar-YE-x-icu\n                        ": "",
    "\n                            kk-x-icu\n                            kk-x-icu\n                        ": "",
    "\n                            gsw-CH-x-icu\n                            gsw-CH-x-icu\n                        ": "",
    "\n                            twq-x-icu\n                            twq-x-icu\n                        ": "",
    "\n                            mt-x-icu\n                            mt-x-icu\n                        ": "",
    "\n                            zh-Hant-HK-x-icu\n                            zh-Hant-HK-x-icu\n                        ": "",
    "\n                            jmc-x-icu\n                            jmc-x-icu\n                        ": "",
    "\n                            hy-x-icu\n                            hy-x-icu\n                        ": "",
    "\n                            jv-ID-x-icu\n                            jv-ID-x-icu\n                        ": "",
    "\n                            he-x-icu\n                            he-x-icu\n                        ": "",
    "\n                            en-KY-x-icu\n                            en-KY-x-icu\n                        ": "",
    "\n                            se-x-icu\n                            se-x-icu\n                        ": "",
    "\n                            ff-Latn-NG-x-icu\n                            ff-Latn-NG-x-icu\n                        ": "",
    "\n                            lo-x-icu\n                            lo-x-icu\n                        ": "",
    "\n                            fr-CG-x-icu\n                            fr-CG-x-icu\n                        ": "",
    "\n                            yue-Hant-HK-x-icu\n                            yue-Hant-HK-x-icu\n                        ": "",
    "\n                            zh-Hant-TW-x-icu\n                            zh-Hant-TW-x-icu\n                        ": "",
    "\n                            en-VC-x-icu\n                            en-VC-x-icu\n                        ": "",
    "\n                            cs-CZ-x-icu\n                            cs-CZ-x-icu\n                        ": "",
    "\n                            pt-MZ-x-icu\n                            pt-MZ-x-icu\n                        ": "",
    "\n                            en-PK-x-icu\n                            en-PK-x-icu\n                        ": "",
    "\n                            en-AU-x-icu\n                            en-AU-x-icu\n                        ": "",
    "\n                            lrc-IR-x-icu\n                            lrc-IR-x-icu\n                        ": "",
    "\n                            nl-NL-x-icu\n                            nl-NL-x-icu\n                        ": "",
    "\n                            to-TO-x-icu\n                            to-TO-x-icu\n                        ": "",
    "\n                            fr-CA-x-icu\n                            fr-CA-x-icu\n                        ": "",
    "\n                            mgo-x-icu\n                            mgo-x-icu\n                        ": "",
    "\n                            shi-Tfng-x-icu\n                            shi-Tfng-x-icu\n                        ": "",
    "\n                            en-IN-x-icu\n                            en-IN-x-icu\n                        ": "",
    "\n                            en-PG-x-icu\n                            en-PG-x-icu\n                        ": "",
    "\n                            default\n                            default\n                        ": "",
    "\n                            gl-ES-x-icu\n                            gl-ES-x-icu\n                        ": "",
    "\n                            ha-NG-x-icu\n                            ha-NG-x-icu\n                        ": "",
    "\n                            en-001-x-icu\n                            en-001-x-icu\n                        ": "",
    "\n                            ia-001-x-icu\n                            ia-001-x-icu\n                        ": "",
    "\n                            ii-CN-x-icu\n                            ii-CN-x-icu\n                        ": "",
    "\n                            cy-GB-x-icu\n                            cy-GB-x-icu\n                        ": "",
    "\n                            ta-x-icu\n                            ta-x-icu\n                        ": "",
    "\n                            ka-GE-x-icu\n                            ka-GE-x-icu\n                        ": "",
    "\n                            pa-Arab-x-icu\n                            pa-Arab-x-icu\n                        ": "",
    "\n                            ku-x-icu\n                            ku-x-icu\n                        ": "",
    "\n                            ff-Latn-GM-x-icu\n                            ff-Latn-GM-x-icu\n                        ": "",
    "\n                            ca-IT-x-icu\n                            ca-IT-x-icu\n                        ": "",
    "\n                            ksf-x-icu\n                            ksf-x-icu\n                        ": "",
    "\n                            km-KH-x-icu\n                            km-KH-x-icu\n                        ": "",
    "\n                            sv-SE-x-icu\n                            sv-SE-x-icu\n                        ": "",
    "\n                            az-Cyrl-AZ-x-icu\n                            az-Cyrl-AZ-x-icu\n                        ": "",
    "\n                            mr-IN-x-icu\n                            mr-IN-x-icu\n                        ": "",
    "\n                            en-GB-x-icu\n                            en-GB-x-icu\n                        ": "",
    "\n                            ar-KW-x-icu\n                            ar-KW-x-icu\n                        ": "",
    "\n                            lt-x-icu\n                            lt-x-icu\n                        ": "",
    "\n                            sv-FI-x-icu\n                            sv-FI-x-icu\n                        ": "",
    "\n                            fr-x-icu\n                            fr-x-icu\n                        ": "",
    "\n                            uz-Cyrl-x-icu\n                            uz-Cyrl-x-icu\n                        ": "",
    "\n                            rof-x-icu\n                            rof-x-icu\n                        ": "",
    "\n                            mgh-MZ-x-icu\n                            mgh-MZ-x-icu\n                        ": "",
    "\n                            lb-x-icu\n                            lb-x-icu\n                        ": "",
    "\n                            fr-DJ-x-icu\n                            fr-DJ-x-icu\n                        ": "",
    "\n                            es-SV-x-icu\n                            es-SV-x-icu\n                        ": "",
    "\n                            ses-ML-x-icu\n                            ses-ML-x-icu\n                        ": "",
    "\n                            en-MU-x-icu\n                            en-MU-x-icu\n                        ": "",
    "\n                            en-ZW-x-icu\n                            en-ZW-x-icu\n                        ": "",
    "\n                            ne-IN-x-icu\n                            ne-IN-x-icu\n                        ": "",
    "\n                            saq-x-icu\n                            saq-x-icu\n                        ": "",
    "\n                            hi-IN-x-icu\n                            hi-IN-x-icu\n                        ": "",
    "\n                            asa-x-icu\n                            asa-x-icu\n                        ": "",
    "\n                            nus-SS-x-icu\n                            nus-SS-x-icu\n                        ": "",
    "\n                            chr-x-icu\n                            chr-x-icu\n                        ": "",
    "\n                            ckb-IR-x-icu\n                            ckb-IR-x-icu\n                        ": "",
    "\n                            uz-Arab-x-icu\n                            uz-Arab-x-icu\n                        ": "",
    "\n                            pl-PL-x-icu\n                            pl-PL-x-icu\n                        ": "",
    "\n                            sn-x-icu\n                            sn-x-icu\n                        ": "",
    "\n                            hu-x-icu\n                            hu-x-icu\n                        ": "",
    "\n                            es-PE-x-icu\n                            es-PE-x-icu\n                        ": "",
    "\n                            en-x-icu\n                            en-x-icu\n                        ": "",
    "\n                            en-PN-x-icu\n                            en-PN-x-icu\n                        ": "",
    "\n                            ru-MD-x-icu\n                            ru-MD-x-icu\n                        ": "",
    "\n                            el-GR-x-icu\n                            el-GR-x-icu\n                        ": "",
    "\n                            ar-AE-x-icu\n                            ar-AE-x-icu\n                        ": "",
    "\n                            es-CL-x-icu\n                            es-CL-x-icu\n                        ": "",
    "\n                            qu-PE-x-icu\n                            qu-PE-x-icu\n                        ": "",
    "\n                            as-x-icu\n                            as-x-icu\n                        ": "",
    "\n                            is-x-icu\n                            is-x-icu\n                        ": "",
    "\n                            es-x-icu\n                            es-x-icu\n                        ": "",
    "\n                            es-BO-x-icu\n                            es-BO-x-icu\n                        ": "",
    "\n                            ff-Latn-SL-x-icu\n                            ff-Latn-SL-x-icu\n                        ": "",
    "\n                            id-ID-x-icu\n                            id-ID-x-icu\n                        ": "",
    "\n                            ja-JP-x-icu\n                            ja-JP-x-icu\n                        ": "",
    "\n                            fr-MG-x-icu\n                            fr-MG-x-icu\n                        ": "",
    "\n                            sq-x-icu\n                            sq-x-icu\n                        ": "",
    "\n                            seh-MZ-x-icu\n                            seh-MZ-x-icu\n                        ": "",
    "\n                            mg-MG-x-icu\n                            mg-MG-x-icu\n                        ": "",
    "\n                            en-UG-x-icu\n                            en-UG-x-icu\n                        ": "",
    "\n                            ru-BY-x-icu\n                            ru-BY-x-icu\n                        ": "",
    "\n                            en-ZA-x-icu\n                            en-ZA-x-icu\n                        ": "",
    "\n                            tk-TM-x-icu\n                            tk-TM-x-icu\n                        ": "",
    "\n                            my-MM-x-icu\n                            my-MM-x-icu\n                        ": "",
    "\n                            pt-CV-x-icu\n                            pt-CV-x-icu\n                        ": "",
    "\n                            sw-KE-x-icu\n                            sw-KE-x-icu\n                        ": "",
    "\n                            fy-NL-x-icu\n                            fy-NL-x-icu\n                        ": "",
    "\n                            fr-NE-x-icu\n                            fr-NE-x-icu\n                        ": "",
    "\n                            rwk-x-icu\n                            rwk-x-icu\n                        ": "",
    "\n                            el-CY-x-icu\n                            el-CY-x-icu\n                        ": "",
    "\n                            ceb-x-icu\n                            ceb-x-icu\n                        ": "",
    "\n                            ki-x-icu\n                            ki-x-icu\n                        ": "",
    "\n                            bs-Cyrl-BA-x-icu\n                            bs-Cyrl-BA-x-icu\n                        ": "",
    "\n                            fil-x-icu\n                            fil-x-icu\n                        ": "",
    "\n                            en-SZ-x-icu\n                            en-SZ-x-icu\n                        ": "",
    "\n                            gd-x-icu\n                            gd-x-icu\n                        ": "",
    "\n                            gsw-LI-x-icu\n                            gsw-LI-x-icu\n                        ": "",
    "\n                            en-AE-x-icu\n                            en-AE-x-icu\n                        ": "",
    "\n                            it-SM-x-icu\n                            it-SM-x-icu\n                        ": "",
    "\n                            hi-x-icu\n                            hi-x-icu\n                        ": "",
    "\n                            tt-RU-x-icu\n                            tt-RU-x-icu\n                        ": "",
    "\n                            sbp-TZ-x-icu\n                            sbp-TZ-x-icu\n                        ": "",
    "\n                            fr-GQ-x-icu\n                            fr-GQ-x-icu\n                        ": "",
    "\n                            es-BR-x-icu\n                            es-BR-x-icu\n                        ": "",
    "\n                            az-Cyrl-x-icu\n                            az-Cyrl-x-icu\n                        ": "",
    "\n                            ar-KM-x-icu\n                            ar-KM-x-icu\n                        ": "",
    "\n                            ar-EH-x-icu\n                            ar-EH-x-icu\n                        ": "",
    "\n                            ms-MY-x-icu\n                            ms-MY-x-icu\n                        ": "",
    "\n                            ar-PS-x-icu\n                            ar-PS-x-icu\n                        ": "",
    "\n                            pt-PT-x-icu\n                            pt-PT-x-icu\n                        ": "",
    "\n                            sq-XK-x-icu\n                            sq-XK-x-icu\n                        ": "",
    "\n                            ln-CF-x-icu\n                            ln-CF-x-icu\n                        ": "",
    "\n                            nus-x-icu\n                            nus-x-icu\n                        ": "",
    "\n                            sd-x-icu\n                            sd-x-icu\n                        ": "",
    "\n                            or-IN-x-icu\n                            or-IN-x-icu\n                        ": "",
    "\n                            ko-x-icu\n                            ko-x-icu\n                        ": "",
    "\n                            ha-x-icu\n                            ha-x-icu\n                        ": "",
    "\n                            en-DM-x-icu\n                            en-DM-x-icu\n                        ": "",
    "\n                            vun-TZ-x-icu\n                            vun-TZ-x-icu\n                        ": "",
    "\n                            mer-x-icu\n                            mer-x-icu\n                        ": "",
    "\n                            ln-x-icu\n                            ln-x-icu\n                        ": "",
    "\n                            haw-US-x-icu\n                            haw-US-x-icu\n                        ": "",
    "\n                            en-NZ-x-icu\n                            en-NZ-x-icu\n                        ": "",
    "\n                            hr-BA-x-icu\n                            hr-BA-x-icu\n                        ": "",
    "\n                            yue-Hant-x-icu\n                            yue-Hant-x-icu\n                        ": "",
    "\n                            se-SE-x-icu\n                            se-SE-x-icu\n                        ": "",
    "\n                            fr-GN-x-icu\n                            fr-GN-x-icu\n                        ": "",
    "\n                            fo-x-icu\n                            fo-x-icu\n                        ": "",
    "\n                            guz-KE-x-icu\n                            guz-KE-x-icu\n                        ": "",
    "\n                            yue-x-icu\n                            yue-x-icu\n                        ": "",
    "\n                            ce-x-icu\n                            ce-x-icu\n                        ": "",
    "\n                            ca-x-icu\n                            ca-x-icu\n                        ": "",
    "\n                            ccp-x-icu\n                            ccp-x-icu\n                        ": "",
    "\n                            ceb-PH-x-icu\n                            ceb-PH-x-icu\n                        ": "",
    "\n                            lo-LA-x-icu\n                            lo-LA-x-icu\n                        ": "",
    "\n                            kab-x-icu\n                            kab-x-icu\n                        ": "",
    "\n                            en-CC-x-icu\n                            en-CC-x-icu\n                        ": "",
    "\n                            nb-x-icu\n                            nb-x-icu\n                        ": "",
    "\n                            az-x-icu\n                            az-x-icu\n                        ": "",
    "\n                            en-SH-x-icu\n                            en-SH-x-icu\n                        ": "",
    "\n                            es-PY-x-icu\n                            es-PY-x-icu\n                        ": "",
    "\n                            mn-MN-x-icu\n                            mn-MN-x-icu\n                        ": "",
    "\n                            sah-x-icu\n                            sah-x-icu\n                        ": "",
    "\n                            en-SE-x-icu\n                            en-SE-x-icu\n                        ": "",
    "\n                            th-x-icu\n                            th-x-icu\n                        ": "",
    "\n                            qu-x-icu\n                            qu-x-icu\n                        ": "",
    "\n                            lrc-x-icu\n                            lrc-x-icu\n                        ": "",
    "\n                            en-MO-x-icu\n                            en-MO-x-icu\n                        ": "",
    "\n                            gu-IN-x-icu\n                            gu-IN-x-icu\n                        ": "",
    "\n                            ru-RU-x-icu\n                            ru-RU-x-icu\n                        ": "",
    "\n                            fr-RW-x-icu\n                            fr-RW-x-icu\n                        ": "",
    "\n                            es-EA-x-icu\n                            es-EA-x-icu\n                        ": "",
    "\n                            tt-x-icu\n                            tt-x-icu\n                        ": "",
    "\n                            ses-x-icu\n                            ses-x-icu\n                        ": "",
    "\n                            nmg-x-icu\n                            nmg-x-icu\n                        ": "",
    "\n                            so-x-icu\n                            so-x-icu\n                        ": "",
    "\n                            ms-BN-x-icu\n                            ms-BN-x-icu\n                        ": "",
    "\n                            fa-IR-x-icu\n                            fa-IR-x-icu\n                        ": "",
    "\n                            dyo-x-icu\n                            dyo-x-icu\n                        ": "",
    "\n                            ps-x-icu\n                            ps-x-icu\n                        ": "",
    "\n                            mr-x-icu\n                            mr-x-icu\n                        ": "",
    "\n                            hu-HU-x-icu\n                            hu-HU-x-icu\n                        ": "",
    "\n                            es-VE-x-icu\n                            es-VE-x-icu\n                        ": "",
    "\n                            en-GD-x-icu\n                            en-GD-x-icu\n                        ": "",
    "\n                            sr-Cyrl-BA-x-icu\n                            sr-Cyrl-BA-x-icu\n                        ": "",
    "\n                            jgo-CM-x-icu\n                            jgo-CM-x-icu\n                        ": "",
    "\n                            dje-x-icu\n                            dje-x-icu\n                        ": "",
    "\n                            ce-RU-x-icu\n                            ce-RU-x-icu\n                        ": "",
    "\n                            ki-KE-x-icu\n                            ki-KE-x-icu\n                        ": "",
    "\n                            fr-GF-x-icu\n                            fr-GF-x-icu\n                        ": "",
    "\n                            tzm-x-icu\n                            tzm-x-icu\n                        ": "",
    "\n                            teo-KE-x-icu\n                            teo-KE-x-icu\n                        ": "",
    "\n                            bez-x-icu\n                            bez-x-icu\n                        ": "",
    "\n                            om-ET-x-icu\n                            om-ET-x-icu\n                        ": "",
    "\n                            ln-CG-x-icu\n                            ln-CG-x-icu\n                        ": "",
    "\n                            tg-TJ-x-icu\n                            tg-TJ-x-icu\n                        ": "",
    "\n                            ff-Latn-MR-x-icu\n                            ff-Latn-MR-x-icu\n                        ": "",
    "\n                            fr-WF-x-icu\n                            fr-WF-x-icu\n                        ": "",
    "\n                            wae-CH-x-icu\n                            wae-CH-x-icu\n                        ": "",
    "\n                            fr-TD-x-icu\n                            fr-TD-x-icu\n                        ": "",
    "\n                            af-x-icu\n                            af-x-icu\n                        ": "",
    "\n                            en-IO-x-icu\n                            en-IO-x-icu\n                        ": "",
    "\n                            mn-x-icu\n                            mn-x-icu\n                        ": "",
    "\n                            kea-CV-x-icu\n                            kea-CV-x-icu\n                        ": "",
    "\n                            pt-GW-x-icu\n                            pt-GW-x-icu\n                        ": "",
    "\n                            mas-KE-x-icu\n                            mas-KE-x-icu\n                        ": "",
    "\n                            en-CH-x-icu\n                            en-CH-x-icu\n                        ": "",
    "\n                            dua-CM-x-icu\n                            dua-CM-x-icu\n                        ": "",
    "\n                            uz-Cyrl-UZ-x-icu\n                            uz-Cyrl-UZ-x-icu\n                        ": "",
    "\n                            sr-x-icu\n                            sr-x-icu\n                        ": "",
    "\n                            fr-CH-x-icu\n                            fr-CH-x-icu\n                        ": "",
    "\n                            saq-KE-x-icu\n                            saq-KE-x-icu\n                        ": "",
    "\n                            sw-TZ-x-icu\n                            sw-TZ-x-icu\n                        ": "",
    "\n                            nl-SX-x-icu\n                            nl-SX-x-icu\n                        ": "",
    "\n                            rn-x-icu\n                            rn-x-icu\n                        ": "",
    "\n                            vai-Latn-LR-x-icu\n                            vai-Latn-LR-x-icu\n                        ": "",
    "\n                            sr-Latn-BA-x-icu\n                            sr-Latn-BA-x-icu\n                        ": "",
    "\n                            mgo-CM-x-icu\n                            mgo-CM-x-icu\n                        ": "",
    "\n                            br-x-icu\n                            br-x-icu\n                        ": "",
    "\n                            shi-Latn-x-icu\n                            shi-Latn-x-icu\n                        ": "",
    "\n                            nl-BE-x-icu\n                            nl-BE-x-icu\n                        ": "",
    "\n                            en-TT-x-icu\n                            en-TT-x-icu\n                        ": "",
    "\n                            de-x-icu\n                            de-x-icu\n                        ": "",
    "\n                            mi-NZ-x-icu\n                            mi-NZ-x-icu\n                        ": "",
    "\n                            es-CR-x-icu\n                            es-CR-x-icu\n                        ": "",
    "\n                            my-x-icu\n                            my-x-icu\n                        ": "",
    "\n                            gd-GB-x-icu\n                            gd-GB-x-icu\n                        ": "",
    "\n                            en-WS-x-icu\n                            en-WS-x-icu\n                        ": "",
    "\n                            cgg-x-icu\n                            cgg-x-icu\n                        ": "",
    "\n                            en-MS-x-icu\n                            en-MS-x-icu\n                        ": "",
    "\n                            en-GU-x-icu\n                            en-GU-x-icu\n                        ": "",
    "\n                            en-KI-x-icu\n                            en-KI-x-icu\n                        ": "",
    "\n                            kl-GL-x-icu\n                            kl-GL-x-icu\n                        ": "",
    "\n                            de-BE-x-icu\n                            de-BE-x-icu\n                        ": "",
    "\n                            asa-TZ-x-icu\n                            asa-TZ-x-icu\n                        ": "",
    "\n                            nnh-x-icu\n                            nnh-x-icu\n                        ": "",
    "\n                            en-GY-x-icu\n                            en-GY-x-icu\n                        ": "",
    "\n                            lrc-IQ-x-icu\n                            lrc-IQ-x-icu\n                        ": "",
    "\n                            pa-x-icu\n                            pa-x-icu\n                        ": "",
    "\n                            en-GI-x-icu\n                            en-GI-x-icu\n                        ": "",
    "\n                            ff-Latn-SN-x-icu\n                            ff-Latn-SN-x-icu\n                        ": "",
    "\n                            en-CY-x-icu\n                            en-CY-x-icu\n                        ": "",
    "\n                            dav-x-icu\n                            dav-x-icu\n                        ": "",
    "\n                            ig-x-icu\n                            ig-x-icu\n                        ": "",
    "\n                            id-x-icu\n                            id-x-icu\n                        ": "",
    "\n                            ar-OM-x-icu\n                            ar-OM-x-icu\n                        ": "",
    "\n                            agq-x-icu\n                            agq-x-icu\n                        ": "",
    "\n                            hsb-DE-x-icu\n                            hsb-DE-x-icu\n                        ": "",
    "\n                            dsb-x-icu\n                            dsb-x-icu\n                        ": "",
    "\n                            fr-DZ-x-icu\n                            fr-DZ-x-icu\n                        ": "",
    "\n                            teo-x-icu\n                            teo-x-icu\n                        ": "",
    "\n                            ar-JO-x-icu\n                            ar-JO-x-icu\n                        ": "",
    "\n                            ps-AF-x-icu\n                            ps-AF-x-icu\n                        ": "",
    "\n                            ff-Latn-NE-x-icu\n                            ff-Latn-NE-x-icu\n                        ": "",
    "\n                            es-HN-x-icu\n                            es-HN-x-icu\n                        ": "",
    "\n                            gv-x-icu\n                            gv-x-icu\n                        ": "",
    "\n                            ksh-x-icu\n                            ksh-x-icu\n                        ": "",
    "\n                            nd-ZW-x-icu\n                            nd-ZW-x-icu\n                        ": "",
    "\n                            en-LC-x-icu\n                            en-LC-x-icu\n                        ": "",
    "\n                            ee-TG-x-icu\n                            ee-TG-x-icu\n                        ": "",
    "\n                            ar-DJ-x-icu\n                            ar-DJ-x-icu\n                        ": "",
    "\n                            si-LK-x-icu\n                            si-LK-x-icu\n                        ": "",
    "\n                            fr-BE-x-icu\n                            fr-BE-x-icu\n                        ": "",
    "\n                            ti-ER-x-icu\n                            ti-ER-x-icu\n                        ": "",
    "\n                            nb-NO-x-icu\n                            nb-NO-x-icu\n                        ": "",
    "\n                            ksh-DE-x-icu\n                            ksh-DE-x-icu\n                        ": "",
    "\n                            zh-Hans-SG-x-icu\n                            zh-Hans-SG-x-icu\n                        ": "",
    "\n                            fr-BI-x-icu\n                            fr-BI-x-icu\n                        ": "",
    "\n                            to-x-icu\n                            to-x-icu\n                        ": "",
    "\n                            sbp-x-icu\n                            sbp-x-icu\n                        ": "",
    "\n                            da-DK-x-icu\n                            da-DK-x-icu\n                        ": "",
    "\n                            en-NF-x-icu\n                            en-NF-x-icu\n                        ": "",
    "\n                            lag-x-icu\n                            lag-x-icu\n                        ": "",
    "\n                            lv-LV-x-icu\n                            lv-LV-x-icu\n                        ": "",
    "\n                            xog-x-icu\n                            xog-x-icu\n                        ": "",
    "\n                            sr-Cyrl-x-icu\n                            sr-Cyrl-x-icu\n                        ": "",
    "\n                            rw-RW-x-icu\n                            rw-RW-x-icu\n                        ": "",
    "\n                            en-SD-x-icu\n                            en-SD-x-icu\n                        ": "",
    "\n                            fr-RE-x-icu\n                            fr-RE-x-icu\n                        ": "",
    "\n                            teo-UG-x-icu\n                            teo-UG-x-icu\n                        ": "",
    "\n                            en-ZM-x-icu\n                            en-ZM-x-icu\n                        ": "",
    "\n                            se-NO-x-icu\n                            se-NO-x-icu\n                        ": "",
    "\n                            pt-TL-x-icu\n                            pt-TL-x-icu\n                        ": "",
    "\n                            uk-UA-x-icu\n                            uk-UA-x-icu\n                        ": "",
    "\n                            ka-x-icu\n                            ka-x-icu\n                        ": "",
    "\n                            hr-HR-x-icu\n                            hr-HR-x-icu\n                        ": "",
    "\n                            ff-Latn-x-icu\n                            ff-Latn-x-icu\n                        ": "",
    "\n                            tk-x-icu\n                            tk-x-icu\n                        ": "",
    "\n                            smn-FI-x-icu\n                            smn-FI-x-icu\n                        ": "",
    "\n                            ca-AD-x-icu\n                            ca-AD-x-icu\n                        ": "",
    "\n                            pt-LU-x-icu\n                            pt-LU-x-icu\n                        ": "",
    "\n                            en-GM-x-icu\n                            en-GM-x-icu\n                        ": "",
    "\n                            en-FJ-x-icu\n                            en-FJ-x-icu\n                        ": "",
    "\n                            nl-SR-x-icu\n                            nl-SR-x-icu\n                        ": "",
    "\n                            nyn-x-icu\n                            nyn-x-icu\n                        ": "",
    "\n                            de-CH-x-icu\n                            de-CH-x-icu\n                        ": "",
    "\n                            fr-PF-x-icu\n                            fr-PF-x-icu\n                        ": "",
    "\n                            et-EE-x-icu\n                            et-EE-x-icu\n                        ": "",
    "\n                            tr-TR-x-icu\n                            tr-TR-x-icu\n                        ": "",
    "\n                            eu-x-icu\n                            eu-x-icu\n                        ": "",
    "\n                            ar-TN-x-icu\n                            ar-TN-x-icu\n                        ": "",
    "\n                            lt-LT-x-icu\n                            lt-LT-x-icu\n                        ": "",
    "\n                            es-ES-x-icu\n                            es-ES-x-icu\n                        ": "",
    "\n                            en-SX-x-icu\n                            en-SX-x-icu\n                        ": "",
    "\n                            ar-EG-x-icu\n                            ar-EG-x-icu\n                        ": "",
    "\n                            so-KE-x-icu\n                            so-KE-x-icu\n                        ": "",
    "\n                            en-MY-x-icu\n                            en-MY-x-icu\n                        ": "",
    "\n                            en-TO-x-icu\n                            en-TO-x-icu\n                        ": "",
    "\n                            bm-ML-x-icu\n                            bm-ML-x-icu\n                        ": "",
    "\n                            fr-BL-x-icu\n                            fr-BL-x-icu\n                        ": "",
    "\n                            ccp-IN-x-icu\n                            ccp-IN-x-icu\n                        ": "",
    "\n                            zgh-x-icu\n                            zgh-x-icu\n                        ": "",
    "\n                            shi-x-icu\n                            shi-x-icu\n                        ": "",
    "\n                            ky-x-icu\n                            ky-x-icu\n                        ": "",
    "\n                            ks-x-icu\n                            ks-x-icu\n                        ": "",
    "\n                            mfe-MU-x-icu\n                            mfe-MU-x-icu\n                        ": "",
    "\n                            bm-x-icu\n                            bm-x-icu\n                        ": "",
    "\n                            yi-x-icu\n                            yi-x-icu\n                        ": "",
    "\n                            sr-Latn-XK-x-icu\n                            sr-Latn-XK-x-icu\n                        ": "",
    "\n                            ar-ER-x-icu\n                            ar-ER-x-icu\n                        ": "",
    "\n                            nds-x-icu\n                            nds-x-icu\n                        ": "",
    "\n                            ksf-CM-x-icu\n                            ksf-CM-x-icu\n                        ": "",
    "\n                            he-IL-x-icu\n                            he-IL-x-icu\n                        ": "",
    "\n                            ga-GB-x-icu\n                            ga-GB-x-icu\n                        ": "",
    "\n                            fr-PM-x-icu\n                            fr-PM-x-icu\n                        ": "",
    "\n                            pt-x-icu\n                            pt-x-icu\n                        ": "",
    "\n                            en-RW-x-icu\n                            en-RW-x-icu\n                        ": "",
    "\n                            bas-x-icu\n                            bas-x-icu\n                        ": "",
    "\n                            en-KE-x-icu\n                            en-KE-x-icu\n                        ": "",
    "\n                            mgh-x-icu\n                            mgh-x-icu\n                        ": "",
    "\n                            es-PA-x-icu\n                            es-PA-x-icu\n                        ": "",
    "\n                            ckb-x-icu\n                            ckb-x-icu\n                        ": "",
    "\n                            ar-SD-x-icu\n                            ar-SD-x-icu\n                        ": "",
    "\n                            fur-IT-x-icu\n                            fur-IT-x-icu\n                        ": "",
    "\n                            sn-ZW-x-icu\n                            sn-ZW-x-icu\n                        ": "",
    "\n                            fr-SN-x-icu\n                            fr-SN-x-icu\n                        ": "",
    "\n                            uk-x-icu\n                            uk-x-icu\n                        ": "",
    "\n                            es-GQ-x-icu\n                            es-GQ-x-icu\n                        ": "",
    "\n                            fr-CI-x-icu\n                            fr-CI-x-icu\n                        ": "",
    "\n                            mg-x-icu\n                            mg-x-icu\n                        ": "",
    "\n                            ar-TD-x-icu\n                            ar-TD-x-icu\n                        ": "",
    "\n                            en-AT-x-icu\n                            en-AT-x-icu\n                        ": "",
    "\n                            gsw-FR-x-icu\n                            gsw-FR-x-icu\n                        ": "",
    "\n                            naq-x-icu\n                            naq-x-icu\n                        ": "",
    "\n                            mk-x-icu\n                            mk-x-icu\n                        ": "",
    "\n                            tzm-MA-x-icu\n                            tzm-MA-x-icu\n                        ": "",
    "\n                            nyn-UG-x-icu\n                            nyn-UG-x-icu\n                        ": "",
    "\n                            uz-Latn-UZ-x-icu\n                            uz-Latn-UZ-x-icu\n                        ": "",
    "\n                            ca-ES-x-icu\n                            ca-ES-x-icu\n                        ": "",
    "\n                            sq-AL-x-icu\n                            sq-AL-x-icu\n                        ": "",
    "\n                            en-IE-x-icu\n                            en-IE-x-icu\n                        ": "",
    "\n                            jgo-x-icu\n                            jgo-x-icu\n                        ": "",
    "\n                            ii-x-icu\n                            ii-x-icu\n                        ": "",
    "\n                            ff-x-icu\n                            ff-x-icu\n                        ": "",
    "\n                            hr-x-icu\n                            hr-x-icu\n                        ": "",
    "\n                            agq-CM-x-icu\n                            agq-CM-x-icu\n                        ": "",
    "\n                            en-TZ-x-icu\n                            en-TZ-x-icu\n                        ": "",
    "\n                            as-IN-x-icu\n                            as-IN-x-icu\n                        ": "",
    "\n                            ti-x-icu\n                            ti-x-icu\n                        ": "",
    "\n                            en-SG-x-icu\n                            en-SG-x-icu\n                        ": "",
    "\n                            en-DK-x-icu\n                            en-DK-x-icu\n                        ": "",
    "\n                            kln-KE-x-icu\n                            kln-KE-x-icu\n                        ": "",
    "\n                            kok-x-icu\n                            kok-x-icu\n                        ": "",
    "\n                            en-DG-x-icu\n                            en-DG-x-icu\n                        ": "",
    "\n                            cy-x-icu\n                            cy-x-icu\n                        ": "",
    "\n                            153.14\n                            153.14\n                        ": "",
    "\n                            153.14.36.8\n                            153.14.36.8\n                        ": "",
    "\n                            /etc/postgresql/12/main/postgresql.conf\n                            /etc/postgresql/12/main/postgresql.conf\n                        ": "",
    "\n                            64\n                            64\n                        ": "",
    "\n                            -15\n                            -15\n                        ": "",
    "\n                            1048576\n                            1048576\n                        ": "",
    "\n                            100000\n                            100000\n                        ": "",
    "\n                            25\n                            25\n                        ": "",
    "\n                            1024\n                            1024\n                        ": "",
    "\n                            16\n                            16\n                        ": "",
    "\n                            32\n                            32\n                        ": "",
    "\n                            -2147483648\n                            -2147483648\n                        ": "",
    "\n                            10000\n                            10000\n                        ": "",
    "\n                            100\n                            100\n                        ": "",
    "\n                            0\n                            0\n                        ": "",
    "\n                            2\n                            2\n                        ": "",
    "\n                            10\n                            10\n                        ": "",
    "\n                            131072\n                            131072\n                        ": "",
    "\n                            8192\n                            8192\n                        ": "",
    "\n                            -1\n                            -1\n                        ": "",
    "\n                            30\n                            30\n                        ": "",
    "\n                            1\n                            1\n                        ": "",
    "\n                            120011\n                            120011\n                        ": "",
    "\n                            63\n                            63\n                        ": "",
    "\n                            If more than this total of pages and tuples in the same relation are locked by a connection, those locks are replaced by a relation-level lock.\n                            If more than this total of pages and tuples in the same relation are locked by a connection, those locks are replaced by a relation-level lock.\n                        ": "",
    "\n                            When turned on, expressions of the form expr = NULL (or NULL = expr) are treated as expr IS NULL, that is, they return true if expr evaluates to the null value, and false otherwise. The correct behavior of expr = NULL is to always return null (unknown).\n                            When turned on, expressions of the form expr = NULL (or NULL = expr) are treated as expr IS NULL, that is, they return true if expr evaluates to the null value, and false otherwise. The correct behavior of expr = NULL is to always return null (unknown).\n                        ": "",
    "\n                            When turned on, unquoted NULL in an array input value means a null value; otherwise it is taken literally.\n                            When turned on, unquoted NULL in an array input value means a null value; otherwise it is taken literally.\n                        ": "",
    "\n                            When enabled, row security will be applied to all users.\n                            When enabled, row security will be applied to all users.\n                        ": "",
    "\n                            This much memory can be used by each internal sort operation and hash table before switching to temporary disk files.\n                            This much memory can be used by each internal sort operation and hash table before switching to temporary disk files.\n                        ": "",
    "\n                            Unix-domain sockets use the usual Unix file system permission set. The parameter value is expected to be a numeric mode specification in the form accepted by the chmod and umask system calls. (To use the customary octal format the number must start with a 0 (zero).)\n                            Unix-domain sockets use the usual Unix file system permission set. The parameter value is expected to be a numeric mode specification in the form accepted by the chmod and umask system calls. (To use the customary octal format the number must start with a 0 (zero).)\n                        ": "",
    "\n                            Valid values are combinations of &quot;stderr&quot;, &quot;syslog&quot;, &quot;csvlog&quot;, and &quot;eventlog&quot;, depending on the platform.\n                            Valid values are combinations of &quot;stderr&quot;, &quot;syslog&quot;, &quot;csvlog&quot;, and &quot;eventlog&quot;, depending on the platform.\n                        ": "",
    "\n                            Zero prints all queries. -1 turns this feature off.\n                            Zero prints all queries. -1 turns this feature off.\n                        ": "",
    "\n                            If possible, run query using a parallel worker and with parallel restrictions.\n                            If possible, run query using a parallel worker and with parallel restrictions.\n                        ": "",
    "\n                            The owning user of the socket is always the user that starts the server.\n                            The owning user of the socket is always the user that starts the server.\n                        ": "",
    "\n                            Skips privilege checks when reading or modifying large objects, for compatibility with PostgreSQL releases prior to 9.0.\n                            Skips privilege checks when reading or modifying large objects, for compatibility with PostgreSQL releases prior to 9.0.\n                        ": "",
    "\n                            The server will use the fsync() system call in several places to make sure that updates are physically written to disk. This insures that a database cluster will recover to a consistent state after an operating system or hardware crash.\n                            The server will use the fsync() system call in several places to make sure that updates are physically written to disk. This insures that a database cluster will recover to a consistent state after an operating system or hardware crash.\n                        ": "",
    "\n                            Should gather nodes also run subplans, or just gather tuples?\n                            Should gather nodes also run subplans, or just gather tuples?\n                        ": "",
    "\n                            Zero logs all files. The default is -1 (turning this feature off).\n                            Zero logs all files. The default is -1 (turning this feature off).\n                        ": "",
    "\n                            Can be specified as relative to the data directory or as absolute path.\n                            Can be specified as relative to the data directory or as absolute path.\n                        ": "",
    "\n                            Table scans will be skipped if their constraints guarantee that no rows match the query.\n                            Table scans will be skipped if their constraints guarantee that no rows match the query.\n                        ": "",
    "\n                            This affects real, double precision, and geometric data types. A zero or negative parameter value is added to the standard number of digits (FLT_DIG or DBL_DIG as appropriate). Any value greater than zero selects precise output mode.\n                            This affects real, double precision, and geometric data types. A zero or negative parameter value is added to the standard number of digits (FLT_DIG or DBL_DIG as appropriate). Any value greater than zero selects precise output mode.\n                        ": "",
    "\n                            -1 disables optimization.\n                            -1 disables optimization.\n                        ": "",
    "\n                            -1 disables inlining.\n                            -1 disables inlining.\n                        ": "",
    "\n                            A value of -1 disables this feature.\n                            A value of -1 disables this feature.\n                        ": "",
    "\n                            Also controls interpretation of ambiguous date inputs.\n                            Also controls interpretation of ambiguous date inputs.\n                        ": "",
    "\n                            For RAID arrays, this should be approximately the number of drive spindles in the array.\n                            For RAID arrays, this should be approximately the number of drive spindles in the array.\n                        ": "",
    "\n                            -1 disables JIT compilation.\n                            -1 disables JIT compilation.\n                        ": "",
    "\n                            Each level includes all the levels that follow it. The later the level, the fewer messages are sent.\n                            Each level includes all the levels that follow it. The later the level, the fewer messages are sent.\n                        ": "",
    "\n                            -1 means no limit.\n                            -1 means no limit.\n                        ": "",
    "\n                            This applies to table columns that have not had a column-specific target set via ALTER TABLE SET STATISTICS.\n                            This applies to table columns that have not had a column-specific target set via ALTER TABLE SET STATISTICS.\n                        ": "",
    "\n                            Prepared statements can have custom and generic plans, and the planner will attempt to choose which is better.  This can be set to override the default behavior.\n                            Prepared statements can have custom and generic plans, and the planner will attempt to choose which is better.  This can be set to override the default behavior.\n                        ": "",
    "\n                            That is, the total size of the caches (kernel cache and shared buffers) used for PostgreSQL data files. This is measured in disk pages, which are normally 8 kB each.\n                            That is, the total size of the caches (kernel cache and shared buffers) used for PostgreSQL data files. This is measured in disk pages, which are normally 8 kB each.\n                        ": "",
    "\n                            It does not prevent updating the indexes, so it is safe to use.  The worst consequence is slowness.\n                            It does not prevent updating the indexes, so it is safe to use.  The worst consequence is slowness.\n                        ": "",
    "\n                            A page write in process during an operating system crash might be only partially written to disk.  During recovery, the row changes stored in WAL are not enough to recover.  This option writes pages when first modified after a checkpoint to WAL so full recovery is possible.\n                            A page write in process during an operating system crash might be only partially written to disk.  During recovery, the row changes stored in WAL are not enough to recover.  This option writes pages when first modified after a checkpoint to WAL so full recovery is possible.\n                        ": "",
    "\n                            The shared lock table is sized on the assumption that at most max_locks_per_transaction * max_connections distinct objects will need to be locked at any one time.\n                            The shared lock table is sized on the assumption that at most max_locks_per_transaction * max_connections distinct objects will need to be locked at any one time.\n                        ": "",
    "\n                            A value of 0 uses the system default.\n                            A value of 0 uses the system default.\n                        ": "",
    "\n                            If the planner estimates that it will read a number of index pages too small to reach this limit, a parallel scan will not be considered.\n                            If the planner estimates that it will read a number of index pages too small to reach this limit, a parallel scan will not be considered.\n                        ": "",
    "\n                            Enables the collection of information on the currently executing command of each session, along with the time at which that command began execution.\n                            Enables the collection of information on the currently executing command of each session, along with the time at which that command began execution.\n                        ": "",
    "\n                            By default, connection logs only show the IP address of the connecting host. If you want them to show the host name you can turn this on, but depending on your host name resolution setup it might impose a non-negligible performance penalty.\n                            By default, connection logs only show the IP address of the connecting host. If you want them to show the host name you can turn this on, but depending on your host name resolution setup it might impose a non-negligible performance penalty.\n                        ": "",
    "\n                            If blank, no prefix is used.\n                            If blank, no prefix is used.\n                        ": "",
    "\n                            Zero selects a suitable default value.\n                            Zero selects a suitable default value.\n                        ": "",
    "\n                            The parameter value is expected to be a numeric mode specification in the form accepted by the chmod and umask system calls. (To use the customary octal format the number must start with a 0 (zero).)\n                            The parameter value is expected to be a numeric mode specification in the form accepted by the chmod and umask system calls. (To use the customary octal format the number must start with a 0 (zero).)\n                        ": "",
    "\n                            A value of 0 turns off the timeout.\n                            A value of 0 turns off the timeout.\n                        ": "",
    "\n                            An empty string selects the database&apos;s default tablespace.\n                            An empty string selects the database&apos;s default tablespace.\n                        ": "",
    "\n                            The planner will merge subqueries into upper queries if the resulting FROM list would have no more than this many items.\n                            The planner will merge subqueries into upper queries if the resulting FROM list would have no more than this many items.\n                        ": "",
    "\n                            Write a message to the server log if checkpoints caused by the filling of checkpoint segment files happens more frequently than this number of seconds. Zero turns off the warning.\n                            Write a message to the server log if checkpoints caused by the filling of checkpoint segment files happens more frequently than this number of seconds. Zero turns off the warning.\n                        ": "",
    "\n                            If more than this number of tuples on the same page are locked by a connection, those locks are replaced by a page-level lock.\n                            If more than this number of tuples on the same page are locked by a connection, those locks are replaced by a page-level lock.\n                        ": "",
    "\n                            The planner will flatten explicit JOIN constructs into lists of FROM items whenever a list of no more than this many items would result.\n                            The planner will flatten explicit JOIN constructs into lists of FROM items whenever a list of no more than this many items would result.\n                        ": "",
    "\n                            Zero prints all actions. -1 turns autovacuum logging off.\n                            Zero prints all actions. -1 turns autovacuum logging off.\n                        ": "",
    "\n                            This algorithm attempts to do planning without exhaustive searching.\n                            This algorithm attempts to do planning without exhaustive searching.\n                        ": "",
    "\n                            This allows attaching a debugger to the process.\n                            This allows attaching a debugger to the process.\n                        ": "",
    "\n                            The shared predicate lock table is sized on the assumption that at most max_pred_locks_per_transaction * max_connections distinct objects will need to be locked at any one time.\n                            The shared predicate lock table is sized on the assumption that at most max_pred_locks_per_transaction * max_connections distinct objects will need to be locked at any one time.\n                        ": "",
    "\n                            If a dynamically loadable module needs to be opened and the specified name does not have a directory component (i.e., the name does not contain a slash), the system will search this path for the specified file.\n                            If a dynamically loadable module needs to be opened and the specified name does not have a directory component (i.e., the name does not contain a slash), the system will search this path for the specified file.\n                        ": "",
    "\n                            Full-page images will be logged for all data blocks and cross-checked against the results of WAL replay.\n                            Full-page images will be logged for all data blocks and cross-checked against the results of WAL replay.\n                        ": "",
    "\n                            Detection of a checksum failure normally causes PostgreSQL to report an error, aborting the current transaction. Setting ignore_checksum_failure to true causes the system to ignore the failure (but still report a warning), and continue processing. This behavior could cause crashes or other serious problems. Only has an effect if checksums are enabled.\n                            Detection of a checksum failure normally causes PostgreSQL to report an error, aborting the current transaction. Setting ignore_checksum_failure to true causes the system to ignore the failure (but still report a warning), and continue processing. This behavior could cause crashes or other serious problems. Only has an effect if checksums are enabled.\n                        ": "",
    "\n                            If the planner estimates that it will read a number of table pages too small to reach this limit, a parallel scan will not be considered.\n                            If the planner estimates that it will read a number of table pages too small to reach this limit, a parallel scan will not be considered.\n                        ": "",
    "\n                            Detection of a damaged page header normally causes PostgreSQL to report an error, aborting the current transaction. Setting zero_damaged_pages to true causes the system to instead report a warning, zero out the damaged page, and continue processing. This behavior will destroy data, namely all the rows on the damaged page.\n                            Detection of a damaged page header normally causes PostgreSQL to report an error, aborting the current transaction. Setting zero_damaged_pages to true causes the system to instead report a warning, zero out the damaged page, and continue processing. This behavior will destroy data, namely all the rows on the damaged page.\n                        ": "",
    "\n                            Enables updating of the process title every time a new SQL command is received by the server.\n                            Enables updating of the process title every time a new SQL command is received by the server.\n                        ": "",
    "\n                            Allows the query planner and executor to compare partition bounds to conditions in the query to determine which partitions must be scanned.\n                            Allows the query planner and executor to compare partition bounds to conditions in the query to determine which partitions must be scanned.\n                        ": "",
    "\n                            Logs all statements from a fraction of transactions. Use a value between 0.0 (never log) and 1.0 (log all statements for all transactions).\n                            Logs all statements from a fraction of transactions. Use a value between 0.0 (never log) and 1.0 (log all statements for all transactions).\n                        ": "",
    "\n                            This controls the number of consecutive keepalive retransmits that can be lost before a connection is considered dead. A value of 0 uses the system default.\n                            This controls the number of consecutive keepalive retransmits that can be lost before a connection is considered dead. A value of 0 uses the system default.\n                        ": "",
    "\n                            This includes operations such as VACUUM and CREATE INDEX.\n                            This includes operations such as VACUUM and CREATE INDEX.\n                        ": "",
    "\n                            The parameter value is a numeric mode specification in the form accepted by the chmod and umask system calls. (To use the customary octal format the number must start with a 0 (zero).)\n                            The parameter value is a numeric mode specification in the form accepted by the chmod and umask system calls. (To use the customary octal format the number must start with a 0 (zero).)\n                        ": "",
    "\n                            bonjour_name\n                            bonjour_name\n                        ": "",
    "\n                            escape_string_warning\n                            escape_string_warning\n                        ": "",
    "\n                            autovacuum_analyze_scale_factor\n                            autovacuum_analyze_scale_factor\n                        ": "",
    "\n                            from_collapse_limit\n                            from_collapse_limit\n                        ": "",
    "\n                            backend_flush_after\n                            backend_flush_after\n                        ": "",
    "\n                            trace_notify\n                            trace_notify\n                        ": "",
    "\n                            lock_timeout\n                            lock_timeout\n                        ": "",
    "\n                            max_function_args\n                            max_function_args\n                        ": "",
    "\n                            log_filename\n                            log_filename\n                        ": "",
    "\n                            work_mem\n                            work_mem\n                        ": "",
    "\n                            max_identifier_length\n                            max_identifier_length\n                        ": "",
    "\n                            syslog_sequence_numbers\n                            syslog_sequence_numbers\n                        ": "",
    "\n                            autovacuum_multixact_freeze_max_age\n                            autovacuum_multixact_freeze_max_age\n                        ": "",
    "\n                            wal_consistency_checking\n                            wal_consistency_checking\n                        ": "",
    "\n                            server_version\n                            server_version\n                        ": "",
    "\n                            min_parallel_index_scan_size\n                            min_parallel_index_scan_size\n                        ": "",
    "\n                            enable_tidscan\n                            enable_tidscan\n                        ": "",
    "\n                            wal_compression\n                            wal_compression\n                        ": "",
    "\n                            ident_file\n                            ident_file\n                        ": "",
    "\n                            ssl_ciphers\n                            ssl_ciphers\n                        ": "",
    "\n                            recovery_target_time\n                            recovery_target_time\n                        ": "",
    "\n                            server_version_num\n                            server_version_num\n                        ": "",
    "\n                            array_nulls\n                            array_nulls\n                        ": "",
    "\n                            full_page_writes\n                            full_page_writes\n                        ": "",
    "\n                            log_hostname\n                            log_hostname\n                        ": "",
    "\n                            trace_sort\n                            trace_sort\n                        ": "",
    "\n                            commit_delay\n                            commit_delay\n                        ": "",
    "\n                            geqo_selection_bias\n                            geqo_selection_bias\n                        ": "",
    "\n                            enable_hashagg\n                            enable_hashagg\n                        ": "",
    "\n                            ssl_ca_file\n                            ssl_ca_file\n                        ": "",
    "\n                            krb_caseins_users\n                            krb_caseins_users\n                        ": "",
    "\n                            restart_after_crash\n                            restart_after_crash\n                        ": "",
    "\n                            primary_conninfo\n                            primary_conninfo\n                        ": "",
    "\n                            wal_keep_segments\n                            wal_keep_segments\n                        ": "",
    "\n                            archive_command\n                            archive_command\n                        ": "",
    "\n                            vacuum_cost_page_hit\n                            vacuum_cost_page_hit\n                        ": "",
    "\n                            deadlock_timeout\n                            deadlock_timeout\n                        ": "",
    "\n                            debug_print_rewritten\n                            debug_print_rewritten\n                        ": "",
    "\n                            autovacuum_freeze_max_age\n                            autovacuum_freeze_max_age\n                        ": "",
    "\n                            max_files_per_process\n                            max_files_per_process\n                        ": "",
    "\n                            checkpoint_flush_after\n                            checkpoint_flush_after\n                        ": "",
    "\n                            ssl_cert_file\n                            ssl_cert_file\n                        ": "",
    "\n                            bytea_output\n                            bytea_output\n                        ": "",
    "\n                            geqo_seed\n                            geqo_seed\n                        ": "",
    "\n                            wal_retrieve_retry_interval\n                            wal_retrieve_retry_interval\n                        ": "",
    "\n                            geqo_effort\n                            geqo_effort\n                        ": "",
    "\n                            checkpoint_warning\n                            checkpoint_warning\n                        ": "",
    "\n                            track_activities\n                            track_activities\n                        ": "",
    "\n                            parallel_setup_cost\n                            parallel_setup_cost\n                        ": "",
    "\n                            timezone_abbreviations\n                            timezone_abbreviations\n                        ": "",
    "\n                            vacuum_freeze_table_age\n                            vacuum_freeze_table_age\n                        ": "",
    "\n                            track_io_timing\n                            track_io_timing\n                        ": "",
    "\n                            autovacuum_vacuum_cost_limit\n                            autovacuum_vacuum_cost_limit\n                        ": "",
    "\n                            vacuum_cost_page_miss\n                            vacuum_cost_page_miss\n                        ": "",
    "\n                            log_rotation_age\n                            log_rotation_age\n                        ": "",
    "\n                            ssl_crl_file\n                            ssl_crl_file\n                        ": "",
    "\n                            autovacuum\n                            autovacuum\n                        ": "",
    "\n                            superuser_reserved_connections\n                            superuser_reserved_connections\n                        ": "",
    "\n                            wal_writer_flush_after\n                            wal_writer_flush_after\n                        ": "",
    "\n                            data_directory_mode\n                            data_directory_mode\n                        ": "",
    "\n                            wal_buffers\n                            wal_buffers\n                        ": "",
    "\n                            parallel_tuple_cost\n                            parallel_tuple_cost\n                        ": "",
    "\n                            max_pred_locks_per_transaction\n                            max_pred_locks_per_transaction\n                        ": "",
    "\n                            log_file_mode\n                            log_file_mode\n                        ": "",
    "\n                            geqo_generations\n                            geqo_generations\n                        ": "",
    "\n                            syslog_facility\n                            syslog_facility\n                        ": "",
    "\n                            default_transaction_deferrable\n                            default_transaction_deferrable\n                        ": "",
    "\n                            maintenance_work_mem\n                            maintenance_work_mem\n                        ": "",
    "\n                            commit_siblings\n                            commit_siblings\n                        ": "",
    "\n                            recovery_target_timeline\n                            recovery_target_timeline\n                        ": "",
    "\n                            pre_auth_delay\n                            pre_auth_delay\n                        ": "",
    "\n                            min_wal_size\n                            min_wal_size\n                        ": "",
    "\n                            allow_system_table_mods\n                            allow_system_table_mods\n                        ": "",
    "\n                            vacuum_multixact_freeze_table_age\n                            vacuum_multixact_freeze_table_age\n                        ": "",
    "\n                            autovacuum_naptime\n                            autovacuum_naptime\n                        ": "",
    "\n                            log_destination\n                            log_destination\n                        ": "",
    "\n                            wal_receiver_timeout\n                            wal_receiver_timeout\n                        ": "",
    "\n                            cpu_operator_cost\n                            cpu_operator_cost\n                        ": "",
    "\n                            ssl_ecdh_curve\n                            ssl_ecdh_curve\n                        ": "",
    "\n                            ssl_prefer_server_ciphers\n                            ssl_prefer_server_ciphers\n                        ": "",
    "\n                            shared_buffers\n                            shared_buffers\n                        ": "",
    "\n                            autovacuum_vacuum_scale_factor\n                            autovacuum_vacuum_scale_factor\n                        ": "",
    "\n                            gin_fuzzy_search_limit\n                            gin_fuzzy_search_limit\n                        ": "",
    "\n                            log_error_verbosity\n                            log_error_verbosity\n                        ": "",
    "\n                            dynamic_shared_memory_type\n                            dynamic_shared_memory_type\n                        ": "",
    "\n                            recovery_target\n                            recovery_target\n                        ": "",
    "\n                            cpu_index_tuple_cost\n                            cpu_index_tuple_cost\n                        ": "",
    "\n                            post_auth_delay\n                            post_auth_delay\n                        ": "",
    "\n                            debug_print_parse\n                            debug_print_parse\n                        ": "",
    "\n                            integer_datetimes\n                            integer_datetimes\n                        ": "",
    "\n                            max_stack_depth\n                            max_stack_depth\n                        ": "",
    "\n                            trace_recovery_messages\n                            trace_recovery_messages\n                        ": "",
    "\n                            vacuum_cleanup_index_scale_factor\n                            vacuum_cleanup_index_scale_factor\n                        ": "",
    "\n                            enable_partitionwise_aggregate\n                            enable_partitionwise_aggregate\n                        ": "",
    "\n                            tcp_keepalives_interval\n                            tcp_keepalives_interval\n                        ": "",
    "\n                            cursor_tuple_fraction\n                            cursor_tuple_fraction\n                        ": "",
    "\n                            max_worker_processes\n                            max_worker_processes\n                        ": "",
    "\n                            restore_command\n                            restore_command\n                        ": "",
    "\n                            primary_slot_name\n                            primary_slot_name\n                        ": "",
    "\n                            hba_file\n                            hba_file\n                        ": "",
    "\n                            log_disconnections\n                            log_disconnections\n                        ": "",
    "\n                            tcp_user_timeout\n                            tcp_user_timeout\n                        ": "",
    "\n                            enable_material\n                            enable_material\n                        ": "",
    "\n                            tcp_keepalives_idle\n                            tcp_keepalives_idle\n                        ": "",
    "\n                            search_path\n                            search_path\n                        ": "",
    "\n                            log_duration\n                            log_duration\n                        ": "",
    "\n                            max_index_keys\n                            max_index_keys\n                        ": "",
    "\n                            lc_messages\n                            lc_messages\n                        ": "",
    "\n                            force_parallel_mode\n                            force_parallel_mode\n                        ": "",
    "\n                            debug_print_plan\n                            debug_print_plan\n                        ": "",
    "\n                            min_parallel_table_scan_size\n                            min_parallel_table_scan_size\n                        ": "",
    "\n                            enable_partition_pruning\n                            enable_partition_pruning\n                        ": "",
    "\n                            join_collapse_limit\n                            join_collapse_limit\n                        ": "",
    "\n                            huge_pages\n                            huge_pages\n                        ": "",
    "\n                            recovery_target_inclusive\n                            recovery_target_inclusive\n                        ": "",
    "\n                            vacuum_cost_page_dirty\n                            vacuum_cost_page_dirty\n                        ": "",
    "\n                            max_sync_workers_per_subscription\n                            max_sync_workers_per_subscription\n                        ": "",
    "\n                            enable_hashjoin\n                            enable_hashjoin\n                        ": "",
    "\n                            wal_writer_delay\n                            wal_writer_delay\n                        ": "",
    "\n                            geqo_threshold\n                            geqo_threshold\n                        ": "",
    "\n                            event_source\n                            event_source\n                        ": "",
    "\n                            row_security\n                            row_security\n                        ": "",
    "\n                            logging_collector\n                            logging_collector\n                        ": "",
    "\n                            geqo\n                            geqo\n                        ": "",
    "\n                            log_min_messages\n                            log_min_messages\n                        ": "",
    "\n                            lc_ctype\n                            lc_ctype\n                        ": "",
    "\n                            ignore_system_indexes\n                            ignore_system_indexes\n                        ": "",
    "\n                            ignore_checksum_failure\n                            ignore_checksum_failure\n                        ": "",
    "\n                            default_statistics_target\n                            default_statistics_target\n                        ": "",
    "\n                            temp_buffers\n                            temp_buffers\n                        ": "",
    "\n                            transaction_read_only\n                            transaction_read_only\n                        ": "",
    "\n                            standard_conforming_strings\n                            standard_conforming_strings\n                        ": "",
    "\n                            log_replication_commands\n                            log_replication_commands\n                        ": "",
    "\n                            track_functions\n                            track_functions\n                        ": "",
    "\n                            max_standby_streaming_delay\n                            max_standby_streaming_delay\n                        ": "",
    "\n                            config_file\n                            config_file\n                        ": "",
    "\n                            archive_timeout\n                            archive_timeout\n                        ": "",
    "\n                            idle_in_transaction_session_timeout\n                            idle_in_transaction_session_timeout\n                        ": "",
    "\n                            wal_sync_method\n                            wal_sync_method\n                        ": "",
    "\n                            enable_indexonlyscan\n                            enable_indexonlyscan\n                        ": "",
    "\n                            log_min_duration_statement\n                            log_min_duration_statement\n                        ": "",
    "\n                            default_table_access_method\n                            default_table_access_method\n                        ": "",
    "\n                            max_pred_locks_per_page\n                            max_pred_locks_per_page\n                        ": "",
    "\n                            effective_io_concurrency\n                            effective_io_concurrency\n                        ": "",
    "\n                            vacuum_freeze_min_age\n                            vacuum_freeze_min_age\n                        ": "",
    "\n                            max_locks_per_transaction\n                            max_locks_per_transaction\n                        ": "",
    "\n                            log_timezone\n                            log_timezone\n                        ": "",
    "\n                            transform_null_equals\n                            transform_null_equals\n                        ": "",
    "\n                            debug_assertions\n                            debug_assertions\n                        ": "",
    "\n                            bgwriter_flush_after\n                            bgwriter_flush_after\n                        ": "",
    "\n                            recovery_end_command\n                            recovery_end_command\n                        ": "",
    "\n                            zero_damaged_pages\n                            zero_damaged_pages\n                        ": "",
    "\n                            track_activity_query_size\n                            track_activity_query_size\n                        ": "",
    "\n                            archive_cleanup_command\n                            archive_cleanup_command\n                        ": "",
    "\n                            recovery_target_name\n                            recovery_target_name\n                        ": "",
    "\n                            xmloption\n                            xmloption\n                        ": "",
    "\n                            lc_time\n                            lc_time\n                        ": "",
    "\n                            DateStyle\n                            DateStyle\n                        ": "",
    "\n                            external_pid_file\n                            external_pid_file\n                        ": "",
    "\n                            cluster_name\n                            cluster_name\n                        ": "",
    "\n                            local_preload_libraries\n                            local_preload_libraries\n                        ": "",
    "\n                            max_replication_slots\n                            max_replication_slots\n                        ": "",
    "\n                            default_tablespace\n                            default_tablespace\n                        ": "",
    "\n                            seq_page_cost\n                            seq_page_cost\n                        ": "",
    "\n                            log_lock_waits\n                            log_lock_waits\n                        ": "",
    "\n                            effective_cache_size\n                            effective_cache_size\n                        ": "",
    "\n                            unix_socket_group\n                            unix_socket_group\n                        ": "",
    "\n                            max_parallel_workers_per_gather\n                            max_parallel_workers_per_gather\n                        ": "",
    "\n                            geqo_pool_size\n                            geqo_pool_size\n                        ": "",
    "\n                            jit_optimize_above_cost\n                            jit_optimize_above_cost\n                        ": "",
    "\n                            lc_collate\n                            lc_collate\n                        ": "",
    "\n                            dynamic_library_path\n                            dynamic_library_path\n                        ": "",
    "\n                            lc_numeric\n                            lc_numeric\n                        ": "",
    "\n                            constraint_exclusion\n                            constraint_exclusion\n                        ": "",
    "\n                            jit_expressions\n                            jit_expressions\n                        ": "",
    "\n                            ssl_key_file\n                            ssl_key_file\n                        ": "",
    "\n                            checkpoint_timeout\n                            checkpoint_timeout\n                        ": "",
    "\n                            session_preload_libraries\n                            session_preload_libraries\n                        ": "",
    "\n                            ssl_min_protocol_version\n                            ssl_min_protocol_version\n                        ": "",
    "\n                            cpu_tuple_cost\n                            cpu_tuple_cost\n                        ": "",
    "\n                            vacuum_cost_delay\n                            vacuum_cost_delay\n                        ": "",
    "\n                            unix_socket_permissions\n                            unix_socket_permissions\n                        ": "",
    "\n                            autovacuum_vacuum_cost_delay\n                            autovacuum_vacuum_cost_delay\n                        ": "",
    "\n                            operator_precedence_warning\n                            operator_precedence_warning\n                        ": "",
    "\n                            enable_sort\n                            enable_sort\n                        ": "",
    "\n                            jit_debugging_support\n                            jit_debugging_support\n                        ": "",
    "\n                            tcp_keepalives_count\n                            tcp_keepalives_count\n                        ": "",
    "\n                            enable_parallel_append\n                            enable_parallel_append\n                        ": "",
    "\n                            recovery_min_apply_delay\n                            recovery_min_apply_delay\n                        ": "",
    "\n                            lo_compat_privileges\n                            lo_compat_privileges\n                        ": "",
    "\n                            transaction_deferrable\n                            transaction_deferrable\n                        ": "",
    "\n                            wal_receiver_status_interval\n                            wal_receiver_status_interval\n                        ": "",
    "\n                            log_parser_stats\n                            log_parser_stats\n                        ": "",
    "\n                            segment_size\n                            segment_size\n                        ": "",
    "\n                            statement_timeout\n                            statement_timeout\n                        ": "",
    "\n                            max_prepared_transactions\n                            max_prepared_transactions\n                        ": "",
    "\n                            max_logical_replication_workers\n                            max_logical_replication_workers\n                        ": "",
    "\n                            log_transaction_sample_rate\n                            log_transaction_sample_rate\n                        ": "",
    "\n                            ssl_passphrase_command_supports_reload\n                            ssl_passphrase_command_supports_reload\n                        ": "",
    "\n                            vacuum_multixact_freeze_min_age\n                            vacuum_multixact_freeze_min_age\n                        ": "",
    "\n                            hot_standby_feedback\n                            hot_standby_feedback\n                        ": "",
    "\n                            enable_bitmapscan\n                            enable_bitmapscan\n                        ": "",
    "\n                            log_statement\n                            log_statement\n                        ": "",
    "\n                            server_encoding\n                            server_encoding\n                        ": "",
    "\n                            max_parallel_workers\n                            max_parallel_workers\n                        ": "",
    "\n                            temp_tablespaces\n                            temp_tablespaces\n                        ": "",
    "\n                            random_page_cost\n                            random_page_cost\n                        ": "",
    "\n                            block_size\n                            block_size\n                        ": "",
    "\n                            ssl_max_protocol_version\n                            ssl_max_protocol_version\n                        ": "",
    "\n                            stats_temp_directory\n                            stats_temp_directory\n                        ": "",
    "\n                            track_counts\n                            track_counts\n                        ": "",
    "\n                            data_sync_retry\n                            data_sync_retry\n                        ": "",
    "\n                            default_text_search_config\n                            default_text_search_config\n                        ": "",
    "\n                            vacuum_defer_cleanup_age\n                            vacuum_defer_cleanup_age\n                        ": "",
    "\n                            log_statement_stats\n                            log_statement_stats\n                        ": "",
    "\n                            shared_preload_libraries\n                            shared_preload_libraries\n                        ": "",
    "\n                            password_encryption\n                            password_encryption\n                        ": "",
    "\n                            wal_block_size\n                            wal_block_size\n                        ": "",
    "\n                            max_standby_archive_delay\n                            max_standby_archive_delay\n                        ": "",
    "\n                            bgwriter_lru_maxpages\n                            bgwriter_lru_maxpages\n                        ": "",
    "\n                            krb_server_keyfile\n                            krb_server_keyfile\n                        ": "",
    "\n                            log_rotation_size\n                            log_rotation_size\n                        ": "",
    "\n                            syslog_split_messages\n                            syslog_split_messages\n                        ": "",
    "\n                            ssl_dh_params_file\n                            ssl_dh_params_file\n                        ": "",
    "\n                            promote_trigger_file\n                            promote_trigger_file\n                        ": "",
    "\n                            enable_parallel_hash\n                            enable_parallel_hash\n                        ": "",
    "\n                            shared_memory_type\n                            shared_memory_type\n                        ": "",
    "\n                            recovery_target_xid\n                            recovery_target_xid\n                        ": "",
    "\n                            syslog_ident\n                            syslog_ident\n                        ": "",
    "\n                            default_transaction_read_only\n                            default_transaction_read_only\n                        ": "",
    "\n                            extra_float_digits\n                            extra_float_digits\n                        ": "",
    "\n                            enable_nestloop\n                            enable_nestloop\n                        ": "",
    "\n                            jit_profiling_support\n                            jit_profiling_support\n                        ": "",
    "\n                            gin_pending_list_limit\n                            gin_pending_list_limit\n                        ": "",
    "\n                            archive_mode\n                            archive_mode\n                        ": "",
    "\n                            transaction_isolation\n                            transaction_isolation\n                        ": "",
    "\n                            autovacuum_work_mem\n                            autovacuum_work_mem\n                        ": "",
    "\n                            client_min_messages\n                            client_min_messages\n                        ": "",
    "\n                            max_wal_size\n                            max_wal_size\n                        ": "",
    "\n                            max_connections\n                            max_connections\n                        ": "",
    "\n                            wal_level\n                            wal_level\n                        ": "",
    "\n                            recovery_target_lsn\n                            recovery_target_lsn\n                        ": "",
    "\n                            enable_seqscan\n                            enable_seqscan\n                        ": "",
    "\n                            unix_socket_directories\n                            unix_socket_directories\n                        ": "",
    "\n                            plan_cache_mode\n                            plan_cache_mode\n                        ": "",
    "\n                            fsync\n                            fsync\n                        ": "",
    "\n                            autovacuum_analyze_threshold\n                            autovacuum_analyze_threshold\n                        ": "",
    "\n                            ssl_library\n                            ssl_library\n                        ": "",
    "\n                            synchronize_seqscans\n                            synchronize_seqscans\n                        ": "",
    "\n                            IntervalStyle\n                            IntervalStyle\n                        ": "",
    "\n                            jit_inline_above_cost\n                            jit_inline_above_cost\n                        ": "",
    "\n                            default_transaction_isolation\n                            default_transaction_isolation\n                        ": "",
    "\n                            port\n                            port\n                        ": "",
    "\n                            log_checkpoints\n                            log_checkpoints\n                        ": "",
    "\n                            max_parallel_maintenance_workers\n                            max_parallel_maintenance_workers\n                        ": "",
    "\n                            listen_addresses\n                            listen_addresses\n                        ": "",
    "\n                            db_user_namespace\n                            db_user_namespace\n                        ": "",
    "\n                            authentication_timeout\n                            authentication_timeout\n                        ": "",
    "\n                            wal_sender_timeout\n                            wal_sender_timeout\n                        ": "",
    "\n                            session_replication_role\n                            session_replication_role\n                        ": "",
    "\n                            data_directory\n                            data_directory\n                        ": "",
    "\n                            vacuum_cost_limit\n                            vacuum_cost_limit\n                        ": "",
    "\n                            jit_provider\n                            jit_provider\n                        ": "",
    "\n                            check_function_bodies\n                            check_function_bodies\n                        ": "",
    "\n                            exit_on_error\n                            exit_on_error\n                        ": "",
    "\n                            synchronous_standby_names\n                            synchronous_standby_names\n                        ": "",
    "\n                            log_autovacuum_min_duration\n                            log_autovacuum_min_duration\n                        ": "",
    "\n                            debug_pretty_print\n                            debug_pretty_print\n                        ": "",
    "\n                            autovacuum_max_workers\n                            autovacuum_max_workers\n                        ": "",
    "\n                            jit_dump_bitcode\n                            jit_dump_bitcode\n                        ": "",
    "\n                            wal_segment_size\n                            wal_segment_size\n                        ": "",
    "\n                            log_planner_stats\n                            log_planner_stats\n                        ": "",
    "\n                            enable_indexscan\n                            enable_indexscan\n                        ": "",
    "\n                            old_snapshot_threshold\n                            old_snapshot_threshold\n                        ": "",
    "\n                            wal_init_zero\n                            wal_init_zero\n                        ": "",
    "\n                            log_executor_stats\n                            log_executor_stats\n                        ": "",
    "\n                            backslash_quote\n                            backslash_quote\n                        ": "",
    "\n                            enable_gathermerge\n                            enable_gathermerge\n                        ": "",
    "\n                            log_line_prefix\n                            log_line_prefix\n                        ": "",
    "\n                            synchronous_commit\n                            synchronous_commit\n                        ": "",
    "\n                            log_connections\n                            log_connections\n                        ": "",
    "\n                            quote_all_identifiers\n                            quote_all_identifiers\n                        ": "",
    "\n                            wal_log_hints\n                            wal_log_hints\n                        ": "",
    "\n                            max_pred_locks_per_relation\n                            max_pred_locks_per_relation\n                        ": "",
    "\n                            jit\n                            jit\n                        ": "",
    "\n                            update_process_title\n                            update_process_title\n                        ": "",
    "\n                            max_wal_senders\n                            max_wal_senders\n                        ": "",
    "\n                            jit_above_cost\n                            jit_above_cost\n                        ": "",
    "\n                            track_commit_timestamp\n                            track_commit_timestamp\n                        ": "",
    "\n                            data_checksums\n                            data_checksums\n                        ": "",
    "\n                            log_temp_files\n                            log_temp_files\n                        ": "",
    "\n                            log_min_error_statement\n                            log_min_error_statement\n                        ": "",
    "\n                            log_truncate_on_rotation\n                            log_truncate_on_rotation\n                        ": "",
    "\n                            lc_monetary\n                            lc_monetary\n                        ": "",
    "\n                            log_directory\n                            log_directory\n                        ": "",
    "\n                            enable_mergejoin\n                            enable_mergejoin\n                        ": "",
    "\n                            checkpoint_completion_target\n                            checkpoint_completion_target\n                        ": "",
    "\n                            parallel_leader_participation\n                            parallel_leader_participation\n                        ": "",
    "\n                            bonjour\n                            bonjour\n                        ": "",
    "\n                            hot_standby\n                            hot_standby\n                        ": "",
    "\n                            autovacuum_vacuum_threshold\n                            autovacuum_vacuum_threshold\n                        ": "",
    "\n                            bgwriter_lru_multiplier\n                            bgwriter_lru_multiplier\n                        ": "",
    "\n                            bgwriter_delay\n                            bgwriter_delay\n                        ": "",
    "\n                            xmlbinary\n                            xmlbinary\n                        ": "",
    "\n                            temp_file_limit\n                            temp_file_limit\n                        ": "",
    "\n                            client_encoding\n                            client_encoding\n                        ": "",
    "\n                            TimeZone\n                            TimeZone\n                        ": "",
    "\n                            wal_recycle\n                            wal_recycle\n                        ": "",
    "\n                            jit_tuple_deforming\n                            jit_tuple_deforming\n                        ": "",
    "\n                            enable_partitionwise_join\n                            enable_partitionwise_join\n                        ": "",
    "\n                            recovery_target_action\n                            recovery_target_action\n                        ": "",
    "\n                            ssl_passphrase_command\n                            ssl_passphrase_command\n                        ": "",
    "\n                            5\n                            5\n                        ": "",
    "\n                            30000\n                            30000\n                        ": "",
    "\n                            mmap\n                            mmap\n                        ": "",
    "\n                            heap\n                            heap\n                        ": "",
    "\n                            %m [%p] %q%u@%d \n                            %m [%p] %q%u@%d \n                        ": "",
    "\n                            4\n                            4\n                        ": "",
    "\n                            128\n                            128\n                        ": "",
    "\n                            notice\n                            notice\n                        ": "",
    "\n                            0.0025\n                            0.0025\n                        ": "",
    "\n                            &quot;$user&quot;, public\n                            &quot;$user&quot;, public\n                        ": "",
    "\n                            /etc/ssl/private/ssl-cert-snakeoil.key\n                            /etc/ssl/private/ssl-cert-snakeoil.key\n                        ": "",
    "\n                            content\n                            content\n                        ": "",
    "\n                            /etc/postgresql/12/main/pg_ident.conf\n                            /etc/postgresql/12/main/pg_ident.conf\n                        ": "",
    "\n                            /var/run/postgresql\n                            /var/run/postgresql\n                        ": "",
    "\n                            60000\n                            60000\n                        ": "",
    "\n                            3\n                            3\n                        ": "",
    "\n                            1440\n                            1440\n                        ": "",
    "\n                            posix\n                            posix\n                        ": "",
    "\n                            4096\n                            4096\n                        ": "",
    "\n                            12.11 (Ubuntu 12.11-0ubuntu0.20.04.1)\n                            12.11 (Ubuntu 12.11-0ubuntu0.20.04.1)\n                        ": "",
    "\n                            2048\n                            2048\n                        ": "",
    "\n                            20\n                            20\n                        ": "",
    "\n                            off\n                            off\n                        ": "",
    "\n                            FILE:/etc/postgresql-common/krb5.keytab\n                            FILE:/etc/postgresql-common/krb5.keytab\n                        ": "",
    "\n                            511\n                            511\n                        ": "",
    "\n                            stderr\n                            stderr\n                        ": "",
    "\n                            pg_catalog.english\n                            pg_catalog.english\n                        ": "",
    "\n                            0.005\n                            0.005\n                        ": "",
    "\n                            PostgreSQL\n                            PostgreSQL\n                        ": "",
    "\n                            log\n                            log\n                        ": "",
    "\n                            512\n                            512\n                        ": "",
    "\n                            OpenSSL\n                            OpenSSL\n                        ": "",
    "\n                            postgresql-%Y-%m-%d_%H%M%S.log\n                            postgresql-%Y-%m-%d_%H%M%S.log\n                        ": "",
    "\n                            origin\n                            origin\n                        ": "",
    "\n                            HIGH:MEDIUM:+3DES:!aNULL\n                            HIGH:MEDIUM:+3DES:!aNULL\n                        ": "",
    "\n                            hex\n                            hex\n                        ": "",
    "\n                            prime256v1\n                            prime256v1\n                        ": "",
    "\n                            partition\n                            partition\n                        ": "",
    "\n                            150000000\n                            150000000\n                        ": "",
    "\n                            auto\n                            auto\n                        ": "",
    "\n                            ISO, MDY\n                            ISO, MDY\n                        ": "",
    "\n                            5000000\n                            5000000\n                        ": "",
    "\n                            on\n                            on\n                        ": "",
    "\n                            pause\n                            pause\n                        ": "",
    "\n                            Default\n                            Default\n                        ": "",
    "\n                            /var/lib/postgresql/12/main\n                            /var/lib/postgresql/12/main\n                        ": "",
    "\n                            none\n                            none\n                        ": "",
    "\n                            UTF8\n                            UTF8\n                        ": "",
    "\n                            replica\n                            replica\n                        ": "",
    "\n                            fdatasync\n                            fdatasync\n                        ": "",
    "\n                            /var/run/postgresql/12-main.pid\n                            /var/run/postgresql/12-main.pid\n                        ": "",
    "\n                            80\n                            80\n                        ": "",
    "\n                            400000000\n                            400000000\n                        ": "",
    "\n                            /etc/postgresql/12/main/pg_hba.conf\n                            /etc/postgresql/12/main/pg_hba.conf\n                        ": "",
    "\n                            524288\n                            524288\n                        ": "",
    "\n                            8\n                            8\n                        ": "",
    "\n                            12\n                            12\n                        ": "",
    "\n                            /var/run/postgresql/12-main.pg_stat_tmp\n                            /var/run/postgresql/12-main.pg_stat_tmp\n                        ": "",
    "\n                            300\n                            300\n                        ": "",
    "\n                            0.5\n                            0.5\n                        ": "",
    "\n                            Etc/UTC\n                            Etc/UTC\n                        ": "",
    "\n                            0.1\n                            0.1\n                        ": "",
    "\n                            $libdir\n                            $libdir\n                        ": "",
    "\n                            try\n                            try\n                        ": "",
    "\n                            warning\n                            warning\n                        ": "",
    "\n                            0.01\n                            0.01\n                        ": "",
    "\n                            base64\n                            base64\n                        ": "",
    "\n                            0.2\n                            0.2\n                        ": "",
    "\n                            60\n                            60\n                        ": "",
    "\n                            500000\n                            500000\n                        ": "",
    "\n                            384\n                            384\n                        ": "",
    "\n                            safe_encoding\n                            safe_encoding\n                        ": "",
    "\n                            1000\n                            1000\n                        ": "",
    "\n                            5432\n                            5432\n                        ": "",
    "\n                            latest\n                            latest\n                        ": "",
    "\n                            50000000\n                            50000000\n                        ": "",
    "\n                            50\n                            50\n                        ": "",
    "\n                            localhost\n                            localhost\n                        ": "",
    "\n                            12/main\n                            12/main\n                        ": "",
    "\n                            read committed\n                            read committed\n                        ": "",
    "\n                            5000\n                            5000\n                        ": "",
    "\n                            10240\n                            10240\n                        ": "",
    "\n                            16777216\n                            16777216\n                        ": "",
    "\n                            -2\n                            -2\n                        ": "",
    "\n                            /etc/ssl/certs/ssl-cert-snakeoil.pem\n                            /etc/ssl/certs/ssl-cert-snakeoil.pem\n                        ": "",
    "\n                            200\n                            200\n                        ": "",
    "\n                            llvmjit\n                            llvmjit\n                        ": "",
    "\n                            16384\n                            16384\n                        ": "",
    "\n                            200000000\n                            200000000\n                        ": "",
    "\n                            65536\n                            65536\n                        ": "",
    "\n                            local0\n                            local0\n                        ": "",
    "\n                            TLSv1\n                            TLSv1\n                        ": "",
    "\n                            448\n                            448\n                        ": "",
    "\n                            SQL_ASCII\n                            SQL_ASCII\n                        ": "",
    "\n                            superuser-backend\n                            superuser-backend\n                        ": "",
    "\n                            sighup\n                            sighup\n                        ": "",
    "\n                            user\n                            user\n                        ": "",
    "\n                            backend\n                            backend\n                        ": "",
    "\n                            postmaster\n                            postmaster\n                        ": "",
    "\n                            Connections and Authentication / SSL\n                            Connections and Authentication / SSL\n                        ": "",
    "\n                            Resource Usage / Background Writer\n                            Resource Usage / Background Writer\n                        ": "",
    "\n                            Lock Management\n                            Lock Management\n                        ": "",
    "\n                            Reporting and Logging / Where to Log\n                            Reporting and Logging / Where to Log\n                        ": "",
    "\n                            Preset Options\n                            Preset Options\n                        ": "",
    "\n                            Version and Platform Compatibility / Previous PostgreSQL Versions\n                            Version and Platform Compatibility / Previous PostgreSQL Versions\n                        ": "",
    "\n                            Statistics / Monitoring\n                            Statistics / Monitoring\n                        ": "",
    "\n                            Resource Usage / Kernel Resources\n                            Resource Usage / Kernel Resources\n                        ": "",
    "\n                            Replication / Master Server\n                            Replication / Master Server\n                        ": "",
    "\n                            Connections and Authentication / Authentication\n                            Connections and Authentication / Authentication\n                        ": "",
    "\n                            Error Handling\n                            Error Handling\n                        ": "",
    "\n                            Replication\n                            Replication\n                        ": "",
    "\n                            Write-Ahead Log / Checkpoints\n                            Write-Ahead Log / Checkpoints\n                        ": "",
    "\n                            Replication / Standby Servers\n                            Replication / Standby Servers\n                        ": "",
    "\n                            Write-Ahead Log / Recovery Target\n                            Write-Ahead Log / Recovery Target\n                        ": "",
    "\n                            Developer Options\n                            Developer Options\n                        ": "",
    "\n                            Statistics / Query and Index Statistics Collector\n                            Statistics / Query and Index Statistics Collector\n                        ": "",
    "\n                            Query Tuning / Planner Cost Constants\n                            Query Tuning / Planner Cost Constants\n                        ": "",
    "\n                            Reporting and Logging / What to Log\n                            Reporting and Logging / What to Log\n                        ": "",
    "\n                            Autovacuum\n                            Autovacuum\n                        ": "",
    "\n                            Client Connection Defaults / Statement Behavior\n                            Client Connection Defaults / Statement Behavior\n                        ": "",
    "\n                            Query Tuning / Other Planner Options\n                            Query Tuning / Other Planner Options\n                        ": "",
    "\n                            Resource Usage / Cost-Based Vacuum Delay\n                            Resource Usage / Cost-Based Vacuum Delay\n                        ": "",
    "\n                            Process Title\n                            Process Title\n                        ": "",
    "\n                            Resource Usage / Asynchronous Behavior\n                            Resource Usage / Asynchronous Behavior\n                        ": "",
    "\n                            File Locations\n                            File Locations\n                        ": "",
    "\n                            Client Connection Defaults / Shared Library Preloading\n                            Client Connection Defaults / Shared Library Preloading\n                        ": "",
    "\n                            Resource Usage / Disk\n                            Resource Usage / Disk\n                        ": "",
    "\n                            Replication / Subscribers\n                            Replication / Subscribers\n                        ": "",
    "\n                            Replication / Sending Servers\n                            Replication / Sending Servers\n                        ": "",
    "\n                            Write-Ahead Log / Settings\n                            Write-Ahead Log / Settings\n                        ": "",
    "\n                            Query Tuning / Planner Method Configuration\n                            Query Tuning / Planner Method Configuration\n                        ": "",
    "\n                            Resource Usage / Memory\n                            Resource Usage / Memory\n                        ": "",
    "\n                            Client Connection Defaults / Other Defaults\n                            Client Connection Defaults / Other Defaults\n                        ": "",
    "\n                            Reporting and Logging / When to Log\n                            Reporting and Logging / When to Log\n                        ": "",
    "\n                            Client Connection Defaults / Locale and Formatting\n                            Client Connection Defaults / Locale and Formatting\n                        ": "",
    "\n                            Connections and Authentication / Connection Settings\n                            Connections and Authentication / Connection Settings\n                        ": "",
    "\n                            Write-Ahead Log / Archive Recovery\n                            Write-Ahead Log / Archive Recovery\n                        ": "",
    "\n                            Write-Ahead Log / Archiving\n                            Write-Ahead Log / Archiving\n                        ": "",
    "\n                            Version and Platform Compatibility / Other Platforms and Clients\n                            Version and Platform Compatibility / Other Platforms and Clients\n                        ": "",
    "\n                            Query Tuning / Genetic Query Optimizer\n                            Query Tuning / Genetic Query Optimizer\n                        ": "",
    "\n                            configuration file\n                            configuration file\n                        ": "",
    "\n                            client\n                            client\n                        ": "",
    "\n                            session\n                            session\n                        ": "",
    "\n                            environment variable\n                            environment variable\n                        ": "",
    "\n                            override\n                            override\n                        ": "",
    "\n                            MB\n                            MB\n                        ": "",
    "\n                            B\n                            B\n                        ": "",
    "\n                            kB\n                            kB\n                        ": "",
    "\n                            s\n                            s\n                        ": "",
    "\n                            min\n                            min\n                        ": "",
    "\n                            8kB\n                            8kB\n                        ": "",
    "\n                            9\n                            9\n                        ": "",
    "\n                            0600\n                            0600\n                        ": "",
    "\n                            (disabled)\n                            (disabled)\n                        ": "",
    "\n                            7200\n                            7200\n                        ": "",
    "\n                            0777\n                            0777\n                        ": "",
    "\n                            75\n                            75\n                        ": "",
    "\n                            0700\n                            0700\n                        ": "",
    "\n                            server.crt\n                            server.crt\n                        ": "",
    "\n                            %m [%p] \n                            %m [%p] \n                        ": "",
    "\n                            pg_catalog.simple\n                            pg_catalog.simple\n                        ": "",
    "\n                            server.key\n                            server.key\n                        ": "",
    "\n                            GMT\n                            GMT\n                        ": "",
    "\n                            pg_stat_tmp\n                            pg_stat_tmp\n                        ": "",
    "\n                            Sets the maximum number of parallel processes per executor node.\n                            Sets the maximum number of parallel processes per executor node.\n                        ": "",
    "\n                            Specifies a file name whose presence ends recovery in the standby.\n                            Specifies a file name whose presence ends recovery in the standby.\n                        ": "",
    "\n                            Sets the FROM-list size beyond which subqueries are not collapsed.\n                            Sets the FROM-list size beyond which subqueries are not collapsed.\n                        ": "",
    "\n                            Sets the locale for formatting numbers.\n                            Sets the locale for formatting numbers.\n                        ": "",
    "\n                            Forces a switch to the next WAL file if a new file has not been started within N seconds.\n                            Forces a switch to the next WAL file if a new file has not been started within N seconds.\n                        ": "",
    "\n                            Selects the shared memory implementation used for the main shared memory region.\n                            Selects the shared memory implementation used for the main shared memory region.\n                        ": "",
    "\n                            Time before a snapshot is too old to read pages changed after the snapshot was taken.\n                            Time before a snapshot is too old to read pages changed after the snapshot was taken.\n                        ": "",
    "\n                            Shows the number of pages per disk file.\n                            Shows the number of pages per disk file.\n                        ": "",
    "\n                            Enables the planner to use constraints to optimize queries.\n                            Enables the planner to use constraints to optimize queries.\n                        ": "",
    "\n                            Enables partitionwise join.\n                            Enables partitionwise join.\n                        ": "",
    "\n                            Sets the maximum allowed duration of any wait for a lock.\n                            Sets the maximum allowed duration of any wait for a lock.\n                        ": "",
    "\n                            Sets the tablespace(s) to use for temporary tables and sort files.\n                            Sets the tablespace(s) to use for temporary tables and sort files.\n                        ": "",
    "\n                            Sets the minimum execution time above which autovacuum actions will be logged.\n                            Sets the minimum execution time above which autovacuum actions will be logged.\n                        ": "",
    "\n                            Sets the time to wait on a lock before checking for deadlock.\n                            Sets the time to wait on a lock before checking for deadlock.\n                        ": "",
    "\n                            Sets the minimum SSL/TLS protocol version to use.\n                            Sets the minimum SSL/TLS protocol version to use.\n                        ": "",
    "\n                            Sets the application name used to identify PostgreSQL messages in the event log.\n                            Sets the application name used to identify PostgreSQL messages in the event log.\n                        ": "",
    "\n                            Number of transactions by which VACUUM and HOT cleanup should be deferred, if any.\n                            Number of transactions by which VACUUM and HOT cleanup should be deferred, if any.\n                        ": "",
    "\n                            Enables the planner&apos;s use of materialization.\n                            Enables the planner&apos;s use of materialization.\n                        ": "",
    "\n                            Sets the minimum amount of table data for a parallel scan.\n                            Sets the minimum amount of table data for a parallel scan.\n                        ": "",
    "\n                            Sets the minimum size to shrink the WAL to.\n                            Sets the minimum size to shrink the WAL to.\n                        ": "",
    "\n                            Sets the list of allowed SSL ciphers.\n                            Sets the list of allowed SSL ciphers.\n                        ": "",
    "\n                            Number of synchronous standbys and list of names of potential synchronous ones.\n                            Number of synchronous standbys and list of names of potential synchronous ones.\n                        ": "",
    "\n                            Enables the planner&apos;s use of hash join plans.\n                            Enables the planner&apos;s use of hash join plans.\n                        ": "",
    "\n                            Maximum number of logical replication worker processes.\n                            Maximum number of logical replication worker processes.\n                        ": "",
    "\n                            Write out LLVM bitcode to facilitate JIT debugging.\n                            Write out LLVM bitcode to facilitate JIT debugging.\n                        ": "",
    "\n                            Indents parse and plan tree displays.\n                            Indents parse and plan tree displays.\n                        ": "",
    "\n                            Allows archiving of WAL files using archive_command.\n                            Allows archiving of WAL files using archive_command.\n                        ": "",
    "\n                            Shows the collation order locale.\n                            Shows the collation order locale.\n                        ": "",
    "\n                            Sets the owning group of the Unix-domain socket.\n                            Sets the owning group of the Unix-domain socket.\n                        ": "",
    "\n                            Sets the default deferrable status of new transactions.\n                            Sets the default deferrable status of new transactions.\n                        ": "",
    "\n                            Sets the minimum execution time above which statements will be logged.\n                            Sets the minimum execution time above which statements will be logged.\n                        ": "",
    "\n                            Sets the maximum number of temporary buffers used by each session.\n                            Sets the maximum number of temporary buffers used by each session.\n                        ": "",
    "\n                            Register JIT compiled function with debugger.\n                            Register JIT compiled function with debugger.\n                        ": "",
    "\n                            Sets the maximum interval between WAL receiver status reports to the sending server.\n                            Sets the maximum interval between WAL receiver status reports to the sending server.\n                        ": "",
    "\n                            Logs each query&apos;s rewritten parse tree.\n                            Logs each query&apos;s rewritten parse tree.\n                        ": "",
    "\n                            Vacuum cost for a page not found in the buffer cache.\n                            Vacuum cost for a page not found in the buffer cache.\n                        ": "",
    "\n                            Sets the default statistics target.\n                            Sets the default statistics target.\n                        ": "",
    "\n                            Vacuum cost delay in milliseconds, for autovacuum.\n                            Vacuum cost delay in milliseconds, for autovacuum.\n                        ": "",
    "\n                            Sets the named restore point up to which recovery will proceed.\n                            Sets the named restore point up to which recovery will proceed.\n                        ": "",
    "\n                            Set the fraction of transactions to log for new transactions.\n                            Set the fraction of transactions to log for new transactions.\n                        ": "",
    "\n                            Sets the current transaction&apos;s read-only status.\n                            Sets the current transaction&apos;s read-only status.\n                        ": "",
    "\n                            Datetimes are integer based.\n                            Datetimes are integer based.\n                        ": "",
    "\n                            Enable synchronized sequential scans.\n                            Enable synchronized sequential scans.\n                        ": "",
    "\n                            Sets the minimum amount of index data for a parallel scan.\n                            Sets the minimum amount of index data for a parallel scan.\n                        ": "",
    "\n                            Truncate existing log files of same name during log rotation.\n                            Truncate existing log files of same name during log rotation.\n                        ": "",
    "\n                            Sets the destination directory for log files.\n                            Sets the destination directory for log files.\n                        ": "",
    "\n                            Sets the path for dynamically loadable modules.\n                            Sets the path for dynamically loadable modules.\n                        ": "",
    "\n                            Time between issuing TCP keepalives.\n                            Time between issuing TCP keepalives.\n                        ": "",
    "\n                            Collects information about executing commands.\n                            Collects information about executing commands.\n                        ": "",
    "\n                            Enables the planner&apos;s use of explicit sort steps.\n                            Enables the planner&apos;s use of explicit sort steps.\n                        ": "",
    "\n                            Causes &apos;...&apos; strings to treat backslashes literally.\n                            Causes &apos;...&apos; strings to treat backslashes literally.\n                        ": "",
    "\n                            Enables the planner&apos;s use of hashed aggregation plans.\n                            Enables the planner&apos;s use of hashed aggregation plans.\n                        ": "",
    "\n                            GEQO: number of iterations of the algorithm.\n                            GEQO: number of iterations of the algorithm.\n                        ": "",
    "\n                            Shows the block size in the write ahead log.\n                            Shows the block size in the write ahead log.\n                        ": "",
    "\n                            Sets the file name pattern for log files.\n                            Sets the file name pattern for log files.\n                        ": "",
    "\n                            Sets the number of WAL files held for standby servers.\n                            Sets the number of WAL files held for standby servers.\n                        ": "",
    "\n                            Sets the time zone for displaying and interpreting time stamps.\n                            Sets the time zone for displaying and interpreting time stamps.\n                        ": "",
    "\n                            Sets the name of the replication slot to use on the sending server.\n                            Sets the name of the replication slot to use on the sending server.\n                        ": "",
    "\n                            Enables the planner&apos;s use of TID scan plans.\n                            Enables the planner&apos;s use of TID scan plans.\n                        ": "",
    "\n                            Sets the Bonjour service name.\n                            Sets the Bonjour service name.\n                        ": "",
    "\n                            Enables the planner&apos;s use of gather merge plans.\n                            Enables the planner&apos;s use of gather merge plans.\n                        ": "",
    "\n                            Logs the duration of each completed SQL statement.\n                            Logs the duration of each completed SQL statement.\n                        ": "",
    "\n                            Enables advertising the server via Bonjour.\n                            Enables advertising the server via Bonjour.\n                        ": "",
    "\n                            Sets default text search configuration.\n                            Sets default text search configuration.\n                        ": "",
    "\n                            Causes all statements generating error at or above this level to be logged.\n                            Causes all statements generating error at or above this level to be logged.\n                        ": "",
    "\n                            Sets the threshold of FROM items beyond which GEQO is used.\n                            Sets the threshold of FROM items beyond which GEQO is used.\n                        ": "",
    "\n                            Vacuum cost delay in milliseconds.\n                            Vacuum cost delay in milliseconds.\n                        ": "",
    "\n                            Shows the maximum identifier length.\n                            Shows the maximum identifier length.\n                        ": "",
    "\n                            Whether to defer a read-only serializable transaction until it can be executed with no possible serialization failures.\n                            Whether to defer a read-only serializable transaction until it can be executed with no possible serialization failures.\n                        ": "",
    "\n                            Recycles WAL files by renaming them.\n                            Recycles WAL files by renaming them.\n                        ": "",
    "\n                            Vacuum cost for a page dirtied by vacuum.\n                            Vacuum cost for a page dirtied by vacuum.\n                        ": "",
    "\n                            Terminate session on any error.\n                            Terminate session on any error.\n                        ": "",
    "\n                            Sets the maximum number of predicate locks per transaction.\n                            Sets the maximum number of predicate locks per transaction.\n                        ": "",
    "\n                            Minimum age at which VACUUM should freeze a table row.\n                            Minimum age at which VACUUM should freeze a table row.\n                        ": "",
    "\n                            Writes parser performance statistics to the server log.\n                            Writes parser performance statistics to the server log.\n                        ": "",
    "\n                            Treats &quot;expr=NULL&quot; as &quot;expr IS NULL&quot;.\n                            Treats &quot;expr=NULL&quot; as &quot;expr IS NULL&quot;.\n                        ": "",
    "\n                            Enable row security.\n                            Enable row security.\n                        ": "",
    "\n                            Sets the time stamp up to which recovery will proceed.\n                            Sets the time stamp up to which recovery will proceed.\n                        ": "",
    "\n                            Give priority to server ciphersuite order.\n                            Give priority to server ciphersuite order.\n                        ": "",
    "\n                            Enables the planner&apos;s use of sequential-scan plans.\n                            Enables the planner&apos;s use of sequential-scan plans.\n                        ": "",
    "\n                            Time between TCP keepalive retransmits.\n                            Time between TCP keepalive retransmits.\n                        ": "",
    "\n                            Sets the maximum number of simultaneously running WAL sender processes.\n                            Sets the maximum number of simultaneously running WAL sender processes.\n                        ": "",
    "\n                            Shows the character classification and case conversion locale.\n                            Shows the character classification and case conversion locale.\n                        ": "",
    "\n                            Number of simultaneous requests that can be handled efficiently by the disk subsystem.\n                            Number of simultaneous requests that can be handled efficiently by the disk subsystem.\n                        ": "",
    "\n                            Writes planner performance statistics to the server log.\n                            Writes planner performance statistics to the server log.\n                        ": "",
    "\n                            Controls information prefixed to each log line.\n                            Controls information prefixed to each log line.\n                        ": "",
    "\n                            Minimum age at which VACUUM should freeze a MultiXactId in a table row.\n                            Minimum age at which VACUUM should freeze a MultiXactId in a table row.\n                        ": "",
    "\n                            Sets the maximum number of simultaneously prepared transactions.\n                            Sets the maximum number of simultaneously prepared transactions.\n                        ": "",
    "\n                            Sets the locale for formatting monetary amounts.\n                            Sets the locale for formatting monetary amounts.\n                        ": "",
    "\n                            Sets the maximum number of parallel workers that can be active at one time.\n                            Sets the maximum number of parallel workers that can be active at one time.\n                        ": "",
    "\n                            Multiple of the average buffer usage to free per round.\n                            Multiple of the average buffer usage to free per round.\n                        ": "",
    "\n                            Sets whether XML data in implicit parsing and serialization operations is to be considered as documents or content fragments.\n                            Sets whether XML data in implicit parsing and serialization operations is to be considered as documents or content fragments.\n                        ": "",
    "\n                            Compresses full-page writes written in WAL file.\n                            Compresses full-page writes written in WAL file.\n                        ": "",
    "\n                            Collects timing statistics for database I/O activity.\n                            Collects timing statistics for database I/O activity.\n                        ": "",
    "\n                            Sets the server&apos;s &quot;hba&quot; configuration file.\n                            Sets the server&apos;s &quot;hba&quot; configuration file.\n                        ": "",
    "\n                            Sets the server&apos;s &quot;ident&quot; configuration file.\n                            Sets the server&apos;s &quot;ident&quot; configuration file.\n                        ": "",
    "\n                            GEQO: effort is used to set the default for other GEQO parameters.\n                            GEQO: effort is used to set the default for other GEQO parameters.\n                        ": "",
    "\n                            Sets the directories where Unix-domain sockets will be created.\n                            Sets the directories where Unix-domain sockets will be created.\n                        ": "",
    "\n                            Number of tuple inserts prior to index cleanup as a fraction of reltuples.\n                            Number of tuple inserts prior to index cleanup as a fraction of reltuples.\n                        ": "",
    "\n                            Register JIT compiled function with perf profiler.\n                            Register JIT compiled function with perf profiler.\n                        ": "",
    "\n                            Sets the maximum number of predicate-locked pages and tuples per relation.\n                            Sets the maximum number of predicate-locked pages and tuples per relation.\n                        ": "",
    "\n                            Enables SSL connections.\n                            Enables SSL connections.\n                        ": "",
    "\n                            Sets the planner&apos;s estimate of the fraction of a cursor&apos;s rows that will be retrieved.\n                            Sets the planner&apos;s estimate of the fraction of a cursor&apos;s rows that will be retrieved.\n                        ": "",
    "\n                            Maximum number of concurrent worker processes.\n                            Maximum number of concurrent worker processes.\n                        ": "",
    "\n                            GEQO: number of individuals in the population.\n                            GEQO: number of individuals in the population.\n                        ": "",
    "\n                            Time between WAL flushes performed in the WAL writer.\n                            Time between WAL flushes performed in the WAL writer.\n                        ": "",
    "\n                            Writes the postmaster PID to the specified file.\n                            Writes the postmaster PID to the specified file.\n                        ": "",
    "\n                            Sets the planner&apos;s assumption about the total size of the data caches.\n                            Sets the planner&apos;s assumption about the total size of the data caches.\n                        ": "",
    "\n                            Location of the SSL server private key file.\n                            Location of the SSL server private key file.\n                        ": "",
    "\n                            Shows the maximum number of function arguments.\n                            Shows the maximum number of function arguments.\n                        ": "",
    "\n                            Background writer sleep time between rounds.\n                            Background writer sleep time between rounds.\n                        ": "",
    "\n                            Sets the location of the Kerberos server key file.\n                            Sets the location of the Kerberos server key file.\n                        ": "",
    "\n                            Writes zeroes to new WAL files before first use.\n                            Writes zeroes to new WAL files before first use.\n                        ": "",
    "\n                            Enables the planner&apos;s use of merge join plans.\n                            Enables the planner&apos;s use of merge join plans.\n                        ": "",
    "\n                            Sets the maximum memory to be used for query workspaces.\n                            Sets the maximum memory to be used for query workspaces.\n                        ": "",
    "\n                            Automatic log file rotation will occur after N minutes.\n                            Automatic log file rotation will occur after N minutes.\n                        ": "",
    "\n                            Location of the SSL server certificate file.\n                            Location of the SSL server certificate file.\n                        ": "",
    "\n                            Number of pages after which previously performed writes are flushed to disk.\n                            Number of pages after which previously performed writes are flushed to disk.\n                        ": "",
    "\n                            Sets the server&apos;s main configuration file.\n                            Sets the server&apos;s main configuration file.\n                        ": "",
    "\n                            Sets the action to perform upon reaching the recovery target.\n                            Sets the action to perform upon reaching the recovery target.\n                        ": "",
    "\n                            Sets the output format for bytea.\n                            Sets the output format for bytea.\n                        ": "",
    "\n                            Split messages sent to syslog by lines and to fit into 1024 bytes.\n                            Split messages sent to syslog by lines and to fit into 1024 bytes.\n                        ": "",
    "\n                            Collects function-level statistics on database activity.\n                            Collects function-level statistics on database activity.\n                        ": "",
    "\n                            Logs the host name in the connection logs.\n                            Logs the host name in the connection logs.\n                        ": "",
    "\n                            Shows the size of write ahead log segments.\n                            Shows the size of write ahead log segments.\n                        ": "",
    "\n                            Sets the shell command that will be called to archive a WAL file.\n                            Sets the shell command that will be called to archive a WAL file.\n                        ": "",
    "\n                            Sets the maximum time to wait for WAL replication.\n                            Sets the maximum time to wait for WAL replication.\n                        ": "",
    "\n                            GEQO: seed for random path selection.\n                            GEQO: seed for random path selection.\n                        ": "",
    "\n                            Background writer maximum number of LRU pages to flush per round.\n                            Background writer maximum number of LRU pages to flush per round.\n                        ": "",
    "\n                            Writes full pages to WAL when first modified after a checkpoint.\n                            Writes full pages to WAL when first modified after a checkpoint.\n                        ": "",
    "\n                            Automatic log file rotation will occur after N kilobytes.\n                            Automatic log file rotation will occur after N kilobytes.\n                        ": "",
    "\n                            Minimum number of tuple updates or deletes prior to vacuum.\n                            Minimum number of tuple updates or deletes prior to vacuum.\n                        ": "",
    "\n                            Enables the planner&apos;s use of parallel hash plans.\n                            Enables the planner&apos;s use of parallel hash plans.\n                        ": "",
    "\n                            Sets the planner&apos;s estimate of the cost of passing each tuple (row) from worker to master backend.\n                            Sets the planner&apos;s estimate of the cost of passing each tuple (row) from worker to master backend.\n                        ": "",
    "\n                            Vacuum cost amount available before napping.\n                            Vacuum cost amount available before napping.\n                        ": "",
    "\n                            Sets the shell command that will retrieve an archived WAL file.\n                            Sets the shell command that will retrieve an archived WAL file.\n                        ": "",
    "\n                            Selects a file of time zone abbreviations.\n                            Selects a file of time zone abbreviations.\n                        ": "",
    "\n                            Sets the maximum size of the pending list for GIN index.\n                            Sets the maximum size of the pending list for GIN index.\n                        ": "",
    "\n                            Logs end of a session, including duration.\n                            Logs end of a session, including duration.\n                        ": "",
    "\n                            Sets the maximum memory to be used for maintenance operations.\n                            Sets the maximum memory to be used for maintenance operations.\n                        ": "",
    "\n                            Sets the delay in microseconds between transaction commit and flushing WAL to disk.\n                            Sets the delay in microseconds between transaction commit and flushing WAL to disk.\n                        ": "",
    "\n                            Use of huge pages on Linux or Windows.\n                            Use of huge pages on Linux or Windows.\n                        ": "",
    "\n                            Shows the size of a disk block.\n                            Shows the size of a disk block.\n                        ": "",
    "\n                            Sets the file permissions for log files.\n                            Sets the file permissions for log files.\n                        ": "",
    "\n                            Sets the maximum number of concurrent connections.\n                            Sets the maximum number of concurrent connections.\n                        ": "",
    "\n                            Writes executor performance statistics to the server log.\n                            Writes executor performance statistics to the server log.\n                        ": "",
    "\n                            Reinitialize server after backend crash.\n                            Reinitialize server after backend crash.\n                        ": "",
    "\n                            Enables logging of recovery-related debugging information.\n                            Enables logging of recovery-related debugging information.\n                        ": "",
    "\n                            Sets the minimum delay for applying changes during recovery.\n                            Sets the minimum delay for applying changes during recovery.\n                        ": "",
    "\n                            When generating SQL fragments, quote all identifiers.\n                            When generating SQL fragments, quote all identifiers.\n                        ": "",
    "\n                            Sets the minimum concurrent open transactions before performing commit_delay.\n                            Sets the minimum concurrent open transactions before performing commit_delay.\n                        ": "",
    "\n                            Allows feedback from a hot standby to the primary that will avoid query conflicts.\n                            Allows feedback from a hot standby to the primary that will avoid query conflicts.\n                        ": "",
    "\n                            Enables the planner&apos;s use of index-scan plans.\n                            Enables the planner&apos;s use of index-scan plans.\n                        ": "",
    "\n                            Sets the curve to use for ECDH.\n                            Sets the curve to use for ECDH.\n                        ": "",
    "\n                            Sets the maximum allowed duration of any statement.\n                            Sets the maximum allowed duration of any statement.\n                        ": "",
    "\n                            Sets the number of disk-page buffers in shared memory for WAL.\n                            Sets the number of disk-page buffers in shared memory for WAL.\n                        ": "",
    "\n                            Sets the verbosity of logged messages.\n                            Sets the verbosity of logged messages.\n                        ": "",
    "\n                            Sets the program name used to identify PostgreSQL messages in syslog.\n                            Sets the program name used to identify PostgreSQL messages in syslog.\n                        ": "",
    "\n                            Warn about backslash escapes in ordinary string literals.\n                            Warn about backslash escapes in ordinary string literals.\n                        ": "",
    "\n                            Logs each query&apos;s parse tree.\n                            Logs each query&apos;s parse tree.\n                        ": "",
    "\n                            Age at which to autovacuum a table to prevent transaction ID wraparound.\n                            Age at which to autovacuum a table to prevent transaction ID wraparound.\n                        ": "",
    "\n                            Sets the shell command that will be executed at every restart point.\n                            Sets the shell command that will be executed at every restart point.\n                        ": "",
    "\n                            Sets the shell command that will be executed once at the end of recovery.\n                            Sets the shell command that will be executed once at the end of recovery.\n                        ": "",
    "\n                            Log the use of temporary files larger than this number of kilobytes.\n                            Log the use of temporary files larger than this number of kilobytes.\n                        ": "",
    "\n                            Shows the server version as an integer.\n                            Shows the server version as an integer.\n                        ": "",
    "\n                            Start a subprocess to capture stderr output and/or csvlogs into log files.\n                            Start a subprocess to capture stderr output and/or csvlogs into log files.\n                        ": "",
    "\n                            Sets the message levels that are logged.\n                            Sets the message levels that are logged.\n                        ": "",
    "\n                            Allow JIT compilation of tuple deforming.\n                            Allow JIT compilation of tuple deforming.\n                        ": "",
    "\n                            Enables genetic query optimization.\n                            Enables genetic query optimization.\n                        ": "",
    "\n                            Sets the default table access method for new tables.\n                            Sets the default table access method for new tables.\n                        ": "",
    "\n                            Maximum number of table synchronization workers per subscription.\n                            Maximum number of table synchronization workers per subscription.\n                        ": "",
    "\n                            Shows the maximum number of index keys.\n                            Shows the maximum number of index keys.\n                        ": "",
    "\n                            Sets whether Kerberos and GSSAPI user names should be treated as case-insensitive.\n                            Sets whether Kerberos and GSSAPI user names should be treated as case-insensitive.\n                        ": "",
    "\n                            Location of the SSL certificate revocation list file.\n                            Location of the SSL certificate revocation list file.\n                        ": "",
    "\n                            Shows whether the running server has assertion checks enabled.\n                            Shows whether the running server has assertion checks enabled.\n                        ": "",
    "\n                            Multixact age at which to autovacuum a table to prevent multixact wraparound.\n                            Multixact age at which to autovacuum a table to prevent multixact wraparound.\n                        ": "",
    "\n                            Enables per-database user names.\n                            Enables per-database user names.\n                        ": "",
    "\n                            Sets the transaction isolation level of each new transaction.\n                            Sets the transaction isolation level of each new transaction.\n                        ": "",
    "\n                            Logs long lock waits.\n                            Logs long lock waits.\n                        ": "",
    "\n                            Controls whether Gather and Gather Merge also run subplans.\n                            Controls whether Gather and Gather Merge also run subplans.\n                        ": "",
    "\n                            Sets the current transaction&apos;s synchronization level.\n                            Sets the current transaction&apos;s synchronization level.\n                        ": "",
    "\n                            Sets the maximum memory to be used by each autovacuum worker process.\n                            Sets the maximum memory to be used by each autovacuum worker process.\n                        ": "",
    "\n                            Collects statistics on database activity.\n                            Collects statistics on database activity.\n                        ": "",
    "\n                            Enables the planner&apos;s use of nested-loop join plans.\n                            Enables the planner&apos;s use of nested-loop join plans.\n                        ": "",
    "\n                            Sets the server (database) character set encoding.\n                            Sets the server (database) character set encoding.\n                        ": "",
    "\n                            Sets the maximum number of simultaneously running autovacuum worker processes.\n                            Sets the maximum number of simultaneously running autovacuum worker processes.\n                        ": "",
    "\n                            Vacuum cost amount available before napping, for autovacuum.\n                            Vacuum cost amount available before napping, for autovacuum.\n                        ": "",
    "\n                            Sets the application name to be reported in statistics and logs.\n                            Sets the application name to be reported in statistics and logs.\n                        ": "",
    "\n                            Location of the SSL certificate authority file.\n                            Location of the SSL certificate authority file.\n                        ": "",
    "\n                            Enables warnings if checkpoint segments are filled more frequently than this.\n                            Enables warnings if checkpoint segments are filled more frequently than this.\n                        ": "",
    "\n                            Lists shared libraries to preload into each backend.\n                            Lists shared libraries to preload into each backend.\n                        ": "",
    "\n                            TCP user timeout.\n                            TCP user timeout.\n                        ": "",
    "\n                            Sets the number of shared memory buffers used by the server.\n                            Sets the number of shared memory buffers used by the server.\n                        ": "",
    "\n                            Lists shared libraries to preload into server.\n                            Lists shared libraries to preload into server.\n                        ": "",
    "\n                            Sets the time to wait before retrying to retrieve WAL after a failed attempt.\n                            Sets the time to wait before retrying to retrieve WAL after a failed attempt.\n                        ": "",
    "\n                            Sets the default tablespace to create tables and indexes in.\n                            Sets the default tablespace to create tables and indexes in.\n                        ": "",
    "\n                            Sets the number of connection slots reserved for superusers.\n                            Sets the number of connection slots reserved for superusers.\n                        ": "",
    "\n                            Sets the maximum allowed duration of any idling transaction.\n                            Sets the maximum allowed duration of any idling transaction.\n                        ": "",
    "\n                            Sets whether to include or exclude transaction with recovery target.\n                            Sets whether to include or exclude transaction with recovery target.\n                        ": "",
    "\n                            Command to obtain passphrases for SSL.\n                            Command to obtain passphrases for SSL.\n                        ": "",
    "\n                            Enables backward compatibility mode for privilege checks on large objects.\n                            Enables backward compatibility mode for privilege checks on large objects.\n                        ": "",
    "\n                            Enables plan-time and run-time partition pruning.\n                            Enables plan-time and run-time partition pruning.\n                        ": "",
    "\n                            Sets the current transaction&apos;s isolation level.\n                            Sets the current transaction&apos;s isolation level.\n                        ": "",
    "\n                            Minimum number of tuple inserts, updates, or deletes prior to analyze.\n                            Minimum number of tuple inserts, updates, or deletes prior to analyze.\n                        ": "",
    "\n                            Age at which VACUUM should scan whole table to freeze tuples.\n                            Age at which VACUUM should scan whole table to freeze tuples.\n                        ": "",
    "\n                            Also use ssl_passphrase_command during server reload.\n                            Also use ssl_passphrase_command during server reload.\n                        ": "",
    "\n                            Sets the connection string to be used to connect to the sending server.\n                            Sets the connection string to be used to connect to the sending server.\n                        ": "",
    "\n                            JIT provider to use.\n                            JIT provider to use.\n                        ": "",
    "\n                            Disables reading from system indexes.\n                            Disables reading from system indexes.\n                        ": "",
    "\n                            Logs each checkpoint.\n                            Logs each checkpoint.\n                        ": "",
    "\n                            Time spent flushing dirty buffers during checkpoint, as fraction of checkpoint interval.\n                            Time spent flushing dirty buffers during checkpoint, as fraction of checkpoint interval.\n                        ": "",
    "\n                            Sets the LSN of the write-ahead log location up to which recovery will proceed.\n                            Sets the LSN of the write-ahead log location up to which recovery will proceed.\n                        ": "",
    "\n                            Waits N seconds on connection startup after authentication.\n                            Waits N seconds on connection startup after authentication.\n                        ": "",
    "\n                            Sets the maximum number of locks per transaction.\n                            Sets the maximum number of locks per transaction.\n                        ": "",
    "\n                            Lists unprivileged shared libraries to preload into each backend.\n                            Lists unprivileged shared libraries to preload into each backend.\n                        ": "",
    "\n                            Sets the planner&apos;s estimate of the cost of a sequentially fetched disk page.\n                            Sets the planner&apos;s estimate of the cost of a sequentially fetched disk page.\n                        ": "",
    "\n                            Enable input of NULL elements in arrays.\n                            Enable input of NULL elements in arrays.\n                        ": "",
    "\n                            Sets the client&apos;s character set encoding.\n                            Sets the client&apos;s character set encoding.\n                        ": "",
    "\n                            Sets the host name or IP address(es) to listen to.\n                            Sets the host name or IP address(es) to listen to.\n                        ": "",
    "\n                            Vacuum cost for a page found in the buffer cache.\n                            Vacuum cost for a page found in the buffer cache.\n                        ": "",
    "\n                            Sets the default read-only status of new transactions.\n                            Sets the default read-only status of new transactions.\n                        ": "",
    "\n                            Sets the session&apos;s behavior for triggers and rewrite rules.\n                            Sets the session&apos;s behavior for triggers and rewrite rules.\n                        ": "",
    "\n                            Sets the FROM-list size beyond which JOIN constructs are not flattened.\n                            Sets the FROM-list size beyond which JOIN constructs are not flattened.\n                        ": "",
    "\n                            Sets the maximum allowed result for exact search by GIN.\n                            Sets the maximum allowed result for exact search by GIN.\n                        ": "",
    "\n                            Sets the planner&apos;s estimate of the cost of processing each index entry during an index scan.\n                            Sets the planner&apos;s estimate of the cost of processing each index entry during an index scan.\n                        ": "",
    "\n                            Sets the syslog &quot;facility&quot; to be used when syslog enabled.\n                            Sets the syslog &quot;facility&quot; to be used when syslog enabled.\n                        ": "",
    "\n                            Sets the server&apos;s data directory.\n                            Sets the server&apos;s data directory.\n                        ": "",
    "\n                            Enables the planner&apos;s use of bitmap-scan plans.\n                            Enables the planner&apos;s use of bitmap-scan plans.\n                        ": "",
    "\n                            Selects the method used for forcing WAL updates to disk.\n                            Selects the method used for forcing WAL updates to disk.\n                        ": "",
    "\n                            Sets the maximum allowed time to complete client authentication.\n                            Sets the maximum allowed time to complete client authentication.\n                        ": "",
    "\n                            Emit a warning for constructs that changed meaning since PostgreSQL 9.4.\n                            Emit a warning for constructs that changed meaning since PostgreSQL 9.4.\n                        ": "",
    "\n                            Continues processing past damaged page headers.\n                            Continues processing past damaged page headers.\n                        ": "",
    "\n                            Perform JIT compilation if query is more expensive.\n                            Perform JIT compilation if query is more expensive.\n                        ": "",
    "\n                            Set to &quot;immediate&quot; to end recovery as soon as a consistent state is reached.\n                            Set to &quot;immediate&quot; to end recovery as soon as a consistent state is reached.\n                        ": "",
    "\n                            Allows modifications of the structure of system tables.\n                            Allows modifications of the structure of system tables.\n                        ": "",
    "\n                            Whether to continue running after a failure to sync data files.\n                            Whether to continue running after a failure to sync data files.\n                        ": "",
    "\n                            Writes full pages to WAL when first modified after a checkpoint, even for a non-critical modification.\n                            Writes full pages to WAL when first modified after a checkpoint, even for a non-critical modification.\n                        ": "",
    "\n                            Sets the access permissions of the Unix-domain socket.\n                            Sets the access permissions of the Unix-domain socket.\n                        ": "",
    "\n                            Waits N seconds on connection startup before authentication.\n                            Waits N seconds on connection startup before authentication.\n                        ": "",
    "\n                            Sets the maximum wait time to receive data from the sending server.\n                            Sets the maximum wait time to receive data from the sending server.\n                        ": "",
    "\n                            Generates debugging output for LISTEN and NOTIFY.\n                            Generates debugging output for LISTEN and NOTIFY.\n                        ": "",
    "\n                            Logs each successful connection.\n                            Logs each successful connection.\n                        ": "",
    "\n                            Writes temporary statistics files to the specified directory.\n                            Writes temporary statistics files to the specified directory.\n                        ": "",
    "\n                            Controls the planner&apos;s selection of custom or generic plan.\n                            Controls the planner&apos;s selection of custom or generic plan.\n                        ": "",
    "\n                            Collects transaction commit time.\n                            Collects transaction commit time.\n                        ": "",
    "\n                            Set the level of information written to the WAL.\n                            Set the level of information written to the WAL.\n                        ": "",
    "\n                            Logs each query&apos;s execution plan.\n                            Logs each query&apos;s execution plan.\n                        ": "",
    "\n                            Sets the maximum delay before canceling queries when a hot standby server is processing archived WAL data.\n                            Sets the maximum delay before canceling queries when a hot standby server is processing archived WAL data.\n                        ": "",
    "\n                            Sets the maximum number of predicate-locked tuples per page.\n                            Sets the maximum number of predicate-locked tuples per page.\n                        ": "",
    "\n                            Sets the planner&apos;s estimate of the cost of starting up worker processes for parallel query.\n                            Sets the planner&apos;s estimate of the cost of starting up worker processes for parallel query.\n                        ": "",
    "\n                            Sets the planner&apos;s estimate of the cost of processing each operator or function call.\n                            Sets the planner&apos;s estimate of the cost of processing each operator or function call.\n                        ": "",
    "\n                            Sets the maximum number of simultaneously open files for each server process.\n                            Sets the maximum number of simultaneously open files for each server process.\n                        ": "",
    "\n                            Selects the dynamic shared memory implementation used.\n                            Selects the dynamic shared memory implementation used.\n                        ": "",
    "\n                            Location of the SSL DH parameters file.\n                            Location of the SSL DH parameters file.\n                        ": "",
    "\n                            Sets the maximum number of parallel processes per maintenance operation.\n                            Sets the maximum number of parallel processes per maintenance operation.\n                        ": "",
    "\n                            Updates the process title to show the active SQL command.\n                            Updates the process title to show the active SQL command.\n                        ": "",
    "\n                            Writes cumulative performance statistics to the server log.\n                            Writes cumulative performance statistics to the server log.\n                        ": "",
    "\n                            Sets the maximum time between automatic WAL checkpoints.\n                            Sets the maximum time between automatic WAL checkpoints.\n                        ": "",
    "\n                            Sets the number of digits displayed for floating-point values.\n                            Sets the number of digits displayed for floating-point values.\n                        ": "",
    "\n                            Enables the planner&apos;s use of index-only-scan plans.\n                            Enables the planner&apos;s use of index-only-scan plans.\n                        ": "",
    "\n                            Sets the name of the cluster, which is included in the process title.\n                            Sets the name of the cluster, which is included in the process title.\n                        ": "",
    "\n                            Sets the maximum SSL/TLS protocol version to use.\n                            Sets the maximum SSL/TLS protocol version to use.\n                        ": "",
    "\n                            Sets the time zone to use in log messages.\n                            Sets the time zone to use in log messages.\n                        ": "",
    "\n                            GEQO: selective pressure within the population.\n                            GEQO: selective pressure within the population.\n                        ": "",
    "\n                            Multixact age at which VACUUM should scan whole table to freeze tuples.\n                            Multixact age at which VACUUM should scan whole table to freeze tuples.\n                        ": "",
    "\n                            Sets the WAL size that triggers a checkpoint.\n                            Sets the WAL size that triggers a checkpoint.\n                        ": "",
    "\n                            Sets the maximum delay before canceling queries when a hot standby server is processing streamed WAL data.\n                            Sets the maximum delay before canceling queries when a hot standby server is processing streamed WAL data.\n                        ": "",
    "\n                            Shows the server version.\n                            Shows the server version.\n                        ": "",
    "\n                            Sets the destination for server log output.\n                            Sets the destination for server log output.\n                        ": "",
    "\n                            Specifies the timeline to recover into.\n                            Specifies the timeline to recover into.\n                        ": "",
    "\n                            Enables the planner&apos;s use of parallel append plans.\n                            Enables the planner&apos;s use of parallel append plans.\n                        ": "",
    "\n                            Check function bodies during CREATE FUNCTION.\n                            Check function bodies during CREATE FUNCTION.\n                        ": "",
    "\n                            Maximum number of TCP keepalive retransmits.\n                            Maximum number of TCP keepalive retransmits.\n                        ": "",
    "\n                            Sets the display format for interval values.\n                            Sets the display format for interval values.\n                        ": "",
    "\n                            Allow JIT compilation of expressions.\n                            Allow JIT compilation of expressions.\n                        ": "",
    "\n                            Shows whether data checksums are turned on for this cluster.\n                            Shows whether data checksums are turned on for this cluster.\n                        ": "",
    "\n                            Sets the type of statements logged.\n                            Sets the type of statements logged.\n                        ": "",
    "\n                            Continues processing after a checksum failure.\n                            Continues processing after a checksum failure.\n                        ": "",
    "\n                            Sets the display format for date and time values.\n                            Sets the display format for date and time values.\n                        ": "",
    "\n                            Sets the WAL resource managers for which WAL consistency checks are done.\n                            Sets the WAL resource managers for which WAL consistency checks are done.\n                        ": "",
    "\n                            Name of the SSL library.\n                            Name of the SSL library.\n                        ": "",
    "\n                            Sets the transaction ID up to which recovery will proceed.\n                            Sets the transaction ID up to which recovery will proceed.\n                        ": "",
    "\n                            Enables partitionwise aggregation and grouping.\n                            Enables partitionwise aggregation and grouping.\n                        ": "",
    "\n                            Allow JIT compilation.\n                            Allow JIT compilation.\n                        ": "",
    "\n                            Limits the total size of all temporary files used by each process.\n                            Limits the total size of all temporary files used by each process.\n                        ": "",
    "\n                            Sets the locale for formatting date and time values.\n                            Sets the locale for formatting date and time values.\n                        ": "",
    "\n                            Starts the autovacuum subprocess.\n                            Starts the autovacuum subprocess.\n                        ": "",
    "\n                            Sets the message levels that are sent to the client.\n                            Sets the message levels that are sent to the client.\n                        ": "",
    "\n                            Sets whether &quot;\\&apos;&quot; is allowed in string literals.\n                            Sets whether &quot;\\&apos;&quot; is allowed in string literals.\n                        ": "",
    "\n                            Chooses the algorithm for encrypting passwords.\n                            Chooses the algorithm for encrypting passwords.\n                        ": "",
    "\n                            Perform JIT inlining if query is more expensive.\n                            Perform JIT inlining if query is more expensive.\n                        ": "",
    "\n                            Forces use of parallel query facilities.\n                            Forces use of parallel query facilities.\n                        ": "",
    "\n                            Time to sleep between autovacuum runs.\n                            Time to sleep between autovacuum runs.\n                        ": "",
    "\n                            Sets the maximum stack depth, in kilobytes.\n                            Sets the maximum stack depth, in kilobytes.\n                        ": "",
    "\n                            Add sequence number to syslog messages to avoid duplicate suppression.\n                            Add sequence number to syslog messages to avoid duplicate suppression.\n                        ": "",
    "\n                            Emit information about resource usage in sorting.\n                            Emit information about resource usage in sorting.\n                        ": "",
    "\n                            Sets the TCP port the server listens on.\n                            Sets the TCP port the server listens on.\n                        ": "",
    "\n                            Sets the maximum number of simultaneously defined replication slots.\n                            Sets the maximum number of simultaneously defined replication slots.\n                        ": "",
    "\n                            Sets the size reserved for pg_stat_activity.query, in bytes.\n                            Sets the size reserved for pg_stat_activity.query, in bytes.\n                        ": "",
    "\n                            Amount of WAL written out by WAL writer that triggers a flush.\n                            Amount of WAL written out by WAL writer that triggers a flush.\n                        ": "",
    "\n                            Optimize JITed functions if query is more expensive.\n                            Optimize JITed functions if query is more expensive.\n                        ": "",
    "\n                            Mode of the data directory.\n                            Mode of the data directory.\n                        ": "",
    "\n                            Sets the planner&apos;s estimate of the cost of processing each tuple (row).\n                            Sets the planner&apos;s estimate of the cost of processing each tuple (row).\n                        ": "",
    "\n                            Number of tuple inserts, updates, or deletes prior to analyze as a fraction of reltuples.\n                            Number of tuple inserts, updates, or deletes prior to analyze as a fraction of reltuples.\n                        ": "",
    "\n                            Sets how binary values are to be encoded in XML.\n                            Sets how binary values are to be encoded in XML.\n                        ": "",
    "\n                            Sets the schema search order for names that are not schema-qualified.\n                            Sets the schema search order for names that are not schema-qualified.\n                        ": "",
    "\n                            Number of tuple updates or deletes prior to vacuum as a fraction of reltuples.\n                            Number of tuple updates or deletes prior to vacuum as a fraction of reltuples.\n                        ": "",
    "\n                            Sets the planner&apos;s estimate of the cost of a nonsequentially fetched disk page.\n                            Sets the planner&apos;s estimate of the cost of a nonsequentially fetched disk page.\n                        ": "",
    "\n                            Sets the language in which messages are displayed.\n                            Sets the language in which messages are displayed.\n                        ": "",
    "\n                            Logs each replication command.\n                            Logs each replication command.\n                        ": "",
    "\n                            Allows connections and queries during recovery.\n                            Allows connections and queries during recovery.\n                        ": "",
    "\n                            Forces synchronization of updates to disk.\n                            Forces synchronization of updates to disk.\n                        ": "",
    "\n                            2097151\n                            2097151\n                        ": "",
    "\n                            35791394\n                            35791394\n                        ": "",
    "\n                            2147\n                            2147\n                        ": "",
    "\n                            1.79769e+308\n                            1.79769e+308\n                        ": "",
    "\n                            1e+10\n                            1e+10\n                        ": "",
    "\n                            86400\n                            86400\n                        ": "",
    "\n                            262143\n                            262143\n                        ": "",
    "\n                            2147483647\n                            2147483647\n                        ": "",
    "\n                            2000000000\n                            2000000000\n                        ": "",
    "\n                            2147483\n                            2147483\n                        ": "",
    "\n                            102400\n                            102400\n                        ": "",
    "\n                            1000000\n                            1000000\n                        ": "",
    "\n                            600\n                            600\n                        ": "",
    "\n                            715827882\n                            715827882\n                        ": "",
    "\n                            65535\n                            65535\n                        ": "",
    "\n                            1000000000\n                            1000000000\n                        ": "",
    "\n                            1073741824\n                            1073741824\n                        ": "",
    "\n                            256\n                            256\n                        ": "",
    "\n                            1073741823\n                            1073741823\n                        ": "",
    "\n                            bool\n                            bool\n                        ": "",
    "\n                            string\n                            string\n                        ": "",
    "\n                            real\n                            real\n                        ": "",
    "\n                            enum\n                            enum\n                        ": "",
    "\n                            integer\n                            integer\n                        ": "",
    "\n                            udt_privileges\n                            udt_privileges\n                        ": "",
    "\n                            routines\n                            routines\n                        ": "",
    "\n                            column_udt_usage\n                            column_udt_usage\n                        ": "",
    "\n                            pg_statio_sys_sequences\n                            pg_statio_sys_sequences\n                        ": "",
    "\n                            schemata\n                            schemata\n                        ": "",
    "\n                            pg_publication_tables\n                            pg_publication_tables\n                        ": "",
    "\n                            column_column_usage\n                            column_column_usage\n                        ": "",
    "\n                            routine_privileges\n                            routine_privileges\n                        ": "",
    "\n                            key_column_usage\n                            key_column_usage\n                        ": "",
    "\n                            pg_stat_database\n                            pg_stat_database\n                        ": "",
    "\n                            pg_group\n                            pg_group\n                        ": "",
    "\n                            pg_file_settings\n                            pg_file_settings\n                        ": "",
    "\n                            pg_statio_user_indexes\n                            pg_statio_user_indexes\n                        ": "",
    "\n                            check_constraint_routine_usage\n                            check_constraint_routine_usage\n                        ": "",
    "\n                            _pg_foreign_data_wrappers\n                            _pg_foreign_data_wrappers\n                        ": "",
    "\n                            attributes\n                            attributes\n                        ": "",
    "\n                            pg_stat_sys_indexes\n                            pg_stat_sys_indexes\n                        ": "",
    "\n                            pg_timezone_abbrevs\n                            pg_timezone_abbrevs\n                        ": "",
    "\n                            pg_rules\n                            pg_rules\n                        ": "",
    "\n                            pg_matviews\n                            pg_matviews\n                        ": "",
    "\n                            role_usage_grants\n                            role_usage_grants\n                        ": "",
    "\n                            pg_stat_user_indexes\n                            pg_stat_user_indexes\n                        ": "",
    "\n                            pg_stat_user_functions\n                            pg_stat_user_functions\n                        ": "",
    "\n                            pg_stat_archiver\n                            pg_stat_archiver\n                        ": "",
    "\n                            user_defined_types\n                            user_defined_types\n                        ": "",
    "\n                            pg_cursors\n                            pg_cursors\n                        ": "",
    "\n                            parameters\n                            parameters\n                        ": "",
    "\n                            pg_statio_all_indexes\n                            pg_statio_all_indexes\n                        ": "",
    "\n                            role_column_grants\n                            role_column_grants\n                        ": "",
    "\n                            domain_constraints\n                            domain_constraints\n                        ": "",
    "\n                            pg_stat_ssl\n                            pg_stat_ssl\n                        ": "",
    "\n                            pg_stat_progress_vacuum\n                            pg_stat_progress_vacuum\n                        ": "",
    "\n                            pg_statio_sys_tables\n                            pg_statio_sys_tables\n                        ": "",
    "\n                            pg_stat_database_conflicts\n                            pg_stat_database_conflicts\n                        ": "",
    "\n                            collations\n                            collations\n                        ": "",
    "\n                            foreign_table_options\n                            foreign_table_options\n                        ": "",
    "\n                            pg_prepared_statements\n                            pg_prepared_statements\n                        ": "",
    "\n                            pg_stat_all_indexes\n                            pg_stat_all_indexes\n                        ": "",
    "\n                            pg_available_extension_versions\n                            pg_available_extension_versions\n                        ": "",
    "\n                            foreign_tables\n                            foreign_tables\n                        ": "",
    "\n                            pg_tables\n                            pg_tables\n                        ": "",
    "\n                            user_mappings\n                            user_mappings\n                        ": "",
    "\n                            pg_stat_xact_all_tables\n                            pg_stat_xact_all_tables\n                        ": "",
    "\n                            pg_stat_progress_create_index\n                            pg_stat_progress_create_index\n                        ": "",
    "\n                            pg_stats\n                            pg_stats\n                        ": "",
    "\n                            referential_constraints\n                            referential_constraints\n                        ": "",
    "\n                            pg_statio_user_tables\n                            pg_statio_user_tables\n                        ": "",
    "\n                            triggered_update_columns\n                            triggered_update_columns\n                        ": "",
    "\n                            pg_policies\n                            pg_policies\n                        ": "",
    "\n                            pg_stats_ext\n                            pg_stats_ext\n                        ": "",
    "\n                            _pg_foreign_tables\n                            _pg_foreign_tables\n                        ": "",
    "\n                            pg_stat_gssapi\n                            pg_stat_gssapi\n                        ": "",
    "\n                            pg_stat_xact_user_tables\n                            pg_stat_xact_user_tables\n                        ": "",
    "\n                            view_routine_usage\n                            view_routine_usage\n                        ": "",
    "\n                            pg_statio_sys_indexes\n                            pg_statio_sys_indexes\n                        ": "",
    "\n                            table_constraints\n                            table_constraints\n                        ": "",
    "\n                            pg_views\n                            pg_views\n                        ": "",
    "\n                            foreign_server_options\n                            foreign_server_options\n                        ": "",
    "\n                            user_mapping_options\n                            user_mapping_options\n                        ": "",
    "\n                            character_sets\n                            character_sets\n                        ": "",
    "\n                            table_privileges\n                            table_privileges\n                        ": "",
    "\n                            enabled_roles\n                            enabled_roles\n                        ": "",
    "\n                            administrable_role_authorizations\n                            administrable_role_authorizations\n                        ": "",
    "\n                            pg_stat_replication\n                            pg_stat_replication\n                        ": "",
    "\n                            role_routine_grants\n                            role_routine_grants\n                        ": "",
    "\n                            pg_hba_file_rules\n                            pg_hba_file_rules\n                        ": "",
    "\n                            pg_roles\n                            pg_roles\n                        ": "",
    "\n                            sequences\n                            sequences\n                        ": "",
    "\n                            _pg_foreign_servers\n                            _pg_foreign_servers\n                        ": "",
    "\n                            pg_stat_bgwriter\n                            pg_stat_bgwriter\n                        ": "",
    "\n                            role_table_grants\n                            role_table_grants\n                        ": "",
    "\n                            pg_stat_all_tables\n                            pg_stat_all_tables\n                        ": "",
    "\n                            information_schema_catalog_name\n                            information_schema_catalog_name\n                        ": "",
    "\n                            pg_stat_user_tables\n                            pg_stat_user_tables\n                        ": "",
    "\n                            pg_stat_wal_receiver\n                            pg_stat_wal_receiver\n                        ": "",
    "\n                            view_column_usage\n                            view_column_usage\n                        ": "",
    "\n                            foreign_data_wrapper_options\n                            foreign_data_wrapper_options\n                        ": "",
    "\n                            pg_stat_activity\n                            pg_stat_activity\n                        ": "",
    "\n                            pg_config\n                            pg_config\n                        ": "",
    "\n                            pg_stat_xact_user_functions\n                            pg_stat_xact_user_functions\n                        ": "",
    "\n                            constraint_column_usage\n                            constraint_column_usage\n                        ": "",
    "\n                            foreign_data_wrappers\n                            foreign_data_wrappers\n                        ": "",
    "\n                            _pg_user_mappings\n                            _pg_user_mappings\n                        ": "",
    "\n                            pg_available_extensions\n                            pg_available_extensions\n                        ": "",
    "\n                            tables\n                            tables\n                        ": "",
    "\n                            pg_shadow\n                            pg_shadow\n                        ": "",
    "\n                            columns\n                            columns\n                        ": "",
    "\n                            column_domain_usage\n                            column_domain_usage\n                        ": "",
    "\n                            pg_replication_origin_status\n                            pg_replication_origin_status\n                        ": "",
    "\n                            collation_character_set_applicability\n                            collation_character_set_applicability\n                        ": "",
    "\n                            constraint_table_usage\n                            constraint_table_usage\n                        ": "",
    "\n                            transforms\n                            transforms\n                        ": "",
    "\n                            foreign_servers\n                            foreign_servers\n                        ": "",
    "\n                            pg_statio_all_tables\n                            pg_statio_all_tables\n                        ": "",
    "\n                            pg_stat_subscription\n                            pg_stat_subscription\n                        ": "",
    "\n                            pg_sequences\n                            pg_sequences\n                        ": "",
    "\n                            applicable_roles\n                            applicable_roles\n                        ": "",
    "\n                            pg_timezone_names\n                            pg_timezone_names\n                        ": "",
    "\n                            pg_indexes\n                            pg_indexes\n                        ": "",
    "\n                            view_table_usage\n                            view_table_usage\n                        ": "",
    "\n                            role_udt_grants\n                            role_udt_grants\n                        ": "",
    "\n                            views\n                            views\n                        ": "",
    "\n                            column_options\n                            column_options\n                        ": "",
    "\n                            domains\n                            domains\n                        ": "",
    "\n                            data_type_privileges\n                            data_type_privileges\n                        ": "",
    "\n                            pg_prepared_xacts\n                            pg_prepared_xacts\n                        ": "",
    "\n                            column_privileges\n                            column_privileges\n                        ": "",
    "\n                            domain_udt_usage\n                            domain_udt_usage\n                        ": "",
    "\n                            usage_privileges\n                            usage_privileges\n                        ": "",
    "\n                            pg_stat_sys_tables\n                            pg_stat_sys_tables\n                        ": "",
    "\n                            _pg_foreign_table_columns\n                            _pg_foreign_table_columns\n                        ": "",
    "\n                            pg_seclabels\n                            pg_seclabels\n                        ": "",
    "\n                            pg_user_mappings\n                            pg_user_mappings\n                        ": "",
    "\n                            check_constraints\n                            check_constraints\n                        ": "",
    "\n                            triggers\n                            triggers\n                        ": "",
    "\n                            element_types\n                            element_types\n                        ": "",
    "\n                            pg_statio_user_sequences\n                            pg_statio_user_sequences\n                        ": "",
    "\n                            pg_user\n                            pg_user\n                        ": "",
    "\n                            pg_locks\n                            pg_locks\n                        ": "",
    "\n                            pg_replication_slots\n                            pg_replication_slots\n                        ": "",
    "\n                            pg_stat_progress_cluster\n                            pg_stat_progress_cluster\n                        ": "",
    "\n                            pg_stat_xact_sys_tables\n                            pg_stat_xact_sys_tables\n                        ": "",
    "\n                            pg_statio_all_sequences\n                            pg_statio_all_sequences\n                        ": "",
    "\n                            CURRENT_TIMESTAMP(2)\n                            CURRENT_TIMESTAMP(2)\n                        ": "",
    "\n                            _regtype\n                            _regtype\n                        ": "",
    "\n                            _tstzrange\n                            _tstzrange\n                        ": "",
    "\n                            _bytea\n                            _bytea\n                        ": "",
    "\n                            box\n                            box\n                        ": "",
    "\n                            cid\n                            cid\n                        ": "",
    "\n                            _name\n                            _name\n                        ": "",
    "\n                            pg_ddl_command\n                            pg_ddl_command\n                        ": "",
    "\n                            cidr\n                            cidr\n                        ": "",
    "\n                            _line\n                            _line\n                        ": "",
    "\n                            macaddr8\n                            macaddr8\n                        ": "",
    "\n                            cstring\n                            cstring\n                        ": "",
    "\n                            _tsvector\n                            _tsvector\n                        ": "",
    "\n                            anynonarray\n                            anynonarray\n                        ": "",
    "\n                            int4\n                            int4\n                        ": "",
    "\n                            _circle\n                            _circle\n                        ": "",
    "\n                            oidvector\n                            oidvector\n                        ": "",
    "\n                            _timetz\n                            _timetz\n                        ": "",
    "\n                            timestamp\n                            timestamp\n                        ": "",
    "\n                            tid\n                            tid\n                        ": "",
    "\n                            tsquery\n                            tsquery\n                        ": "",
    "\n                            _tsrange\n                            _tsrange\n                        ": "",
    "\n                            varchar\n                            varchar\n                        ": "",
    "\n                            _numeric\n                            _numeric\n                        ": "",
    "\n                            tstzrange\n                            tstzrange\n                        ": "",
    "\n                            _macaddr8\n                            _macaddr8\n                        ": "",
    "\n                            _products\n                            _products\n                        ": "",
    "\n                            language_handler\n                            language_handler\n                        ": "",
    "\n                            aclitem\n                            aclitem\n                        ": "",
    "\n                            _box\n                            _box\n                        ": "",
    "\n                            _cidr\n                            _cidr\n                        ": "",
    "\n                            timestamptz\n                            timestamptz\n                        ": "",
    "\n                            _bit\n                            _bit\n                        ": "",
    "\n                            pg_ndistinct\n                            pg_ndistinct\n                        ": "",
    "\n                            _pg_lsn\n                            _pg_lsn\n                        ": "",
    "\n                            daterange\n                            daterange\n                        ": "",
    "\n                            _regdictionary\n                            _regdictionary\n                        ": "",
    "\n                            _numrange\n                            _numrange\n                        ": "",
    "\n                            time\n                            time\n                        ": "",
    "\n                            _regclass\n                            _regclass\n                        ": "",
    "\n                            _json\n                            _json\n                        ": "",
    "\n                            varbit\n                            varbit\n                        ": "",
    "\n                            _character_data\n                            _character_data\n                        ": "",
    "\n                            _regconfig\n                            _regconfig\n                        ": "",
    "\n                            _regnamespace\n                            _regnamespace\n                        ": "",
    "\n                            _regrole\n                            _regrole\n                        ": "",
    "\n                            interval\n                            interval\n                        ": "",
    "\n                            refcursor\n                            refcursor\n                        ": "",
    "\n                            _uuid\n                            _uuid\n                        ": "",
    "\n                            pg_node_tree\n                            pg_node_tree\n                        ": "",
    "\n                            bpchar\n                            bpchar\n                        ": "",
    "\n                            any\n                            any\n                        ": "",
    "\n                            regprocedure\n                            regprocedure\n                        ": "",
    "\n                            _tid\n                            _tid\n                        ": "",
    "\n                            _int8range\n                            _int8range\n                        ": "",
    "\n                            regclass\n                            regclass\n                        ": "",
    "\n                            unknown\n                            unknown\n                        ": "",
    "\n                            _regprocedure\n                            _regprocedure\n                        ": "",
    "\n                            uuid\n                            uuid\n                        ": "",
    "\n                            float8\n                            float8\n                        ": "",
    "\n                            jsonb\n                            jsonb\n                        ": "",
    "\n                            int4range\n                            int4range\n                        ": "",
    "\n                            _timestamp\n                            _timestamp\n                        ": "",
    "\n                            _path\n                            _path\n                        ": "",
    "\n                            tsrange\n                            tsrange\n                        ": "",
    "\n                            macaddr\n                            macaddr\n                        ": "",
    "\n                            polygon\n                            polygon\n                        ": "",
    "\n                            int2\n                            int2\n                        ": "",
    "\n                            _cardinal_number\n                            _cardinal_number\n                        ": "",
    "\n                            opaque\n                            opaque\n                        ": "",
    "\n                            _text\n                            _text\n                        ": "",
    "\n                            numeric\n                            numeric\n                        ": "",
    "\n                            _yes_or_no\n                            _yes_or_no\n                        ": "",
    "\n                            _cstring\n                            _cstring\n                        ": "",
    "\n                            _interval\n                            _interval\n                        ": "",
    "\n                            _aclitem\n                            _aclitem\n                        ": "",
    "\n                            _int8\n                            _int8\n                        ": "",
    "\n                            _int4range\n                            _int4range\n                        ": "",
    "\n                            _tsquery\n                            _tsquery\n                        ": "",
    "\n                            pg_mcv_list\n                            pg_mcv_list\n                        ": "",
    "\n                            line\n                            line\n                        ": "",
    "\n                            _inet\n                            _inet\n                        ": "",
    "\n                            _timestamptz\n                            _timestamptz\n                        ": "",
    "\n                            bit\n                            bit\n                        ": "",
    "\n                            pg_lsn\n                            pg_lsn\n                        ": "",
    "\n                            _regoperator\n                            _regoperator\n                        ": "",
    "\n                            regtype\n                            regtype\n                        ": "",
    "\n                            time_stamp\n                            time_stamp\n                        ": "",
    "\n                            json\n                            json\n                        ": "",
    "\n                            point\n                            point\n                        ": "",
    "\n                            txid_snapshot\n                            txid_snapshot\n                        ": "",
    "\n                            _lseg\n                            _lseg\n                        ": "",
    "\n                            lseg\n                            lseg\n                        ": "",
    "\n                            char\n                            char\n                        ": "",
    "\n                            fdw_handler\n                            fdw_handler\n                        ": "",
    "\n                            void\n                            void\n                        ": "",
    "\n                            regconfig\n                            regconfig\n                        ": "",
    "\n                            _jsonb\n                            _jsonb\n                        ": "",
    "\n                            trigger\n                            trigger\n                        ": "",
    "\n                            tsvector\n                            tsvector\n                        ": "",
    "\n                            regnamespace\n                            regnamespace\n                        ": "",
    "\n                            anyarray\n                            anyarray\n                        ": "",
    "\n                            anyelement\n                            anyelement\n                        ": "",
    "\n                            _time_stamp\n                            _time_stamp\n                        ": "",
    "\n                            anyenum\n                            anyenum\n                        ": "",
    "\n                            _jsonpath\n                            _jsonpath\n                        ": "",
    "\n                            _regoper\n                            _regoper\n                        ": "",
    "\n                            _regproc\n                            _regproc\n                        ": "",
    "\n                            record\n                            record\n                        ": "",
    "\n                            xid\n                            xid\n                        ": "",
    "\n                            money\n                            money\n                        ": "",
    "\n                            circle\n                            circle\n                        ": "",
    "\n                            _daterange\n                            _daterange\n                        ": "",
    "\n                            yes_or_no\n                            yes_or_no\n                        ": "",
    "\n                            _bpchar\n                            _bpchar\n                        ": "",
    "\n                            numrange\n                            numrange\n                        ": "",
    "\n                            _varchar\n                            _varchar\n                        ": "",
    "\n                            regdictionary\n                            regdictionary\n                        ": "",
    "\n                            float4\n                            float4\n                        ": "",
    "\n                            index_am_handler\n                            index_am_handler\n                        ": "",
    "\n                            regproc\n                            regproc\n                        ": "",
    "\n                            _int2\n                            _int2\n                        ": "",
    "\n                            xml\n                            xml\n                        ": "",
    "\n                            anyrange\n                            anyrange\n                        ": "",
    "\n                            _refcursor\n                            _refcursor\n                        ": "",
    "\n                            _xid\n                            _xid\n                        ": "",
    "\n                            _time\n                            _time\n                        ": "",
    "\n                            _int4\n                            _int4\n                        ": "",
    "\n                            int2vector\n                            int2vector\n                        ": "",
    "\n                            inet\n                            inet\n                        ": "",
    "\n                            path\n                            path\n                        ": "",
    "\n                            _users_zxzlar\n                            _users_zxzlar\n                        ": "",
    "\n                            _char\n                            _char\n                        ": "",
    "\n                            _bool\n                            _bool\n                        ": "",
    "\n                            cardinal_number\n                            cardinal_number\n                        ": "",
    "\n                            pg_dependencies\n                            pg_dependencies\n                        ": "",
    "\n                            sql_identifier\n                            sql_identifier\n                        ": "",
    "\n                            _float4\n                            _float4\n                        ": "",
    "\n                            _polygon\n                            _polygon\n                        ": "",
    "\n                            tsm_handler\n                            tsm_handler\n                        ": "",
    "\n                            _money\n                            _money\n                        ": "",
    "\n                            _xml\n                            _xml\n                        ": "",
    "\n                            _cid\n                            _cid\n                        ": "",
    "\n                            text\n                            text\n                        ": "",
    "\n                            _varbit\n                            _varbit\n                        ": "",
    "\n                            event_trigger\n                            event_trigger\n                        ": "",
    "\n                            table_am_handler\n                            table_am_handler\n                        ": "",
    "\n                            character_data\n                            character_data\n                        ": "",
    "\n                            gtsvector\n                            gtsvector\n                        ": "",
    "\n                            regoper\n                            regoper\n                        ": "",
    "\n                            bytea\n                            bytea\n                        ": "",
    "\n                            _float8\n                            _float8\n                        ": "",
    "\n                            _txid_snapshot\n                            _txid_snapshot\n                        ": "",
    "\n                            _sql_identifier\n                            _sql_identifier\n                        ": "",
    "\n                            _oidvector\n                            _oidvector\n                        ": "",
    "\n                            _gtsvector\n                            _gtsvector\n                        ": "",
    "\n                            int8range\n                            int8range\n                        ": "",
    "\n                            timetz\n                            timetz\n                        ": "",
    "\n                            regrole\n                            regrole\n                        ": "",
    "\n                            jsonpath\n                            jsonpath\n                        ": "",
    "\n                            _oid\n                            _oid\n                        ": "",
    "\n                            _point\n                            _point\n                        ": "",
    "\n                            _macaddr\n                            _macaddr\n                        ": "",
    "\n                            regoperator\n                            regoperator\n                        ": "",
    "\n                            int8\n                            int8\n                        ": "",
    "\n                            _int2vector\n                            _int2vector\n                        ": "",
    "\n                            _record\n                            _record\n                        ": "",
    "\n                            _date\n                            _date\n                        ": "",
    "\n                            portuguese\n                            portuguese\n                        ": "",
    "\n                            french\n                            french\n                        ": "",
    "\n                            norwegian\n                            norwegian\n                        ": "",
    "\n                            turkish\n                            turkish\n                        ": "",
    "\n                            dutch\n                            dutch\n                        ": "",
    "\n                            spanish\n                            spanish\n                        ": "",
    "\n                            italian\n                            italian\n                        ": "",
    "\n                            irish\n                            irish\n                        ": "",
    "\n                            hungarian\n                            hungarian\n                        ": "",
    "\n                            english\n                            english\n                        ": "",
    "\n                            tamil\n                            tamil\n                        ": "",
    "\n                            indonesian\n                            indonesian\n                        ": "",
    "\n                            finnish\n                            finnish\n                        ": "",
    "\n                            german\n                            german\n                        ": "",
    "\n                            romanian\n                            romanian\n                        ": "",
    "\n                            lithuanian\n                            lithuanian\n                        ": "",
    "\n                            arabic\n                            arabic\n                        ": "",
    "\n                            swedish\n                            swedish\n                        ": "",
    "\n                            russian\n                            russian\n                        ": "",
    "\n                            nepali\n                            nepali\n                        ": "",
    "\n                            danish\n                            danish\n                        ": "",
    "\n                            yes_or_no_check\n                            yes_or_no_check\n                        ": "",
    "\n                            cardinal_number_domain_check\n                            cardinal_number_domain_check\n                        ": "",
    "\n                            SELECT name, description FROM products WHERE category = &apos;Gifts&apos; UNION SELECT statement,statement FROM pg_cursors--&apos; AND released = 1\n                            SELECT name, description FROM products WHERE category = &apos;Gifts&apos; UNION SELECT statement,statement FROM pg_cursors--&apos; AND released = 1\n                        ": "",
    "\n                            iso, mdy\n                            iso, mdy\n                        ": "",
    "\n                            128MB\n                            128MB\n                        ": "",
    "\n                            80MB\n                            80MB\n                        ": "",
    "\n                            1GB\n                            1GB\n                        ": "",
    "\n                            datestyle\n                            datestyle\n                        ": "",
    "\n                            timezone\n                            timezone\n                        ": "",
    "\n                            btree\n                            btree\n                        ": "",
    "\n                            gist\n                            gist\n                        ": "",
    "\n                            spgist\n                            spgist\n                        ": "",
    "\n                            brin\n                            brin\n                        ": "",
    "\n                            gin\n                            gin\n                        ": "",
    "\n                            S_1\n                            S_1\n                        ": "",
    "\n                            S_2\n                            S_2\n                        ": "",
    "\n                            INSERT INTO products VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n                            INSERT INTO products VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\n                        ": "",
    "\n                            SELECT * FROM users_zxzlar WHERE username_gphaga = $1 AND password_txblci = $2\n                            SELECT * FROM users_zxzlar WHERE username_gphaga = $1 AND password_txblci = $2\n                        ": "",
    "\n                            md532e12f215ba27cb750c9e093ce4b5127\n                            md532e12f215ba27cb750c9e093ce4b5127\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_proc_proname_args_nsp_index ON pg_catalog.pg_proc USING btree (proname, proargtypes, pronamespace)\n                            CREATE UNIQUE INDEX pg_proc_proname_args_nsp_index ON pg_catalog.pg_proc USING btree (proname, proargtypes, pronamespace)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_foreign_server_oid_index ON pg_catalog.pg_foreign_server USING btree (oid)\n                            CREATE UNIQUE INDEX pg_foreign_server_oid_index ON pg_catalog.pg_foreign_server USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_seclabel_object_index ON pg_catalog.pg_seclabel USING btree (objoid, classoid, objsubid, provider)\n                            CREATE UNIQUE INDEX pg_seclabel_object_index ON pg_catalog.pg_seclabel USING btree (objoid, classoid, objsubid, provider)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_pltemplate_name_index ON pg_catalog.pg_pltemplate USING btree (tmplname)\n                            CREATE UNIQUE INDEX pg_pltemplate_name_index ON pg_catalog.pg_pltemplate USING btree (tmplname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_operator_oprname_l_r_n_index ON pg_catalog.pg_operator USING btree (oprname, oprleft, oprright, oprnamespace)\n                            CREATE UNIQUE INDEX pg_operator_oprname_l_r_n_index ON pg_catalog.pg_operator USING btree (oprname, oprleft, oprright, oprnamespace)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_foreign_server_name_index ON pg_catalog.pg_foreign_server USING btree (srvname)\n                            CREATE UNIQUE INDEX pg_foreign_server_name_index ON pg_catalog.pg_foreign_server USING btree (srvname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_default_acl_role_nsp_obj_index ON pg_catalog.pg_default_acl USING btree (defaclrole, defaclnamespace, defaclobjtype)\n                            CREATE UNIQUE INDEX pg_default_acl_role_nsp_obj_index ON pg_catalog.pg_default_acl USING btree (defaclrole, defaclnamespace, defaclobjtype)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_constraint_oid_index ON pg_catalog.pg_constraint USING btree (oid)\n                            CREATE UNIQUE INDEX pg_constraint_oid_index ON pg_catalog.pg_constraint USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_event_trigger_evtname_index ON pg_catalog.pg_event_trigger USING btree (evtname)\n                            CREATE UNIQUE INDEX pg_event_trigger_evtname_index ON pg_catalog.pg_event_trigger USING btree (evtname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_attrdef_oid_index ON pg_catalog.pg_attrdef USING btree (oid)\n                            CREATE UNIQUE INDEX pg_attrdef_oid_index ON pg_catalog.pg_attrdef USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_amop_opr_fam_index ON pg_catalog.pg_amop USING btree (amopopr, amoppurpose, amopfamily)\n                            CREATE UNIQUE INDEX pg_amop_opr_fam_index ON pg_catalog.pg_amop USING btree (amopopr, amoppurpose, amopfamily)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_foreign_data_wrapper_oid_index ON pg_catalog.pg_foreign_data_wrapper USING btree (oid)\n                            CREATE UNIQUE INDEX pg_foreign_data_wrapper_oid_index ON pg_catalog.pg_foreign_data_wrapper USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_enum_oid_index ON pg_catalog.pg_enum USING btree (oid)\n                            CREATE UNIQUE INDEX pg_enum_oid_index ON pg_catalog.pg_enum USING btree (oid)\n                        ": "",
    "\n                            CREATE INDEX pg_constraint_conparentid_index ON pg_catalog.pg_constraint USING btree (conparentid)\n                            CREATE INDEX pg_constraint_conparentid_index ON pg_catalog.pg_constraint USING btree (conparentid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_shdescription_o_c_index ON pg_catalog.pg_shdescription USING btree (objoid, classoid)\n                            CREATE UNIQUE INDEX pg_shdescription_o_c_index ON pg_catalog.pg_shdescription USING btree (objoid, classoid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_range_rngtypid_index ON pg_catalog.pg_range USING btree (rngtypid)\n                            CREATE UNIQUE INDEX pg_range_rngtypid_index ON pg_catalog.pg_range USING btree (rngtypid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_transform_type_lang_index ON pg_catalog.pg_transform USING btree (trftype, trflang)\n                            CREATE UNIQUE INDEX pg_transform_type_lang_index ON pg_catalog.pg_transform USING btree (trftype, trflang)\n                        ": "",
    "\n                            CREATE INDEX pg_inherits_parent_index ON pg_catalog.pg_inherits USING btree (inhparent)\n                            CREATE INDEX pg_inherits_parent_index ON pg_catalog.pg_inherits USING btree (inhparent)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_collation_oid_index ON pg_catalog.pg_collation USING btree (oid)\n                            CREATE UNIQUE INDEX pg_collation_oid_index ON pg_catalog.pg_collation USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_database_oid_index ON pg_catalog.pg_database USING btree (oid)\n                            CREATE UNIQUE INDEX pg_database_oid_index ON pg_catalog.pg_database USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_proc_oid_index ON pg_catalog.pg_proc USING btree (oid)\n                            CREATE UNIQUE INDEX pg_proc_oid_index ON pg_catalog.pg_proc USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_subscription_rel_srrelid_srsubid_index ON pg_catalog.pg_subscription_rel USING btree (srrelid, srsubid)\n                            CREATE UNIQUE INDEX pg_subscription_rel_srrelid_srsubid_index ON pg_catalog.pg_subscription_rel USING btree (srrelid, srsubid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_event_trigger_oid_index ON pg_catalog.pg_event_trigger USING btree (oid)\n                            CREATE UNIQUE INDEX pg_event_trigger_oid_index ON pg_catalog.pg_event_trigger USING btree (oid)\n                        ": "",
    "\n                            CREATE INDEX pg_depend_depender_index ON pg_catalog.pg_depend USING btree (classid, objid, objsubid)\n                            CREATE INDEX pg_depend_depender_index ON pg_catalog.pg_depend USING btree (classid, objid, objsubid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_statistic_ext_name_index ON pg_catalog.pg_statistic_ext USING btree (stxname, stxnamespace)\n                            CREATE UNIQUE INDEX pg_statistic_ext_name_index ON pg_catalog.pg_statistic_ext USING btree (stxname, stxnamespace)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_database_datname_index ON pg_catalog.pg_database USING btree (datname)\n                            CREATE UNIQUE INDEX pg_database_datname_index ON pg_catalog.pg_database USING btree (datname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_auth_members_role_member_index ON pg_catalog.pg_auth_members USING btree (roleid, member)\n                            CREATE UNIQUE INDEX pg_auth_members_role_member_index ON pg_catalog.pg_auth_members USING btree (roleid, member)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_ts_template_tmplname_index ON pg_catalog.pg_ts_template USING btree (tmplname, tmplnamespace)\n                            CREATE UNIQUE INDEX pg_ts_template_tmplname_index ON pg_catalog.pg_ts_template USING btree (tmplname, tmplnamespace)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_transform_oid_index ON pg_catalog.pg_transform USING btree (oid)\n                            CREATE UNIQUE INDEX pg_transform_oid_index ON pg_catalog.pg_transform USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_tablespace_oid_index ON pg_catalog.pg_tablespace USING btree (oid)\n                            CREATE UNIQUE INDEX pg_tablespace_oid_index ON pg_catalog.pg_tablespace USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_rewrite_rel_rulename_index ON pg_catalog.pg_rewrite USING btree (ev_class, rulename)\n                            CREATE UNIQUE INDEX pg_rewrite_rel_rulename_index ON pg_catalog.pg_rewrite USING btree (ev_class, rulename)\n                        ": "",
    "\n                            CREATE INDEX pg_shdepend_reference_index ON pg_catalog.pg_shdepend USING btree (refclassid, refobjid)\n                            CREATE INDEX pg_shdepend_reference_index ON pg_catalog.pg_shdepend USING btree (refclassid, refobjid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_am_name_index ON pg_catalog.pg_am USING btree (amname)\n                            CREATE UNIQUE INDEX pg_am_name_index ON pg_catalog.pg_am USING btree (amname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_class_oid_index ON pg_catalog.pg_class USING btree (oid)\n                            CREATE UNIQUE INDEX pg_class_oid_index ON pg_catalog.pg_class USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_foreign_data_wrapper_name_index ON pg_catalog.pg_foreign_data_wrapper USING btree (fdwname)\n                            CREATE UNIQUE INDEX pg_foreign_data_wrapper_name_index ON pg_catalog.pg_foreign_data_wrapper USING btree (fdwname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_foreign_table_relid_index ON pg_catalog.pg_foreign_table USING btree (ftrelid)\n                            CREATE UNIQUE INDEX pg_foreign_table_relid_index ON pg_catalog.pg_foreign_table USING btree (ftrelid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_constraint_conrelid_contypid_conname_index ON pg_catalog.pg_constraint USING btree (conrelid, contypid, conname)\n                            CREATE UNIQUE INDEX pg_constraint_conrelid_contypid_conname_index ON pg_catalog.pg_constraint USING btree (conrelid, contypid, conname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_description_o_c_o_index ON pg_catalog.pg_description USING btree (objoid, classoid, objsubid)\n                            CREATE UNIQUE INDEX pg_description_o_c_o_index ON pg_catalog.pg_description USING btree (objoid, classoid, objsubid)\n                        ": "",
    "\n                            CREATE INDEX pg_trigger_tgconstraint_index ON pg_catalog.pg_trigger USING btree (tgconstraint)\n                            CREATE INDEX pg_trigger_tgconstraint_index ON pg_catalog.pg_trigger USING btree (tgconstraint)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_opfamily_am_name_nsp_index ON pg_catalog.pg_opfamily USING btree (opfmethod, opfname, opfnamespace)\n                            CREATE UNIQUE INDEX pg_opfamily_am_name_nsp_index ON pg_catalog.pg_opfamily USING btree (opfmethod, opfname, opfnamespace)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_ts_config_map_index ON pg_catalog.pg_ts_config_map USING btree (mapcfg, maptokentype, mapseqno)\n                            CREATE UNIQUE INDEX pg_ts_config_map_index ON pg_catalog.pg_ts_config_map USING btree (mapcfg, maptokentype, mapseqno)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_db_role_setting_databaseid_rol_index ON pg_catalog.pg_db_role_setting USING btree (setdatabase, setrole)\n                            CREATE UNIQUE INDEX pg_db_role_setting_databaseid_rol_index ON pg_catalog.pg_db_role_setting USING btree (setdatabase, setrole)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_shseclabel_object_index ON pg_catalog.pg_shseclabel USING btree (objoid, classoid, provider)\n                            CREATE UNIQUE INDEX pg_shseclabel_object_index ON pg_catalog.pg_shseclabel USING btree (objoid, classoid, provider)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_tablespace_spcname_index ON pg_catalog.pg_tablespace USING btree (spcname)\n                            CREATE UNIQUE INDEX pg_tablespace_spcname_index ON pg_catalog.pg_tablespace USING btree (spcname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_index_indexrelid_index ON pg_catalog.pg_index USING btree (indexrelid)\n                            CREATE UNIQUE INDEX pg_index_indexrelid_index ON pg_catalog.pg_index USING btree (indexrelid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_largeobject_loid_pn_index ON pg_catalog.pg_largeobject USING btree (loid, pageno)\n                            CREATE UNIQUE INDEX pg_largeobject_loid_pn_index ON pg_catalog.pg_largeobject USING btree (loid, pageno)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_type_oid_index ON pg_catalog.pg_type USING btree (oid)\n                            CREATE UNIQUE INDEX pg_type_oid_index ON pg_catalog.pg_type USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_publication_rel_prrelid_prpubid_index ON pg_catalog.pg_publication_rel USING btree (prrelid, prpubid)\n                            CREATE UNIQUE INDEX pg_publication_rel_prrelid_prpubid_index ON pg_catalog.pg_publication_rel USING btree (prrelid, prpubid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_extension_oid_index ON pg_catalog.pg_extension USING btree (oid)\n                            CREATE UNIQUE INDEX pg_extension_oid_index ON pg_catalog.pg_extension USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_conversion_name_nsp_index ON pg_catalog.pg_conversion USING btree (conname, connamespace)\n                            CREATE UNIQUE INDEX pg_conversion_name_nsp_index ON pg_catalog.pg_conversion USING btree (conname, connamespace)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_policy_polrelid_polname_index ON pg_catalog.pg_policy USING btree (polrelid, polname)\n                            CREATE UNIQUE INDEX pg_policy_polrelid_polname_index ON pg_catalog.pg_policy USING btree (polrelid, polname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_publication_rel_oid_index ON pg_catalog.pg_publication_rel USING btree (oid)\n                            CREATE UNIQUE INDEX pg_publication_rel_oid_index ON pg_catalog.pg_publication_rel USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_attribute_relid_attnum_index ON pg_catalog.pg_attribute USING btree (attrelid, attnum)\n                            CREATE UNIQUE INDEX pg_attribute_relid_attnum_index ON pg_catalog.pg_attribute USING btree (attrelid, attnum)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_collation_name_enc_nsp_index ON pg_catalog.pg_collation USING btree (collname, collencoding, collnamespace)\n                            CREATE UNIQUE INDEX pg_collation_name_enc_nsp_index ON pg_catalog.pg_collation USING btree (collname, collencoding, collnamespace)\n                        ": "",
    "\n                            CREATE INDEX pg_depend_reference_index ON pg_catalog.pg_depend USING btree (refclassid, refobjid, refobjsubid)\n                            CREATE INDEX pg_depend_reference_index ON pg_catalog.pg_depend USING btree (refclassid, refobjid, refobjsubid)\n                        ": "",
    "\n                            CREATE INDEX pg_constraint_contypid_index ON pg_catalog.pg_constraint USING btree (contypid)\n                            CREATE INDEX pg_constraint_contypid_index ON pg_catalog.pg_constraint USING btree (contypid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_extension_name_index ON pg_catalog.pg_extension USING btree (extname)\n                            CREATE UNIQUE INDEX pg_extension_name_index ON pg_catalog.pg_extension USING btree (extname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_aggregate_fnoid_index ON pg_catalog.pg_aggregate USING btree (aggfnoid)\n                            CREATE UNIQUE INDEX pg_aggregate_fnoid_index ON pg_catalog.pg_aggregate USING btree (aggfnoid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_am_oid_index ON pg_catalog.pg_am USING btree (oid)\n                            CREATE UNIQUE INDEX pg_am_oid_index ON pg_catalog.pg_am USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_replication_origin_roiident_index ON pg_catalog.pg_replication_origin USING btree (roident)\n                            CREATE UNIQUE INDEX pg_replication_origin_roiident_index ON pg_catalog.pg_replication_origin USING btree (roident)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_trigger_oid_index ON pg_catalog.pg_trigger USING btree (oid)\n                            CREATE UNIQUE INDEX pg_trigger_oid_index ON pg_catalog.pg_trigger USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_inherits_relid_seqno_index ON pg_catalog.pg_inherits USING btree (inhrelid, inhseqno)\n                            CREATE UNIQUE INDEX pg_inherits_relid_seqno_index ON pg_catalog.pg_inherits USING btree (inhrelid, inhseqno)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_ts_dict_oid_index ON pg_catalog.pg_ts_dict USING btree (oid)\n                            CREATE UNIQUE INDEX pg_ts_dict_oid_index ON pg_catalog.pg_ts_dict USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_policy_oid_index ON pg_catalog.pg_policy USING btree (oid)\n                            CREATE UNIQUE INDEX pg_policy_oid_index ON pg_catalog.pg_policy USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_user_mapping_oid_index ON pg_catalog.pg_user_mapping USING btree (oid)\n                            CREATE UNIQUE INDEX pg_user_mapping_oid_index ON pg_catalog.pg_user_mapping USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_attribute_relid_attnam_index ON pg_catalog.pg_attribute USING btree (attrelid, attname)\n                            CREATE UNIQUE INDEX pg_attribute_relid_attnam_index ON pg_catalog.pg_attribute USING btree (attrelid, attname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_conversion_default_index ON pg_catalog.pg_conversion USING btree (connamespace, conforencoding, contoencoding, oid)\n                            CREATE UNIQUE INDEX pg_conversion_default_index ON pg_catalog.pg_conversion USING btree (connamespace, conforencoding, contoencoding, oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_cast_oid_index ON pg_catalog.pg_cast USING btree (oid)\n                            CREATE UNIQUE INDEX pg_cast_oid_index ON pg_catalog.pg_cast USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_namespace_oid_index ON pg_catalog.pg_namespace USING btree (oid)\n                            CREATE UNIQUE INDEX pg_namespace_oid_index ON pg_catalog.pg_namespace USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_statistic_ext_oid_index ON pg_catalog.pg_statistic_ext USING btree (oid)\n                            CREATE UNIQUE INDEX pg_statistic_ext_oid_index ON pg_catalog.pg_statistic_ext USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_subscription_oid_index ON pg_catalog.pg_subscription USING btree (oid)\n                            CREATE UNIQUE INDEX pg_subscription_oid_index ON pg_catalog.pg_subscription USING btree (oid)\n                        ": "",
    "\n                            CREATE INDEX pg_statistic_ext_relid_index ON pg_catalog.pg_statistic_ext USING btree (stxrelid)\n                            CREATE INDEX pg_statistic_ext_relid_index ON pg_catalog.pg_statistic_ext USING btree (stxrelid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_ts_template_oid_index ON pg_catalog.pg_ts_template USING btree (oid)\n                            CREATE UNIQUE INDEX pg_ts_template_oid_index ON pg_catalog.pg_ts_template USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_ts_dict_dictname_index ON pg_catalog.pg_ts_dict USING btree (dictname, dictnamespace)\n                            CREATE UNIQUE INDEX pg_ts_dict_dictname_index ON pg_catalog.pg_ts_dict USING btree (dictname, dictnamespace)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_default_acl_oid_index ON pg_catalog.pg_default_acl USING btree (oid)\n                            CREATE UNIQUE INDEX pg_default_acl_oid_index ON pg_catalog.pg_default_acl USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_enum_typid_label_index ON pg_catalog.pg_enum USING btree (enumtypid, enumlabel)\n                            CREATE UNIQUE INDEX pg_enum_typid_label_index ON pg_catalog.pg_enum USING btree (enumtypid, enumlabel)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_auth_members_member_role_index ON pg_catalog.pg_auth_members USING btree (member, roleid)\n                            CREATE UNIQUE INDEX pg_auth_members_member_role_index ON pg_catalog.pg_auth_members USING btree (member, roleid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_init_privs_o_c_o_index ON pg_catalog.pg_init_privs USING btree (objoid, classoid, objsubid)\n                            CREATE UNIQUE INDEX pg_init_privs_o_c_o_index ON pg_catalog.pg_init_privs USING btree (objoid, classoid, objsubid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_subscription_subname_index ON pg_catalog.pg_subscription USING btree (subdbid, subname)\n                            CREATE UNIQUE INDEX pg_subscription_subname_index ON pg_catalog.pg_subscription USING btree (subdbid, subname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_opclass_am_name_nsp_index ON pg_catalog.pg_opclass USING btree (opcmethod, opcname, opcnamespace)\n                            CREATE UNIQUE INDEX pg_opclass_am_name_nsp_index ON pg_catalog.pg_opclass USING btree (opcmethod, opcname, opcnamespace)\n                        ": "",
    "\n                            CREATE INDEX pg_class_tblspc_relfilenode_index ON pg_catalog.pg_class USING btree (reltablespace, relfilenode)\n                            CREATE INDEX pg_class_tblspc_relfilenode_index ON pg_catalog.pg_class USING btree (reltablespace, relfilenode)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_partitioned_table_partrelid_index ON pg_catalog.pg_partitioned_table USING btree (partrelid)\n                            CREATE UNIQUE INDEX pg_partitioned_table_partrelid_index ON pg_catalog.pg_partitioned_table USING btree (partrelid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_amproc_oid_index ON pg_catalog.pg_amproc USING btree (oid)\n                            CREATE UNIQUE INDEX pg_amproc_oid_index ON pg_catalog.pg_amproc USING btree (oid)\n                        ": "",
    "\n                            CREATE INDEX pg_constraint_conname_nsp_index ON pg_catalog.pg_constraint USING btree (conname, connamespace)\n                            CREATE INDEX pg_constraint_conname_nsp_index ON pg_catalog.pg_constraint USING btree (conname, connamespace)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX products_pkey ON public.products USING btree (id)\n                            CREATE UNIQUE INDEX products_pkey ON public.products USING btree (id)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_enum_typid_sortorder_index ON pg_catalog.pg_enum USING btree (enumtypid, enumsortorder)\n                            CREATE UNIQUE INDEX pg_enum_typid_sortorder_index ON pg_catalog.pg_enum USING btree (enumtypid, enumsortorder)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_authid_oid_index ON pg_catalog.pg_authid USING btree (oid)\n                            CREATE UNIQUE INDEX pg_authid_oid_index ON pg_catalog.pg_authid USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_authid_rolname_index ON pg_catalog.pg_authid USING btree (rolname)\n                            CREATE UNIQUE INDEX pg_authid_rolname_index ON pg_catalog.pg_authid USING btree (rolname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_sequence_seqrelid_index ON pg_catalog.pg_sequence USING btree (seqrelid)\n                            CREATE UNIQUE INDEX pg_sequence_seqrelid_index ON pg_catalog.pg_sequence USING btree (seqrelid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_type_typname_nsp_index ON pg_catalog.pg_type USING btree (typname, typnamespace)\n                            CREATE UNIQUE INDEX pg_type_typname_nsp_index ON pg_catalog.pg_type USING btree (typname, typnamespace)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_statistic_relid_att_inh_index ON pg_catalog.pg_statistic USING btree (starelid, staattnum, stainherit)\n                            CREATE UNIQUE INDEX pg_statistic_relid_att_inh_index ON pg_catalog.pg_statistic USING btree (starelid, staattnum, stainherit)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_largeobject_metadata_oid_index ON pg_catalog.pg_largeobject_metadata USING btree (oid)\n                            CREATE UNIQUE INDEX pg_largeobject_metadata_oid_index ON pg_catalog.pg_largeobject_metadata USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_attrdef_adrelid_adnum_index ON pg_catalog.pg_attrdef USING btree (adrelid, adnum)\n                            CREATE UNIQUE INDEX pg_attrdef_adrelid_adnum_index ON pg_catalog.pg_attrdef USING btree (adrelid, adnum)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_opfamily_oid_index ON pg_catalog.pg_opfamily USING btree (oid)\n                            CREATE UNIQUE INDEX pg_opfamily_oid_index ON pg_catalog.pg_opfamily USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_cast_source_target_index ON pg_catalog.pg_cast USING btree (castsource, casttarget)\n                            CREATE UNIQUE INDEX pg_cast_source_target_index ON pg_catalog.pg_cast USING btree (castsource, casttarget)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_user_mapping_user_server_index ON pg_catalog.pg_user_mapping USING btree (umuser, umserver)\n                            CREATE UNIQUE INDEX pg_user_mapping_user_server_index ON pg_catalog.pg_user_mapping USING btree (umuser, umserver)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_language_oid_index ON pg_catalog.pg_language USING btree (oid)\n                            CREATE UNIQUE INDEX pg_language_oid_index ON pg_catalog.pg_language USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_publication_oid_index ON pg_catalog.pg_publication USING btree (oid)\n                            CREATE UNIQUE INDEX pg_publication_oid_index ON pg_catalog.pg_publication USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_statistic_ext_data_stxoid_index ON pg_catalog.pg_statistic_ext_data USING btree (stxoid)\n                            CREATE UNIQUE INDEX pg_statistic_ext_data_stxoid_index ON pg_catalog.pg_statistic_ext_data USING btree (stxoid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_language_name_index ON pg_catalog.pg_language USING btree (lanname)\n                            CREATE UNIQUE INDEX pg_language_name_index ON pg_catalog.pg_language USING btree (lanname)\n                        ": "",
    "\n                            CREATE INDEX pg_index_indrelid_index ON pg_catalog.pg_index USING btree (indrelid)\n                            CREATE INDEX pg_index_indrelid_index ON pg_catalog.pg_index USING btree (indrelid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_amop_oid_index ON pg_catalog.pg_amop USING btree (oid)\n                            CREATE UNIQUE INDEX pg_amop_oid_index ON pg_catalog.pg_amop USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_replication_origin_roname_index ON pg_catalog.pg_replication_origin USING btree (roname)\n                            CREATE UNIQUE INDEX pg_replication_origin_roname_index ON pg_catalog.pg_replication_origin USING btree (roname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_amproc_fam_proc_index ON pg_catalog.pg_amproc USING btree (amprocfamily, amproclefttype, amprocrighttype, amprocnum)\n                            CREATE UNIQUE INDEX pg_amproc_fam_proc_index ON pg_catalog.pg_amproc USING btree (amprocfamily, amproclefttype, amprocrighttype, amprocnum)\n                        ": "",
    "\n                            CREATE INDEX pg_shdepend_depender_index ON pg_catalog.pg_shdepend USING btree (dbid, classid, objid, objsubid)\n                            CREATE INDEX pg_shdepend_depender_index ON pg_catalog.pg_shdepend USING btree (dbid, classid, objid, objsubid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_ts_parser_prsname_index ON pg_catalog.pg_ts_parser USING btree (prsname, prsnamespace)\n                            CREATE UNIQUE INDEX pg_ts_parser_prsname_index ON pg_catalog.pg_ts_parser USING btree (prsname, prsnamespace)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_operator_oid_index ON pg_catalog.pg_operator USING btree (oid)\n                            CREATE UNIQUE INDEX pg_operator_oid_index ON pg_catalog.pg_operator USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_class_relname_nsp_index ON pg_catalog.pg_class USING btree (relname, relnamespace)\n                            CREATE UNIQUE INDEX pg_class_relname_nsp_index ON pg_catalog.pg_class USING btree (relname, relnamespace)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_rewrite_oid_index ON pg_catalog.pg_rewrite USING btree (oid)\n                            CREATE UNIQUE INDEX pg_rewrite_oid_index ON pg_catalog.pg_rewrite USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_ts_config_cfgname_index ON pg_catalog.pg_ts_config USING btree (cfgname, cfgnamespace)\n                            CREATE UNIQUE INDEX pg_ts_config_cfgname_index ON pg_catalog.pg_ts_config USING btree (cfgname, cfgnamespace)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_trigger_tgrelid_tgname_index ON pg_catalog.pg_trigger USING btree (tgrelid, tgname)\n                            CREATE UNIQUE INDEX pg_trigger_tgrelid_tgname_index ON pg_catalog.pg_trigger USING btree (tgrelid, tgname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_conversion_oid_index ON pg_catalog.pg_conversion USING btree (oid)\n                            CREATE UNIQUE INDEX pg_conversion_oid_index ON pg_catalog.pg_conversion USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_ts_config_oid_index ON pg_catalog.pg_ts_config USING btree (oid)\n                            CREATE UNIQUE INDEX pg_ts_config_oid_index ON pg_catalog.pg_ts_config USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_ts_parser_oid_index ON pg_catalog.pg_ts_parser USING btree (oid)\n                            CREATE UNIQUE INDEX pg_ts_parser_oid_index ON pg_catalog.pg_ts_parser USING btree (oid)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_namespace_nspname_index ON pg_catalog.pg_namespace USING btree (nspname)\n                            CREATE UNIQUE INDEX pg_namespace_nspname_index ON pg_catalog.pg_namespace USING btree (nspname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_publication_pubname_index ON pg_catalog.pg_publication USING btree (pubname)\n                            CREATE UNIQUE INDEX pg_publication_pubname_index ON pg_catalog.pg_publication USING btree (pubname)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_amop_fam_strat_index ON pg_catalog.pg_amop USING btree (amopfamily, amoplefttype, amoprighttype, amopstrategy)\n                            CREATE UNIQUE INDEX pg_amop_fam_strat_index ON pg_catalog.pg_amop USING btree (amopfamily, amoplefttype, amoprighttype, amopstrategy)\n                        ": "",
    "\n                            CREATE UNIQUE INDEX pg_opclass_oid_index ON pg_catalog.pg_opclass USING btree (oid)\n                            CREATE UNIQUE INDEX pg_opclass_oid_index ON pg_catalog.pg_opclass USING btree (oid)\n                        ": "",
    "\n                            snowball\n                            snowball\n                        ": "",
    "\n                            thesaurus\n                            thesaurus\n                        ": "",
    "\n                            ispell\n                            ispell\n                        ": "",
    "\n                            synonym\n                            synonym\n                        ": "",
    "\n                            America/Phoenix\n                            America/Phoenix\n                        ": "",
    "\n                            America/Manaus\n                            America/Manaus\n                        ": "",
    "\n                            posix/Turkey\n                            posix/Turkey\n                        ": "",
    "\n                            posix/Etc/GMT\n                            posix/Etc/GMT\n                        ": "",
    "\n                            Antarctica/Rothera\n                            Antarctica/Rothera\n                        ": "",
    "\n                            America/Puerto_Rico\n                            America/Puerto_Rico\n                        ": "",
    "\n                            America/Grand_Turk\n                            America/Grand_Turk\n                        ": "",
    "\n                            posix/Atlantic/Jan_Mayen\n                            posix/Atlantic/Jan_Mayen\n                        ": "",
    "\n                            America/Yellowknife\n                            America/Yellowknife\n                        ": "",
    "\n                            Asia/Thimbu\n                            Asia/Thimbu\n                        ": "",
    "\n                            posix/EET\n                            posix/EET\n                        ": "",
    "\n                            posix/Asia/Yakutsk\n                            posix/Asia/Yakutsk\n                        ": "",
    "\n                            posix/Pacific/Truk\n                            posix/Pacific/Truk\n                        ": "",
    "\n                            America/Tortola\n                            America/Tortola\n                        ": "",
    "\n                            posix/America/Goose_Bay\n                            posix/America/Goose_Bay\n                        ": "",
    "\n                            posix/Africa/Luanda\n                            posix/Africa/Luanda\n                        ": "",
    "\n                            posix/America/Virgin\n                            posix/America/Virgin\n                        ": "",
    "\n                            posix/Pacific/Easter\n                            posix/Pacific/Easter\n                        ": "",
    "\n                            Africa/Lusaka\n                            Africa/Lusaka\n                        ": "",
    "\n                            Etc/GMT-6\n                            Etc/GMT-6\n                        ": "",
    "\n                            America/Lima\n                            America/Lima\n                        ": "",
    "\n                            posix/Europe/Moscow\n                            posix/Europe/Moscow\n                        ": "",
    "\n                            Asia/Yerevan\n                            Asia/Yerevan\n                        ": "",
    "\n                            Antarctica/DumontDUrville\n                            Antarctica/DumontDUrville\n                        ": "",
    "\n                            America/Argentina/ComodRivadavia\n                            America/Argentina/ComodRivadavia\n                        ": "",
    "\n                            Europe/Simferopol\n                            Europe/Simferopol\n                        ": "",
    "\n                            Etc/GMT-1\n                            Etc/GMT-1\n                        ": "",
    "\n                            posix/Pacific/Wallis\n                            posix/Pacific/Wallis\n                        ": "",
    "\n                            Etc/Universal\n                            Etc/Universal\n                        ": "",
    "\n                            America/Mexico_City\n                            America/Mexico_City\n                        ": "",
    "\n                            Asia/Khandyga\n                            Asia/Khandyga\n                        ": "",
    "\n                            America/Montserrat\n                            America/Montserrat\n                        ": "",
    "\n                            posix/Asia/Colombo\n                            posix/Asia/Colombo\n                        ": "",
    "\n                            posix/America/St_Johns\n                            posix/America/St_Johns\n                        ": "",
    "\n                            posix/America/Noronha\n                            posix/America/Noronha\n                        ": "",
    "\n                            Australia/South\n                            Australia/South\n                        ": "",
    "\n                            Asia/Omsk\n                            Asia/Omsk\n                        ": "",
    "\n                            posix/Europe/Dublin\n                            posix/Europe/Dublin\n                        ": "",
    "\n                            posix/America/Tortola\n                            posix/America/Tortola\n                        ": "",
    "\n                            posix/America/Rosario\n                            posix/America/Rosario\n                        ": "",
    "\n                            Asia/Aqtobe\n                            Asia/Aqtobe\n                        ": "",
    "\n                            Europe/Helsinki\n                            Europe/Helsinki\n                        ": "",
    "\n                            Asia/Rangoon\n                            Asia/Rangoon\n                        ": "",
    "\n                            Indian/Mauritius\n                            Indian/Mauritius\n                        ": "",
    "\n                            posix/America/La_Paz\n                            posix/America/La_Paz\n                        ": "",
    "\n                            America/North_Dakota/Center\n                            America/North_Dakota/Center\n                        ": "",
    "\n                            posix/America/Inuvik\n                            posix/America/Inuvik\n                        ": "",
    "\n                            posix/America/Catamarca\n                            posix/America/Catamarca\n                        ": "",
    "\n                            Asia/Tashkent\n                            Asia/Tashkent\n                        ": "",
    "\n                            posix/America/Vancouver\n                            posix/America/Vancouver\n                        ": "",
    "\n                            posix/Etc/GMT-11\n                            posix/Etc/GMT-11\n                        ": "",
    "\n                            Pacific/Noumea\n                            Pacific/Noumea\n                        ": "",
    "\n                            America/Resolute\n                            America/Resolute\n                        ": "",
    "\n                            posix/America/Cordoba\n                            posix/America/Cordoba\n                        ": "",
    "\n                            America/Atikokan\n                            America/Atikokan\n                        ": "",
    "\n                            Africa/Addis_Ababa\n                            Africa/Addis_Ababa\n                        ": "",
    "\n                            Poland\n                            Poland\n                        ": "",
    "\n                            Indian/Maldives\n                            Indian/Maldives\n                        ": "",
    "\n                            Europe/Podgorica\n                            Europe/Podgorica\n                        ": "",
    "\n                            Africa/Nouakchott\n                            Africa/Nouakchott\n                        ": "",
    "\n                            posix/Africa/Dar_es_Salaam\n                            posix/Africa/Dar_es_Salaam\n                        ": "",
    "\n                            America/Sao_Paulo\n                            America/Sao_Paulo\n                        ": "",
    "\n                            America/Indiana/Vincennes\n                            America/Indiana/Vincennes\n                        ": "",
    "\n                            posix/Europe/Uzhgorod\n                            posix/Europe/Uzhgorod\n                        ": "",
    "\n                            posix/Africa/Bissau\n                            posix/Africa/Bissau\n                        ": "",
    "\n                            posix/America/Fortaleza\n                            posix/America/Fortaleza\n                        ": "",
    "\n                            Pacific/Palau\n                            Pacific/Palau\n                        ": "",
    "\n                            posix/America/Jamaica\n                            posix/America/Jamaica\n                        ": "",
    "\n                            Etc/GMT0\n                            Etc/GMT0\n                        ": "",
    "\n                            America/North_Dakota/New_Salem\n                            America/North_Dakota/New_Salem\n                        ": "",
    "\n                            posix/America/Kentucky/Monticello\n                            posix/America/Kentucky/Monticello\n                        ": "",
    "\n                            posix/America/Bahia_Banderas\n                            posix/America/Bahia_Banderas\n                        ": "",
    "\n                            Europe/Sofia\n                            Europe/Sofia\n                        ": "",
    "\n                            Etc/GMT+11\n                            Etc/GMT+11\n                        ": "",
    "\n                            Asia/Singapore\n                            Asia/Singapore\n                        ": "",
    "\n                            America/Godthab\n                            America/Godthab\n                        ": "",
    "\n                            posix/Atlantic/Reykjavik\n                            posix/Atlantic/Reykjavik\n                        ": "",
    "\n                            Asia/Kuala_Lumpur\n                            Asia/Kuala_Lumpur\n                        ": "",
    "\n                            Pacific/Port_Moresby\n                            Pacific/Port_Moresby\n                        ": "",
    "\n                            posix/America/Cayenne\n                            posix/America/Cayenne\n                        ": "",
    "\n                            posix/Kwajalein\n                            posix/Kwajalein\n                        ": "",
    "\n                            posix/EST5EDT\n                            posix/EST5EDT\n                        ": "",
    "\n                            Pacific/Gambier\n                            Pacific/Gambier\n                        ": "",
    "\n                            posix/Europe/Riga\n                            posix/Europe/Riga\n                        ": "",
    "\n                            posix/Etc/GMT-0\n                            posix/Etc/GMT-0\n                        ": "",
    "\n                            SystemV/PST8PDT\n                            SystemV/PST8PDT\n                        ": "",
    "\n                            America/Havana\n                            America/Havana\n                        ": "",
    "\n                            Asia/Jakarta\n                            Asia/Jakarta\n                        ": "",
    "\n                            posix/MST\n                            posix/MST\n                        ": "",
    "\n                            Europe/Isle_of_Man\n                            Europe/Isle_of_Man\n                        ": "",
    "\n                            posix/America/Chicago\n                            posix/America/Chicago\n                        ": "",
    "\n                            America/Port_of_Spain\n                            America/Port_of_Spain\n                        ": "",
    "\n                            posix/Africa/Conakry\n                            posix/Africa/Conakry\n                        ": "",
    "\n                            posix/Australia/Lindeman\n                            posix/Australia/Lindeman\n                        ": "",
    "\n                            posix/Pacific/Majuro\n                            posix/Pacific/Majuro\n                        ": "",
    "\n                            posix/Europe/San_Marino\n                            posix/Europe/San_Marino\n                        ": "",
    "\n                            posix/Asia/Hovd\n                            posix/Asia/Hovd\n                        ": "",
    "\n                            posix/SystemV/PST8PDT\n                            posix/SystemV/PST8PDT\n                        ": "",
    "\n                            America/Toronto\n                            America/Toronto\n                        ": "",
    "\n                            Pacific/Pitcairn\n                            Pacific/Pitcairn\n                        ": "",
    "\n                            Asia/Almaty\n                            Asia/Almaty\n                        ": "",
    "\n                            posix/UTC\n                            posix/UTC\n                        ": "",
    "\n                            posix/SystemV/EST5\n                            posix/SystemV/EST5\n                        ": "",
    "\n                            NZ-CHAT\n                            NZ-CHAT\n                        ": "",
    "\n                            Canada/Mountain\n                            Canada/Mountain\n                        ": "",
    "\n                            posix/Japan\n                            posix/Japan\n                        ": "",
    "\n                            posix/America/Creston\n                            posix/America/Creston\n                        ": "",
    "\n                            posix/America/Nipigon\n                            posix/America/Nipigon\n                        ": "",
    "\n                            Atlantic/Reykjavik\n                            Atlantic/Reykjavik\n                        ": "",
    "\n                            posix/WET\n                            posix/WET\n                        ": "",
    "\n                            Asia/Makassar\n                            Asia/Makassar\n                        ": "",
    "\n                            Asia/Kabul\n                            Asia/Kabul\n                        ": "",
    "\n                            posix/Africa/Monrovia\n                            posix/Africa/Monrovia\n                        ": "",
    "\n                            Antarctica/Syowa\n                            Antarctica/Syowa\n                        ": "",
    "\n                            America/Cayenne\n                            America/Cayenne\n                        ": "",
    "\n                            Europe/Kiev\n                            Europe/Kiev\n                        ": "",
    "\n                            Australia/Victoria\n                            Australia/Victoria\n                        ": "",
    "\n                            posix/Europe/Volgograd\n                            posix/Europe/Volgograd\n                        ": "",
    "\n                            Etc/GMT+1\n                            Etc/GMT+1\n                        ": "",
    "\n                            Pacific/Guadalcanal\n                            Pacific/Guadalcanal\n                        ": "",
    "\n                            posix/America/Aruba\n                            posix/America/Aruba\n                        ": "",
    "\n                            ROK\n                            ROK\n                        ": "",
    "\n                            Eire\n                            Eire\n                        ": "",
    "\n                            Australia/NSW\n                            Australia/NSW\n                        ": "",
    "\n                            posix/Europe/Oslo\n                            posix/Europe/Oslo\n                        ": "",
    "\n                            Pacific/Yap\n                            Pacific/Yap\n                        ": "",
    "\n                            posix/Zulu\n                            posix/Zulu\n                        ": "",
    "\n                            Pacific/Chatham\n                            Pacific/Chatham\n                        ": "",
    "\n                            posix/America/Santiago\n                            posix/America/Santiago\n                        ": "",
    "\n                            Atlantic/Bermuda\n                            Atlantic/Bermuda\n                        ": "",
    "\n                            Asia/Tehran\n                            Asia/Tehran\n                        ": "",
    "\n                            posix/America/Thule\n                            posix/America/Thule\n                        ": "",
    "\n                            posix/Asia/Seoul\n                            posix/Asia/Seoul\n                        ": "",
    "\n                            posix/America/Miquelon\n                            posix/America/Miquelon\n                        ": "",
    "\n                            America/Indiana/Petersburg\n                            America/Indiana/Petersburg\n                        ": "",
    "\n                            Mexico/General\n                            Mexico/General\n                        ": "",
    "\n                            Israel\n                            Israel\n                        ": "",
    "\n                            posix/America/Guadeloupe\n                            posix/America/Guadeloupe\n                        ": "",
    "\n                            Europe/Riga\n                            Europe/Riga\n                        ": "",
    "\n                            America/Ojinaga\n                            America/Ojinaga\n                        ": "",
    "\n                            posix/Australia/Darwin\n                            posix/Australia/Darwin\n                        ": "",
    "\n                            America/Jamaica\n                            America/Jamaica\n                        ": "",
    "\n                            Asia/Novokuznetsk\n                            Asia/Novokuznetsk\n                        ": "",
    "\n                            Etc/GMT+0\n                            Etc/GMT+0\n                        ": "",
    "\n                            posix/Asia/Kamchatka\n                            posix/Asia/Kamchatka\n                        ": "",
    "\n                            posix/America/Guyana\n                            posix/America/Guyana\n                        ": "",
    "\n                            America/Belem\n                            America/Belem\n                        ": "",
    "\n                            America/Belize\n                            America/Belize\n                        ": "",
    "\n                            posix/MET\n                            posix/MET\n                        ": "",
    "\n                            posix/America/Moncton\n                            posix/America/Moncton\n                        ": "",
    "\n                            Australia/Adelaide\n                            Australia/Adelaide\n                        ": "",
    "\n                            posix/America/Argentina/La_Rioja\n                            posix/America/Argentina/La_Rioja\n                        ": "",
    "\n                            SystemV/AST4ADT\n                            SystemV/AST4ADT\n                        ": "",
    "\n                            America/St_Kitts\n                            America/St_Kitts\n                        ": "",
    "\n                            America/Eirunepe\n                            America/Eirunepe\n                        ": "",
    "\n                            America/Nuuk\n                            America/Nuuk\n                        ": "",
    "\n                            posix/Etc/GMT-6\n                            posix/Etc/GMT-6\n                        ": "",
    "\n                            posix/America/Indiana/Knox\n                            posix/America/Indiana/Knox\n                        ": "",
    "\n                            posix/Africa/Mogadishu\n                            posix/Africa/Mogadishu\n                        ": "",
    "\n                            Asia/Novosibirsk\n                            Asia/Novosibirsk\n                        ": "",
    "\n                            posix/Europe/Lisbon\n                            posix/Europe/Lisbon\n                        ": "",
    "\n                            posix/Etc/Universal\n                            posix/Etc/Universal\n                        ": "",
    "\n                            posix/Asia/Qatar\n                            posix/Asia/Qatar\n                        ": "",
    "\n                            posix/Africa/Libreville\n                            posix/Africa/Libreville\n                        ": "",
    "\n                            posix/Asia/Phnom_Penh\n                            posix/Asia/Phnom_Penh\n                        ": "",
    "\n                            America/Dawson\n                            America/Dawson\n                        ": "",
    "\n                            Europe/Busingen\n                            Europe/Busingen\n                        ": "",
    "\n                            posix/Asia/Hong_Kong\n                            posix/Asia/Hong_Kong\n                        ": "",
    "\n                            America/Kentucky/Louisville\n                            America/Kentucky/Louisville\n                        ": "",
    "\n                            Pacific/Niue\n                            Pacific/Niue\n                        ": "",
    "\n                            Pacific/Truk\n                            Pacific/Truk\n                        ": "",
    "\n                            posix/America/Paramaribo\n                            posix/America/Paramaribo\n                        ": "",
    "\n                            posix/Africa/Casablanca\n                            posix/Africa/Casablanca\n                        ": "",
    "\n                            Australia/North\n                            Australia/North\n                        ": "",
    "\n                            posix/Africa/Juba\n                            posix/Africa/Juba\n                        ": "",
    "\n                            posix/Antarctica/Troll\n                            posix/Antarctica/Troll\n                        ": "",
    "\n                            posix/America/Port-au-Prince\n                            posix/America/Port-au-Prince\n                        ": "",
    "\n                            Pacific/Kiritimati\n                            Pacific/Kiritimati\n                        ": "",
    "\n                            posix/Asia/Brunei\n                            posix/Asia/Brunei\n                        ": "",
    "\n                            Pacific/Bougainville\n                            Pacific/Bougainville\n                        ": "",
    "\n                            Africa/Asmara\n                            Africa/Asmara\n                        ": "",
    "\n                            Europe/Chisinau\n                            Europe/Chisinau\n                        ": "",
    "\n                            America/Paramaribo\n                            America/Paramaribo\n                        ": "",
    "\n                            America/Fortaleza\n                            America/Fortaleza\n                        ": "",
    "\n                            posix/Asia/Damascus\n                            posix/Asia/Damascus\n                        ": "",
    "\n                            posix/America/Montevideo\n                            posix/America/Montevideo\n                        ": "",
    "\n                            Australia/Lindeman\n                            Australia/Lindeman\n                        ": "",
    "\n                            America/Sitka\n                            America/Sitka\n                        ": "",
    "\n                            America/Cayman\n                            America/Cayman\n                        ": "",
    "\n                            posix/Pacific/Kwajalein\n                            posix/Pacific/Kwajalein\n                        ": "",
    "\n                            posix/CST6CDT\n                            posix/CST6CDT\n                        ": "",
    "\n                            America/Atka\n                            America/Atka\n                        ": "",
    "\n                            America/La_Paz\n                            America/La_Paz\n                        ": "",
    "\n                            Africa/Lubumbashi\n                            Africa/Lubumbashi\n                        ": "",
    "\n                            posix/America/Grenada\n                            posix/America/Grenada\n                        ": "",
    "\n                            posix/Australia/Perth\n                            posix/Australia/Perth\n                        ": "",
    "\n                            posix/Europe/Helsinki\n                            posix/Europe/Helsinki\n                        ": "",
    "\n                            posix/Asia/Dhaka\n                            posix/Asia/Dhaka\n                        ": "",
    "\n                            Factory\n                            Factory\n                        ": "",
    "\n                            posix/Etc/GMT-5\n                            posix/Etc/GMT-5\n                        ": "",
    "\n                            America/Coral_Harbour\n                            America/Coral_Harbour\n                        ": "",
    "\n                            America/Santa_Isabel\n                            America/Santa_Isabel\n                        ": "",
    "\n                            posix/SystemV/YST9\n                            posix/SystemV/YST9\n                        ": "",
    "\n                            Pacific/Marquesas\n                            Pacific/Marquesas\n                        ": "",
    "\n                            Europe/Prague\n                            Europe/Prague\n                        ": "",
    "\n                            Asia/Hebron\n                            Asia/Hebron\n                        ": "",
    "\n                            posix/Asia/Vientiane\n                            posix/Asia/Vientiane\n                        ": "",
    "\n                            America/Porto_Velho\n                            America/Porto_Velho\n                        ": "",
    "\n                            Australia/Perth\n                            Australia/Perth\n                        ": "",
    "\n                            posix/Africa/Mbabane\n                            posix/Africa/Mbabane\n                        ": "",
    "\n                            posix/US/Michigan\n                            posix/US/Michigan\n                        ": "",
    "\n                            posix/Africa/Niamey\n                            posix/Africa/Niamey\n                        ": "",
    "\n                            posix/Chile/Continental\n                            posix/Chile/Continental\n                        ": "",
    "\n                            America/Asuncion\n                            America/Asuncion\n                        ": "",
    "\n                            posix/America/Santarem\n                            posix/America/Santarem\n                        ": "",
    "\n                            Cuba\n                            Cuba\n                        ": "",
    "\n                            posix/Australia/Broken_Hill\n                            posix/Australia/Broken_Hill\n                        ": "",
    "\n                            posix/Asia/Macao\n                            posix/Asia/Macao\n                        ": "",
    "\n                            Canada/Central\n                            Canada/Central\n                        ": "",
    "\n                            Europe/Brussels\n                            Europe/Brussels\n                        ": "",
    "\n                            Etc/UCT\n                            Etc/UCT\n                        ": "",
    "\n                            posix/Indian/Reunion\n                            posix/Indian/Reunion\n                        ": "",
    "\n                            Asia/Magadan\n                            Asia/Magadan\n                        ": "",
    "\n                            America/Goose_Bay\n                            America/Goose_Bay\n                        ": "",
    "\n                            America/Argentina/Cordoba\n                            America/Argentina/Cordoba\n                        ": "",
    "\n                            America/Bogota\n                            America/Bogota\n                        ": "",
    "\n                            posix/Mexico/BajaNorte\n                            posix/Mexico/BajaNorte\n                        ": "",
    "\n                            Asia/Qostanay\n                            Asia/Qostanay\n                        ": "",
    "\n                            posix/Pacific/Noumea\n                            posix/Pacific/Noumea\n                        ": "",
    "\n                            posix/Asia/Chongqing\n                            posix/Asia/Chongqing\n                        ": "",
    "\n                            Australia/Tasmania\n                            Australia/Tasmania\n                        ": "",
    "\n                            Atlantic/St_Helena\n                            Atlantic/St_Helena\n                        ": "",
    "\n                            Asia/Amman\n                            Asia/Amman\n                        ": "",
    "\n                            Europe/Bucharest\n                            Europe/Bucharest\n                        ": "",
    "\n                            posix/Indian/Mayotte\n                            posix/Indian/Mayotte\n                        ": "",
    "\n                            posix/Pacific/Auckland\n                            posix/Pacific/Auckland\n                        ": "",
    "\n                            US/Alaska\n                            US/Alaska\n                        ": "",
    "\n                            posix/America/Martinique\n                            posix/America/Martinique\n                        ": "",
    "\n                            posix/Asia/Amman\n                            posix/Asia/Amman\n                        ": "",
    "\n                            posix/America/North_Dakota/Beulah\n                            posix/America/North_Dakota/Beulah\n                        ": "",
    "\n                            Africa/Monrovia\n                            Africa/Monrovia\n                        ": "",
    "\n                            posix/Australia/Queensland\n                            posix/Australia/Queensland\n                        ": "",
    "\n                            SystemV/EST5EDT\n                            SystemV/EST5EDT\n                        ": "",
    "\n                            America/Punta_Arenas\n                            America/Punta_Arenas\n                        ": "",
    "\n                            Asia/Beirut\n                            Asia/Beirut\n                        ": "",
    "\n                            posix/Pacific/Gambier\n                            posix/Pacific/Gambier\n                        ": "",
    "\n                            America/Antigua\n                            America/Antigua\n                        ": "",
    "\n                            Brazil/Acre\n                            Brazil/Acre\n                        ": "",
    "\n                            posix/Pacific/Fakaofo\n                            posix/Pacific/Fakaofo\n                        ": "",
    "\n                            Asia/Jerusalem\n                            Asia/Jerusalem\n                        ": "",
    "\n                            Africa/Ouagadougou\n                            Africa/Ouagadougou\n                        ": "",
    "\n                            Etc/Greenwich\n                            Etc/Greenwich\n                        ": "",
    "\n                            Indian/Mahe\n                            Indian/Mahe\n                        ": "",
    "\n                            posix/America/Araguaina\n                            posix/America/Araguaina\n                        ": "",
    "\n                            posix/Pacific/Palau\n                            posix/Pacific/Palau\n                        ": "",
    "\n                            posix/Pacific/Funafuti\n                            posix/Pacific/Funafuti\n                        ": "",
    "\n                            UTC\n                            UTC\n                        ": "",
    "\n                            America/Argentina/Catamarca\n                            America/Argentina/Catamarca\n                        ": "",
    "\n                            Asia/Ulan_Bator\n                            Asia/Ulan_Bator\n                        ": "",
    "\n                            posix/Africa/Maseru\n                            posix/Africa/Maseru\n                        ": "",
    "\n                            Greenwich\n                            Greenwich\n                        ": "",
    "\n                            Australia/Sydney\n                            Australia/Sydney\n                        ": "",
    "\n                            posix/Indian/Comoro\n                            posix/Indian/Comoro\n                        ": "",
    "\n                            Australia/Broken_Hill\n                            Australia/Broken_Hill\n                        ": "",
    "\n                            America/Cambridge_Bay\n                            America/Cambridge_Bay\n                        ": "",
    "\n                            Africa/Freetown\n                            Africa/Freetown\n                        ": "",
    "\n                            Asia/Bangkok\n                            Asia/Bangkok\n                        ": "",
    "\n                            posix/Iran\n                            posix/Iran\n                        ": "",
    "\n                            posix/America/Port_of_Spain\n                            posix/America/Port_of_Spain\n                        ": "",
    "\n                            posix/Atlantic/Faroe\n                            posix/Atlantic/Faroe\n                        ": "",
    "\n                            Asia/Aden\n                            Asia/Aden\n                        ": "",
    "\n                            posix/Pacific/Pago_Pago\n                            posix/Pacific/Pago_Pago\n                        ": "",
    "\n                            posix/Europe/Busingen\n                            posix/Europe/Busingen\n                        ": "",
    "\n                            America/Tijuana\n                            America/Tijuana\n                        ": "",
    "\n                            America/Louisville\n                            America/Louisville\n                        ": "",
    "\n                            posix/Europe/Paris\n                            posix/Europe/Paris\n                        ": "",
    "\n                            posix/Europe/Belgrade\n                            posix/Europe/Belgrade\n                        ": "",
    "\n                            posix/Cuba\n                            posix/Cuba\n                        ": "",
    "\n                            posix/America/Argentina/Cordoba\n                            posix/America/Argentina/Cordoba\n                        ": "",
    "\n                            posix/America/Cambridge_Bay\n                            posix/America/Cambridge_Bay\n                        ": "",
    "\n                            posix/America/Matamoros\n                            posix/America/Matamoros\n                        ": "",
    "\n                            Etc/GMT\n                            Etc/GMT\n                        ": "",
    "\n                            posix/Australia/Currie\n                            posix/Australia/Currie\n                        ": "",
    "\n                            posix/America/Detroit\n                            posix/America/Detroit\n                        ": "",
    "\n                            posix/America/Sitka\n                            posix/America/Sitka\n                        ": "",
    "\n                            posix/Pacific/Yap\n                            posix/Pacific/Yap\n                        ": "",
    "\n                            Etc/GMT-13\n                            Etc/GMT-13\n                        ": "",
    "\n                            posix/Canada/Newfoundland\n                            posix/Canada/Newfoundland\n                        ": "",
    "\n                            Europe/Astrakhan\n                            Europe/Astrakhan\n                        ": "",
    "\n                            Europe/Nicosia\n                            Europe/Nicosia\n                        ": "",
    "\n                            posix/US/Pacific\n                            posix/US/Pacific\n                        ": "",
    "\n                            EST5EDT\n                            EST5EDT\n                        ": "",
    "\n                            Asia/Tel_Aviv\n                            Asia/Tel_Aviv\n                        ": "",
    "\n                            posix/Europe/Minsk\n                            posix/Europe/Minsk\n                        ": "",
    "\n                            Pacific/Easter\n                            Pacific/Easter\n                        ": "",
    "\n                            posix/Etc/GMT+6\n                            posix/Etc/GMT+6\n                        ": "",
    "\n                            posix/Africa/Abidjan\n                            posix/Africa/Abidjan\n                        ": "",
    "\n                            posix/Europe/Zagreb\n                            posix/Europe/Zagreb\n                        ": "",
    "\n                            Singapore\n                            Singapore\n                        ": "",
    "\n                            posix/Iceland\n                            posix/Iceland\n                        ": "",
    "\n                            posix/SystemV/YST9YDT\n                            posix/SystemV/YST9YDT\n                        ": "",
    "\n                            posix/America/New_York\n                            posix/America/New_York\n                        ": "",
    "\n                            Africa/Khartoum\n                            Africa/Khartoum\n                        ": "",
    "\n                            posix/Canada/Central\n                            posix/Canada/Central\n                        ": "",
    "\n                            posix/Indian/Mahe\n                            posix/Indian/Mahe\n                        ": "",
    "\n                            Asia/Ulaanbaatar\n                            Asia/Ulaanbaatar\n                        ": "",
    "\n                            posix/Europe/Monaco\n                            posix/Europe/Monaco\n                        ": "",
    "\n                            posix/Europe/Isle_of_Man\n                            posix/Europe/Isle_of_Man\n                        ": "",
    "\n                            posix/Etc/GMT-14\n                            posix/Etc/GMT-14\n                        ": "",
    "\n                            posix/Eire\n                            posix/Eire\n                        ": "",
    "\n                            posix/Asia/Singapore\n                            posix/Asia/Singapore\n                        ": "",
    "\n                            posix/Asia/Aden\n                            posix/Asia/Aden\n                        ": "",
    "\n                            Europe/Belfast\n                            Europe/Belfast\n                        ": "",
    "\n                            America/St_Barthelemy\n                            America/St_Barthelemy\n                        ": "",
    "\n                            Atlantic/Madeira\n                            Atlantic/Madeira\n                        ": "",
    "\n                            Atlantic/Cape_Verde\n                            Atlantic/Cape_Verde\n                        ": "",
    "\n                            posix/Asia/Yangon\n                            posix/Asia/Yangon\n                        ": "",
    "\n                            posix/America/Thunder_Bay\n                            posix/America/Thunder_Bay\n                        ": "",
    "\n                            posix/Indian/Mauritius\n                            posix/Indian/Mauritius\n                        ": "",
    "\n                            posix/Antarctica/Macquarie\n                            posix/Antarctica/Macquarie\n                        ": "",
    "\n                            GB\n                            GB\n                        ": "",
    "\n                            America/Thule\n                            America/Thule\n                        ": "",
    "\n                            posix/Pacific/Tarawa\n                            posix/Pacific/Tarawa\n                        ": "",
    "\n                            Europe/Tallinn\n                            Europe/Tallinn\n                        ": "",
    "\n                            America/Cuiaba\n                            America/Cuiaba\n                        ": "",
    "\n                            posix/Universal\n                            posix/Universal\n                        ": "",
    "\n                            posix/Asia/Hebron\n                            posix/Asia/Hebron\n                        ": "",
    "\n                            America/Buenos_Aires\n                            America/Buenos_Aires\n                        ": "",
    "\n                            America/Virgin\n                            America/Virgin\n                        ": "",
    "\n                            posix/Africa/Lubumbashi\n                            posix/Africa/Lubumbashi\n                        ": "",
    "\n                            posix/GMT\n                            posix/GMT\n                        ": "",
    "\n                            America/Winnipeg\n                            America/Winnipeg\n                        ": "",
    "\n                            Africa/Lome\n                            Africa/Lome\n                        ": "",
    "\n                            posix/Australia/NSW\n                            posix/Australia/NSW\n                        ": "",
    "\n                            Europe/Skopje\n                            Europe/Skopje\n                        ": "",
    "\n                            America/Chicago\n                            America/Chicago\n                        ": "",
    "\n                            posix/Pacific/Johnston\n                            posix/Pacific/Johnston\n                        ": "",
    "\n                            Europe/Lisbon\n                            Europe/Lisbon\n                        ": "",
    "\n                            Asia/Istanbul\n                            Asia/Istanbul\n                        ": "",
    "\n                            Europe/San_Marino\n                            Europe/San_Marino\n                        ": "",
    "\n                            posix/America/Yakutat\n                            posix/America/Yakutat\n                        ": "",
    "\n                            America/Fort_Wayne\n                            America/Fort_Wayne\n                        ": "",
    "\n                            posix/Pacific/Niue\n                            posix/Pacific/Niue\n                        ": "",
    "\n                            Canada/Eastern\n                            Canada/Eastern\n                        ": "",
    "\n                            America/Dawson_Creek\n                            America/Dawson_Creek\n                        ": "",
    "\n                            posix/America/Dawson\n                            posix/America/Dawson\n                        ": "",
    "\n                            Africa/Casablanca\n                            Africa/Casablanca\n                        ": "",
    "\n                            Europe/Guernsey\n                            Europe/Guernsey\n                        ": "",
    "\n                            Asia/Harbin\n                            Asia/Harbin\n                        ": "",
    "\n                            posix/Pacific/Chuuk\n                            posix/Pacific/Chuuk\n                        ": "",
    "\n                            posix/Canada/Mountain\n                            posix/Canada/Mountain\n                        ": "",
    "\n                            posix/Australia/North\n                            posix/Australia/North\n                        ": "",
    "\n                            posix/UCT\n                            posix/UCT\n                        ": "",
    "\n                            posix/Africa/Brazzaville\n                            posix/Africa/Brazzaville\n                        ": "",
    "\n                            Australia/Hobart\n                            Australia/Hobart\n                        ": "",
    "\n                            posix/Africa/Asmera\n                            posix/Africa/Asmera\n                        ": "",
    "\n                            Pacific/Tahiti\n                            Pacific/Tahiti\n                        ": "",
    "\n                            Europe/Vienna\n                            Europe/Vienna\n                        ": "",
    "\n                            America/Miquelon\n                            America/Miquelon\n                        ": "",
    "\n                            posix/Pacific/Kiritimati\n                            posix/Pacific/Kiritimati\n                        ": "",
    "\n                            posix/Asia/Yerevan\n                            posix/Asia/Yerevan\n                        ": "",
    "\n                            America/Catamarca\n                            America/Catamarca\n                        ": "",
    "\n                            Africa/Ceuta\n                            Africa/Ceuta\n                        ": "",
    "\n                            Europe/London\n                            Europe/London\n                        ": "",
    "\n                            Atlantic/Faroe\n                            Atlantic/Faroe\n                        ": "",
    "\n                            posix/Australia/Melbourne\n                            posix/Australia/Melbourne\n                        ": "",
    "\n                            posix/Asia/Aqtobe\n                            posix/Asia/Aqtobe\n                        ": "",
    "\n                            posix/America/Tijuana\n                            posix/America/Tijuana\n                        ": "",
    "\n                            America/Iqaluit\n                            America/Iqaluit\n                        ": "",
    "\n                            America/Mendoza\n                            America/Mendoza\n                        ": "",
    "\n                            posix/Etc/UTC\n                            posix/Etc/UTC\n                        ": "",
    "\n                            posix/America/Santa_Isabel\n                            posix/America/Santa_Isabel\n                        ": "",
    "\n                            Asia/Chita\n                            Asia/Chita\n                        ": "",
    "\n                            posix/Asia/Tomsk\n                            posix/Asia/Tomsk\n                        ": "",
    "\n                            posix/America/Bogota\n                            posix/America/Bogota\n                        ": "",
    "\n                            SystemV/HST10\n                            SystemV/HST10\n                        ": "",
    "\n                            Europe/Ulyanovsk\n                            Europe/Ulyanovsk\n                        ": "",
    "\n                            posix/America/Dawson_Creek\n                            posix/America/Dawson_Creek\n                        ": "",
    "\n                            America/Scoresbysund\n                            America/Scoresbysund\n                        ": "",
    "\n                            Asia/Baghdad\n                            Asia/Baghdad\n                        ": "",
    "\n                            posix/America/Rainy_River\n                            posix/America/Rainy_River\n                        ": "",
    "\n                            posix/Asia/Qostanay\n                            posix/Asia/Qostanay\n                        ": "",
    "\n                            posix/Africa/Lome\n                            posix/Africa/Lome\n                        ": "",
    "\n                            posix/Australia/Sydney\n                            posix/Australia/Sydney\n                        ": "",
    "\n                            Europe/Moscow\n                            Europe/Moscow\n                        ": "",
    "\n                            posix/Asia/Kabul\n                            posix/Asia/Kabul\n                        ": "",
    "\n                            Canada/Atlantic\n                            Canada/Atlantic\n                        ": "",
    "\n                            posix/Etc/GMT-8\n                            posix/Etc/GMT-8\n                        ": "",
    "\n                            posix/Pacific/Efate\n                            posix/Pacific/Efate\n                        ": "",
    "\n                            posix/America/Argentina/Salta\n                            posix/America/Argentina/Salta\n                        ": "",
    "\n                            posix/Portugal\n                            posix/Portugal\n                        ": "",
    "\n                            GMT-0\n                            GMT-0\n                        ": "",
    "\n                            Australia/West\n                            Australia/West\n                        ": "",
    "\n                            Australia/Currie\n                            Australia/Currie\n                        ": "",
    "\n                            America/Bahia\n                            America/Bahia\n                        ": "",
    "\n                            Canada/Yukon\n                            Canada/Yukon\n                        ": "",
    "\n                            posix/Europe/Athens\n                            posix/Europe/Athens\n                        ": "",
    "\n                            America/Denver\n                            America/Denver\n                        ": "",
    "\n                            posix/America/Blanc-Sablon\n                            posix/America/Blanc-Sablon\n                        ": "",
    "\n                            Europe/Oslo\n                            Europe/Oslo\n                        ": "",
    "\n                            posix/Canada/Atlantic\n                            posix/Canada/Atlantic\n                        ": "",
    "\n                            Asia/Bishkek\n                            Asia/Bishkek\n                        ": "",
    "\n                            Pacific/Pago_Pago\n                            Pacific/Pago_Pago\n                        ": "",
    "\n                            posix/Asia/Bishkek\n                            posix/Asia/Bishkek\n                        ": "",
    "\n                            America/Kentucky/Monticello\n                            America/Kentucky/Monticello\n                        ": "",
    "\n                            Etc/GMT-2\n                            Etc/GMT-2\n                        ": "",
    "\n                            posix/Africa/Blantyre\n                            posix/Africa/Blantyre\n                        ": "",
    "\n                            Africa/Harare\n                            Africa/Harare\n                        ": "",
    "\n                            posix/Europe/Bucharest\n                            posix/Europe/Bucharest\n                        ": "",
    "\n                            posix/America/Mexico_City\n                            posix/America/Mexico_City\n                        ": "",
    "\n                            posix/Poland\n                            posix/Poland\n                        ": "",
    "\n                            Australia/Lord_Howe\n                            Australia/Lord_Howe\n                        ": "",
    "\n                            posix/America/Glace_Bay\n                            posix/America/Glace_Bay\n                        ": "",
    "\n                            posix/Asia/Macau\n                            posix/Asia/Macau\n                        ": "",
    "\n                            posix/Antarctica/Vostok\n                            posix/Antarctica/Vostok\n                        ": "",
    "\n                            posix/Antarctica/Davis\n                            posix/Antarctica/Davis\n                        ": "",
    "\n                            Asia/Calcutta\n                            Asia/Calcutta\n                        ": "",
    "\n                            Pacific/Efate\n                            Pacific/Efate\n                        ": "",
    "\n                            posix/Africa/Ceuta\n                            posix/Africa/Ceuta\n                        ": "",
    "\n                            PST8PDT\n                            PST8PDT\n                        ": "",
    "\n                            posix/America/Anguilla\n                            posix/America/Anguilla\n                        ": "",
    "\n                            posix/Asia/Ulan_Bator\n                            posix/Asia/Ulan_Bator\n                        ": "",
    "\n                            posix/America/Argentina/Buenos_Aires\n                            posix/America/Argentina/Buenos_Aires\n                        ": "",
    "\n                            US/Central\n                            US/Central\n                        ": "",
    "\n                            America/Argentina/Rio_Gallegos\n                            America/Argentina/Rio_Gallegos\n                        ": "",
    "\n                            US/Samoa\n                            US/Samoa\n                        ": "",
    "\n                            posix/Etc/GMT+3\n                            posix/Etc/GMT+3\n                        ": "",
    "\n                            Europe/Malta\n                            Europe/Malta\n                        ": "",
    "\n                            posix/Africa/Sao_Tome\n                            posix/Africa/Sao_Tome\n                        ": "",
    "\n                            America/Dominica\n                            America/Dominica\n                        ": "",
    "\n                            posix/America/Phoenix\n                            posix/America/Phoenix\n                        ": "",
    "\n                            posix/America/Anchorage\n                            posix/America/Anchorage\n                        ": "",
    "\n                            posix/Asia/Jakarta\n                            posix/Asia/Jakarta\n                        ": "",
    "\n                            Asia/Aqtau\n                            Asia/Aqtau\n                        ": "",
    "\n                            America/Knox_IN\n                            America/Knox_IN\n                        ": "",
    "\n                            posix/Asia/Irkutsk\n                            posix/Asia/Irkutsk\n                        ": "",
    "\n                            posix/America/El_Salvador\n                            posix/America/El_Salvador\n                        ": "",
    "\n                            Asia/Tbilisi\n                            Asia/Tbilisi\n                        ": "",
    "\n                            Mexico/BajaNorte\n                            Mexico/BajaNorte\n                        ": "",
    "\n                            posix/Europe/Guernsey\n                            posix/Europe/Guernsey\n                        ": "",
    "\n                            posix/Europe/Tallinn\n                            posix/Europe/Tallinn\n                        ": "",
    "\n                            Asia/Yangon\n                            Asia/Yangon\n                        ": "",
    "\n                            posix/Pacific/Wake\n                            posix/Pacific/Wake\n                        ": "",
    "\n                            posix/Atlantic/South_Georgia\n                            posix/Atlantic/South_Georgia\n                        ": "",
    "\n                            posix/America/Bahia\n                            posix/America/Bahia\n                        ": "",
    "\n                            posix/Australia/Tasmania\n                            posix/Australia/Tasmania\n                        ": "",
    "\n                            posix/Africa/Kinshasa\n                            posix/Africa/Kinshasa\n                        ": "",
    "\n                            posix/Africa/Maputo\n                            posix/Africa/Maputo\n                        ": "",
    "\n                            America/New_York\n                            America/New_York\n                        ": "",
    "\n                            posix/Pacific/Apia\n                            posix/Pacific/Apia\n                        ": "",
    "\n                            SystemV/CST6CDT\n                            SystemV/CST6CDT\n                        ": "",
    "\n                            America/Boa_Vista\n                            America/Boa_Vista\n                        ": "",
    "\n                            America/Monterrey\n                            America/Monterrey\n                        ": "",
    "\n                            posix/Asia/Taipei\n                            posix/Asia/Taipei\n                        ": "",
    "\n                            posix/Pacific/Marquesas\n                            posix/Pacific/Marquesas\n                        ": "",
    "\n                            Pacific/Wake\n                            Pacific/Wake\n                        ": "",
    "\n                            Pacific/Kwajalein\n                            Pacific/Kwajalein\n                        ": "",
    "\n                            posix/America/Campo_Grande\n                            posix/America/Campo_Grande\n                        ": "",
    "\n                            posix/Europe/Rome\n                            posix/Europe/Rome\n                        ": "",
    "\n                            Asia/Nicosia\n                            Asia/Nicosia\n                        ": "",
    "\n                            posix/Etc/UCT\n                            posix/Etc/UCT\n                        ": "",
    "\n                            America/Santo_Domingo\n                            America/Santo_Domingo\n                        ": "",
    "\n                            posix/America/Shiprock\n                            posix/America/Shiprock\n                        ": "",
    "\n                            America/Jujuy\n                            America/Jujuy\n                        ": "",
    "\n                            posix/Asia/Katmandu\n                            posix/Asia/Katmandu\n                        ": "",
    "\n                            posix/US/Arizona\n                            posix/US/Arizona\n                        ": "",
    "\n                            America/Martinique\n                            America/Martinique\n                        ": "",
    "\n                            posix/Europe/Sarajevo\n                            posix/Europe/Sarajevo\n                        ": "",
    "\n                            US/Pacific\n                            US/Pacific\n                        ": "",
    "\n                            America/St_Vincent\n                            America/St_Vincent\n                        ": "",
    "\n                            Asia/Saigon\n                            Asia/Saigon\n                        ": "",
    "\n                            posix/Asia/Atyrau\n                            posix/Asia/Atyrau\n                        ": "",
    "\n                            posix/America/Indianapolis\n                            posix/America/Indianapolis\n                        ": "",
    "\n                            Pacific/Ponape\n                            Pacific/Ponape\n                        ": "",
    "\n                            America/Santarem\n                            America/Santarem\n                        ": "",
    "\n                            posix/Australia/LHI\n                            posix/Australia/LHI\n                        ": "",
    "\n                            posix/Asia/Omsk\n                            posix/Asia/Omsk\n                        ": "",
    "\n                            posix/America/Panama\n                            posix/America/Panama\n                        ": "",
    "\n                            posix/Singapore\n                            posix/Singapore\n                        ": "",
    "\n                            Europe/Stockholm\n                            Europe/Stockholm\n                        ": "",
    "\n                            Asia/Choibalsan\n                            Asia/Choibalsan\n                        ": "",
    "\n                            posix/Europe/Zurich\n                            posix/Europe/Zurich\n                        ": "",
    "\n                            Pacific/Norfolk\n                            Pacific/Norfolk\n                        ": "",
    "\n                            posix/Asia/Ashgabat\n                            posix/Asia/Ashgabat\n                        ": "",
    "\n                            posix/America/Argentina/Mendoza\n                            posix/America/Argentina/Mendoza\n                        ": "",
    "\n                            America/Indianapolis\n                            America/Indianapolis\n                        ": "",
    "\n                            posix/Etc/GMT-2\n                            posix/Etc/GMT-2\n                        ": "",
    "\n                            SystemV/YST9\n                            SystemV/YST9\n                        ": "",
    "\n                            Atlantic/Canary\n                            Atlantic/Canary\n                        ": "",
    "\n                            posix/CET\n                            posix/CET\n                        ": "",
    "\n                            Asia/Ust-Nera\n                            Asia/Ust-Nera\n                        ": "",
    "\n                            posix/Asia/Riyadh\n                            posix/Asia/Riyadh\n                        ": "",
    "\n                            Portugal\n                            Portugal\n                        ": "",
    "\n                            posix/Africa/Nairobi\n                            posix/Africa/Nairobi\n                        ": "",
    "\n                            posix/Europe/Andorra\n                            posix/Europe/Andorra\n                        ": "",
    "\n                            Africa/Juba\n                            Africa/Juba\n                        ": "",
    "\n                            posix/SystemV/CST6\n                            posix/SystemV/CST6\n                        ": "",
    "\n                            posix/America/Punta_Arenas\n                            posix/America/Punta_Arenas\n                        ": "",
    "\n                            posix/America/Winnipeg\n                            posix/America/Winnipeg\n                        ": "",
    "\n                            posix/Africa/Asmara\n                            posix/Africa/Asmara\n                        ": "",
    "\n                            posix/US/Central\n                            posix/US/Central\n                        ": "",
    "\n                            Africa/Porto-Novo\n                            Africa/Porto-Novo\n                        ": "",
    "\n                            posix/Africa/Kigali\n                            posix/Africa/Kigali\n                        ": "",
    "\n                            Europe/Mariehamn\n                            Europe/Mariehamn\n                        ": "",
    "\n                            posix/America/Hermosillo\n                            posix/America/Hermosillo\n                        ": "",
    "\n                            Antarctica/South_Pole\n                            Antarctica/South_Pole\n                        ": "",
    "\n                            posix/Asia/Beirut\n                            posix/Asia/Beirut\n                        ": "",
    "\n                            Indian/Cocos\n                            Indian/Cocos\n                        ": "",
    "\n                            posix/Atlantic/Faeroe\n                            posix/Atlantic/Faeroe\n                        ": "",
    "\n                            posix/Africa/Djibouti\n                            posix/Africa/Djibouti\n                        ": "",
    "\n                            posix/Africa/El_Aaiun\n                            posix/Africa/El_Aaiun\n                        ": "",
    "\n                            posix/GB\n                            posix/GB\n                        ": "",
    "\n                            Australia/Darwin\n                            Australia/Darwin\n                        ": "",
    "\n                            Asia/Famagusta\n                            Asia/Famagusta\n                        ": "",
    "\n                            America/Juneau\n                            America/Juneau\n                        ": "",
    "\n                            posix/Asia/Samarkand\n                            posix/Asia/Samarkand\n                        ": "",
    "\n                            America/St_Johns\n                            America/St_Johns\n                        ": "",
    "\n                            Iceland\n                            Iceland\n                        ": "",
    "\n                            Europe/Sarajevo\n                            Europe/Sarajevo\n                        ": "",
    "\n                            posix/SystemV/MST7\n                            posix/SystemV/MST7\n                        ": "",
    "\n                            America/Curacao\n                            America/Curacao\n                        ": "",
    "\n                            Pacific/Chuuk\n                            Pacific/Chuuk\n                        ": "",
    "\n                            Asia/Ujung_Pandang\n                            Asia/Ujung_Pandang\n                        ": "",
    "\n                            America/Costa_Rica\n                            America/Costa_Rica\n                        ": "",
    "\n                            Pacific/Saipan\n                            Pacific/Saipan\n                        ": "",
    "\n                            posix/America/Managua\n                            posix/America/Managua\n                        ": "",
    "\n                            Asia/Pontianak\n                            Asia/Pontianak\n                        ": "",
    "\n                            Asia/Irkutsk\n                            Asia/Irkutsk\n                        ": "",
    "\n                            posix/America/Kentucky/Louisville\n                            posix/America/Kentucky/Louisville\n                        ": "",
    "\n                            Asia/Vientiane\n                            Asia/Vientiane\n                        ": "",
    "\n                            Pacific/Nauru\n                            Pacific/Nauru\n                        ": "",
    "\n                            posix/America/Santo_Domingo\n                            posix/America/Santo_Domingo\n                        ": "",
    "\n                            Etc/GMT+5\n                            Etc/GMT+5\n                        ": "",
    "\n                            Indian/Christmas\n                            Indian/Christmas\n                        ": "",
    "\n                            Africa/Maseru\n                            Africa/Maseru\n                        ": "",
    "\n                            posix/Mexico/General\n                            posix/Mexico/General\n                        ": "",
    "\n                            posix/Pacific/Tahiti\n                            posix/Pacific/Tahiti\n                        ": "",
    "\n                            posix/Africa/Douala\n                            posix/Africa/Douala\n                        ": "",
    "\n                            posix/Atlantic/Stanley\n                            posix/Atlantic/Stanley\n                        ": "",
    "\n                            posix/Asia/Famagusta\n                            posix/Asia/Famagusta\n                        ": "",
    "\n                            posix/America/Chihuahua\n                            posix/America/Chihuahua\n                        ": "",
    "\n                            posix/Africa/Bangui\n                            posix/Africa/Bangui\n                        ": "",
    "\n                            Africa/Brazzaville\n                            Africa/Brazzaville\n                        ": "",
    "\n                            Asia/Macao\n                            Asia/Macao\n                        ": "",
    "\n                            posix/Etc/GMT+8\n                            posix/Etc/GMT+8\n                        ": "",
    "\n                            America/El_Salvador\n                            America/El_Salvador\n                        ": "",
    "\n                            posix/Asia/Calcutta\n                            posix/Asia/Calcutta\n                        ": "",
    "\n                            posix/America/North_Dakota/New_Salem\n                            posix/America/North_Dakota/New_Salem\n                        ": "",
    "\n                            posix/Indian/Maldives\n                            posix/Indian/Maldives\n                        ": "",
    "\n                            posix/Libya\n                            posix/Libya\n                        ": "",
    "\n                            Pacific/Funafuti\n                            Pacific/Funafuti\n                        ": "",
    "\n                            posix/GMT-0\n                            posix/GMT-0\n                        ": "",
    "\n                            SystemV/CST6\n                            SystemV/CST6\n                        ": "",
    "\n                            posix/Australia/ACT\n                            posix/Australia/ACT\n                        ": "",
    "\n                            posix/Etc/Zulu\n                            posix/Etc/Zulu\n                        ": "",
    "\n                            posix/America/Argentina/San_Juan\n                            posix/America/Argentina/San_Juan\n                        ": "",
    "\n                            Pacific/Pohnpei\n                            Pacific/Pohnpei\n                        ": "",
    "\n                            posix/Europe/Copenhagen\n                            posix/Europe/Copenhagen\n                        ": "",
    "\n                            posix/Antarctica/South_Pole\n                            posix/Antarctica/South_Pole\n                        ": "",
    "\n                            America/Chihuahua\n                            America/Chihuahua\n                        ": "",
    "\n                            posix/America/Mendoza\n                            posix/America/Mendoza\n                        ": "",
    "\n                            posix/Asia/Karachi\n                            posix/Asia/Karachi\n                        ": "",
    "\n                            Universal\n                            Universal\n                        ": "",
    "\n                            posix/America/Recife\n                            posix/America/Recife\n                        ": "",
    "\n                            Africa/Kigali\n                            Africa/Kigali\n                        ": "",
    "\n                            posix/America/Adak\n                            posix/America/Adak\n                        ": "",
    "\n                            posixrules\n                            posixrules\n                        ": "",
    "\n                            posix/America/Rio_Branco\n                            posix/America/Rio_Branco\n                        ": "",
    "\n                            posix/Africa/Cairo\n                            posix/Africa/Cairo\n                        ": "",
    "\n                            posix/Asia/Dushanbe\n                            posix/Asia/Dushanbe\n                        ": "",
    "\n                            Africa/Kampala\n                            Africa/Kampala\n                        ": "",
    "\n                            posix/GMT+0\n                            posix/GMT+0\n                        ": "",
    "\n                            SystemV/AST4\n                            SystemV/AST4\n                        ": "",
    "\n                            America/Barbados\n                            America/Barbados\n                        ": "",
    "\n                            posix/Pacific/Pohnpei\n                            posix/Pacific/Pohnpei\n                        ": "",
    "\n                            America/Indiana/Marengo\n                            America/Indiana/Marengo\n                        ": "",
    "\n                            posix/America/Puerto_Rico\n                            posix/America/Puerto_Rico\n                        ": "",
    "\n                            Africa/Asmera\n                            Africa/Asmera\n                        ": "",
    "\n                            posix/Europe/Belfast\n                            posix/Europe/Belfast\n                        ": "",
    "\n                            Africa/Luanda\n                            Africa/Luanda\n                        ": "",
    "\n                            MET\n                            MET\n                        ": "",
    "\n                            posix/Pacific/Kanton\n                            posix/Pacific/Kanton\n                        ": "",
    "\n                            posix/America/Belem\n                            posix/America/Belem\n                        ": "",
    "\n                            America/Marigot\n                            America/Marigot\n                        ": "",
    "\n                            posix/Australia/West\n                            posix/Australia/West\n                        ": "",
    "\n                            posix/America/Montserrat\n                            posix/America/Montserrat\n                        ": "",
    "\n                            posix/America/Atikokan\n                            posix/America/Atikokan\n                        ": "",
    "\n                            posix/Asia/Khandyga\n                            posix/Asia/Khandyga\n                        ": "",
    "\n                            posix/Pacific/Chatham\n                            posix/Pacific/Chatham\n                        ": "",
    "\n                            Etc/GMT-4\n                            Etc/GMT-4\n                        ": "",
    "\n                            posix/US/Mountain\n                            posix/US/Mountain\n                        ": "",
    "\n                            Asia/Karachi\n                            Asia/Karachi\n                        ": "",
    "\n                            posix/SystemV/CST6CDT\n                            posix/SystemV/CST6CDT\n                        ": "",
    "\n                            posix/America/Eirunepe\n                            posix/America/Eirunepe\n                        ": "",
    "\n                            America/Tegucigalpa\n                            America/Tegucigalpa\n                        ": "",
    "\n                            Europe/Ljubljana\n                            Europe/Ljubljana\n                        ": "",
    "\n                            posix/America/Havana\n                            posix/America/Havana\n                        ": "",
    "\n                            posix/Etc/GMT0\n                            posix/Etc/GMT0\n                        ": "",
    "\n                            Europe/Kaliningrad\n                            Europe/Kaliningrad\n                        ": "",
    "\n                            Japan\n                            Japan\n                        ": "",
    "\n                            posix/Asia/Baku\n                            posix/Asia/Baku\n                        ": "",
    "\n                            posix/Brazil/DeNoronha\n                            posix/Brazil/DeNoronha\n                        ": "",
    "\n                            Etc/GMT+4\n                            Etc/GMT+4\n                        ": "",
    "\n                            posix/Asia/Magadan\n                            posix/Asia/Magadan\n                        ": "",
    "\n                            posix/SystemV/AST4\n                            posix/SystemV/AST4\n                        ": "",
    "\n                            posix/SystemV/AST4ADT\n                            posix/SystemV/AST4ADT\n                        ": "",
    "\n                            America/Matamoros\n                            America/Matamoros\n                        ": "",
    "\n                            posix/Antarctica/Palmer\n                            posix/Antarctica/Palmer\n                        ": "",
    "\n                            Australia/Queensland\n                            Australia/Queensland\n                        ": "",
    "\n                            Africa/Libreville\n                            Africa/Libreville\n                        ": "",
    "\n                            posix/America/Barbados\n                            posix/America/Barbados\n                        ": "",
    "\n                            Asia/Damascus\n                            Asia/Damascus\n                        ": "",
    "\n                            posix/ROK\n                            posix/ROK\n                        ": "",
    "\n                            posix/Europe/Madrid\n                            posix/Europe/Madrid\n                        ": "",
    "\n                            posix/Europe/Kiev\n                            posix/Europe/Kiev\n                        ": "",
    "\n                            America/Shiprock\n                            America/Shiprock\n                        ": "",
    "\n                            Asia/Phnom_Penh\n                            Asia/Phnom_Penh\n                        ": "",
    "\n                            Pacific/Honolulu\n                            Pacific/Honolulu\n                        ": "",
    "\n                            posix/Etc/GMT-9\n                            posix/Etc/GMT-9\n                        ": "",
    "\n                            Egypt\n                            Egypt\n                        ": "",
    "\n                            posix/Europe/Vatican\n                            posix/Europe/Vatican\n                        ": "",
    "\n                            Africa/Tunis\n                            Africa/Tunis\n                        ": "",
    "\n                            GB-Eire\n                            GB-Eire\n                        ": "",
    "\n                            America/Cordoba\n                            America/Cordoba\n                        ": "",
    "\n                            posix/Europe/Istanbul\n                            posix/Europe/Istanbul\n                        ": "",
    "\n                            America/Mazatlan\n                            America/Mazatlan\n                        ": "",
    "\n                            posix/Pacific/Enderbury\n                            posix/Pacific/Enderbury\n                        ": "",
    "\n                            Pacific/Samoa\n                            Pacific/Samoa\n                        ": "",
    "\n                            Brazil/West\n                            Brazil/West\n                        ": "",
    "\n                            posix/Asia/Ulaanbaatar\n                            posix/Asia/Ulaanbaatar\n                        ": "",
    "\n                            Europe/Madrid\n                            Europe/Madrid\n                        ": "",
    "\n                            posix/Asia/Thimphu\n                            posix/Asia/Thimphu\n                        ": "",
    "\n                            posix/America/Monterrey\n                            posix/America/Monterrey\n                        ": "",
    "\n                            America/Argentina/San_Luis\n                            America/Argentina/San_Luis\n                        ": "",
    "\n                            America/Nassau\n                            America/Nassau\n                        ": "",
    "\n                            posix/America/Porto_Acre\n                            posix/America/Porto_Acre\n                        ": "",
    "\n                            America/Anchorage\n                            America/Anchorage\n                        ": "",
    "\n                            America/Grenada\n                            America/Grenada\n                        ": "",
    "\n                            posix/Etc/GMT+0\n                            posix/Etc/GMT+0\n                        ": "",
    "\n                            Asia/Sakhalin\n                            Asia/Sakhalin\n                        ": "",
    "\n                            posix/Pacific/Samoa\n                            posix/Pacific/Samoa\n                        ": "",
    "\n                            Europe/Uzhgorod\n                            Europe/Uzhgorod\n                        ": "",
    "\n                            Brazil/DeNoronha\n                            Brazil/DeNoronha\n                        ": "",
    "\n                            America/Vancouver\n                            America/Vancouver\n                        ": "",
    "\n                            posix/Indian/Christmas\n                            posix/Indian/Christmas\n                        ": "",
    "\n                            Africa/Mbabane\n                            Africa/Mbabane\n                        ": "",
    "\n                            posix/Africa/Dakar\n                            posix/Africa/Dakar\n                        ": "",
    "\n                            posix/America/Cuiaba\n                            posix/America/Cuiaba\n                        ": "",
    "\n                            posix/America/Guatemala\n                            posix/America/Guatemala\n                        ": "",
    "\n                            posix/Jamaica\n                            posix/Jamaica\n                        ": "",
    "\n                            posix/Indian/Cocos\n                            posix/Indian/Cocos\n                        ": "",
    "\n                            posix/Europe/Saratov\n                            posix/Europe/Saratov\n                        ": "",
    "\n                            posix/Asia/Kashgar\n                            posix/Asia/Kashgar\n                        ": "",
    "\n                            Pacific/Enderbury\n                            Pacific/Enderbury\n                        ": "",
    "\n                            posix/SystemV/EST5EDT\n                            posix/SystemV/EST5EDT\n                        ": "",
    "\n                            posix/America/Iqaluit\n                            posix/America/Iqaluit\n                        ": "",
    "\n                            America/Los_Angeles\n                            America/Los_Angeles\n                        ": "",
    "\n                            CST6CDT\n                            CST6CDT\n                        ": "",
    "\n                            Europe/Athens\n                            Europe/Athens\n                        ": "",
    "\n                            posix/Europe/Vilnius\n                            posix/Europe/Vilnius\n                        ": "",
    "\n                            Asia/Yakutsk\n                            Asia/Yakutsk\n                        ": "",
    "\n                            posix/Asia/Tokyo\n                            posix/Asia/Tokyo\n                        ": "",
    "\n                            posix/Etc/GMT+2\n                            posix/Etc/GMT+2\n                        ": "",
    "\n                            Africa/Malabo\n                            Africa/Malabo\n                        ": "",
    "\n                            posix/Europe/Simferopol\n                            posix/Europe/Simferopol\n                        ": "",
    "\n                            UCT\n                            UCT\n                        ": "",
    "\n                            posix/America/Rankin_Inlet\n                            posix/America/Rankin_Inlet\n                        ": "",
    "\n                            posix/Pacific/Guadalcanal\n                            posix/Pacific/Guadalcanal\n                        ": "",
    "\n                            posix/Europe/Warsaw\n                            posix/Europe/Warsaw\n                        ": "",
    "\n                            posix/America/Pangnirtung\n                            posix/America/Pangnirtung\n                        ": "",
    "\n                            Etc/GMT-14\n                            Etc/GMT-14\n                        ": "",
    "\n                            Kwajalein\n                            Kwajalein\n                        ": "",
    "\n                            Australia/Eucla\n                            Australia/Eucla\n                        ": "",
    "\n                            America/Araguaina\n                            America/Araguaina\n                        ": "",
    "\n                            posix/Asia/Aqtau\n                            posix/Asia/Aqtau\n                        ": "",
    "\n                            Asia/Kamchatka\n                            Asia/Kamchatka\n                        ": "",
    "\n                            posix/US/Indiana-Starke\n                            posix/US/Indiana-Starke\n                        ": "",
    "\n                            posix/Atlantic/Azores\n                            posix/Atlantic/Azores\n                        ": "",
    "\n                            America/Panama\n                            America/Panama\n                        ": "",
    "\n                            Asia/Qyzylorda\n                            Asia/Qyzylorda\n                        ": "",
    "\n                            posix/US/Samoa\n                            posix/US/Samoa\n                        ": "",
    "\n                            posix/Etc/GMT+10\n                            posix/Etc/GMT+10\n                        ": "",
    "\n                            posix/Etc/GMT-10\n                            posix/Etc/GMT-10\n                        ": "",
    "\n                            posix/Etc/GMT+1\n                            posix/Etc/GMT+1\n                        ": "",
    "\n                            posix/Asia/Muscat\n                            posix/Asia/Muscat\n                        ": "",
    "\n                            posix/Pacific/Port_Moresby\n                            posix/Pacific/Port_Moresby\n                        ": "",
    "\n                            America/Swift_Current\n                            America/Swift_Current\n                        ": "",
    "\n                            America/Rankin_Inlet\n                            America/Rankin_Inlet\n                        ": "",
    "\n                            Europe/Zurich\n                            Europe/Zurich\n                        ": "",
    "\n                            Europe/Vilnius\n                            Europe/Vilnius\n                        ": "",
    "\n                            localtime\n                            localtime\n                        ": "",
    "\n                            Antarctica/Davis\n                            Antarctica/Davis\n                        ": "",
    "\n                            posix/Africa/Malabo\n                            posix/Africa/Malabo\n                        ": "",
    "\n                            posix/Etc/GMT-1\n                            posix/Etc/GMT-1\n                        ": "",
    "\n                            Pacific/Galapagos\n                            Pacific/Galapagos\n                        ": "",
    "\n                            Africa/Tripoli\n                            Africa/Tripoli\n                        ": "",
    "\n                            posix/America/Antigua\n                            posix/America/Antigua\n                        ": "",
    "\n                            Africa/Bujumbura\n                            Africa/Bujumbura\n                        ": "",
    "\n                            posix/Australia/Brisbane\n                            posix/Australia/Brisbane\n                        ": "",
    "\n                            Pacific/Apia\n                            Pacific/Apia\n                        ": "",
    "\n                            America/St_Thomas\n                            America/St_Thomas\n                        ": "",
    "\n                            posix/America/Mazatlan\n                            posix/America/Mazatlan\n                        ": "",
    "\n                            Europe/Dublin\n                            Europe/Dublin\n                        ": "",
    "\n                            Canada/Saskatchewan\n                            Canada/Saskatchewan\n                        ": "",
    "\n                            Europe/Istanbul\n                            Europe/Istanbul\n                        ": "",
    "\n                            posix/Australia/Yancowinna\n                            posix/Australia/Yancowinna\n                        ": "",
    "\n                            posix/America/Argentina/Ushuaia\n                            posix/America/Argentina/Ushuaia\n                        ": "",
    "\n                            posix/Asia/Pontianak\n                            posix/Asia/Pontianak\n                        ": "",
    "\n                            Europe/Volgograd\n                            Europe/Volgograd\n                        ": "",
    "\n                            Asia/Dubai\n                            Asia/Dubai\n                        ": "",
    "\n                            Europe/Rome\n                            Europe/Rome\n                        ": "",
    "\n                            America/Detroit\n                            America/Detroit\n                        ": "",
    "\n                            America/Nipigon\n                            America/Nipigon\n                        ": "",
    "\n                            Asia/Samarkand\n                            Asia/Samarkand\n                        ": "",
    "\n                            Europe/Warsaw\n                            Europe/Warsaw\n                        ": "",
    "\n                            posix/Canada/Saskatchewan\n                            posix/Canada/Saskatchewan\n                        ": "",
    "\n                            posix/America/Grand_Turk\n                            posix/America/Grand_Turk\n                        ": "",
    "\n                            posix/America/Argentina/ComodRivadavia\n                            posix/America/Argentina/ComodRivadavia\n                        ": "",
    "\n                            posix/Europe/Ljubljana\n                            posix/Europe/Ljubljana\n                        ": "",
    "\n                            posix/America/Knox_IN\n                            posix/America/Knox_IN\n                        ": "",
    "\n                            posix/America/Resolute\n                            posix/America/Resolute\n                        ": "",
    "\n                            Asia/Kuwait\n                            Asia/Kuwait\n                        ": "",
    "\n                            posix/W-SU\n                            posix/W-SU\n                        ": "",
    "\n                            America/Maceio\n                            America/Maceio\n                        ": "",
    "\n                            Africa/Niamey\n                            Africa/Niamey\n                        ": "",
    "\n                            posix/Europe/Kaliningrad\n                            posix/Europe/Kaliningrad\n                        ": "",
    "\n                            posix/HST\n                            posix/HST\n                        ": "",
    "\n                            posix/Indian/Kerguelen\n                            posix/Indian/Kerguelen\n                        ": "",
    "\n                            posix/Africa/Tripoli\n                            posix/Africa/Tripoli\n                        ": "",
    "\n                            Etc/GMT-3\n                            Etc/GMT-3\n                        ": "",
    "\n                            posix/Etc/Greenwich\n                            posix/Etc/Greenwich\n                        ": "",
    "\n                            Europe/Saratov\n                            Europe/Saratov\n                        ": "",
    "\n                            Asia/Hovd\n                            Asia/Hovd\n                        ": "",
    "\n                            America/Danmarkshavn\n                            America/Danmarkshavn\n                        ": "",
    "\n                            posix/America/Boise\n                            posix/America/Boise\n                        ": "",
    "\n                            posix/Asia/Urumqi\n                            posix/Asia/Urumqi\n                        ": "",
    "\n                            Chile/EasterIsland\n                            Chile/EasterIsland\n                        ": "",
    "\n                            America/Inuvik\n                            America/Inuvik\n                        ": "",
    "\n                            posix/America/Whitehorse\n                            posix/America/Whitehorse\n                        ": "",
    "\n                            Africa/Banjul\n                            Africa/Banjul\n                        ": "",
    "\n                            posix/Egypt\n                            posix/Egypt\n                        ": "",
    "\n                            America/Whitehorse\n                            America/Whitehorse\n                        ": "",
    "\n                            Africa/Johannesburg\n                            Africa/Johannesburg\n                        ": "",
    "\n                            posix/Pacific/Tongatapu\n                            posix/Pacific/Tongatapu\n                        ": "",
    "\n                            posix/Pacific/Guam\n                            posix/Pacific/Guam\n                        ": "",
    "\n                            posix/Europe/Astrakhan\n                            posix/Europe/Astrakhan\n                        ": "",
    "\n                            posix/Canada/Eastern\n                            posix/Canada/Eastern\n                        ": "",
    "\n                            posix/Australia/South\n                            posix/Australia/South\n                        ": "",
    "\n                            Pacific/Tongatapu\n                            Pacific/Tongatapu\n                        ": "",
    "\n                            posix/Asia/Thimbu\n                            posix/Asia/Thimbu\n                        ": "",
    "\n                            Europe/Gibraltar\n                            Europe/Gibraltar\n                        ": "",
    "\n                            posix/America/Indiana/Vevay\n                            posix/America/Indiana/Vevay\n                        ": "",
    "\n                            Etc/GMT-10\n                            Etc/GMT-10\n                        ": "",
    "\n                            posix/Brazil/West\n                            posix/Brazil/West\n                        ": "",
    "\n                            posix/Asia/Tehran\n                            posix/Asia/Tehran\n                        ": "",
    "\n                            posix/Pacific/Galapagos\n                            posix/Pacific/Galapagos\n                        ": "",
    "\n                            Asia/Kolkata\n                            Asia/Kolkata\n                        ": "",
    "\n                            Asia/Pyongyang\n                            Asia/Pyongyang\n                        ": "",
    "\n                            posix/America/Dominica\n                            posix/America/Dominica\n                        ": "",
    "\n                            Asia/Bahrain\n                            Asia/Bahrain\n                        ": "",
    "\n                            Africa/Conakry\n                            Africa/Conakry\n                        ": "",
    "\n                            Europe/Tiraspol\n                            Europe/Tiraspol\n                        ": "",
    "\n                            posix/Africa/Nouakchott\n                            posix/Africa/Nouakchott\n                        ": "",
    "\n                            America/Bahia_Banderas\n                            America/Bahia_Banderas\n                        ": "",
    "\n                            posix/Asia/Dacca\n                            posix/Asia/Dacca\n                        ": "",
    "\n                            posix/Africa/Ndjamena\n                            posix/Africa/Ndjamena\n                        ": "",
    "\n                            Europe/Bratislava\n                            Europe/Bratislava\n                        ": "",
    "\n                            Etc/GMT-9\n                            Etc/GMT-9\n                        ": "",
    "\n                            posix/Etc/GMT-7\n                            posix/Etc/GMT-7\n                        ": "",
    "\n                            posix/Etc/GMT+7\n                            posix/Etc/GMT+7\n                        ": "",
    "\n                            America/Porto_Acre\n                            America/Porto_Acre\n                        ": "",
    "\n                            Australia/Canberra\n                            Australia/Canberra\n                        ": "",
    "\n                            America/Fort_Nelson\n                            America/Fort_Nelson\n                        ": "",
    "\n                            Atlantic/Azores\n                            Atlantic/Azores\n                        ": "",
    "\n                            Africa/Bissau\n                            Africa/Bissau\n                        ": "",
    "\n                            posix/America/Lower_Princes\n                            posix/America/Lower_Princes\n                        ": "",
    "\n                            posix/Asia/Ho_Chi_Minh\n                            posix/Asia/Ho_Chi_Minh\n                        ": "",
    "\n                            Etc/GMT-12\n                            Etc/GMT-12\n                        ": "",
    "\n                            Europe/Budapest\n                            Europe/Budapest\n                        ": "",
    "\n                            America/Yakutat\n                            America/Yakutat\n                        ": "",
    "\n                            posix/Brazil/East\n                            posix/Brazil/East\n                        ": "",
    "\n                            Etc/GMT-5\n                            Etc/GMT-5\n                        ": "",
    "\n                            Antarctica/Troll\n                            Antarctica/Troll\n                        ": "",
    "\n                            MST7MDT\n                            MST7MDT\n                        ": "",
    "\n                            posix/America/North_Dakota/Center\n                            posix/America/North_Dakota/Center\n                        ": "",
    "\n                            Asia/Yekaterinburg\n                            Asia/Yekaterinburg\n                        ": "",
    "\n                            posix/Canada/Pacific\n                            posix/Canada/Pacific\n                        ": "",
    "\n                            posix/Antarctica/McMurdo\n                            posix/Antarctica/McMurdo\n                        ": "",
    "\n                            posix/Asia/Jerusalem\n                            posix/Asia/Jerusalem\n                        ": "",
    "\n                            Africa/Sao_Tome\n                            Africa/Sao_Tome\n                        ": "",
    "\n                            SystemV/YST9YDT\n                            SystemV/YST9YDT\n                        ": "",
    "\n                            posix/GMT0\n                            posix/GMT0\n                        ": "",
    "\n                            Australia/Brisbane\n                            Australia/Brisbane\n                        ": "",
    "\n                            Antarctica/Macquarie\n                            Antarctica/Macquarie\n                        ": "",
    "\n                            Asia/Hong_Kong\n                            Asia/Hong_Kong\n                        ": "",
    "\n                            posix/Pacific/Ponape\n                            posix/Pacific/Ponape\n                        ": "",
    "\n                            Etc/GMT+9\n                            Etc/GMT+9\n                        ": "",
    "\n                            posix/Pacific/Fiji\n                            posix/Pacific/Fiji\n                        ": "",
    "\n                            PRC\n                            PRC\n                        ": "",
    "\n                            posix/SystemV/MST7MDT\n                            posix/SystemV/MST7MDT\n                        ": "",
    "\n                            America/Rio_Branco\n                            America/Rio_Branco\n                        ": "",
    "\n                            posix/US/Eastern\n                            posix/US/Eastern\n                        ": "",
    "\n                            posix/America/Halifax\n                            posix/America/Halifax\n                        ": "",
    "\n                            posix/Africa/Banjul\n                            posix/Africa/Banjul\n                        ": "",
    "\n                            US/East-Indiana\n                            US/East-Indiana\n                        ": "",
    "\n                            America/Glace_Bay\n                            America/Glace_Bay\n                        ": "",
    "\n                            posix/Africa/Lagos\n                            posix/Africa/Lagos\n                        ": "",
    "\n                            Asia/Dacca\n                            Asia/Dacca\n                        ": "",
    "\n                            posix/America/Louisville\n                            posix/America/Louisville\n                        ": "",
    "\n                            posix/America/Metlakatla\n                            posix/America/Metlakatla\n                        ": "",
    "\n                            Asia/Qatar\n                            Asia/Qatar\n                        ": "",
    "\n                            posix/America/Edmonton\n                            posix/America/Edmonton\n                        ": "",
    "\n                            Asia/Thimphu\n                            Asia/Thimphu\n                        ": "",
    "\n                            posix/Asia/Vladivostok\n                            posix/Asia/Vladivostok\n                        ": "",
    "\n                            SystemV/PST8\n                            SystemV/PST8\n                        ": "",
    "\n                            Chile/Continental\n                            Chile/Continental\n                        ": "",
    "\n                            posix/EST\n                            posix/EST\n                        ": "",
    "\n                            posix/Hongkong\n                            posix/Hongkong\n                        ": "",
    "\n                            Asia/Vladivostok\n                            Asia/Vladivostok\n                        ": "",
    "\n                            Asia/Chongqing\n                            Asia/Chongqing\n                        ": "",
    "\n                            America/Indiana/Vevay\n                            America/Indiana/Vevay\n                        ": "",
    "\n                            posix/ROC\n                            posix/ROC\n                        ": "",
    "\n                            Pacific/Wallis\n                            Pacific/Wallis\n                        ": "",
    "\n                            Asia/Shanghai\n                            Asia/Shanghai\n                        ": "",
    "\n                            America/St_Lucia\n                            America/St_Lucia\n                        ": "",
    "\n                            posix/Chile/EasterIsland\n                            posix/Chile/EasterIsland\n                        ": "",
    "\n                            Asia/Katmandu\n                            Asia/Katmandu\n                        ": "",
    "\n                            Asia/Jayapura\n                            Asia/Jayapura\n                        ": "",
    "\n                            posix/Asia/Kuwait\n                            posix/Asia/Kuwait\n                        ": "",
    "\n                            US/Aleutian\n                            US/Aleutian\n                        ": "",
    "\n                            America/Managua\n                            America/Managua\n                        ": "",
    "\n                            posix/America/Indiana/Marengo\n                            posix/America/Indiana/Marengo\n                        ": "",
    "\n                            posix/America/Cayman\n                            posix/America/Cayman\n                        ": "",
    "\n                            posix/Pacific/Kosrae\n                            posix/Pacific/Kosrae\n                        ": "",
    "\n                            Asia/Baku\n                            Asia/Baku\n                        ": "",
    "\n                            posix/Arctic/Longyearbyen\n                            posix/Arctic/Longyearbyen\n                        ": "",
    "\n                            Pacific/Kanton\n                            Pacific/Kanton\n                        ": "",
    "\n                            Europe/Amsterdam\n                            Europe/Amsterdam\n                        ": "",
    "\n                            posix/Africa/Accra\n                            posix/Africa/Accra\n                        ": "",
    "\n                            posix/US/East-Indiana\n                            posix/US/East-Indiana\n                        ": "",
    "\n                            posix/Atlantic/Cape_Verde\n                            posix/Atlantic/Cape_Verde\n                        ": "",
    "\n                            posix/Asia/Ashkhabad\n                            posix/Asia/Ashkhabad\n                        ": "",
    "\n                            Australia/ACT\n                            Australia/ACT\n                        ": "",
    "\n                            Asia/Ashgabat\n                            Asia/Ashgabat\n                        ": "",
    "\n                            Africa/Algiers\n                            Africa/Algiers\n                        ": "",
    "\n                            posix/Etc/GMT+4\n                            posix/Etc/GMT+4\n                        ": "",
    "\n                            posix/Etc/GMT-4\n                            posix/Etc/GMT-4\n                        ": "",
    "\n                            posix/Etc/GMT+5\n                            posix/Etc/GMT+5\n                        ": "",
    "\n                            Africa/Gaborone\n                            Africa/Gaborone\n                        ": "",
    "\n                            posix/Europe/Stockholm\n                            posix/Europe/Stockholm\n                        ": "",
    "\n                            Africa/Bamako\n                            Africa/Bamako\n                        ": "",
    "\n                            Europe/Minsk\n                            Europe/Minsk\n                        ": "",
    "\n                            posix/Etc/GMT+9\n                            posix/Etc/GMT+9\n                        ": "",
    "\n                            America/Hermosillo\n                            America/Hermosillo\n                        ": "",
    "\n                            posix/Asia/Almaty\n                            posix/Asia/Almaty\n                        ": "",
    "\n                            posix/MST7MDT\n                            posix/MST7MDT\n                        ": "",
    "\n                            America/Indiana/Winamac\n                            America/Indiana/Winamac\n                        ": "",
    "\n                            Asia/Ashkhabad\n                            Asia/Ashkhabad\n                        ": "",
    "\n                            Etc/GMT+10\n                            Etc/GMT+10\n                        ": "",
    "\n                            Europe/Berlin\n                            Europe/Berlin\n                        ": "",
    "\n                            posix/America/Yellowknife\n                            posix/America/Yellowknife\n                        ": "",
    "\n                            America/Montreal\n                            America/Montreal\n                        ": "",
    "\n                            posix/Asia/Krasnoyarsk\n                            posix/Asia/Krasnoyarsk\n                        ": "",
    "\n                            Europe/Tirane\n                            Europe/Tirane\n                        ": "",
    "\n                            posix/Europe/Brussels\n                            posix/Europe/Brussels\n                        ": "",
    "\n                            America/Argentina/Jujuy\n                            America/Argentina/Jujuy\n                        ": "",
    "\n                            posix/Europe/Gibraltar\n                            posix/Europe/Gibraltar\n                        ": "",
    "\n                            Canada/Pacific\n                            Canada/Pacific\n                        ": "",
    "\n                            posix/Asia/Barnaul\n                            posix/Asia/Barnaul\n                        ": "",
    "\n                            posix/America/St_Barthelemy\n                            posix/America/St_Barthelemy\n                        ": "",
    "\n                            posix/Asia/Pyongyang\n                            posix/Asia/Pyongyang\n                        ": "",
    "\n                            posix/America/Juneau\n                            posix/America/Juneau\n                        ": "",
    "\n                            posix/Europe/Podgorica\n                            posix/Europe/Podgorica\n                        ": "",
    "\n                            America/Nome\n                            America/Nome\n                        ": "",
    "\n                            posix/America/Atka\n                            posix/America/Atka\n                        ": "",
    "\n                            Atlantic/Stanley\n                            Atlantic/Stanley\n                        ": "",
    "\n                            Etc/GMT-8\n                            Etc/GMT-8\n                        ": "",
    "\n                            posix/Antarctica/Casey\n                            posix/Antarctica/Casey\n                        ": "",
    "\n                            posix/Pacific/Saipan\n                            posix/Pacific/Saipan\n                        ": "",
    "\n                            Africa/Abidjan\n                            Africa/Abidjan\n                        ": "",
    "\n                            posix/NZ-CHAT\n                            posix/NZ-CHAT\n                        ": "",
    "\n                            posix/Africa/Porto-Novo\n                            posix/Africa/Porto-Novo\n                        ": "",
    "\n                            posix/Australia/Adelaide\n                            posix/Australia/Adelaide\n                        ": "",
    "\n                            posix/Asia/Nicosia\n                            posix/Asia/Nicosia\n                        ": "",
    "\n                            posix/America/Argentina/Rio_Gallegos\n                            posix/America/Argentina/Rio_Gallegos\n                        ": "",
    "\n                            Asia/Colombo\n                            Asia/Colombo\n                        ": "",
    "\n                            posix/Asia/Harbin\n                            posix/Asia/Harbin\n                        ": "",
    "\n                            posix/Pacific/Pitcairn\n                            posix/Pacific/Pitcairn\n                        ": "",
    "\n                            America/Montevideo\n                            America/Montevideo\n                        ": "",
    "\n                            Asia/Brunei\n                            Asia/Brunei\n                        ": "",
    "\n                            America/Blanc-Sablon\n                            America/Blanc-Sablon\n                        ": "",
    "\n                            Asia/Kathmandu\n                            Asia/Kathmandu\n                        ": "",
    "\n                            posix/Etc/GMT-12\n                            posix/Etc/GMT-12\n                        ": "",
    "\n                            posix/America/Danmarkshavn\n                            posix/America/Danmarkshavn\n                        ": "",
    "\n                            US/Eastern\n                            US/Eastern\n                        ": "",
    "\n                            posix/Asia/Novokuznetsk\n                            posix/Asia/Novokuznetsk\n                        ": "",
    "\n                            Asia/Barnaul\n                            Asia/Barnaul\n                        ": "",
    "\n                            America/Argentina/La_Rioja\n                            America/Argentina/La_Rioja\n                        ": "",
    "\n                            Asia/Ho_Chi_Minh\n                            Asia/Ho_Chi_Minh\n                        ": "",
    "\n                            posix/Atlantic/Bermuda\n                            posix/Atlantic/Bermuda\n                        ": "",
    "\n                            Asia/Dhaka\n                            Asia/Dhaka\n                        ": "",
    "\n                            Africa/Cairo\n                            Africa/Cairo\n                        ": "",
    "\n                            Australia/Melbourne\n                            Australia/Melbourne\n                        ": "",
    "\n                            Etc/GMT+3\n                            Etc/GMT+3\n                        ": "",
    "\n                            Pacific/Tarawa\n                            Pacific/Tarawa\n                        ": "",
    "\n                            posix/Indian/Antananarivo\n                            posix/Indian/Antananarivo\n                        ": "",
    "\n                            posix/Europe/Amsterdam\n                            posix/Europe/Amsterdam\n                        ": "",
    "\n                            Africa/Accra\n                            Africa/Accra\n                        ": "",
    "\n                            posix/Europe/Jersey\n                            posix/Europe/Jersey\n                        ": "",
    "\n                            posix/Asia/Gaza\n                            posix/Asia/Gaza\n                        ": "",
    "\n                            America/North_Dakota/Beulah\n                            America/North_Dakota/Beulah\n                        ": "",
    "\n                            posix/Asia/Kuala_Lumpur\n                            posix/Asia/Kuala_Lumpur\n                        ": "",
    "\n                            America/Campo_Grande\n                            America/Campo_Grande\n                        ": "",
    "\n                            posix/Mexico/BajaSur\n                            posix/Mexico/BajaSur\n                        ": "",
    "\n                            posix/America/Indiana/Petersburg\n                            posix/America/Indiana/Petersburg\n                        ": "",
    "\n                            posix/America/Swift_Current\n                            posix/America/Swift_Current\n                        ": "",
    "\n                            Australia/LHI\n                            Australia/LHI\n                        ": "",
    "\n                            posix/America/Fort_Nelson\n                            posix/America/Fort_Nelson\n                        ": "",
    "\n                            HST\n                            HST\n                        ": "",
    "\n                            America/Pangnirtung\n                            America/Pangnirtung\n                        ": "",
    "\n                            America/Argentina/Buenos_Aires\n                            America/Argentina/Buenos_Aires\n                        ": "",
    "\n                            posix/Asia/Jayapura\n                            posix/Asia/Jayapura\n                        ": "",
    "\n                            Africa/Blantyre\n                            Africa/Blantyre\n                        ": "",
    "\n                            posix/Asia/Tel_Aviv\n                            posix/Asia/Tel_Aviv\n                        ": "",
    "\n                            US/Arizona\n                            US/Arizona\n                        ": "",
    "\n                            Europe/Vatican\n                            Europe/Vatican\n                        ": "",
    "\n                            posix/Europe/Vienna\n                            posix/Europe/Vienna\n                        ": "",
    "\n                            Europe/Vaduz\n                            Europe/Vaduz\n                        ": "",
    "\n                            posix/SystemV/HST10\n                            posix/SystemV/HST10\n                        ": "",
    "\n                            posix/Etc/GMT-3\n                            posix/Etc/GMT-3\n                        ": "",
    "\n                            posix/Asia/Kolkata\n                            posix/Asia/Kolkata\n                        ": "",
    "\n                            Pacific/Midway\n                            Pacific/Midway\n                        ": "",
    "\n                            Indian/Chagos\n                            Indian/Chagos\n                        ": "",
    "\n                            posix/US/Alaska\n                            posix/US/Alaska\n                        ": "",
    "\n                            posix/Africa/Timbuktu\n                            posix/Africa/Timbuktu\n                        ": "",
    "\n                            Africa/Windhoek\n                            Africa/Windhoek\n                        ": "",
    "\n                            posix/Africa/Tunis\n                            posix/Africa/Tunis\n                        ": "",
    "\n                            NZ\n                            NZ\n                        ": "",
    "\n                            posix/Antarctica/Syowa\n                            posix/Antarctica/Syowa\n                        ": "",
    "\n                            SystemV/MST7MDT\n                            SystemV/MST7MDT\n                        ": "",
    "\n                            posix/America/Scoresbysund\n                            posix/America/Scoresbysund\n                        ": "",
    "\n                            America/Guatemala\n                            America/Guatemala\n                        ": "",
    "\n                            posix/America/Asuncion\n                            posix/America/Asuncion\n                        ": "",
    "\n                            America/Argentina/Salta\n                            America/Argentina/Salta\n                        ": "",
    "\n                            posix/Asia/Istanbul\n                            posix/Asia/Istanbul\n                        ": "",
    "\n                            America/Halifax\n                            America/Halifax\n                        ": "",
    "\n                            posix/Asia/Sakhalin\n                            posix/Asia/Sakhalin\n                        ": "",
    "\n                            Indian/Kerguelen\n                            Indian/Kerguelen\n                        ": "",
    "\n                            ROC\n                            ROC\n                        ": "",
    "\n                            Atlantic/Jan_Mayen\n                            Atlantic/Jan_Mayen\n                        ": "",
    "\n                            posix/Asia/Oral\n                            posix/Asia/Oral\n                        ": "",
    "\n                            Indian/Comoro\n                            Indian/Comoro\n                        ": "",
    "\n                            posix/Europe/Chisinau\n                            posix/Europe/Chisinau\n                        ": "",
    "\n                            posix/PRC\n                            posix/PRC\n                        ": "",
    "\n                            Pacific/Rarotonga\n                            Pacific/Rarotonga\n                        ": "",
    "\n                            GMT0\n                            GMT0\n                        ": "",
    "\n                            Europe/Samara\n                            Europe/Samara\n                        ": "",
    "\n                            posix/Asia/Novosibirsk\n                            posix/Asia/Novosibirsk\n                        ": "",
    "\n                            posix/Europe/Ulyanovsk\n                            posix/Europe/Ulyanovsk\n                        ": "",
    "\n                            Antarctica/McMurdo\n                            Antarctica/McMurdo\n                        ": "",
    "\n                            Etc/GMT-7\n                            Etc/GMT-7\n                        ": "",
    "\n                            posix/Africa/Lusaka\n                            posix/Africa/Lusaka\n                        ": "",
    "\n                            posix/America/St_Thomas\n                            posix/America/St_Thomas\n                        ": "",
    "\n                            posix/America/Buenos_Aires\n                            posix/America/Buenos_Aires\n                        ": "",
    "\n                            posix/America/Argentina/San_Luis\n                            posix/America/Argentina/San_Luis\n                        ": "",
    "\n                            America/Ensenada\n                            America/Ensenada\n                        ": "",
    "\n                            posix/Greenwich\n                            posix/Greenwich\n                        ": "",
    "\n                            Europe/Copenhagen\n                            Europe/Copenhagen\n                        ": "",
    "\n                            posix/America/Cancun\n                            posix/America/Cancun\n                        ": "",
    "\n                            posix/GB-Eire\n                            posix/GB-Eire\n                        ": "",
    "\n                            Australia/Yancowinna\n                            Australia/Yancowinna\n                        ": "",
    "\n                            posix/Europe/Prague\n                            posix/Europe/Prague\n                        ": "",
    "\n                            posix/America/Merida\n                            posix/America/Merida\n                        ": "",
    "\n                            Europe/Kirov\n                            Europe/Kirov\n                        ": "",
    "\n                            posix/Pacific/Bougainville\n                            posix/Pacific/Bougainville\n                        ": "",
    "\n                            posix/America/Maceio\n                            posix/America/Maceio\n                        ": "",
    "\n                            Atlantic/South_Georgia\n                            Atlantic/South_Georgia\n                        ": "",
    "\n                            Asia/Dili\n                            Asia/Dili\n                        ": "",
    "\n                            America/Menominee\n                            America/Menominee\n                        ": "",
    "\n                            Etc/GMT+8\n                            Etc/GMT+8\n                        ": "",
    "\n                            posix/Africa/Algiers\n                            posix/Africa/Algiers\n                        ": "",
    "\n                            Africa/Dakar\n                            Africa/Dakar\n                        ": "",
    "\n                            posix/Asia/Makassar\n                            posix/Asia/Makassar\n                        ": "",
    "\n                            Antarctica/Vostok\n                            Antarctica/Vostok\n                        ": "",
    "\n                            posix/Africa/Addis_Ababa\n                            posix/Africa/Addis_Ababa\n                        ": "",
    "\n                            Antarctica/Casey\n                            Antarctica/Casey\n                        ": "",
    "\n                            posix/America/St_Lucia\n                            posix/America/St_Lucia\n                        ": "",
    "\n                            Asia/Atyrau\n                            Asia/Atyrau\n                        ": "",
    "\n                            Africa/Timbuktu\n                            Africa/Timbuktu\n                        ": "",
    "\n                            posix/Israel\n                            posix/Israel\n                        ": "",
    "\n                            America/Indiana/Indianapolis\n                            America/Indiana/Indianapolis\n                        ": "",
    "\n                            America/Guyana\n                            America/Guyana\n                        ": "",
    "\n                            posix/Asia/Tbilisi\n                            posix/Asia/Tbilisi\n                        ": "",
    "\n                            Africa/Maputo\n                            Africa/Maputo\n                        ": "",
    "\n                            posix/America/Godthab\n                            posix/America/Godthab\n                        ": "",
    "\n                            posix/Asia/Saigon\n                            posix/Asia/Saigon\n                        ": "",
    "\n                            America/Thunder_Bay\n                            America/Thunder_Bay\n                        ": "",
    "\n                            Iran\n                            Iran\n                        ": "",
    "\n                            America/Port-au-Prince\n                            America/Port-au-Prince\n                        ": "",
    "\n                            posix/America/Toronto\n                            posix/America/Toronto\n                        ": "",
    "\n                            posix/Africa/Ouagadougou\n                            posix/Africa/Ouagadougou\n                        ": "",
    "\n                            posix/America/Denver\n                            posix/America/Denver\n                        ": "",
    "\n                            Asia/Kashgar\n                            Asia/Kashgar\n                        ": "",
    "\n                            posix/America/Ensenada\n                            posix/America/Ensenada\n                        ": "",
    "\n                            Africa/Bangui\n                            Africa/Bangui\n                        ": "",
    "\n                            WET\n                            WET\n                        ": "",
    "\n                            Etc/GMT-11\n                            Etc/GMT-11\n                        ": "",
    "\n                            posix/Asia/Anadyr\n                            posix/Asia/Anadyr\n                        ": "",
    "\n                            Navajo\n                            Navajo\n                        ": "",
    "\n                            posix/Antarctica/Mawson\n                            posix/Antarctica/Mawson\n                        ": "",
    "\n                            Africa/Douala\n                            Africa/Douala\n                        ": "",
    "\n                            posix/America/Sao_Paulo\n                            posix/America/Sao_Paulo\n                        ": "",
    "\n                            Antarctica/Mawson\n                            Antarctica/Mawson\n                        ": "",
    "\n                            America/Recife\n                            America/Recife\n                        ": "",
    "\n                            posix/Asia/Shanghai\n                            posix/Asia/Shanghai\n                        ": "",
    "\n                            EST\n                            EST\n                        ": "",
    "\n                            posix/NZ\n                            posix/NZ\n                        ": "",
    "\n                            W-SU\n                            W-SU\n                        ": "",
    "\n                            Europe/Jersey\n                            Europe/Jersey\n                        ": "",
    "\n                            posix/Asia/Kuching\n                            posix/Asia/Kuching\n                        ": "",
    "\n                            posix/America/Tegucigalpa\n                            posix/America/Tegucigalpa\n                        ": "",
    "\n                            posix/Atlantic/Canary\n                            posix/Atlantic/Canary\n                        ": "",
    "\n                            America/Rainy_River\n                            America/Rainy_River\n                        ": "",
    "\n                            posix/Africa/Khartoum\n                            posix/Africa/Khartoum\n                        ": "",
    "\n                            MST\n                            MST\n                        ": "",
    "\n                            posix/Asia/Manila\n                            posix/Asia/Manila\n                        ": "",
    "\n                            Indian/Reunion\n                            Indian/Reunion\n                        ": "",
    "\n                            posix/Australia/Victoria\n                            posix/Australia/Victoria\n                        ": "",
    "\n                            Africa/Djibouti\n                            Africa/Djibouti\n                        ": "",
    "\n                            posix/America/St_Kitts\n                            posix/America/St_Kitts\n                        ": "",
    "\n                            posix/Europe/Tiraspol\n                            posix/Europe/Tiraspol\n                        ": "",
    "\n                            Europe/Paris\n                            Europe/Paris\n                        ": "",
    "\n                            posix/US/Hawaii\n                            posix/US/Hawaii\n                        ": "",
    "\n                            Etc/GMT+6\n                            Etc/GMT+6\n                        ": "",
    "\n                            US/Mountain\n                            US/Mountain\n                        ": "",
    "\n                            Asia/Dushanbe\n                            Asia/Dushanbe\n                        ": "",
    "\n                            America/Regina\n                            America/Regina\n                        ": "",
    "\n                            posix/Asia/Rangoon\n                            posix/Asia/Rangoon\n                        ": "",
    "\n                            posix/Africa/Kampala\n                            posix/Africa/Kampala\n                        ": "",
    "\n                            posix/Asia/Bahrain\n                            posix/Asia/Bahrain\n                        ": "",
    "\n                            posix/America/Indiana/Vincennes\n                            posix/America/Indiana/Vincennes\n                        ": "",
    "\n                            posix/Africa/Harare\n                            posix/Africa/Harare\n                        ": "",
    "\n                            Etc/GMT+2\n                            Etc/GMT+2\n                        ": "",
    "\n                            posix/Pacific/Norfolk\n                            posix/Pacific/Norfolk\n                        ": "",
    "\n                            America/Caracas\n                            America/Caracas\n                        ": "",
    "\n                            Africa/Lagos\n                            Africa/Lagos\n                        ": "",
    "\n                            US/Indiana-Starke\n                            US/Indiana-Starke\n                        ": "",
    "\n                            Asia/Chungking\n                            Asia/Chungking\n                        ": "",
    "\n                            posix/Europe/Vaduz\n                            posix/Europe/Vaduz\n                        ": "",
    "\n                            posix/Asia/Ujung_Pandang\n                            posix/Asia/Ujung_Pandang\n                        ": "",
    "\n                            posix/America/Porto_Velho\n                            posix/America/Porto_Velho\n                        ": "",
    "\n                            posix/Pacific/Honolulu\n                            posix/Pacific/Honolulu\n                        ": "",
    "\n                            posix/Navajo\n                            posix/Navajo\n                        ": "",
    "\n                            posix/America/Kralendijk\n                            posix/America/Kralendijk\n                        ": "",
    "\n                            posix/Etc/GMT+12\n                            posix/Etc/GMT+12\n                        ": "",
    "\n                            Canada/Newfoundland\n                            Canada/Newfoundland\n                        ": "",
    "\n                            America/Indiana/Knox\n                            America/Indiana/Knox\n                        ": "",
    "\n                            posix/Etc/GMT-13\n                            posix/Etc/GMT-13\n                        ": "",
    "\n                            Asia/Kuching\n                            Asia/Kuching\n                        ": "",
    "\n                            posix/Africa/Windhoek\n                            posix/Africa/Windhoek\n                        ": "",
    "\n                            Indian/Mayotte\n                            Indian/Mayotte\n                        ": "",
    "\n                            posix/Indian/Chagos\n                            posix/Indian/Chagos\n                        ": "",
    "\n                            posix/Europe/Berlin\n                            posix/Europe/Berlin\n                        ": "",
    "\n                            posix/America/Indiana/Tell_City\n                            posix/America/Indiana/Tell_City\n                        ": "",
    "\n                            America/Argentina/San_Juan\n                            America/Argentina/San_Juan\n                        ": "",
    "\n                            posix/SystemV/PST8\n                            posix/SystemV/PST8\n                        ": "",
    "\n                            America/Merida\n                            America/Merida\n                        ": "",
    "\n                            posix/Australia/Hobart\n                            posix/Australia/Hobart\n                        ": "",
    "\n                            Europe/Zaporozhye\n                            Europe/Zaporozhye\n                        ": "",
    "\n                            America/Cancun\n                            America/Cancun\n                        ": "",
    "\n                            Mexico/BajaSur\n                            Mexico/BajaSur\n                        ": "",
    "\n                            America/Guayaquil\n                            America/Guayaquil\n                        ": "",
    "\n                            Europe/Belgrade\n                            Europe/Belgrade\n                        ": "",
    "\n                            America/Noronha\n                            America/Noronha\n                        ": "",
    "\n                            posix/Europe/Luxembourg\n                            posix/Europe/Luxembourg\n                        ": "",
    "\n                            posix/Europe/Tirane\n                            posix/Europe/Tirane\n                        ": "",
    "\n                            Europe/Andorra\n                            Europe/Andorra\n                        ": "",
    "\n                            posix/America/Caracas\n                            posix/America/Caracas\n                        ": "",
    "\n                            America/Lower_Princes\n                            America/Lower_Princes\n                        ": "",
    "\n                            posix/America/Los_Angeles\n                            posix/America/Los_Angeles\n                        ": "",
    "\n                            posix/America/Manaus\n                            posix/America/Manaus\n                        ": "",
    "\n                            Asia/Krasnoyarsk\n                            Asia/Krasnoyarsk\n                        ": "",
    "\n                            posix/America/Costa_Rica\n                            posix/America/Costa_Rica\n                        ": "",
    "\n                            Africa/Dar_es_Salaam\n                            Africa/Dar_es_Salaam\n                        ": "",
    "\n                            Antarctica/Palmer\n                            Antarctica/Palmer\n                        ": "",
    "\n                            posix/Europe/Malta\n                            posix/Europe/Malta\n                        ": "",
    "\n                            America/Argentina/Mendoza\n                            America/Argentina/Mendoza\n                        ": "",
    "\n                            posix/Asia/Kathmandu\n                            posix/Asia/Kathmandu\n                        ": "",
    "\n                            posix/America/Regina\n                            posix/America/Regina\n                        ": "",
    "\n                            posix/America/Belize\n                            posix/America/Belize\n                        ": "",
    "\n                            America/Creston\n                            America/Creston\n                        ": "",
    "\n                            posix/Europe/Bratislava\n                            posix/Europe/Bratislava\n                        ": "",
    "\n                            posix/Atlantic/St_Helena\n                            posix/Atlantic/St_Helena\n                        ": "",
    "\n                            Asia/Manila\n                            Asia/Manila\n                        ": "",
    "\n                            posix/America/Argentina/Catamarca\n                            posix/America/Argentina/Catamarca\n                        ": "",
    "\n                            America/Argentina/Ushuaia\n                            America/Argentina/Ushuaia\n                        ": "",
    "\n                            America/Adak\n                            America/Adak\n                        ": "",
    "\n                            posix/America/Boa_Vista\n                            posix/America/Boa_Vista\n                        ": "",
    "\n                            posix/Brazil/Acre\n                            posix/Brazil/Acre\n                        ": "",
    "\n                            posix/America/St_Vincent\n                            posix/America/St_Vincent\n                        ": "",
    "\n                            posix/Africa/Johannesburg\n                            posix/Africa/Johannesburg\n                        ": "",
    "\n                            Etc/Zulu\n                            Etc/Zulu\n                        ": "",
    "\n                            posix/Australia/Eucla\n                            posix/Australia/Eucla\n                        ": "",
    "\n                            posix/America/Montreal\n                            posix/America/Montreal\n                        ": "",
    "\n                            posix/Europe/Budapest\n                            posix/Europe/Budapest\n                        ": "",
    "\n                            America/Metlakatla\n                            America/Metlakatla\n                        ": "",
    "\n                            posix/Africa/Freetown\n                            posix/Africa/Freetown\n                        ": "",
    "\n                            posix/Asia/Choibalsan\n                            posix/Asia/Choibalsan\n                        ": "",
    "\n                            posix/America/Lima\n                            posix/America/Lima\n                        ": "",
    "\n                            posix/Canada/Yukon\n                            posix/Canada/Yukon\n                        ": "",
    "\n                            Asia/Muscat\n                            Asia/Muscat\n                        ": "",
    "\n                            America/Argentina/Tucuman\n                            America/Argentina/Tucuman\n                        ": "",
    "\n                            posix/America/Coral_Harbour\n                            posix/America/Coral_Harbour\n                        ": "",
    "\n                            Europe/Zagreb\n                            Europe/Zagreb\n                        ": "",
    "\n                            posix/America/Argentina/Tucuman\n                            posix/America/Argentina/Tucuman\n                        ": "",
    "\n                            SystemV/EST5\n                            SystemV/EST5\n                        ": "",
    "\n                            Etc/GMT-0\n                            Etc/GMT-0\n                        ": "",
    "\n                            Atlantic/Faeroe\n                            Atlantic/Faeroe\n                        ": "",
    "\n                            posix/America/Indiana/Winamac\n                            posix/America/Indiana/Winamac\n                        ": "",
    "\n                            Asia/Urumqi\n                            Asia/Urumqi\n                        ": "",
    "\n                            posix/Africa/Bujumbura\n                            posix/Africa/Bujumbura\n                        ": "",
    "\n                            America/Santiago\n                            America/Santiago\n                        ": "",
    "\n                            America/Kralendijk\n                            America/Kralendijk\n                        ": "",
    "\n                            America/Rosario\n                            America/Rosario\n                        ": "",
    "\n                            posix/Australia/Lord_Howe\n                            posix/Australia/Lord_Howe\n                        ": "",
    "\n                            Pacific/Auckland\n                            Pacific/Auckland\n                        ": "",
    "\n                            posix/America/Nome\n                            posix/America/Nome\n                        ": "",
    "\n                            Pacific/Kosrae\n                            Pacific/Kosrae\n                        ": "",
    "\n                            Africa/Nairobi\n                            Africa/Nairobi\n                        ": "",
    "\n                            Africa/Kinshasa\n                            Africa/Kinshasa\n                        ": "",
    "\n                            posix/Asia/Dili\n                            posix/Asia/Dili\n                        ": "",
    "\n                            posix/Africa/Gaborone\n                            posix/Africa/Gaborone\n                        ": "",
    "\n                            posix/US/Aleutian\n                            posix/US/Aleutian\n                        ": "",
    "\n                            Libya\n                            Libya\n                        ": "",
    "\n                            GMT+0\n                            GMT+0\n                        ": "",
    "\n                            Etc/GMT+7\n                            Etc/GMT+7\n                        ": "",
    "\n                            posix/Factory\n                            posix/Factory\n                        ": "",
    "\n                            posix/Europe/Samara\n                            posix/Europe/Samara\n                        ": "",
    "\n                            posix/America/Fort_Wayne\n                            posix/America/Fort_Wayne\n                        ": "",
    "\n                            Asia/Macau\n                            Asia/Macau\n                        ": "",
    "\n                            Pacific/Johnston\n                            Pacific/Johnston\n                        ": "",
    "\n                            Africa/Ndjamena\n                            Africa/Ndjamena\n                        ": "",
    "\n                            posix/America/Nassau\n                            posix/America/Nassau\n                        ": "",
    "\n                            posix/Europe/London\n                            posix/Europe/London\n                        ": "",
    "\n                            Turkey\n                            Turkey\n                        ": "",
    "\n                            Asia/Tomsk\n                            Asia/Tomsk\n                        ": "",
    "\n                            posix/Asia/Dubai\n                            posix/Asia/Dubai\n                        ": "",
    "\n                            posix/Asia/Tashkent\n                            posix/Asia/Tashkent\n                        ": "",
    "\n                            posix/Asia/Bangkok\n                            posix/Asia/Bangkok\n                        ": "",
    "\n                            Europe/Monaco\n                            Europe/Monaco\n                        ": "",
    "\n                            Brazil/East\n                            Brazil/East\n                        ": "",
    "\n                            posix/America/Menominee\n                            posix/America/Menominee\n                        ": "",
    "\n                            US/Michigan\n                            US/Michigan\n                        ": "",
    "\n                            posix/Asia/Yekaterinburg\n                            posix/Asia/Yekaterinburg\n                        ": "",
    "\n                            Europe/Luxembourg\n                            Europe/Luxembourg\n                        ": "",
    "\n                            posix/Pacific/Nauru\n                            posix/Pacific/Nauru\n                        ": "",
    "\n                            posix/America/Curacao\n                            posix/America/Curacao\n                        ": "",
    "\n                            CET\n                            CET\n                        ": "",
    "\n                            Pacific/Majuro\n                            Pacific/Majuro\n                        ": "",
    "\n                            Asia/Riyadh\n                            Asia/Riyadh\n                        ": "",
    "\n                            posix/America/Nuuk\n                            posix/America/Nuuk\n                        ": "",
    "\n                            EET\n                            EET\n                        ": "",
    "\n                            Asia/Oral\n                            Asia/Oral\n                        ": "",
    "\n                            posix/PST8PDT\n                            posix/PST8PDT\n                        ": "",
    "\n                            posix/Atlantic/Madeira\n                            posix/Atlantic/Madeira\n                        ": "",
    "\n                            America/Aruba\n                            America/Aruba\n                        ": "",
    "\n                            posix/Asia/Chita\n                            posix/Asia/Chita\n                        ": "",
    "\n                            Etc/GMT+12\n                            Etc/GMT+12\n                        ": "",
    "\n                            America/Guadeloupe\n                            America/Guadeloupe\n                        ": "",
    "\n                            posix/America/Argentina/Jujuy\n                            posix/America/Argentina/Jujuy\n                        ": "",
    "\n                            posix/Antarctica/DumontDUrville\n                            posix/Antarctica/DumontDUrville\n                        ": "",
    "\n                            posix/Etc/GMT+11\n                            posix/Etc/GMT+11\n                        ": "",
    "\n                            Pacific/Fakaofo\n                            Pacific/Fakaofo\n                        ": "",
    "\n                            posix/Asia/Srednekolymsk\n                            posix/Asia/Srednekolymsk\n                        ": "",
    "\n                            posix/Asia/Chungking\n                            posix/Asia/Chungking\n                        ": "",
    "\n                            posix/Africa/Bamako\n                            posix/Africa/Bamako\n                        ": "",
    "\n                            SystemV/MST7\n                            SystemV/MST7\n                        ": "",
    "\n                            posix/America/Guayaquil\n                            posix/America/Guayaquil\n                        ": "",
    "\n                            posix/Australia/Canberra\n                            posix/Australia/Canberra\n                        ": "",
    "\n                            Pacific/Fiji\n                            Pacific/Fiji\n                        ": "",
    "\n                            posix/Europe/Mariehamn\n                            posix/Europe/Mariehamn\n                        ": "",
    "\n                            posix/Pacific/Midway\n                            posix/Pacific/Midway\n                        ": "",
    "\n                            posix/Asia/Qyzylorda\n                            posix/Asia/Qyzylorda\n                        ": "",
    "\n                            posix/America/Jujuy\n                            posix/America/Jujuy\n                        ": "",
    "\n                            Jamaica\n                            Jamaica\n                        ": "",
    "\n                            Indian/Antananarivo\n                            Indian/Antananarivo\n                        ": "",
    "\n                            Asia/Anadyr\n                            Asia/Anadyr\n                        ": "",
    "\n                            posix/America/Indiana/Indianapolis\n                            posix/America/Indiana/Indianapolis\n                        ": "",
    "\n                            Africa/El_Aaiun\n                            Africa/El_Aaiun\n                        ": "",
    "\n                            posix/Asia/Baghdad\n                            posix/Asia/Baghdad\n                        ": "",
    "\n                            Asia/Gaza\n                            Asia/Gaza\n                        ": "",
    "\n                            Asia/Taipei\n                            Asia/Taipei\n                        ": "",
    "\n                            posix/America/Marigot\n                            posix/America/Marigot\n                        ": "",
    "\n                            America/Edmonton\n                            America/Edmonton\n                        ": "",
    "\n                            US/Hawaii\n                            US/Hawaii\n                        ": "",
    "\n                            Pacific/Guam\n                            Pacific/Guam\n                        ": "",
    "\n                            America/Moncton\n                            America/Moncton\n                        ": "",
    "\n                            posix/Pacific/Rarotonga\n                            posix/Pacific/Rarotonga\n                        ": "",
    "\n                            posix/Europe/Skopje\n                            posix/Europe/Skopje\n                        ": "",
    "\n                            Hongkong\n                            Hongkong\n                        ": "",
    "\n                            posix/Europe/Zaporozhye\n                            posix/Europe/Zaporozhye\n                        ": "",
    "\n                            posix/Europe/Nicosia\n                            posix/Europe/Nicosia\n                        ": "",
    "\n                            America/Indiana/Tell_City\n                            America/Indiana/Tell_City\n                        ": "",
    "\n                            posix/Asia/Ust-Nera\n                            posix/Asia/Ust-Nera\n                        ": "",
    "\n                            Asia/Srednekolymsk\n                            Asia/Srednekolymsk\n                        ": "",
    "\n                            Asia/Tokyo\n                            Asia/Tokyo\n                        ": "",
    "\n                            Arctic/Longyearbyen\n                            Arctic/Longyearbyen\n                        ": "",
    "\n                            America/Anguilla\n                            America/Anguilla\n                        ": "",
    "\n                            posix/Europe/Sofia\n                            posix/Europe/Sofia\n                        ": "",
    "\n                            America/Boise\n                            America/Boise\n                        ": "",
    "\n                            posix/America/Ojinaga\n                            posix/America/Ojinaga\n                        ": "",
    "\n                            Asia/Seoul\n                            Asia/Seoul\n                        ": "",
    "\n                            posix/Antarctica/Rothera\n                            posix/Antarctica/Rothera\n                        ": "",
    "\n                            Africa/Mogadishu\n                            Africa/Mogadishu\n                        ": "",
    "\n                            posix/Europe/Kirov\n                            posix/Europe/Kirov\n                        ": "",
    "\n                            WITA\n                            WITA\n                        ": "",
    "\n                            +0630\n                            +0630\n                        ": "",
    "\n                            MDT\n                            MDT\n                        ": "",
    "\n                            SAST\n                            SAST\n                        ": "",
    "\n                            WIT\n                            WIT\n                        ": "",
    "\n                            ADT\n                            ADT\n                        ": "",
    "\n                            CAT\n                            CAT\n                        ": "",
    "\n                            NDT\n                            NDT\n                        ": "",
    "\n                            +14\n                            +14\n                        ": "",
    "\n                            CEST\n                            CEST\n                        ": "",
    "\n                            PDT\n                            PDT\n                        ": "",
    "\n                            -01\n                            -01\n                        ": "",
    "\n                            -03\n                            -03\n                        ": "",
    "\n                            +11\n                            +11\n                        ": "",
    "\n                            ChST\n                            ChST\n                        ": "",
    "\n                            PST\n                            PST\n                        ": "",
    "\n                            +03\n                            +03\n                        ": "",
    "\n                            AWST\n                            AWST\n                        ": "",
    "\n                            +1030\n                            +1030\n                        ": "",
    "\n                            BST\n                            BST\n                        ": "",
    "\n                            +0845\n                            +0845\n                        ": "",
    "\n                            MSK\n                            MSK\n                        ": "",
    "\n                            PKT\n                            PKT\n                        ": "",
    "\n                            +10\n                            +10\n                        ": "",
    "\n                            -0930\n                            -0930\n                        ": "",
    "\n                            WAT\n                            WAT\n                        ": "",
    "\n                            +0430\n                            +0430\n                        ": "",
    "\n                            +0530\n                            +0530\n                        ": "",
    "\n                            +12\n                            +12\n                        ": "",
    "\n                            HDT\n                            HDT\n                        ": "",
    "\n                            -11\n                            -11\n                        ": "",
    "\n                            EDT\n                            EDT\n                        ": "",
    "\n                            IST\n                            IST\n                        ": "",
    "\n                            -07\n                            -07\n                        ": "",
    "\n                            IDT\n                            IDT\n                        ": "",
    "\n                            MEST\n                            MEST\n                        ": "",
    "\n                            AST\n                            AST\n                        ": "",
    "\n                            +06\n                            +06\n                        ": "",
    "\n                            EAT\n                            EAT\n                        ": "",
    "\n                            EEST\n                            EEST\n                        ": "",
    "\n                            +0545\n                            +0545\n                        ": "",
    "\n                            -09\n                            -09\n                        ": "",
    "\n                            ACST\n                            ACST\n                        ": "",
    "\n                            JST\n                            JST\n                        ": "",
    "\n                            AEST\n                            AEST\n                        ": "",
    "\n                            CST\n                            CST\n                        ": "",
    "\n                            +05\n                            +05\n                        ": "",
    "\n                            +07\n                            +07\n                        ": "",
    "\n                            +04\n                            +04\n                        ": "",
    "\n                            -02\n                            -02\n                        ": "",
    "\n                            -04\n                            -04\n                        ": "",
    "\n                            AKDT\n                            AKDT\n                        ": "",
    "\n                            -10\n                            -10\n                        ": "",
    "\n                            HKT\n                            HKT\n                        ": "",
    "\n                            CDT\n                            CDT\n                        ": "",
    "\n                            -00\n                            -00\n                        ": "",
    "\n                            NZST\n                            NZST\n                        ": "",
    "\n                            +01\n                            +01\n                        ": "",
    "\n                            -12\n                            -12\n                        ": "",
    "\n                            -08\n                            -08\n                        ": "",
    "\n                            SST\n                            SST\n                        ": "",
    "\n                            -05\n                            -05\n                        ": "",
    "\n                            -06\n                            -06\n                        ": "",
    "\n                            +08\n                            +08\n                        ": "",
    "\n                            WIB\n                            WIB\n                        ": "",
    "\n                            +13\n                            +13\n                        ": "",
    "\n                            +00\n                            +00\n                        ": "",
    "\n                            +1245\n                            +1245\n                        ": "",
    "\n                            +02\n                            +02\n                        ": "",
    "\n                            KST\n                            KST\n                        ": "",
    "\n                            +09\n                            +09\n                        ": "",
    "\n                            WEST\n                            WEST\n                        ": "",
    "\n                            DDUT\n                            DDUT\n                        ": "",
    "\n                            AZOST\n                            AZOST\n                        ": "",
    "\n                            EGST\n                            EGST\n                        ": "",
    "\n                            GFT\n                            GFT\n                        ": "",
    "\n                            SADT\n                            SADT\n                        ": "",
    "\n                            FKST\n                            FKST\n                        ": "",
    "\n                            TJT\n                            TJT\n                        ": "",
    "\n                            AESST\n                            AESST\n                        ": "",
    "\n                            LIGT\n                            LIGT\n                        ": "",
    "\n                            CKT\n                            CKT\n                        ": "",
    "\n                            CCT\n                            CCT\n                        ": "",
    "\n                            YAKST\n                            YAKST\n                        ": "",
    "\n                            CETDST\n                            CETDST\n                        ": "",
    "\n                            MESZ\n                            MESZ\n                        ": "",
    "\n                            ZULU\n                            ZULU\n                        ": "",
    "\n                            RET\n                            RET\n                        ": "",
    "\n                            GEST\n                            GEST\n                        ": "",
    "\n                            AKST\n                            AKST\n                        ": "",
    "\n                            YAKT\n                            YAKT\n                        ": "",
    "\n                            GET\n                            GET\n                        ": "",
    "\n                            MUST\n                            MUST\n                        ": "",
    "\n                            NST\n                            NST\n                        ": "",
    "\n                            WFT\n                            WFT\n                        ": "",
    "\n                            METDST\n                            METDST\n                        ": "",
    "\n                            AWSST\n                            AWSST\n                        ": "",
    "\n                            KGT\n                            KGT\n                        ": "",
    "\n                            VUT\n                            VUT\n                        ": "",
    "\n                            ARST\n                            ARST\n                        ": "",
    "\n                            MAGT\n                            MAGT\n                        ": "",
    "\n                            MPT\n                            MPT\n                        ": "",
    "\n                            WAKT\n                            WAKT\n                        ": "",
    "\n                            LHDT\n                            LHDT\n                        ": "",
    "\n                            ACSST\n                            ACSST\n                        ": "",
    "\n                            LINT\n                            LINT\n                        ": "",
    "\n                            TMT\n                            TMT\n                        ": "",
    "\n                            CLST\n                            CLST\n                        ": "",
    "\n                            NPT\n                            NPT\n                        ": "",
    "\n                            GALT\n                            GALT\n                        ": "",
    "\n                            PGT\n                            PGT\n                        ": "",
    "\n                            OMST\n                            OMST\n                        ": "",
    "\n                            MSD\n                            MSD\n                        ": "",
    "\n                            GILT\n                            GILT\n                        ": "",
    "\n                            SCT\n                            SCT\n                        ": "",
    "\n                            ULAT\n                            ULAT\n                        ": "",
    "\n                            PHOT\n                            PHOT\n                        ": "",
    "\n                            EETDST\n                            EETDST\n                        ": "",
    "\n                            BRT\n                            BRT\n                        ": "",
    "\n                            ULAST\n                            ULAST\n                        ": "",
    "\n                            BNT\n                            BNT\n                        ": "",
    "\n                            PWT\n                            PWT\n                        ": "",
    "\n                            KOST\n                            KOST\n                        ": "",
    "\n                            CHAST\n                            CHAST\n                        ": "",
    "\n                            Z\n                            Z\n                        ": "",
    "\n                            ANAST\n                            ANAST\n                        ": "",
    "\n                            MEZ\n                            MEZ\n                        ": "",
    "\n                            WGST\n                            WGST\n                        ": "",
    "\n                            WGT\n                            WGT\n                        ": "",
    "\n                            NUT\n                            NUT\n                        ": "",
    "\n                            OMSST\n                            OMSST\n                        ": "",
    "\n                            UYST\n                            UYST\n                        ": "",
    "\n                            PMDT\n                            PMDT\n                        ": "",
    "\n                            CHADT\n                            CHADT\n                        ": "",
    "\n                            BDT\n                            BDT\n                        ": "",
    "\n                            MMT\n                            MMT\n                        ": "",
    "\n                            LKT\n                            LKT\n                        ": "",
    "\n                            AMT\n                            AMT\n                        ": "",
    "\n                            ART\n                            ART\n                        ": "",
    "\n                            ACDT\n                            ACDT\n                        ": "",
    "\n                            PKST\n                            PKST\n                        ": "",
    "\n                            ICT\n                            ICT\n                        ": "",
    "\n                            CADT\n                            CADT\n                        ": "",
    "\n                            PONT\n                            PONT\n                        ": "",
    "\n                            ACT\n                            ACT\n                        ": "",
    "\n                            MUT\n                            MUT\n                        ": "",
    "\n                            KRAST\n                            KRAST\n                        ": "",
    "\n                            PYST\n                            PYST\n                        ": "",
    "\n                            NZDT\n                            NZDT\n                        ": "",
    "\n                            SGT\n                            SGT\n                        ": "",
    "\n                            KRAT\n                            KRAT\n                        ": "",
    "\n                            IOT\n                            IOT\n                        ": "",
    "\n                            IRKST\n                            IRKST\n                        ": "",
    "\n                            IRKT\n                            IRKT\n                        ": "",
    "\n                            BRA\n                            BRA\n                        ": "",
    "\n                            TOT\n                            TOT\n                        ": "",
    "\n                            VET\n                            VET\n                        ": "",
    "\n                            AEDT\n                            AEDT\n                        ": "",
    "\n                            NZT\n                            NZT\n                        ": "",
    "\n                            AZST\n                            AZST\n                        ": "",
    "\n                            BTT\n                            BTT\n                        ": "",
    "\n                            CXT\n                            CXT\n                        ": "",
    "\n                            PETT\n                            PETT\n                        ": "",
    "\n                            FET\n                            FET\n                        ": "",
    "\n                            EGT\n                            EGT\n                        ": "",
    "\n                            BORT\n                            BORT\n                        ": "",
    "\n                            PETST\n                            PETST\n                        ": "",
    "\n                            FJT\n                            FJT\n                        ": "",
    "\n                            XJT\n                            XJT\n                        ": "",
    "\n                            AZOT\n                            AZOT\n                        ": "",
    "\n                            ALMST\n                            ALMST\n                        ": "",
    "\n                            FNT\n                            FNT\n                        ": "",
    "\n                            UT\n                            UT\n                        ": "",
    "\n                            YEKST\n                            YEKST\n                        ": "",
    "\n                            EAST\n                            EAST\n                        ": "",
    "\n                            VLAT\n                            VLAT\n                        ": "",
    "\n                            ANAT\n                            ANAT\n                        ": "",
    "\n                            WAST\n                            WAST\n                        ": "",
    "\n                            DAVT\n                            DAVT\n                        ": "",
    "\n                            JAYT\n                            JAYT\n                        ": "",
    "\n                            PHT\n                            PHT\n                        ": "",
    "\n                            CLT\n                            CLT\n                        ": "",
    "\n                            TRUT\n                            TRUT\n                        ": "",
    "\n                            AMST\n                            AMST\n                        ": "",
    "\n                            TVT\n                            TVT\n                        ": "",
    "\n                            ALMT\n                            ALMT\n                        ": "",
    "\n                            EASST\n                            EASST\n                        ": "",
    "\n                            NFT\n                            NFT\n                        ": "",
    "\n                            TAHT\n                            TAHT\n                        ": "",
    "\n                            WETDST\n                            WETDST\n                        ": "",
    "\n                            FNST\n                            FNST\n                        ": "",
    "\n                            WDT\n                            WDT\n                        ": "",
    "\n                            FKT\n                            FKT\n                        ": "",
    "\n                            UZT\n                            UZT\n                        ": "",
    "\n                            CHUT\n                            CHUT\n                        ": "",
    "\n                            TFT\n                            TFT\n                        ": "",
    "\n                            YEKT\n                            YEKT\n                        ": "",
    "\n                            BDST\n                            BDST\n                        ": "",
    "\n                            COT\n                            COT\n                        ": "",
    "\n                            UZST\n                            UZST\n                        ": "",
    "\n                            PMST\n                            PMST\n                        ": "",
    "\n                            IRT\n                            IRT\n                        ": "",
    "\n                            ACWST\n                            ACWST\n                        ": "",
    "\n                            KDT\n                            KDT\n                        ": "",
    "\n                            MVT\n                            MVT\n                        ": "",
    "\n                            MAWT\n                            MAWT\n                        ": "",
    "\n                            AZT\n                            AZT\n                        ": "",
    "\n                            PET\n                            PET\n                        ": "",
    "\n                            WADT\n                            WADT\n                        ": "",
    "\n                            NOVT\n                            NOVT\n                        ": "",
    "\n                            BRST\n                            BRST\n                        ": "",
    "\n                            GYT\n                            GYT\n                        ": "",
    "\n                            PYT\n                            PYT\n                        ": "",
    "\n                            LHST\n                            LHST\n                        ": "",
    "\n                            MHT\n                            MHT\n                        ": "",
    "\n                            VOLT\n                            VOLT\n                        ": "",
    "\n                            NOVST\n                            NOVST\n                        ": "",
    "\n                            TKT\n                            TKT\n                        ": "",
    "\n                            AFT\n                            AFT\n                        ": "",
    "\n                            FJST\n                            FJST\n                        ": "",
    "\n                            CAST\n                            CAST\n                        ": "",
    "\n                            GAMT\n                            GAMT\n                        ": "",
    "\n                            UYT\n                            UYT\n                        ": "",
    "\n                            KGST\n                            KGST\n                        ": "",
    "\n                            MART\n                            MART\n                        ": "",
    "\n                            VLAST\n                            VLAST\n                        ": "",
    "\n                            BOT\n                            BOT\n                        ": "",
    "\n                            MAGST\n                            MAGST\n                        ": "",
    "\n                            YAPT\n                            YAPT\n                        ": "",
    "\n                            MYT\n                            MYT\n                        ": "",
    "\n                            {0 second,0 second}\n                            {0 second,0 second}\n                        ": "",
    "\n                            {0,0}\n                            {0,0}\n                        ": "",
    "\n                            {0,0,0,0,0,0}\n                            {0,0,0,0,0,0}\n                        ": "",
    "\n                            {0,0,0}\n                            {0,0,0}\n                        ": "",
    "\n                            network_inclusion_ops\n                            network_inclusion_ops\n                        ": "",
    "\n                            network_ops\n                            network_ops\n                        ": "",
    "\n                            network_minmax_ops\n                            network_minmax_ops\n                        ": "",
    "\n                            datetime_minmax_ops\n                            datetime_minmax_ops\n                        ": "",
    "\n                            integer_minmax_ops\n                            integer_minmax_ops\n                        ": "",
    "\n                            float_minmax_ops\n                            float_minmax_ops\n                        ": "",
    "\n                            integer_ops\n                            integer_ops\n                        ": "",
    "\n                            float_ops\n                            float_ops\n                        ": "",
    "\n                            datetime_ops\n                            datetime_ops\n                        ": "",
    "\n                             SELECT c.oid AS relid,\n    n.nspname AS schemaname,\n    c.relname,\n    (pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid)) AS heap_blks_read,\n    pg_stat_get_blocks_hit(c.oid) AS heap_blks_hit,\n    (sum((pg_stat_get_blocks_fetched(i.indexrelid) - pg_stat_get_blocks_hit(i.indexrelid))))::bigint AS idx_blks_read,\n    (sum(pg_stat_get_blocks_hit(i.indexrelid)))::bigint AS idx_blks_hit,\n    (pg_stat_get_blocks_fetched(t.oid) - pg_stat_get_blocks_hit(t.oid)) AS toast_blks_read,\n    pg_stat_get_blocks_hit(t.oid) AS toast_blks_hit,\n    (sum((pg_stat_get_blocks_fetched(x.indexrelid) - pg_stat_get_blocks_hit(x.indexrelid))))::bigint AS tidx_blks_read,\n    (sum(pg_stat_get_blocks_hit(x.indexrelid)))::bigint AS tidx_blks_hit\n   FROM ((((pg_class c\n     LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))\n     LEFT JOIN pg_class t ON ((c.reltoastrelid = t.oid)))\n     LEFT JOIN pg_index x ON ((t.oid = x.indrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;t&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;]))\n  GROUP BY c.oid, n.nspname, c.relname, t.oid, x.indrelid;\n                             SELECT c.oid AS relid,\n    n.nspname AS schemaname,\n    c.relname,\n    (pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid)) AS heap_blks_read,\n    pg_stat_get_blocks_hit(c.oid) AS heap_blks_hit,\n    (sum((pg_stat_get_blocks_fetched(i.indexrelid) - pg_stat_get_blocks_hit(i.indexrelid))))::bigint AS idx_blks_read,\n    (sum(pg_stat_get_blocks_hit(i.indexrelid)))::bigint AS idx_blks_hit,\n    (pg_stat_get_blocks_fetched(t.oid) - pg_stat_get_blocks_hit(t.oid)) AS toast_blks_read,\n    pg_stat_get_blocks_hit(t.oid) AS toast_blks_hit,\n    (sum((pg_stat_get_blocks_fetched(x.indexrelid) - pg_stat_get_blocks_hit(x.indexrelid))))::bigint AS tidx_blks_read,\n    (sum(pg_stat_get_blocks_hit(x.indexrelid)))::bigint AS tidx_blks_hit\n   FROM ((((pg_class c\n     LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))\n     LEFT JOIN pg_class t ON ((c.reltoastrelid = t.oid)))\n     LEFT JOIN pg_index x ON ((t.oid = x.indrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;t&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;]))\n  GROUP BY c.oid, n.nspname, c.relname, t.oid, x.indrelid;\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (\n        CASE\n            WHEN (nc.oid = pg_my_temp_schema()) THEN &apos;LOCAL TEMPORARY&apos;::text\n            WHEN (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) THEN &apos;BASE TABLE&apos;::text\n            WHEN (c.relkind = &apos;v&apos;::&quot;char&quot;) THEN &apos;VIEW&apos;::text\n            WHEN (c.relkind = &apos;f&apos;::&quot;char&quot;) THEN &apos;FOREIGN&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS table_type,\n    (NULL::name)::information_schema.sql_identifier AS self_referencing_column_name,\n    (NULL::character varying)::information_schema.character_data AS reference_generation,\n    (\n        CASE\n            WHEN (t.typname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS user_defined_type_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS user_defined_type_schema,\n    (t.typname)::information_schema.sql_identifier AS user_defined_type_name,\n    (\n        CASE\n            WHEN ((c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) OR ((c.relkind = ANY (ARRAY[&apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;])) AND ((pg_relation_is_updatable((c.oid)::regclass, false) &amp; 8) = 8))) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_insertable_into,\n    (\n        CASE\n            WHEN (t.typname IS NOT NULL) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_typed,\n    (NULL::character varying)::information_schema.character_data AS commit_action\n   FROM ((pg_namespace nc\n     JOIN pg_class c ON ((nc.oid = c.relnamespace)))\n     LEFT JOIN (pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((c.reloftype = t.oid)))\n  WHERE ((c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (NOT pg_is_other_temp_schema(nc.oid)) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)));\n                             SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (\n        CASE\n            WHEN (nc.oid = pg_my_temp_schema()) THEN &apos;LOCAL TEMPORARY&apos;::text\n            WHEN (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) THEN &apos;BASE TABLE&apos;::text\n            WHEN (c.relkind = &apos;v&apos;::&quot;char&quot;) THEN &apos;VIEW&apos;::text\n            WHEN (c.relkind = &apos;f&apos;::&quot;char&quot;) THEN &apos;FOREIGN&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS table_type,\n    (NULL::name)::information_schema.sql_identifier AS self_referencing_column_name,\n    (NULL::character varying)::information_schema.character_data AS reference_generation,\n    (\n        CASE\n            WHEN (t.typname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS user_defined_type_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS user_defined_type_schema,\n    (t.typname)::information_schema.sql_identifier AS user_defined_type_name,\n    (\n        CASE\n            WHEN ((c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) OR ((c.relkind = ANY (ARRAY[&apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;])) AND ((pg_relation_is_updatable((c.oid)::regclass, false) &amp; 8) = 8))) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_insertable_into,\n    (\n        CASE\n            WHEN (t.typname IS NOT NULL) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_typed,\n    (NULL::character varying)::information_schema.character_data AS commit_action\n   FROM ((pg_namespace nc\n     JOIN pg_class c ON ((nc.oid = c.relnamespace)))\n     LEFT JOIN (pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((c.reloftype = t.oid)))\n  WHERE ((c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (NOT pg_is_other_temp_schema(nc.oid)) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)));\n                        ": "",
    "\n                             SELECT pg_statio_all_indexes.relid,\n    pg_statio_all_indexes.indexrelid,\n    pg_statio_all_indexes.schemaname,\n    pg_statio_all_indexes.relname,\n    pg_statio_all_indexes.indexrelname,\n    pg_statio_all_indexes.idx_blks_read,\n    pg_statio_all_indexes.idx_blks_hit\n   FROM pg_statio_all_indexes\n  WHERE ((pg_statio_all_indexes.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_statio_all_indexes.schemaname !~ &apos;^pg_toast&apos;::text));\n                             SELECT pg_statio_all_indexes.relid,\n    pg_statio_all_indexes.indexrelid,\n    pg_statio_all_indexes.schemaname,\n    pg_statio_all_indexes.relname,\n    pg_statio_all_indexes.indexrelname,\n    pg_statio_all_indexes.idx_blks_read,\n    pg_statio_all_indexes.idx_blks_hit\n   FROM pg_statio_all_indexes\n  WHERE ((pg_statio_all_indexes.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_statio_all_indexes.schemaname !~ &apos;^pg_toast&apos;::text));\n                        ": "",
    "\n                             SELECT pg_statio_all_sequences.relid,\n    pg_statio_all_sequences.schemaname,\n    pg_statio_all_sequences.relname,\n    pg_statio_all_sequences.blks_read,\n    pg_statio_all_sequences.blks_hit\n   FROM pg_statio_all_sequences\n  WHERE ((pg_statio_all_sequences.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_statio_all_sequences.schemaname ~ &apos;^pg_toast&apos;::text));\n                             SELECT pg_statio_all_sequences.relid,\n    pg_statio_all_sequences.schemaname,\n    pg_statio_all_sequences.relname,\n    pg_statio_all_sequences.blks_read,\n    pg_statio_all_sequences.blks_hit\n   FROM pg_statio_all_sequences\n  WHERE ((pg_statio_all_sequences.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_statio_all_sequences.schemaname ~ &apos;^pg_toast&apos;::text));\n                        ": "",
    "\n                             SELECT c.oid AS relid,\n    i.oid AS indexrelid,\n    n.nspname AS schemaname,\n    c.relname,\n    i.relname AS indexrelname,\n    (pg_stat_get_blocks_fetched(i.oid) - pg_stat_get_blocks_hit(i.oid)) AS idx_blks_read,\n    pg_stat_get_blocks_hit(i.oid) AS idx_blks_hit\n   FROM (((pg_class c\n     JOIN pg_index x ON ((c.oid = x.indrelid)))\n     JOIN pg_class i ON ((i.oid = x.indexrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;t&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;]));\n                             SELECT c.oid AS relid,\n    i.oid AS indexrelid,\n    n.nspname AS schemaname,\n    c.relname,\n    i.relname AS indexrelname,\n    (pg_stat_get_blocks_fetched(i.oid) - pg_stat_get_blocks_hit(i.oid)) AS idx_blks_read,\n    pg_stat_get_blocks_hit(i.oid) AS idx_blks_hit\n   FROM (((pg_class c\n     JOIN pg_index x ON ((c.oid = x.indrelid)))\n     JOIN pg_class i ON ((i.oid = x.indexrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;t&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;]));\n                        ": "",
    "\n                             SELECT w.oid,\n    w.fdwowner,\n    w.fdwoptions,\n    (current_database())::information_schema.sql_identifier AS foreign_data_wrapper_catalog,\n    (w.fdwname)::information_schema.sql_identifier AS foreign_data_wrapper_name,\n    (u.rolname)::information_schema.sql_identifier AS authorization_identifier,\n    (&apos;c&apos;::character varying)::information_schema.character_data AS foreign_data_wrapper_language\n   FROM pg_foreign_data_wrapper w,\n    pg_authid u\n  WHERE ((u.oid = w.fdwowner) AND (pg_has_role(w.fdwowner, &apos;USAGE&apos;::text) OR has_foreign_data_wrapper_privilege(w.oid, &apos;USAGE&apos;::text)));\n                             SELECT w.oid,\n    w.fdwowner,\n    w.fdwoptions,\n    (current_database())::information_schema.sql_identifier AS foreign_data_wrapper_catalog,\n    (w.fdwname)::information_schema.sql_identifier AS foreign_data_wrapper_name,\n    (u.rolname)::information_schema.sql_identifier AS authorization_identifier,\n    (&apos;c&apos;::character varying)::information_schema.character_data AS foreign_data_wrapper_language\n   FROM pg_foreign_data_wrapper w,\n    pg_authid u\n  WHERE ((u.oid = w.fdwowner) AND (pg_has_role(w.fdwowner, &apos;USAGE&apos;::text) OR has_foreign_data_wrapper_privilege(w.oid, &apos;USAGE&apos;::text)));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS catalog_name,\n    (n.nspname)::information_schema.sql_identifier AS schema_name,\n    (u.rolname)::information_schema.sql_identifier AS schema_owner,\n    (NULL::name)::information_schema.sql_identifier AS default_character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS default_character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS default_character_set_name,\n    (NULL::character varying)::information_schema.character_data AS sql_path\n   FROM pg_namespace n,\n    pg_authid u\n  WHERE ((n.nspowner = u.oid) AND (pg_has_role(n.nspowner, &apos;USAGE&apos;::text) OR has_schema_privilege(n.oid, &apos;CREATE, USAGE&apos;::text)));\n                             SELECT (current_database())::information_schema.sql_identifier AS catalog_name,\n    (n.nspname)::information_schema.sql_identifier AS schema_name,\n    (u.rolname)::information_schema.sql_identifier AS schema_owner,\n    (NULL::name)::information_schema.sql_identifier AS default_character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS default_character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS default_character_set_name,\n    (NULL::character varying)::information_schema.character_data AS sql_path\n   FROM pg_namespace n,\n    pg_authid u\n  WHERE ((n.nspowner = u.oid) AND (pg_has_role(n.nspowner, &apos;USAGE&apos;::text) OR has_schema_privilege(n.oid, &apos;CREATE, USAGE&apos;::text)));\n                        ": "",
    "\n                             SELECT s.oid,\n    s.srvoptions,\n    (current_database())::information_schema.sql_identifier AS foreign_server_catalog,\n    (s.srvname)::information_schema.sql_identifier AS foreign_server_name,\n    (current_database())::information_schema.sql_identifier AS foreign_data_wrapper_catalog,\n    (w.fdwname)::information_schema.sql_identifier AS foreign_data_wrapper_name,\n    (s.srvtype)::information_schema.character_data AS foreign_server_type,\n    (s.srvversion)::information_schema.character_data AS foreign_server_version,\n    (u.rolname)::information_schema.sql_identifier AS authorization_identifier\n   FROM pg_foreign_server s,\n    pg_foreign_data_wrapper w,\n    pg_authid u\n  WHERE ((w.oid = s.srvfdw) AND (u.oid = s.srvowner) AND (pg_has_role(s.srvowner, &apos;USAGE&apos;::text) OR has_server_privilege(s.oid, &apos;USAGE&apos;::text)));\n                             SELECT s.oid,\n    s.srvoptions,\n    (current_database())::information_schema.sql_identifier AS foreign_server_catalog,\n    (s.srvname)::information_schema.sql_identifier AS foreign_server_name,\n    (current_database())::information_schema.sql_identifier AS foreign_data_wrapper_catalog,\n    (w.fdwname)::information_schema.sql_identifier AS foreign_data_wrapper_name,\n    (s.srvtype)::information_schema.character_data AS foreign_server_type,\n    (s.srvversion)::information_schema.character_data AS foreign_server_version,\n    (u.rolname)::information_schema.sql_identifier AS authorization_identifier\n   FROM pg_foreign_server s,\n    pg_foreign_data_wrapper w,\n    pg_authid u\n  WHERE ((w.oid = s.srvfdw) AND (u.oid = s.srvowner) AND (pg_has_role(s.srvowner, &apos;USAGE&apos;::text) OR has_server_privilege(s.oid, &apos;USAGE&apos;::text)));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (a.attname)::information_schema.sql_identifier AS column_name,\n    (a.attnum)::information_schema.cardinal_number AS ordinal_position,\n    (\n        CASE\n            WHEN (a.attgenerated = &apos;&apos;::&quot;char&quot;) THEN pg_get_expr(ad.adbin, ad.adrelid)\n            ELSE NULL::text\n        END)::information_schema.character_data AS column_default,\n    (\n        CASE\n            WHEN (a.attnotnull OR ((t.typtype = &apos;d&apos;::&quot;char&quot;) AND t.typnotnull)) THEN &apos;NO&apos;::text\n            ELSE &apos;YES&apos;::text\n        END)::information_schema.yes_or_no AS is_nullable,\n    (\n        CASE\n            WHEN (t.typtype = &apos;d&apos;::&quot;char&quot;) THEN\n            CASE\n                WHEN ((bt.typelem &lt;&gt; (0)::oid) AND (bt.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n                WHEN (nbt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(t.typbasetype, NULL::integer)\n                ELSE &apos;USER-DEFINED&apos;::text\n            END\n            ELSE\n            CASE\n                WHEN ((t.typelem &lt;&gt; (0)::oid) AND (t.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n                WHEN (nt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(a.atttypid, NULL::integer)\n                ELSE &apos;USER-DEFINED&apos;::text\n            END\n        END)::information_schema.character_data AS data_type,\n    (information_schema._pg_char_max_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_maximum_length,\n    (information_schema._pg_char_octet_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_octet_length,\n    (information_schema._pg_numeric_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision,\n    (information_schema._pg_numeric_precision_radix(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision_radix,\n    (information_schema._pg_numeric_scale(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_scale,\n    (information_schema._pg_datetime_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS datetime_precision,\n    (information_schema._pg_interval_type(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (\n        CASE\n            WHEN (nco.nspname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS collation_catalog,\n    (nco.nspname)::information_schema.sql_identifier AS collation_schema,\n    (co.collname)::information_schema.sql_identifier AS collation_name,\n    (\n        CASE\n            WHEN (t.typtype = &apos;d&apos;::&quot;char&quot;) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS domain_catalog,\n    (\n        CASE\n            WHEN (t.typtype = &apos;d&apos;::&quot;char&quot;) THEN nt.nspname\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS domain_schema,\n    (\n        CASE\n            WHEN (t.typtype = &apos;d&apos;::&quot;char&quot;) THEN t.typname\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS domain_name,\n    (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (COALESCE(nbt.nspname, nt.nspname))::information_schema.sql_identifier AS udt_schema,\n    (COALESCE(bt.typname, t.typname))::information_schema.sql_identifier AS udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    (a.attnum)::information_schema.sql_identifier AS dtd_identifier,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_self_referencing,\n    (\n        CASE\n            WHEN (a.attidentity = ANY (ARRAY[&apos;a&apos;::&quot;char&quot;, &apos;d&apos;::&quot;char&quot;])) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_identity,\n    (\n        CASE a.attidentity\n            WHEN &apos;a&apos;::&quot;char&quot; THEN &apos;ALWAYS&apos;::text\n            WHEN &apos;d&apos;::&quot;char&quot; THEN &apos;BY DEFAULT&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS identity_generation,\n    (seq.seqstart)::information_schema.character_data AS identity_start,\n    (seq.seqincrement)::information_schema.character_data AS identity_increment,\n    (seq.seqmax)::information_schema.character_data AS identity_maximum,\n    (seq.seqmin)::information_schema.character_data AS identity_minimum,\n    (\n        CASE\n            WHEN seq.seqcycle THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS identity_cycle,\n    (\n        CASE\n            WHEN (a.attgenerated &lt;&gt; &apos;&apos;::&quot;char&quot;) THEN &apos;ALWAYS&apos;::text\n            ELSE &apos;NEVER&apos;::text\n        END)::information_schema.character_data AS is_generated,\n    (\n        CASE\n            WHEN (a.attgenerated &lt;&gt; &apos;&apos;::&quot;char&quot;) THEN pg_get_expr(ad.adbin, ad.adrelid)\n            ELSE NULL::text\n        END)::information_schema.character_data AS generation_expression,\n    (\n        CASE\n            WHEN ((c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) OR ((c.relkind = ANY (ARRAY[&apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;])) AND pg_column_is_updatable((c.oid)::regclass, a.attnum, false))) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_updatable\n   FROM ((((((pg_attribute a\n     LEFT JOIN pg_attrdef ad ON (((a.attrelid = ad.adrelid) AND (a.attnum = ad.adnum))))\n     JOIN (pg_class c\n     JOIN pg_namespace nc ON ((c.relnamespace = nc.oid))) ON ((a.attrelid = c.oid)))\n     JOIN (pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((a.atttypid = t.oid)))\n     LEFT JOIN (pg_type bt\n     JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typtype = &apos;d&apos;::&quot;char&quot;) AND (t.typbasetype = bt.oid))))\n     LEFT JOIN (pg_collation co\n     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((a.attcollation = co.oid) AND ((nco.nspname &lt;&gt; &apos;pg_catalog&apos;::name) OR (co.collname &lt;&gt; &apos;default&apos;::name)))))\n     LEFT JOIN (pg_depend dep\n     JOIN pg_sequence seq ON (((dep.classid = (&apos;pg_class&apos;::regclass)::oid) AND (dep.objid = seq.seqrelid) AND (dep.deptype = &apos;i&apos;::&quot;char&quot;)))) ON (((dep.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dep.refobjid = c.oid) AND (dep.refobjsubid = a.attnum))))\n  WHERE ((NOT pg_is_other_temp_schema(nc.oid)) AND (a.attnum &gt; 0) AND (NOT a.attisdropped) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_column_privilege(c.oid, a.attnum, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)));\n                             SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (a.attname)::information_schema.sql_identifier AS column_name,\n    (a.attnum)::information_schema.cardinal_number AS ordinal_position,\n    (\n        CASE\n            WHEN (a.attgenerated = &apos;&apos;::&quot;char&quot;) THEN pg_get_expr(ad.adbin, ad.adrelid)\n            ELSE NULL::text\n        END)::information_schema.character_data AS column_default,\n    (\n        CASE\n            WHEN (a.attnotnull OR ((t.typtype = &apos;d&apos;::&quot;char&quot;) AND t.typnotnull)) THEN &apos;NO&apos;::text\n            ELSE &apos;YES&apos;::text\n        END)::information_schema.yes_or_no AS is_nullable,\n    (\n        CASE\n            WHEN (t.typtype = &apos;d&apos;::&quot;char&quot;) THEN\n            CASE\n                WHEN ((bt.typelem &lt;&gt; (0)::oid) AND (bt.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n                WHEN (nbt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(t.typbasetype, NULL::integer)\n                ELSE &apos;USER-DEFINED&apos;::text\n            END\n            ELSE\n            CASE\n                WHEN ((t.typelem &lt;&gt; (0)::oid) AND (t.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n                WHEN (nt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(a.atttypid, NULL::integer)\n                ELSE &apos;USER-DEFINED&apos;::text\n            END\n        END)::information_schema.character_data AS data_type,\n    (information_schema._pg_char_max_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_maximum_length,\n    (information_schema._pg_char_octet_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_octet_length,\n    (information_schema._pg_numeric_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision,\n    (information_schema._pg_numeric_precision_radix(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision_radix,\n    (information_schema._pg_numeric_scale(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_scale,\n    (information_schema._pg_datetime_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS datetime_precision,\n    (information_schema._pg_interval_type(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (\n        CASE\n            WHEN (nco.nspname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS collation_catalog,\n    (nco.nspname)::information_schema.sql_identifier AS collation_schema,\n    (co.collname)::information_schema.sql_identifier AS collation_name,\n    (\n        CASE\n            WHEN (t.typtype = &apos;d&apos;::&quot;char&quot;) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS domain_catalog,\n    (\n        CASE\n            WHEN (t.typtype = &apos;d&apos;::&quot;char&quot;) THEN nt.nspname\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS domain_schema,\n    (\n        CASE\n            WHEN (t.typtype = &apos;d&apos;::&quot;char&quot;) THEN t.typname\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS domain_name,\n    (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (COALESCE(nbt.nspname, nt.nspname))::information_schema.sql_identifier AS udt_schema,\n    (COALESCE(bt.typname, t.typname))::information_schema.sql_identifier AS udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    (a.attnum)::information_schema.sql_identifier AS dtd_identifier,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_self_referencing,\n    (\n        CASE\n            WHEN (a.attidentity = ANY (ARRAY[&apos;a&apos;::&quot;char&quot;, &apos;d&apos;::&quot;char&quot;])) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_identity,\n    (\n        CASE a.attidentity\n            WHEN &apos;a&apos;::&quot;char&quot; THEN &apos;ALWAYS&apos;::text\n            WHEN &apos;d&apos;::&quot;char&quot; THEN &apos;BY DEFAULT&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS identity_generation,\n    (seq.seqstart)::information_schema.character_data AS identity_start,\n    (seq.seqincrement)::information_schema.character_data AS identity_increment,\n    (seq.seqmax)::information_schema.character_data AS identity_maximum,\n    (seq.seqmin)::information_schema.character_data AS identity_minimum,\n    (\n        CASE\n            WHEN seq.seqcycle THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS identity_cycle,\n    (\n        CASE\n            WHEN (a.attgenerated &lt;&gt; &apos;&apos;::&quot;char&quot;) THEN &apos;ALWAYS&apos;::text\n            ELSE &apos;NEVER&apos;::text\n        END)::information_schema.character_data AS is_generated,\n    (\n        CASE\n            WHEN (a.attgenerated &lt;&gt; &apos;&apos;::&quot;char&quot;) THEN pg_get_expr(ad.adbin, ad.adrelid)\n            ELSE NULL::text\n        END)::information_schema.character_data AS generation_expression,\n    (\n        CASE\n            WHEN ((c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) OR ((c.relkind = ANY (ARRAY[&apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;])) AND pg_column_is_updatable((c.oid)::regclass, a.attnum, false))) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_updatable\n   FROM ((((((pg_attribute a\n     LEFT JOIN pg_attrdef ad ON (((a.attrelid = ad.adrelid) AND (a.attnum = ad.adnum))))\n     JOIN (pg_class c\n     JOIN pg_namespace nc ON ((c.relnamespace = nc.oid))) ON ((a.attrelid = c.oid)))\n     JOIN (pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((a.atttypid = t.oid)))\n     LEFT JOIN (pg_type bt\n     JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typtype = &apos;d&apos;::&quot;char&quot;) AND (t.typbasetype = bt.oid))))\n     LEFT JOIN (pg_collation co\n     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((a.attcollation = co.oid) AND ((nco.nspname &lt;&gt; &apos;pg_catalog&apos;::name) OR (co.collname &lt;&gt; &apos;default&apos;::name)))))\n     LEFT JOIN (pg_depend dep\n     JOIN pg_sequence seq ON (((dep.classid = (&apos;pg_class&apos;::regclass)::oid) AND (dep.objid = seq.seqrelid) AND (dep.deptype = &apos;i&apos;::&quot;char&quot;)))) ON (((dep.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dep.refobjid = c.oid) AND (dep.refobjsubid = a.attnum))))\n  WHERE ((NOT pg_is_other_temp_schema(nc.oid)) AND (a.attnum &gt; 0) AND (NOT a.attisdropped) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_column_privilege(c.oid, a.attnum, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)));\n                        ": "",
    "\n                             SELECT p.transaction,\n    p.gid,\n    p.prepared,\n    u.rolname AS owner,\n    d.datname AS database\n   FROM ((pg_prepared_xact() p(transaction, gid, prepared, ownerid, dbid)\n     LEFT JOIN pg_authid u ON ((p.ownerid = u.oid)))\n     LEFT JOIN pg_database d ON ((p.dbid = d.oid)));\n                             SELECT p.transaction,\n    p.gid,\n    p.prepared,\n    u.rolname AS owner,\n    d.datname AS database\n   FROM ((pg_prepared_xact() p(transaction, gid, prepared, ownerid, dbid)\n     LEFT JOIN pg_authid u ON ((p.ownerid = u.oid)))\n     LEFT JOIN pg_database d ON ((p.dbid = d.oid)));\n                        ": "",
    "\n                             SELECT c.oid AS relid,\n    n.nspname AS schemaname,\n    c.relname,\n    (pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid)) AS blks_read,\n    pg_stat_get_blocks_hit(c.oid) AS blks_hit\n   FROM (pg_class c\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = &apos;S&apos;::&quot;char&quot;);\n                             SELECT c.oid AS relid,\n    n.nspname AS schemaname,\n    c.relname,\n    (pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid)) AS blks_read,\n    pg_stat_get_blocks_hit(c.oid) AS blks_hit\n   FROM (pg_class c\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = &apos;S&apos;::&quot;char&quot;);\n                        ": "",
    "\n                             SELECT pg_stat_all_indexes.relid,\n    pg_stat_all_indexes.indexrelid,\n    pg_stat_all_indexes.schemaname,\n    pg_stat_all_indexes.relname,\n    pg_stat_all_indexes.indexrelname,\n    pg_stat_all_indexes.idx_scan,\n    pg_stat_all_indexes.idx_tup_read,\n    pg_stat_all_indexes.idx_tup_fetch\n   FROM pg_stat_all_indexes\n  WHERE ((pg_stat_all_indexes.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_stat_all_indexes.schemaname ~ &apos;^pg_toast&apos;::text));\n                             SELECT pg_stat_all_indexes.relid,\n    pg_stat_all_indexes.indexrelid,\n    pg_stat_all_indexes.schemaname,\n    pg_stat_all_indexes.relname,\n    pg_stat_all_indexes.indexrelname,\n    pg_stat_all_indexes.idx_scan,\n    pg_stat_all_indexes.idx_tup_read,\n    pg_stat_all_indexes.idx_tup_fetch\n   FROM pg_stat_all_indexes\n  WHERE ((pg_stat_all_indexes.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_stat_all_indexes.schemaname ~ &apos;^pg_toast&apos;::text));\n                        ": "",
    "\n                             SELECT n.nspname AS schemaname,\n    c.relname AS matviewname,\n    pg_get_userbyid(c.relowner) AS matviewowner,\n    t.spcname AS tablespace,\n    c.relhasindex AS hasindexes,\n    c.relispopulated AS ispopulated,\n    pg_get_viewdef(c.oid) AS definition\n   FROM ((pg_class c\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n     LEFT JOIN pg_tablespace t ON ((t.oid = c.reltablespace)))\n  WHERE (c.relkind = &apos;m&apos;::&quot;char&quot;);\n                             SELECT n.nspname AS schemaname,\n    c.relname AS matviewname,\n    pg_get_userbyid(c.relowner) AS matviewowner,\n    t.spcname AS tablespace,\n    c.relhasindex AS hasindexes,\n    c.relispopulated AS ispopulated,\n    pg_get_viewdef(c.oid) AS definition\n   FROM ((pg_class c\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n     LEFT JOIN pg_tablespace t ON ((t.oid = c.reltablespace)))\n  WHERE (c.relkind = &apos;m&apos;::&quot;char&quot;);\n                        ": "",
    "\n                             SELECT pg_stat_all_tables.relid,\n    pg_stat_all_tables.schemaname,\n    pg_stat_all_tables.relname,\n    pg_stat_all_tables.seq_scan,\n    pg_stat_all_tables.seq_tup_read,\n    pg_stat_all_tables.idx_scan,\n    pg_stat_all_tables.idx_tup_fetch,\n    pg_stat_all_tables.n_tup_ins,\n    pg_stat_all_tables.n_tup_upd,\n    pg_stat_all_tables.n_tup_del,\n    pg_stat_all_tables.n_tup_hot_upd,\n    pg_stat_all_tables.n_live_tup,\n    pg_stat_all_tables.n_dead_tup,\n    pg_stat_all_tables.n_mod_since_analyze,\n    pg_stat_all_tables.last_vacuum,\n    pg_stat_all_tables.last_autovacuum,\n    pg_stat_all_tables.last_analyze,\n    pg_stat_all_tables.last_autoanalyze,\n    pg_stat_all_tables.vacuum_count,\n    pg_stat_all_tables.autovacuum_count,\n    pg_stat_all_tables.analyze_count,\n    pg_stat_all_tables.autoanalyze_count\n   FROM pg_stat_all_tables\n  WHERE ((pg_stat_all_tables.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_stat_all_tables.schemaname !~ &apos;^pg_toast&apos;::text));\n                             SELECT pg_stat_all_tables.relid,\n    pg_stat_all_tables.schemaname,\n    pg_stat_all_tables.relname,\n    pg_stat_all_tables.seq_scan,\n    pg_stat_all_tables.seq_tup_read,\n    pg_stat_all_tables.idx_scan,\n    pg_stat_all_tables.idx_tup_fetch,\n    pg_stat_all_tables.n_tup_ins,\n    pg_stat_all_tables.n_tup_upd,\n    pg_stat_all_tables.n_tup_del,\n    pg_stat_all_tables.n_tup_hot_upd,\n    pg_stat_all_tables.n_live_tup,\n    pg_stat_all_tables.n_dead_tup,\n    pg_stat_all_tables.n_mod_since_analyze,\n    pg_stat_all_tables.last_vacuum,\n    pg_stat_all_tables.last_autovacuum,\n    pg_stat_all_tables.last_analyze,\n    pg_stat_all_tables.last_autoanalyze,\n    pg_stat_all_tables.vacuum_count,\n    pg_stat_all_tables.autovacuum_count,\n    pg_stat_all_tables.analyze_count,\n    pg_stat_all_tables.autoanalyze_count\n   FROM pg_stat_all_tables\n  WHERE ((pg_stat_all_tables.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_stat_all_tables.schemaname !~ &apos;^pg_toast&apos;::text));\n                        ": "",
    "\n                             SELECT _pg_foreign_servers.foreign_server_catalog,\n    _pg_foreign_servers.foreign_server_name,\n    _pg_foreign_servers.foreign_data_wrapper_catalog,\n    _pg_foreign_servers.foreign_data_wrapper_name,\n    _pg_foreign_servers.foreign_server_type,\n    _pg_foreign_servers.foreign_server_version,\n    _pg_foreign_servers.authorization_identifier\n   FROM information_schema._pg_foreign_servers;\n                             SELECT _pg_foreign_servers.foreign_server_catalog,\n    _pg_foreign_servers.foreign_server_name,\n    _pg_foreign_servers.foreign_data_wrapper_catalog,\n    _pg_foreign_servers.foreign_data_wrapper_name,\n    _pg_foreign_servers.foreign_server_type,\n    _pg_foreign_servers.foreign_server_version,\n    _pg_foreign_servers.authorization_identifier\n   FROM information_schema._pg_foreign_servers;\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS user_defined_type_catalog,\n    (n.nspname)::information_schema.sql_identifier AS user_defined_type_schema,\n    (c.relname)::information_schema.sql_identifier AS user_defined_type_name,\n    (&apos;STRUCTURED&apos;::character varying)::information_schema.character_data AS user_defined_type_category,\n    (&apos;YES&apos;::character varying)::information_schema.yes_or_no AS is_instantiable,\n    (NULL::character varying)::information_schema.yes_or_no AS is_final,\n    (NULL::character varying)::information_schema.character_data AS ordering_form,\n    (NULL::character varying)::information_schema.character_data AS ordering_category,\n    (NULL::name)::information_schema.sql_identifier AS ordering_routine_catalog,\n    (NULL::name)::information_schema.sql_identifier AS ordering_routine_schema,\n    (NULL::name)::information_schema.sql_identifier AS ordering_routine_name,\n    (NULL::character varying)::information_schema.character_data AS reference_type,\n    (NULL::character varying)::information_schema.character_data AS data_type,\n    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,\n    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (NULL::name)::information_schema.sql_identifier AS collation_catalog,\n    (NULL::name)::information_schema.sql_identifier AS collation_schema,\n    (NULL::name)::information_schema.sql_identifier AS collation_name,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,\n    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,\n    (NULL::character varying)::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (NULL::name)::information_schema.sql_identifier AS source_dtd_identifier,\n    (NULL::name)::information_schema.sql_identifier AS ref_dtd_identifier\n   FROM pg_namespace n,\n    pg_class c,\n    pg_type t\n  WHERE ((n.oid = c.relnamespace) AND (t.typrelid = c.oid) AND (c.relkind = &apos;c&apos;::&quot;char&quot;) AND (pg_has_role(t.typowner, &apos;USAGE&apos;::text) OR has_type_privilege(t.oid, &apos;USAGE&apos;::text)));\n                             SELECT (current_database())::information_schema.sql_identifier AS user_defined_type_catalog,\n    (n.nspname)::information_schema.sql_identifier AS user_defined_type_schema,\n    (c.relname)::information_schema.sql_identifier AS user_defined_type_name,\n    (&apos;STRUCTURED&apos;::character varying)::information_schema.character_data AS user_defined_type_category,\n    (&apos;YES&apos;::character varying)::information_schema.yes_or_no AS is_instantiable,\n    (NULL::character varying)::information_schema.yes_or_no AS is_final,\n    (NULL::character varying)::information_schema.character_data AS ordering_form,\n    (NULL::character varying)::information_schema.character_data AS ordering_category,\n    (NULL::name)::information_schema.sql_identifier AS ordering_routine_catalog,\n    (NULL::name)::information_schema.sql_identifier AS ordering_routine_schema,\n    (NULL::name)::information_schema.sql_identifier AS ordering_routine_name,\n    (NULL::character varying)::information_schema.character_data AS reference_type,\n    (NULL::character varying)::information_schema.character_data AS data_type,\n    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,\n    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (NULL::name)::information_schema.sql_identifier AS collation_catalog,\n    (NULL::name)::information_schema.sql_identifier AS collation_schema,\n    (NULL::name)::information_schema.sql_identifier AS collation_name,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,\n    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,\n    (NULL::character varying)::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (NULL::name)::information_schema.sql_identifier AS source_dtd_identifier,\n    (NULL::name)::information_schema.sql_identifier AS ref_dtd_identifier\n   FROM pg_namespace n,\n    pg_class c,\n    pg_type t\n  WHERE ((n.oid = c.relnamespace) AND (t.typrelid = c.oid) AND (c.relkind = &apos;c&apos;::&quot;char&quot;) AND (pg_has_role(t.typowner, &apos;USAGE&apos;::text) OR has_type_privilege(t.oid, &apos;USAGE&apos;::text)));\n                        ": "",
    "\n                             SELECT pg_config.name,\n    pg_config.setting\n   FROM pg_config() pg_config(name, setting);\n                             SELECT pg_config.name,\n    pg_config.setting\n   FROM pg_config() pg_config(name, setting);\n                        ": "",
    "\n                             SELECT table_privileges.grantor,\n    table_privileges.grantee,\n    table_privileges.table_catalog,\n    table_privileges.table_schema,\n    table_privileges.table_name,\n    table_privileges.privilege_type,\n    table_privileges.is_grantable,\n    table_privileges.with_hierarchy\n   FROM information_schema.table_privileges\n  WHERE (((table_privileges.grantor)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)) OR ((table_privileges.grantee)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)));\n                             SELECT table_privileges.grantor,\n    table_privileges.grantee,\n    table_privileges.table_catalog,\n    table_privileges.table_schema,\n    table_privileges.table_name,\n    table_privileges.privilege_type,\n    table_privileges.is_grantable,\n    table_privileges.with_hierarchy\n   FROM information_schema.table_privileges\n  WHERE (((table_privileges.grantor)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)) OR ((table_privileges.grantee)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (ss.nc_nspname)::information_schema.sql_identifier AS constraint_schema,\n    (ss.conname)::information_schema.sql_identifier AS constraint_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (ss.nr_nspname)::information_schema.sql_identifier AS table_schema,\n    (ss.relname)::information_schema.sql_identifier AS table_name,\n    (a.attname)::information_schema.sql_identifier AS column_name,\n    ((ss.x).n)::information_schema.cardinal_number AS ordinal_position,\n    (\n        CASE\n            WHEN (ss.contype = &apos;f&apos;::&quot;char&quot;) THEN information_schema._pg_index_position(ss.conindid, ss.confkey[(ss.x).n])\n            ELSE NULL::integer\n        END)::information_schema.cardinal_number AS position_in_unique_constraint\n   FROM pg_attribute a,\n    ( SELECT r.oid AS roid,\n            r.relname,\n            r.relowner,\n            nc.nspname AS nc_nspname,\n            nr.nspname AS nr_nspname,\n            c.oid AS coid,\n            c.conname,\n            c.contype,\n            c.conindid,\n            c.confkey,\n            c.confrelid,\n            information_schema._pg_expandarray(c.conkey) AS x\n           FROM pg_namespace nr,\n            pg_class r,\n            pg_namespace nc,\n            pg_constraint c\n          WHERE ((nr.oid = r.relnamespace) AND (r.oid = c.conrelid) AND (nc.oid = c.connamespace) AND (c.contype = ANY (ARRAY[&apos;p&apos;::&quot;char&quot;, &apos;u&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;])) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (NOT pg_is_other_temp_schema(nr.oid)))) ss\n  WHERE ((ss.roid = a.attrelid) AND (a.attnum = (ss.x).x) AND (NOT a.attisdropped) AND (pg_has_role(ss.relowner, &apos;USAGE&apos;::text) OR has_column_privilege(ss.roid, a.attnum, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)));\n                             SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (ss.nc_nspname)::information_schema.sql_identifier AS constraint_schema,\n    (ss.conname)::information_schema.sql_identifier AS constraint_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (ss.nr_nspname)::information_schema.sql_identifier AS table_schema,\n    (ss.relname)::information_schema.sql_identifier AS table_name,\n    (a.attname)::information_schema.sql_identifier AS column_name,\n    ((ss.x).n)::information_schema.cardinal_number AS ordinal_position,\n    (\n        CASE\n            WHEN (ss.contype = &apos;f&apos;::&quot;char&quot;) THEN information_schema._pg_index_position(ss.conindid, ss.confkey[(ss.x).n])\n            ELSE NULL::integer\n        END)::information_schema.cardinal_number AS position_in_unique_constraint\n   FROM pg_attribute a,\n    ( SELECT r.oid AS roid,\n            r.relname,\n            r.relowner,\n            nc.nspname AS nc_nspname,\n            nr.nspname AS nr_nspname,\n            c.oid AS coid,\n            c.conname,\n            c.contype,\n            c.conindid,\n            c.confkey,\n            c.confrelid,\n            information_schema._pg_expandarray(c.conkey) AS x\n           FROM pg_namespace nr,\n            pg_class r,\n            pg_namespace nc,\n            pg_constraint c\n          WHERE ((nr.oid = r.relnamespace) AND (r.oid = c.conrelid) AND (nc.oid = c.connamespace) AND (c.contype = ANY (ARRAY[&apos;p&apos;::&quot;char&quot;, &apos;u&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;])) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (NOT pg_is_other_temp_schema(nr.oid)))) ss\n  WHERE ((ss.roid = a.attrelid) AND (a.attnum = (ss.x).x) AND (NOT a.attisdropped) AND (pg_has_role(ss.relowner, &apos;USAGE&apos;::text) OR has_column_privilege(ss.roid, a.attnum, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)));\n                        ": "",
    "\n                             SELECT pg_timezone_abbrevs.abbrev,\n    pg_timezone_abbrevs.utc_offset,\n    pg_timezone_abbrevs.is_dst\n   FROM pg_timezone_abbrevs() pg_timezone_abbrevs(abbrev, utc_offset, is_dst);\n                             SELECT pg_timezone_abbrevs.abbrev,\n    pg_timezone_abbrevs.utc_offset,\n    pg_timezone_abbrevs.is_dst\n   FROM pg_timezone_abbrevs() pg_timezone_abbrevs(abbrev, utc_offset, is_dst);\n                        ": "",
    "\n                             SELECT d.oid AS datid,\n    d.datname,\n        CASE\n            WHEN (d.oid = (0)::oid) THEN 0\n            ELSE pg_stat_get_db_numbackends(d.oid)\n        END AS numbackends,\n    pg_stat_get_db_xact_commit(d.oid) AS xact_commit,\n    pg_stat_get_db_xact_rollback(d.oid) AS xact_rollback,\n    (pg_stat_get_db_blocks_fetched(d.oid) - pg_stat_get_db_blocks_hit(d.oid)) AS blks_read,\n    pg_stat_get_db_blocks_hit(d.oid) AS blks_hit,\n    pg_stat_get_db_tuples_returned(d.oid) AS tup_returned,\n    pg_stat_get_db_tuples_fetched(d.oid) AS tup_fetched,\n    pg_stat_get_db_tuples_inserted(d.oid) AS tup_inserted,\n    pg_stat_get_db_tuples_updated(d.oid) AS tup_updated,\n    pg_stat_get_db_tuples_deleted(d.oid) AS tup_deleted,\n    pg_stat_get_db_conflict_all(d.oid) AS conflicts,\n    pg_stat_get_db_temp_files(d.oid) AS temp_files,\n    pg_stat_get_db_temp_bytes(d.oid) AS temp_bytes,\n    pg_stat_get_db_deadlocks(d.oid) AS deadlocks,\n    pg_stat_get_db_checksum_failures(d.oid) AS checksum_failures,\n    pg_stat_get_db_checksum_last_failure(d.oid) AS checksum_last_failure,\n    pg_stat_get_db_blk_read_time(d.oid) AS blk_read_time,\n    pg_stat_get_db_blk_write_time(d.oid) AS blk_write_time,\n    pg_stat_get_db_stat_reset_time(d.oid) AS stats_reset\n   FROM ( SELECT 0 AS oid,\n            NULL::name AS datname\n        UNION ALL\n         SELECT pg_database.oid,\n            pg_database.datname\n           FROM pg_database) d;\n                             SELECT d.oid AS datid,\n    d.datname,\n        CASE\n            WHEN (d.oid = (0)::oid) THEN 0\n            ELSE pg_stat_get_db_numbackends(d.oid)\n        END AS numbackends,\n    pg_stat_get_db_xact_commit(d.oid) AS xact_commit,\n    pg_stat_get_db_xact_rollback(d.oid) AS xact_rollback,\n    (pg_stat_get_db_blocks_fetched(d.oid) - pg_stat_get_db_blocks_hit(d.oid)) AS blks_read,\n    pg_stat_get_db_blocks_hit(d.oid) AS blks_hit,\n    pg_stat_get_db_tuples_returned(d.oid) AS tup_returned,\n    pg_stat_get_db_tuples_fetched(d.oid) AS tup_fetched,\n    pg_stat_get_db_tuples_inserted(d.oid) AS tup_inserted,\n    pg_stat_get_db_tuples_updated(d.oid) AS tup_updated,\n    pg_stat_get_db_tuples_deleted(d.oid) AS tup_deleted,\n    pg_stat_get_db_conflict_all(d.oid) AS conflicts,\n    pg_stat_get_db_temp_files(d.oid) AS temp_files,\n    pg_stat_get_db_temp_bytes(d.oid) AS temp_bytes,\n    pg_stat_get_db_deadlocks(d.oid) AS deadlocks,\n    pg_stat_get_db_checksum_failures(d.oid) AS checksum_failures,\n    pg_stat_get_db_checksum_last_failure(d.oid) AS checksum_last_failure,\n    pg_stat_get_db_blk_read_time(d.oid) AS blk_read_time,\n    pg_stat_get_db_blk_write_time(d.oid) AS blk_write_time,\n    pg_stat_get_db_stat_reset_time(d.oid) AS stats_reset\n   FROM ( SELECT 0 AS oid,\n            NULL::name AS datname\n        UNION ALL\n         SELECT pg_database.oid,\n            pg_database.datname\n           FROM pg_database) d;\n                        ": "",
    "\n                             SELECT pg_authid.rolname AS usename,\n    pg_authid.oid AS usesysid,\n    pg_authid.rolcreatedb AS usecreatedb,\n    pg_authid.rolsuper AS usesuper,\n    pg_authid.rolreplication AS userepl,\n    pg_authid.rolbypassrls AS usebypassrls,\n    pg_authid.rolpassword AS passwd,\n    pg_authid.rolvaliduntil AS valuntil,\n    s.setconfig AS useconfig\n   FROM (pg_authid\n     LEFT JOIN pg_db_role_setting s ON (((pg_authid.oid = s.setrole) AND (s.setdatabase = (0)::oid))))\n  WHERE pg_authid.rolcanlogin;\n                             SELECT pg_authid.rolname AS usename,\n    pg_authid.oid AS usesysid,\n    pg_authid.rolcreatedb AS usecreatedb,\n    pg_authid.rolsuper AS usesuper,\n    pg_authid.rolreplication AS userepl,\n    pg_authid.rolbypassrls AS usebypassrls,\n    pg_authid.rolpassword AS passwd,\n    pg_authid.rolvaliduntil AS valuntil,\n    s.setconfig AS useconfig\n   FROM (pg_authid\n     LEFT JOIN pg_db_role_setting s ON (((pg_authid.oid = s.setrole) AND (s.setdatabase = (0)::oid))))\n  WHERE pg_authid.rolcanlogin;\n                        ": "",
    "\n                             SELECT s.pid,\n    s.status,\n    s.receive_start_lsn,\n    s.receive_start_tli,\n    s.received_lsn,\n    s.received_tli,\n    s.last_msg_send_time,\n    s.last_msg_receipt_time,\n    s.latest_end_lsn,\n    s.latest_end_time,\n    s.slot_name,\n    s.sender_host,\n    s.sender_port,\n    s.conninfo\n   FROM pg_stat_get_wal_receiver() s(pid, status, receive_start_lsn, receive_start_tli, received_lsn, received_tli, last_msg_send_time, last_msg_receipt_time, latest_end_lsn, latest_end_time, slot_name, sender_host, sender_port, conninfo)\n  WHERE (s.pid IS NOT NULL);\n                             SELECT s.pid,\n    s.status,\n    s.receive_start_lsn,\n    s.receive_start_tli,\n    s.received_lsn,\n    s.received_tli,\n    s.last_msg_send_time,\n    s.last_msg_receipt_time,\n    s.latest_end_lsn,\n    s.latest_end_time,\n    s.slot_name,\n    s.sender_host,\n    s.sender_port,\n    s.conninfo\n   FROM pg_stat_get_wal_receiver() s(pid, status, receive_start_lsn, receive_start_tli, received_lsn, received_tli, last_msg_send_time, last_msg_receipt_time, latest_end_lsn, latest_end_time, slot_name, sender_host, sender_port, conninfo)\n  WHERE (s.pid IS NOT NULL);\n                        ": "",
    "\n                             SELECT n.nspname AS schemaname,\n    c.relname AS tablename,\n    a.attname,\n    s.stainherit AS inherited,\n    s.stanullfrac AS null_frac,\n    s.stawidth AS avg_width,\n    s.stadistinct AS n_distinct,\n        CASE\n            WHEN (s.stakind1 = 1) THEN s.stavalues1\n            WHEN (s.stakind2 = 1) THEN s.stavalues2\n            WHEN (s.stakind3 = 1) THEN s.stavalues3\n            WHEN (s.stakind4 = 1) THEN s.stavalues4\n            WHEN (s.stakind5 = 1) THEN s.stavalues5\n            ELSE NULL::anyarray\n        END AS most_common_vals,\n        CASE\n            WHEN (s.stakind1 = 1) THEN s.stanumbers1\n            WHEN (s.stakind2 = 1) THEN s.stanumbers2\n            WHEN (s.stakind3 = 1) THEN s.stanumbers3\n            WHEN (s.stakind4 = 1) THEN s.stanumbers4\n            WHEN (s.stakind5 = 1) THEN s.stanumbers5\n            ELSE NULL::real[]\n        END AS most_common_freqs,\n        CASE\n            WHEN (s.stakind1 = 2) THEN s.stavalues1\n            WHEN (s.stakind2 = 2) THEN s.stavalues2\n            WHEN (s.stakind3 = 2) THEN s.stavalues3\n            WHEN (s.stakind4 = 2) THEN s.stavalues4\n            WHEN (s.stakind5 = 2) THEN s.stavalues5\n            ELSE NULL::anyarray\n        END AS histogram_bounds,\n        CASE\n            WHEN (s.stakind1 = 3) THEN s.stanumbers1[1]\n            WHEN (s.stakind2 = 3) THEN s.stanumbers2[1]\n            WHEN (s.stakind3 = 3) THEN s.stanumbers3[1]\n            WHEN (s.stakind4 = 3) THEN s.stanumbers4[1]\n            WHEN (s.stakind5 = 3) THEN s.stanumbers5[1]\n            ELSE NULL::real\n        END AS correlation,\n        CASE\n            WHEN (s.stakind1 = 4) THEN s.stavalues1\n            WHEN (s.stakind2 = 4) THEN s.stavalues2\n            WHEN (s.stakind3 = 4) THEN s.stavalues3\n            WHEN (s.stakind4 = 4) THEN s.stavalues4\n            WHEN (s.stakind5 = 4) THEN s.stavalues5\n            ELSE NULL::anyarray\n        END AS most_common_elems,\n        CASE\n            WHEN (s.stakind1 = 4) THEN s.stanumbers1\n            WHEN (s.stakind2 = 4) THEN s.stanumbers2\n            WHEN (s.stakind3 = 4) THEN s.stanumbers3\n            WHEN (s.stakind4 = 4) THEN s.stanumbers4\n            WHEN (s.stakind5 = 4) THEN s.stanumbers5\n            ELSE NULL::real[]\n        END AS most_common_elem_freqs,\n        CASE\n            WHEN (s.stakind1 = 5) THEN s.stanumbers1\n            WHEN (s.stakind2 = 5) THEN s.stanumbers2\n            WHEN (s.stakind3 = 5) THEN s.stanumbers3\n            WHEN (s.stakind4 = 5) THEN s.stanumbers4\n            WHEN (s.stakind5 = 5) THEN s.stanumbers5\n            ELSE NULL::real[]\n        END AS elem_count_histogram\n   FROM (((pg_statistic s\n     JOIN pg_class c ON ((c.oid = s.starelid)))\n     JOIN pg_attribute a ON (((c.oid = a.attrelid) AND (a.attnum = s.staattnum))))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE ((NOT a.attisdropped) AND has_column_privilege(c.oid, a.attnum, &apos;select&apos;::text) AND ((c.relrowsecurity = false) OR (NOT row_security_active(c.oid))));\n                             SELECT n.nspname AS schemaname,\n    c.relname AS tablename,\n    a.attname,\n    s.stainherit AS inherited,\n    s.stanullfrac AS null_frac,\n    s.stawidth AS avg_width,\n    s.stadistinct AS n_distinct,\n        CASE\n            WHEN (s.stakind1 = 1) THEN s.stavalues1\n            WHEN (s.stakind2 = 1) THEN s.stavalues2\n            WHEN (s.stakind3 = 1) THEN s.stavalues3\n            WHEN (s.stakind4 = 1) THEN s.stavalues4\n            WHEN (s.stakind5 = 1) THEN s.stavalues5\n            ELSE NULL::anyarray\n        END AS most_common_vals,\n        CASE\n            WHEN (s.stakind1 = 1) THEN s.stanumbers1\n            WHEN (s.stakind2 = 1) THEN s.stanumbers2\n            WHEN (s.stakind3 = 1) THEN s.stanumbers3\n            WHEN (s.stakind4 = 1) THEN s.stanumbers4\n            WHEN (s.stakind5 = 1) THEN s.stanumbers5\n            ELSE NULL::real[]\n        END AS most_common_freqs,\n        CASE\n            WHEN (s.stakind1 = 2) THEN s.stavalues1\n            WHEN (s.stakind2 = 2) THEN s.stavalues2\n            WHEN (s.stakind3 = 2) THEN s.stavalues3\n            WHEN (s.stakind4 = 2) THEN s.stavalues4\n            WHEN (s.stakind5 = 2) THEN s.stavalues5\n            ELSE NULL::anyarray\n        END AS histogram_bounds,\n        CASE\n            WHEN (s.stakind1 = 3) THEN s.stanumbers1[1]\n            WHEN (s.stakind2 = 3) THEN s.stanumbers2[1]\n            WHEN (s.stakind3 = 3) THEN s.stanumbers3[1]\n            WHEN (s.stakind4 = 3) THEN s.stanumbers4[1]\n            WHEN (s.stakind5 = 3) THEN s.stanumbers5[1]\n            ELSE NULL::real\n        END AS correlation,\n        CASE\n            WHEN (s.stakind1 = 4) THEN s.stavalues1\n            WHEN (s.stakind2 = 4) THEN s.stavalues2\n            WHEN (s.stakind3 = 4) THEN s.stavalues3\n            WHEN (s.stakind4 = 4) THEN s.stavalues4\n            WHEN (s.stakind5 = 4) THEN s.stavalues5\n            ELSE NULL::anyarray\n        END AS most_common_elems,\n        CASE\n            WHEN (s.stakind1 = 4) THEN s.stanumbers1\n            WHEN (s.stakind2 = 4) THEN s.stanumbers2\n            WHEN (s.stakind3 = 4) THEN s.stanumbers3\n            WHEN (s.stakind4 = 4) THEN s.stanumbers4\n            WHEN (s.stakind5 = 4) THEN s.stanumbers5\n            ELSE NULL::real[]\n        END AS most_common_elem_freqs,\n        CASE\n            WHEN (s.stakind1 = 5) THEN s.stanumbers1\n            WHEN (s.stakind2 = 5) THEN s.stanumbers2\n            WHEN (s.stakind3 = 5) THEN s.stanumbers3\n            WHEN (s.stakind4 = 5) THEN s.stanumbers4\n            WHEN (s.stakind5 = 5) THEN s.stanumbers5\n            ELSE NULL::real[]\n        END AS elem_count_histogram\n   FROM (((pg_statistic s\n     JOIN pg_class c ON ((c.oid = s.starelid)))\n     JOIN pg_attribute a ON (((c.oid = a.attrelid) AND (a.attnum = s.staattnum))))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE ((NOT a.attisdropped) AND has_column_privilege(c.oid, a.attnum, &apos;select&apos;::text) AND ((c.relrowsecurity = false) OR (NOT row_security_active(c.oid))));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (rs.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (con.conname)::information_schema.sql_identifier AS constraint_name,\n    (&quot;substring&quot;(pg_get_constraintdef(con.oid), 7))::information_schema.character_data AS check_clause\n   FROM (((pg_constraint con\n     LEFT JOIN pg_namespace rs ON ((rs.oid = con.connamespace)))\n     LEFT JOIN pg_class c ON ((c.oid = con.conrelid)))\n     LEFT JOIN pg_type t ON ((t.oid = con.contypid)))\n  WHERE (pg_has_role(COALESCE(c.relowner, t.typowner), &apos;USAGE&apos;::text) AND (con.contype = &apos;c&apos;::&quot;char&quot;))\nUNION\n SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (n.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (((((((n.oid)::text || &apos;_&apos;::text) || (r.oid)::text) || &apos;_&apos;::text) || (a.attnum)::text) || &apos;_not_null&apos;::text))::information_schema.sql_identifier AS constraint_name,\n    (((a.attname)::text || &apos; IS NOT NULL&apos;::text))::information_schema.character_data AS check_clause\n   FROM pg_namespace n,\n    pg_class r,\n    pg_attribute a\n  WHERE ((n.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (a.attnum &gt; 0) AND (NOT a.attisdropped) AND a.attnotnull AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND pg_has_role(r.relowner, &apos;USAGE&apos;::text));\n                             SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (rs.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (con.conname)::information_schema.sql_identifier AS constraint_name,\n    (&quot;substring&quot;(pg_get_constraintdef(con.oid), 7))::information_schema.character_data AS check_clause\n   FROM (((pg_constraint con\n     LEFT JOIN pg_namespace rs ON ((rs.oid = con.connamespace)))\n     LEFT JOIN pg_class c ON ((c.oid = con.conrelid)))\n     LEFT JOIN pg_type t ON ((t.oid = con.contypid)))\n  WHERE (pg_has_role(COALESCE(c.relowner, t.typowner), &apos;USAGE&apos;::text) AND (con.contype = &apos;c&apos;::&quot;char&quot;))\nUNION\n SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (n.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (((((((n.oid)::text || &apos;_&apos;::text) || (r.oid)::text) || &apos;_&apos;::text) || (a.attnum)::text) || &apos;_not_null&apos;::text))::information_schema.sql_identifier AS constraint_name,\n    (((a.attname)::text || &apos; IS NOT NULL&apos;::text))::information_schema.character_data AS check_clause\n   FROM pg_namespace n,\n    pg_class r,\n    pg_attribute a\n  WHERE ((n.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (a.attnum &gt; 0) AND (NOT a.attisdropped) AND a.attnotnull AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND pg_has_role(r.relowner, &apos;USAGE&apos;::text));\n                        ": "",
    "\n                             SELECT pg_stat_xact_all_tables.relid,\n    pg_stat_xact_all_tables.schemaname,\n    pg_stat_xact_all_tables.relname,\n    pg_stat_xact_all_tables.seq_scan,\n    pg_stat_xact_all_tables.seq_tup_read,\n    pg_stat_xact_all_tables.idx_scan,\n    pg_stat_xact_all_tables.idx_tup_fetch,\n    pg_stat_xact_all_tables.n_tup_ins,\n    pg_stat_xact_all_tables.n_tup_upd,\n    pg_stat_xact_all_tables.n_tup_del,\n    pg_stat_xact_all_tables.n_tup_hot_upd\n   FROM pg_stat_xact_all_tables\n  WHERE ((pg_stat_xact_all_tables.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_stat_xact_all_tables.schemaname ~ &apos;^pg_toast&apos;::text));\n                             SELECT pg_stat_xact_all_tables.relid,\n    pg_stat_xact_all_tables.schemaname,\n    pg_stat_xact_all_tables.relname,\n    pg_stat_xact_all_tables.seq_scan,\n    pg_stat_xact_all_tables.seq_tup_read,\n    pg_stat_xact_all_tables.idx_scan,\n    pg_stat_xact_all_tables.idx_tup_fetch,\n    pg_stat_xact_all_tables.n_tup_ins,\n    pg_stat_xact_all_tables.n_tup_upd,\n    pg_stat_xact_all_tables.n_tup_del,\n    pg_stat_xact_all_tables.n_tup_hot_upd\n   FROM pg_stat_xact_all_tables\n  WHERE ((pg_stat_xact_all_tables.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_stat_xact_all_tables.schemaname ~ &apos;^pg_toast&apos;::text));\n                        ": "",
    "\n                             SELECT pg_shadow.usename,\n    pg_shadow.usesysid,\n    pg_shadow.usecreatedb,\n    pg_shadow.usesuper,\n    pg_shadow.userepl,\n    pg_shadow.usebypassrls,\n    &apos;********&apos;::text AS passwd,\n    pg_shadow.valuntil,\n    pg_shadow.useconfig\n   FROM pg_shadow;\n                             SELECT pg_shadow.usename,\n    pg_shadow.usesysid,\n    pg_shadow.usecreatedb,\n    pg_shadow.usesuper,\n    pg_shadow.userepl,\n    pg_shadow.usebypassrls,\n    &apos;********&apos;::text AS passwd,\n    pg_shadow.valuntil,\n    pg_shadow.useconfig\n   FROM pg_shadow;\n                        ": "",
    "\n                             SELECT n.nspname,\n    c.relname,\n    a.attname,\n    a.attfdwoptions\n   FROM pg_foreign_table t,\n    pg_authid u,\n    pg_namespace n,\n    pg_class c,\n    pg_attribute a\n  WHERE ((u.oid = c.relowner) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_column_privilege(c.oid, a.attnum, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)) AND (n.oid = c.relnamespace) AND (c.oid = t.ftrelid) AND (c.relkind = &apos;f&apos;::&quot;char&quot;) AND (a.attrelid = c.oid) AND (a.attnum &gt; 0));\n                             SELECT n.nspname,\n    c.relname,\n    a.attname,\n    a.attfdwoptions\n   FROM pg_foreign_table t,\n    pg_authid u,\n    pg_namespace n,\n    pg_class c,\n    pg_attribute a\n  WHERE ((u.oid = c.relowner) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_column_privilege(c.oid, a.attnum, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)) AND (n.oid = c.relnamespace) AND (c.oid = t.ftrelid) AND (c.relkind = &apos;f&apos;::&quot;char&quot;) AND (a.attrelid = c.oid) AND (a.attnum &gt; 0));\n                        ": "",
    "\n                             SELECT um.oid,\n    um.umoptions,\n    um.umuser,\n    (COALESCE(u.rolname, &apos;PUBLIC&apos;::name))::information_schema.sql_identifier AS authorization_identifier,\n    s.foreign_server_catalog,\n    s.foreign_server_name,\n    s.authorization_identifier AS srvowner\n   FROM (pg_user_mapping um\n     LEFT JOIN pg_authid u ON ((u.oid = um.umuser))),\n    information_schema._pg_foreign_servers s\n  WHERE (s.oid = um.umserver);\n                             SELECT um.oid,\n    um.umoptions,\n    um.umuser,\n    (COALESCE(u.rolname, &apos;PUBLIC&apos;::name))::information_schema.sql_identifier AS authorization_identifier,\n    s.foreign_server_catalog,\n    s.foreign_server_name,\n    s.authorization_identifier AS srvowner\n   FROM (pg_user_mapping um\n     LEFT JOIN pg_authid u ON ((u.oid = um.umuser))),\n    information_schema._pg_foreign_servers s\n  WHERE (s.oid = um.umserver);\n                        ": "",
    "\n                             SELECT (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (getdatabaseencoding())::information_schema.sql_identifier AS character_set_name,\n    (\n        CASE\n            WHEN (getdatabaseencoding() = &apos;UTF8&apos;::name) THEN &apos;UCS&apos;::name\n            ELSE getdatabaseencoding()\n        END)::information_schema.sql_identifier AS character_repertoire,\n    (getdatabaseencoding())::information_schema.sql_identifier AS form_of_use,\n    (current_database())::information_schema.sql_identifier AS default_collate_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS default_collate_schema,\n    (c.collname)::information_schema.sql_identifier AS default_collate_name\n   FROM (pg_database d\n     LEFT JOIN (pg_collation c\n     JOIN pg_namespace nc ON ((c.collnamespace = nc.oid))) ON (((d.datcollate = c.collcollate) AND (d.datctype = c.collctype))))\n  WHERE (d.datname = current_database())\n  ORDER BY (char_length((c.collname)::text)) DESC, c.collname\n LIMIT 1;\n                             SELECT (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (getdatabaseencoding())::information_schema.sql_identifier AS character_set_name,\n    (\n        CASE\n            WHEN (getdatabaseencoding() = &apos;UTF8&apos;::name) THEN &apos;UCS&apos;::name\n            ELSE getdatabaseencoding()\n        END)::information_schema.sql_identifier AS character_repertoire,\n    (getdatabaseencoding())::information_schema.sql_identifier AS form_of_use,\n    (current_database())::information_schema.sql_identifier AS default_collate_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS default_collate_schema,\n    (c.collname)::information_schema.sql_identifier AS default_collate_name\n   FROM (pg_database d\n     LEFT JOIN (pg_collation c\n     JOIN pg_namespace nc ON ((c.collnamespace = nc.oid))) ON (((d.datcollate = c.collcollate) AND (d.datctype = c.collctype))))\n  WHERE (d.datname = current_database())\n  ORDER BY (char_length((c.collname)::text)) DESC, c.collname\n LIMIT 1;\n                        ": "",
    "\n                             SELECT s.pid,\n    s.gss_auth AS gss_authenticated,\n    s.gss_princ AS principal,\n    s.gss_enc AS encrypted\n   FROM pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc);\n                             SELECT s.pid,\n    s.gss_auth AS gss_authenticated,\n    s.gss_princ AS principal,\n    s.gss_enc AS encrypted\n   FROM pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc);\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (COALESCE(nbt.nspname, nt.nspname))::information_schema.sql_identifier AS udt_schema,\n    (COALESCE(bt.typname, t.typname))::information_schema.sql_identifier AS udt_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (a.attname)::information_schema.sql_identifier AS column_name\n   FROM pg_attribute a,\n    pg_class c,\n    pg_namespace nc,\n    ((pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))\n     LEFT JOIN (pg_type bt\n     JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typtype = &apos;d&apos;::&quot;char&quot;) AND (t.typbasetype = bt.oid))))\n  WHERE ((a.attrelid = c.oid) AND (a.atttypid = t.oid) AND (nc.oid = c.relnamespace) AND (a.attnum &gt; 0) AND (NOT a.attisdropped) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND pg_has_role(COALESCE(bt.typowner, t.typowner), &apos;USAGE&apos;::text));\n                             SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (COALESCE(nbt.nspname, nt.nspname))::information_schema.sql_identifier AS udt_schema,\n    (COALESCE(bt.typname, t.typname))::information_schema.sql_identifier AS udt_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (a.attname)::information_schema.sql_identifier AS column_name\n   FROM pg_attribute a,\n    pg_class c,\n    pg_namespace nc,\n    ((pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))\n     LEFT JOIN (pg_type bt\n     JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typtype = &apos;d&apos;::&quot;char&quot;) AND (t.typbasetype = bt.oid))))\n  WHERE ((a.attrelid = c.oid) AND (a.atttypid = t.oid) AND (nc.oid = c.relnamespace) AND (a.attnum &gt; 0) AND (NOT a.attisdropped) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND pg_has_role(COALESCE(bt.typowner, t.typowner), &apos;USAGE&apos;::text));\n                        ": "",
    "\n                             SELECT (a.rolname)::information_schema.sql_identifier AS role_name\n   FROM pg_authid a\n  WHERE pg_has_role(a.oid, &apos;USAGE&apos;::text);\n                             SELECT (a.rolname)::information_schema.sql_identifier AS role_name\n   FROM pg_authid a\n  WHERE pg_has_role(a.oid, &apos;USAGE&apos;::text);\n                        ": "",
    "\n                             SELECT pg_statio_all_sequences.relid,\n    pg_statio_all_sequences.schemaname,\n    pg_statio_all_sequences.relname,\n    pg_statio_all_sequences.blks_read,\n    pg_statio_all_sequences.blks_hit\n   FROM pg_statio_all_sequences\n  WHERE ((pg_statio_all_sequences.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_statio_all_sequences.schemaname !~ &apos;^pg_toast&apos;::text));\n                             SELECT pg_statio_all_sequences.relid,\n    pg_statio_all_sequences.schemaname,\n    pg_statio_all_sequences.relname,\n    pg_statio_all_sequences.blks_read,\n    pg_statio_all_sequences.blks_hit\n   FROM pg_statio_all_sequences\n  WHERE ((pg_statio_all_sequences.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_statio_all_sequences.schemaname !~ &apos;^pg_toast&apos;::text));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS catalog_name;\n                             SELECT (current_database())::information_schema.sql_identifier AS catalog_name;\n                        ": "",
    "\n                             SELECT n.nspname AS schemaname,\n    c.relname AS tablename,\n    pol.polname AS policyname,\n        CASE\n            WHEN pol.polpermissive THEN &apos;PERMISSIVE&apos;::text\n            ELSE &apos;RESTRICTIVE&apos;::text\n        END AS permissive,\n        CASE\n            WHEN (pol.polroles = &apos;{0}&apos;::oid[]) THEN (string_to_array(&apos;public&apos;::text, &apos;&apos;::text))::name[]\n            ELSE ARRAY( SELECT pg_authid.rolname\n               FROM pg_authid\n              WHERE (pg_authid.oid = ANY (pol.polroles))\n              ORDER BY pg_authid.rolname)\n        END AS roles,\n        CASE pol.polcmd\n            WHEN &apos;r&apos;::&quot;char&quot; THEN &apos;SELECT&apos;::text\n            WHEN &apos;a&apos;::&quot;char&quot; THEN &apos;INSERT&apos;::text\n            WHEN &apos;w&apos;::&quot;char&quot; THEN &apos;UPDATE&apos;::text\n            WHEN &apos;d&apos;::&quot;char&quot; THEN &apos;DELETE&apos;::text\n            WHEN &apos;*&apos;::&quot;char&quot; THEN &apos;ALL&apos;::text\n            ELSE NULL::text\n        END AS cmd,\n    pg_get_expr(pol.polqual, pol.polrelid) AS qual,\n    pg_get_expr(pol.polwithcheck, pol.polrelid) AS with_check\n   FROM ((pg_policy pol\n     JOIN pg_class c ON ((c.oid = pol.polrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)));\n                             SELECT n.nspname AS schemaname,\n    c.relname AS tablename,\n    pol.polname AS policyname,\n        CASE\n            WHEN pol.polpermissive THEN &apos;PERMISSIVE&apos;::text\n            ELSE &apos;RESTRICTIVE&apos;::text\n        END AS permissive,\n        CASE\n            WHEN (pol.polroles = &apos;{0}&apos;::oid[]) THEN (string_to_array(&apos;public&apos;::text, &apos;&apos;::text))::name[]\n            ELSE ARRAY( SELECT pg_authid.rolname\n               FROM pg_authid\n              WHERE (pg_authid.oid = ANY (pol.polroles))\n              ORDER BY pg_authid.rolname)\n        END AS roles,\n        CASE pol.polcmd\n            WHEN &apos;r&apos;::&quot;char&quot; THEN &apos;SELECT&apos;::text\n            WHEN &apos;a&apos;::&quot;char&quot; THEN &apos;INSERT&apos;::text\n            WHEN &apos;w&apos;::&quot;char&quot; THEN &apos;UPDATE&apos;::text\n            WHEN &apos;d&apos;::&quot;char&quot; THEN &apos;DELETE&apos;::text\n            WHEN &apos;*&apos;::&quot;char&quot; THEN &apos;ALL&apos;::text\n            ELSE NULL::text\n        END AS cmd,\n    pg_get_expr(pol.polqual, pol.polrelid) AS qual,\n    pg_get_expr(pol.polwithcheck, pol.polrelid) AS with_check\n   FROM ((pg_policy pol\n     JOIN pg_class c ON ((c.oid = pol.polrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (n.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,\n    (current_database())::information_schema.sql_identifier AS routine_catalog,\n    (n.nspname)::information_schema.sql_identifier AS routine_schema,\n    (p.proname)::information_schema.sql_identifier AS routine_name,\n    (\n        CASE p.prokind\n            WHEN &apos;f&apos;::&quot;char&quot; THEN &apos;FUNCTION&apos;::text\n            WHEN &apos;p&apos;::&quot;char&quot; THEN &apos;PROCEDURE&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS routine_type,\n    (NULL::name)::information_schema.sql_identifier AS module_catalog,\n    (NULL::name)::information_schema.sql_identifier AS module_schema,\n    (NULL::name)::information_schema.sql_identifier AS module_name,\n    (NULL::name)::information_schema.sql_identifier AS udt_catalog,\n    (NULL::name)::information_schema.sql_identifier AS udt_schema,\n    (NULL::name)::information_schema.sql_identifier AS udt_name,\n    (\n        CASE\n            WHEN (p.prokind = &apos;p&apos;::&quot;char&quot;) THEN NULL::text\n            WHEN ((t.typelem &lt;&gt; (0)::oid) AND (t.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n            WHEN (nt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(t.oid, NULL::integer)\n            ELSE &apos;USER-DEFINED&apos;::text\n        END)::information_schema.character_data AS data_type,\n    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,\n    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (NULL::name)::information_schema.sql_identifier AS collation_catalog,\n    (NULL::name)::information_schema.sql_identifier AS collation_schema,\n    (NULL::name)::information_schema.sql_identifier AS collation_name,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,\n    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,\n    (NULL::character varying)::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (\n        CASE\n            WHEN (nt.nspname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS type_udt_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS type_udt_schema,\n    (t.typname)::information_schema.sql_identifier AS type_udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    (\n        CASE\n            WHEN (p.prokind &lt;&gt; &apos;p&apos;::&quot;char&quot;) THEN 0\n            ELSE NULL::integer\n        END)::information_schema.sql_identifier AS dtd_identifier,\n    (\n        CASE\n            WHEN (l.lanname = &apos;sql&apos;::name) THEN &apos;SQL&apos;::text\n            ELSE &apos;EXTERNAL&apos;::text\n        END)::information_schema.character_data AS routine_body,\n    (\n        CASE\n            WHEN pg_has_role(p.proowner, &apos;USAGE&apos;::text) THEN p.prosrc\n            ELSE NULL::text\n        END)::information_schema.character_data AS routine_definition,\n    (\n        CASE\n            WHEN (l.lanname = &apos;c&apos;::name) THEN p.prosrc\n            ELSE NULL::text\n        END)::information_schema.character_data AS external_name,\n    (upper((l.lanname)::text))::information_schema.character_data AS external_language,\n    (&apos;GENERAL&apos;::character varying)::information_schema.character_data AS parameter_style,\n    (\n        CASE\n            WHEN (p.provolatile = &apos;i&apos;::&quot;char&quot;) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_deterministic,\n    (&apos;MODIFIES&apos;::character varying)::information_schema.character_data AS sql_data_access,\n    (\n        CASE\n            WHEN (p.prokind &lt;&gt; &apos;p&apos;::&quot;char&quot;) THEN\n            CASE\n                WHEN p.proisstrict THEN &apos;YES&apos;::text\n                ELSE &apos;NO&apos;::text\n            END\n            ELSE NULL::text\n        END)::information_schema.yes_or_no AS is_null_call,\n    (NULL::character varying)::information_schema.character_data AS sql_path,\n    (&apos;YES&apos;::character varying)::information_schema.yes_or_no AS schema_level_routine,\n    (0)::information_schema.cardinal_number AS max_dynamic_result_sets,\n    (NULL::character varying)::information_schema.yes_or_no AS is_user_defined_cast,\n    (NULL::character varying)::information_schema.yes_or_no AS is_implicitly_invocable,\n    (\n        CASE\n            WHEN p.prosecdef THEN &apos;DEFINER&apos;::text\n            ELSE &apos;INVOKER&apos;::text\n        END)::information_schema.character_data AS security_type,\n    (NULL::name)::information_schema.sql_identifier AS to_sql_specific_catalog,\n    (NULL::name)::information_schema.sql_identifier AS to_sql_specific_schema,\n    (NULL::name)::information_schema.sql_identifier AS to_sql_specific_name,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS as_locator,\n    (NULL::timestamp with time zone)::information_schema.time_stamp AS created,\n    (NULL::timestamp with time zone)::information_schema.time_stamp AS last_altered,\n    (NULL::character varying)::information_schema.yes_or_no AS new_savepoint_level,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_udt_dependent,\n    (NULL::character varying)::information_schema.character_data AS result_cast_from_data_type,\n    (NULL::character varying)::information_schema.yes_or_no AS result_cast_as_locator,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_char_max_length,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_char_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_name,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_collation_catalog,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_collation_schema,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_collation_name,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_precision,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_precision_radix,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_scale,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_datetime_precision,\n    (NULL::character varying)::information_schema.character_data AS result_cast_interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_interval_precision,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_catalog,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_schema,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_name,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_maximum_cardinality,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_dtd_identifier\n   FROM (((pg_namespace n\n     JOIN pg_proc p ON ((n.oid = p.pronamespace)))\n     JOIN pg_language l ON ((p.prolang = l.oid)))\n     LEFT JOIN (pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON (((p.prorettype = t.oid) AND (p.prokind &lt;&gt; &apos;p&apos;::&quot;char&quot;))))\n  WHERE (pg_has_role(p.proowner, &apos;USAGE&apos;::text) OR has_function_privilege(p.oid, &apos;EXECUTE&apos;::text));\n                             SELECT (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (n.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,\n    (current_database())::information_schema.sql_identifier AS routine_catalog,\n    (n.nspname)::information_schema.sql_identifier AS routine_schema,\n    (p.proname)::information_schema.sql_identifier AS routine_name,\n    (\n        CASE p.prokind\n            WHEN &apos;f&apos;::&quot;char&quot; THEN &apos;FUNCTION&apos;::text\n            WHEN &apos;p&apos;::&quot;char&quot; THEN &apos;PROCEDURE&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS routine_type,\n    (NULL::name)::information_schema.sql_identifier AS module_catalog,\n    (NULL::name)::information_schema.sql_identifier AS module_schema,\n    (NULL::name)::information_schema.sql_identifier AS module_name,\n    (NULL::name)::information_schema.sql_identifier AS udt_catalog,\n    (NULL::name)::information_schema.sql_identifier AS udt_schema,\n    (NULL::name)::information_schema.sql_identifier AS udt_name,\n    (\n        CASE\n            WHEN (p.prokind = &apos;p&apos;::&quot;char&quot;) THEN NULL::text\n            WHEN ((t.typelem &lt;&gt; (0)::oid) AND (t.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n            WHEN (nt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(t.oid, NULL::integer)\n            ELSE &apos;USER-DEFINED&apos;::text\n        END)::information_schema.character_data AS data_type,\n    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,\n    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (NULL::name)::information_schema.sql_identifier AS collation_catalog,\n    (NULL::name)::information_schema.sql_identifier AS collation_schema,\n    (NULL::name)::information_schema.sql_identifier AS collation_name,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,\n    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,\n    (NULL::character varying)::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (\n        CASE\n            WHEN (nt.nspname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS type_udt_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS type_udt_schema,\n    (t.typname)::information_schema.sql_identifier AS type_udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    (\n        CASE\n            WHEN (p.prokind &lt;&gt; &apos;p&apos;::&quot;char&quot;) THEN 0\n            ELSE NULL::integer\n        END)::information_schema.sql_identifier AS dtd_identifier,\n    (\n        CASE\n            WHEN (l.lanname = &apos;sql&apos;::name) THEN &apos;SQL&apos;::text\n            ELSE &apos;EXTERNAL&apos;::text\n        END)::information_schema.character_data AS routine_body,\n    (\n        CASE\n            WHEN pg_has_role(p.proowner, &apos;USAGE&apos;::text) THEN p.prosrc\n            ELSE NULL::text\n        END)::information_schema.character_data AS routine_definition,\n    (\n        CASE\n            WHEN (l.lanname = &apos;c&apos;::name) THEN p.prosrc\n            ELSE NULL::text\n        END)::information_schema.character_data AS external_name,\n    (upper((l.lanname)::text))::information_schema.character_data AS external_language,\n    (&apos;GENERAL&apos;::character varying)::information_schema.character_data AS parameter_style,\n    (\n        CASE\n            WHEN (p.provolatile = &apos;i&apos;::&quot;char&quot;) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_deterministic,\n    (&apos;MODIFIES&apos;::character varying)::information_schema.character_data AS sql_data_access,\n    (\n        CASE\n            WHEN (p.prokind &lt;&gt; &apos;p&apos;::&quot;char&quot;) THEN\n            CASE\n                WHEN p.proisstrict THEN &apos;YES&apos;::text\n                ELSE &apos;NO&apos;::text\n            END\n            ELSE NULL::text\n        END)::information_schema.yes_or_no AS is_null_call,\n    (NULL::character varying)::information_schema.character_data AS sql_path,\n    (&apos;YES&apos;::character varying)::information_schema.yes_or_no AS schema_level_routine,\n    (0)::information_schema.cardinal_number AS max_dynamic_result_sets,\n    (NULL::character varying)::information_schema.yes_or_no AS is_user_defined_cast,\n    (NULL::character varying)::information_schema.yes_or_no AS is_implicitly_invocable,\n    (\n        CASE\n            WHEN p.prosecdef THEN &apos;DEFINER&apos;::text\n            ELSE &apos;INVOKER&apos;::text\n        END)::information_schema.character_data AS security_type,\n    (NULL::name)::information_schema.sql_identifier AS to_sql_specific_catalog,\n    (NULL::name)::information_schema.sql_identifier AS to_sql_specific_schema,\n    (NULL::name)::information_schema.sql_identifier AS to_sql_specific_name,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS as_locator,\n    (NULL::timestamp with time zone)::information_schema.time_stamp AS created,\n    (NULL::timestamp with time zone)::information_schema.time_stamp AS last_altered,\n    (NULL::character varying)::information_schema.yes_or_no AS new_savepoint_level,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_udt_dependent,\n    (NULL::character varying)::information_schema.character_data AS result_cast_from_data_type,\n    (NULL::character varying)::information_schema.yes_or_no AS result_cast_as_locator,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_char_max_length,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_char_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_name,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_collation_catalog,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_collation_schema,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_collation_name,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_precision,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_precision_radix,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_scale,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_datetime_precision,\n    (NULL::character varying)::information_schema.character_data AS result_cast_interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_interval_precision,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_catalog,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_schema,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_name,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS result_cast_maximum_cardinality,\n    (NULL::name)::information_schema.sql_identifier AS result_cast_dtd_identifier\n   FROM (((pg_namespace n\n     JOIN pg_proc p ON ((n.oid = p.pronamespace)))\n     JOIN pg_language l ON ((p.prolang = l.oid)))\n     LEFT JOIN (pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON (((p.prorettype = t.oid) AND (p.prokind &lt;&gt; &apos;p&apos;::&quot;char&quot;))))\n  WHERE (pg_has_role(p.proowner, &apos;USAGE&apos;::text) OR has_function_privilege(p.oid, &apos;EXECUTE&apos;::text));\n                        ": "",
    "\n                             SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (c.prtype)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, c.relowner, &apos;USAGE&apos;::text) OR c.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable,\n    (\n        CASE\n            WHEN (c.prtype = &apos;SELECT&apos;::text) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS with_hierarchy\n   FROM ( SELECT pg_class.oid,\n            pg_class.relname,\n            pg_class.relnamespace,\n            pg_class.relkind,\n            pg_class.relowner,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).is_grantable AS is_grantable\n           FROM pg_class) c(oid, relname, relnamespace, relkind, relowner, grantor, grantee, prtype, grantable),\n    pg_namespace nc,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((c.relnamespace = nc.oid) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (c.grantee = grantee.oid) AND (c.grantor = u_grantor.oid) AND (c.prtype = ANY (ARRAY[&apos;INSERT&apos;::text, &apos;SELECT&apos;::text, &apos;UPDATE&apos;::text, &apos;DELETE&apos;::text, &apos;TRUNCATE&apos;::text, &apos;REFERENCES&apos;::text, &apos;TRIGGER&apos;::text])) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)));\n                             SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (c.prtype)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, c.relowner, &apos;USAGE&apos;::text) OR c.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable,\n    (\n        CASE\n            WHEN (c.prtype = &apos;SELECT&apos;::text) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS with_hierarchy\n   FROM ( SELECT pg_class.oid,\n            pg_class.relname,\n            pg_class.relnamespace,\n            pg_class.relkind,\n            pg_class.relowner,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).is_grantable AS is_grantable\n           FROM pg_class) c(oid, relname, relnamespace, relkind, relowner, grantor, grantee, prtype, grantable),\n    pg_namespace nc,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((c.relnamespace = nc.oid) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (c.grantee = grantee.oid) AND (c.grantor = u_grantor.oid) AND (c.prtype = ANY (ARRAY[&apos;INSERT&apos;::text, &apos;SELECT&apos;::text, &apos;UPDATE&apos;::text, &apos;DELETE&apos;::text, &apos;TRUNCATE&apos;::text, &apos;REFERENCES&apos;::text, &apos;TRIGGER&apos;::text])) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)));\n                        ": "",
    "\n                             SELECT pg_stat_all_tables.relid,\n    pg_stat_all_tables.schemaname,\n    pg_stat_all_tables.relname,\n    pg_stat_all_tables.seq_scan,\n    pg_stat_all_tables.seq_tup_read,\n    pg_stat_all_tables.idx_scan,\n    pg_stat_all_tables.idx_tup_fetch,\n    pg_stat_all_tables.n_tup_ins,\n    pg_stat_all_tables.n_tup_upd,\n    pg_stat_all_tables.n_tup_del,\n    pg_stat_all_tables.n_tup_hot_upd,\n    pg_stat_all_tables.n_live_tup,\n    pg_stat_all_tables.n_dead_tup,\n    pg_stat_all_tables.n_mod_since_analyze,\n    pg_stat_all_tables.last_vacuum,\n    pg_stat_all_tables.last_autovacuum,\n    pg_stat_all_tables.last_analyze,\n    pg_stat_all_tables.last_autoanalyze,\n    pg_stat_all_tables.vacuum_count,\n    pg_stat_all_tables.autovacuum_count,\n    pg_stat_all_tables.analyze_count,\n    pg_stat_all_tables.autoanalyze_count\n   FROM pg_stat_all_tables\n  WHERE ((pg_stat_all_tables.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_stat_all_tables.schemaname ~ &apos;^pg_toast&apos;::text));\n                             SELECT pg_stat_all_tables.relid,\n    pg_stat_all_tables.schemaname,\n    pg_stat_all_tables.relname,\n    pg_stat_all_tables.seq_scan,\n    pg_stat_all_tables.seq_tup_read,\n    pg_stat_all_tables.idx_scan,\n    pg_stat_all_tables.idx_tup_fetch,\n    pg_stat_all_tables.n_tup_ins,\n    pg_stat_all_tables.n_tup_upd,\n    pg_stat_all_tables.n_tup_del,\n    pg_stat_all_tables.n_tup_hot_upd,\n    pg_stat_all_tables.n_live_tup,\n    pg_stat_all_tables.n_dead_tup,\n    pg_stat_all_tables.n_mod_since_analyze,\n    pg_stat_all_tables.last_vacuum,\n    pg_stat_all_tables.last_autovacuum,\n    pg_stat_all_tables.last_analyze,\n    pg_stat_all_tables.last_autoanalyze,\n    pg_stat_all_tables.vacuum_count,\n    pg_stat_all_tables.autovacuum_count,\n    pg_stat_all_tables.analyze_count,\n    pg_stat_all_tables.autoanalyze_count\n   FROM pg_stat_all_tables\n  WHERE ((pg_stat_all_tables.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_stat_all_tables.schemaname ~ &apos;^pg_toast&apos;::text));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (x.tblschema)::information_schema.sql_identifier AS table_schema,\n    (x.tblname)::information_schema.sql_identifier AS table_name,\n    (x.colname)::information_schema.sql_identifier AS column_name,\n    (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (x.cstrschema)::information_schema.sql_identifier AS constraint_schema,\n    (x.cstrname)::information_schema.sql_identifier AS constraint_name\n   FROM ( SELECT DISTINCT nr.nspname,\n            r.relname,\n            r.relowner,\n            a.attname,\n            nc.nspname,\n            c.conname\n           FROM pg_namespace nr,\n            pg_class r,\n            pg_attribute a,\n            pg_depend d,\n            pg_namespace nc,\n            pg_constraint c\n          WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (d.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (d.refobjid = r.oid) AND (d.refobjsubid = a.attnum) AND (d.classid = (&apos;pg_constraint&apos;::regclass)::oid) AND (d.objid = c.oid) AND (c.connamespace = nc.oid) AND (c.contype = &apos;c&apos;::&quot;char&quot;) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (NOT a.attisdropped))\n        UNION ALL\n         SELECT nr.nspname,\n            r.relname,\n            r.relowner,\n            a.attname,\n            nc.nspname,\n            c.conname\n           FROM pg_namespace nr,\n            pg_class r,\n            pg_attribute a,\n            pg_namespace nc,\n            pg_constraint c\n          WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (nc.oid = c.connamespace) AND (r.oid =\n                CASE c.contype\n                    WHEN &apos;f&apos;::&quot;char&quot; THEN c.confrelid\n                    ELSE c.conrelid\n                END) AND (a.attnum = ANY (\n                CASE c.contype\n                    WHEN &apos;f&apos;::&quot;char&quot; THEN c.confkey\n                    ELSE c.conkey\n                END)) AND (NOT a.attisdropped) AND (c.contype = ANY (ARRAY[&apos;p&apos;::&quot;char&quot;, &apos;u&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;])) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])))) x(tblschema, tblname, tblowner, colname, cstrschema, cstrname)\n  WHERE pg_has_role(x.tblowner, &apos;USAGE&apos;::text);\n                             SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (x.tblschema)::information_schema.sql_identifier AS table_schema,\n    (x.tblname)::information_schema.sql_identifier AS table_name,\n    (x.colname)::information_schema.sql_identifier AS column_name,\n    (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (x.cstrschema)::information_schema.sql_identifier AS constraint_schema,\n    (x.cstrname)::information_schema.sql_identifier AS constraint_name\n   FROM ( SELECT DISTINCT nr.nspname,\n            r.relname,\n            r.relowner,\n            a.attname,\n            nc.nspname,\n            c.conname\n           FROM pg_namespace nr,\n            pg_class r,\n            pg_attribute a,\n            pg_depend d,\n            pg_namespace nc,\n            pg_constraint c\n          WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (d.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (d.refobjid = r.oid) AND (d.refobjsubid = a.attnum) AND (d.classid = (&apos;pg_constraint&apos;::regclass)::oid) AND (d.objid = c.oid) AND (c.connamespace = nc.oid) AND (c.contype = &apos;c&apos;::&quot;char&quot;) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (NOT a.attisdropped))\n        UNION ALL\n         SELECT nr.nspname,\n            r.relname,\n            r.relowner,\n            a.attname,\n            nc.nspname,\n            c.conname\n           FROM pg_namespace nr,\n            pg_class r,\n            pg_attribute a,\n            pg_namespace nc,\n            pg_constraint c\n          WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (nc.oid = c.connamespace) AND (r.oid =\n                CASE c.contype\n                    WHEN &apos;f&apos;::&quot;char&quot; THEN c.confrelid\n                    ELSE c.conrelid\n                END) AND (a.attnum = ANY (\n                CASE c.contype\n                    WHEN &apos;f&apos;::&quot;char&quot; THEN c.confkey\n                    ELSE c.conkey\n                END)) AND (NOT a.attisdropped) AND (c.contype = ANY (ARRAY[&apos;p&apos;::&quot;char&quot;, &apos;u&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;])) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])))) x(tblschema, tblname, tblowner, colname, cstrschema, cstrname)\n  WHERE pg_has_role(x.tblowner, &apos;USAGE&apos;::text);\n                        ": "",
    "\n                             SELECT e.name,\n    e.version,\n    (x.extname IS NOT NULL) AS installed,\n    e.superuser,\n    e.relocatable,\n    e.schema,\n    e.requires,\n    e.comment\n   FROM (pg_available_extension_versions() e(name, version, superuser, relocatable, schema, requires, comment)\n     LEFT JOIN pg_extension x ON (((e.name = x.extname) AND (e.version = x.extversion))));\n                             SELECT e.name,\n    e.version,\n    (x.extname IS NOT NULL) AS installed,\n    e.superuser,\n    e.relocatable,\n    e.schema,\n    e.requires,\n    e.comment\n   FROM (pg_available_extension_versions() e(name, version, superuser, relocatable, schema, requires, comment)\n     LEFT JOIN pg_extension x ON (((e.name = x.extname) AND (e.version = x.extversion))));\n                        ": "",
    "\n                             SELECT e.name,\n    e.default_version,\n    x.extversion AS installed_version,\n    e.comment\n   FROM (pg_available_extensions() e(name, default_version, comment)\n     LEFT JOIN pg_extension x ON ((e.name = x.extname)));\n                             SELECT e.name,\n    e.default_version,\n    x.extversion AS installed_version,\n    e.comment\n   FROM (pg_available_extensions() e(name, default_version, comment)\n     LEFT JOIN pg_extension x ON ((e.name = x.extname)));\n                        ": "",
    "\n                             SELECT c.oid AS relid,\n    n.nspname AS schemaname,\n    c.relname,\n    pg_stat_get_xact_numscans(c.oid) AS seq_scan,\n    pg_stat_get_xact_tuples_returned(c.oid) AS seq_tup_read,\n    (sum(pg_stat_get_xact_numscans(i.indexrelid)))::bigint AS idx_scan,\n    ((sum(pg_stat_get_xact_tuples_fetched(i.indexrelid)))::bigint + pg_stat_get_xact_tuples_fetched(c.oid)) AS idx_tup_fetch,\n    pg_stat_get_xact_tuples_inserted(c.oid) AS n_tup_ins,\n    pg_stat_get_xact_tuples_updated(c.oid) AS n_tup_upd,\n    pg_stat_get_xact_tuples_deleted(c.oid) AS n_tup_del,\n    pg_stat_get_xact_tuples_hot_updated(c.oid) AS n_tup_hot_upd\n   FROM ((pg_class c\n     LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;t&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;]))\n  GROUP BY c.oid, n.nspname, c.relname;\n                             SELECT c.oid AS relid,\n    n.nspname AS schemaname,\n    c.relname,\n    pg_stat_get_xact_numscans(c.oid) AS seq_scan,\n    pg_stat_get_xact_tuples_returned(c.oid) AS seq_tup_read,\n    (sum(pg_stat_get_xact_numscans(i.indexrelid)))::bigint AS idx_scan,\n    ((sum(pg_stat_get_xact_tuples_fetched(i.indexrelid)))::bigint + pg_stat_get_xact_tuples_fetched(c.oid)) AS idx_tup_fetch,\n    pg_stat_get_xact_tuples_inserted(c.oid) AS n_tup_ins,\n    pg_stat_get_xact_tuples_updated(c.oid) AS n_tup_upd,\n    pg_stat_get_xact_tuples_deleted(c.oid) AS n_tup_del,\n    pg_stat_get_xact_tuples_hot_updated(c.oid) AS n_tup_hot_upd\n   FROM ((pg_class c\n     LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;t&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;]))\n  GROUP BY c.oid, n.nspname, c.relname;\n                        ": "",
    "\n                             SELECT s.pid,\n    s.datid,\n    d.datname,\n    s.relid,\n    (s.param7)::oid AS index_relid,\n        CASE s.param1\n            WHEN 1 THEN &apos;CREATE INDEX&apos;::text\n            WHEN 2 THEN &apos;CREATE INDEX CONCURRENTLY&apos;::text\n            WHEN 3 THEN &apos;REINDEX&apos;::text\n            WHEN 4 THEN &apos;REINDEX CONCURRENTLY&apos;::text\n            ELSE NULL::text\n        END AS command,\n        CASE s.param10\n            WHEN 0 THEN &apos;initializing&apos;::text\n            WHEN 1 THEN &apos;waiting for writers before build&apos;::text\n            WHEN 2 THEN (&apos;building index&apos;::text || COALESCE((&apos;: &apos;::text || pg_indexam_progress_phasename((s.param9)::oid, s.param11)), &apos;&apos;::text))\n            WHEN 3 THEN &apos;waiting for writers before validation&apos;::text\n            WHEN 4 THEN &apos;index validation: scanning index&apos;::text\n            WHEN 5 THEN &apos;index validation: sorting tuples&apos;::text\n            WHEN 6 THEN &apos;index validation: scanning table&apos;::text\n            WHEN 7 THEN &apos;waiting for old snapshots&apos;::text\n            WHEN 8 THEN &apos;waiting for readers before marking dead&apos;::text\n            WHEN 9 THEN &apos;waiting for readers before dropping&apos;::text\n            ELSE NULL::text\n        END AS phase,\n    s.param4 AS lockers_total,\n    s.param5 AS lockers_done,\n    s.param6 AS current_locker_pid,\n    s.param16 AS blocks_total,\n    s.param17 AS blocks_done,\n    s.param12 AS tuples_total,\n    s.param13 AS tuples_done,\n    s.param14 AS partitions_total,\n    s.param15 AS partitions_done\n   FROM (pg_stat_get_progress_info(&apos;CREATE INDEX&apos;::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)\n     LEFT JOIN pg_database d ON ((s.datid = d.oid)));\n                             SELECT s.pid,\n    s.datid,\n    d.datname,\n    s.relid,\n    (s.param7)::oid AS index_relid,\n        CASE s.param1\n            WHEN 1 THEN &apos;CREATE INDEX&apos;::text\n            WHEN 2 THEN &apos;CREATE INDEX CONCURRENTLY&apos;::text\n            WHEN 3 THEN &apos;REINDEX&apos;::text\n            WHEN 4 THEN &apos;REINDEX CONCURRENTLY&apos;::text\n            ELSE NULL::text\n        END AS command,\n        CASE s.param10\n            WHEN 0 THEN &apos;initializing&apos;::text\n            WHEN 1 THEN &apos;waiting for writers before build&apos;::text\n            WHEN 2 THEN (&apos;building index&apos;::text || COALESCE((&apos;: &apos;::text || pg_indexam_progress_phasename((s.param9)::oid, s.param11)), &apos;&apos;::text))\n            WHEN 3 THEN &apos;waiting for writers before validation&apos;::text\n            WHEN 4 THEN &apos;index validation: scanning index&apos;::text\n            WHEN 5 THEN &apos;index validation: sorting tuples&apos;::text\n            WHEN 6 THEN &apos;index validation: scanning table&apos;::text\n            WHEN 7 THEN &apos;waiting for old snapshots&apos;::text\n            WHEN 8 THEN &apos;waiting for readers before marking dead&apos;::text\n            WHEN 9 THEN &apos;waiting for readers before dropping&apos;::text\n            ELSE NULL::text\n        END AS phase,\n    s.param4 AS lockers_total,\n    s.param5 AS lockers_done,\n    s.param6 AS current_locker_pid,\n    s.param16 AS blocks_total,\n    s.param17 AS blocks_done,\n    s.param12 AS tuples_total,\n    s.param13 AS tuples_done,\n    s.param14 AS partitions_total,\n    s.param15 AS partitions_done\n   FROM (pg_stat_get_progress_info(&apos;CREATE INDEX&apos;::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)\n     LEFT JOIN pg_database d ON ((s.datid = d.oid)));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS domain_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS domain_schema,\n    (t.typname)::information_schema.sql_identifier AS domain_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (a.attname)::information_schema.sql_identifier AS column_name\n   FROM pg_type t,\n    pg_namespace nt,\n    pg_class c,\n    pg_namespace nc,\n    pg_attribute a\n  WHERE ((t.typnamespace = nt.oid) AND (c.relnamespace = nc.oid) AND (a.attrelid = c.oid) AND (a.atttypid = t.oid) AND (t.typtype = &apos;d&apos;::&quot;char&quot;) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (a.attnum &gt; 0) AND (NOT a.attisdropped) AND pg_has_role(t.typowner, &apos;USAGE&apos;::text));\n                             SELECT (current_database())::information_schema.sql_identifier AS domain_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS domain_schema,\n    (t.typname)::information_schema.sql_identifier AS domain_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (a.attname)::information_schema.sql_identifier AS column_name\n   FROM pg_type t,\n    pg_namespace nt,\n    pg_class c,\n    pg_namespace nc,\n    pg_attribute a\n  WHERE ((t.typnamespace = nt.oid) AND (c.relnamespace = nc.oid) AND (a.attrelid = c.oid) AND (a.atttypid = t.oid) AND (t.typtype = &apos;d&apos;::&quot;char&quot;) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (a.attnum &gt; 0) AND (NOT a.attisdropped) AND pg_has_role(t.typowner, &apos;USAGE&apos;::text));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS udt_schema,\n    (c.relname)::information_schema.sql_identifier AS udt_name,\n    (a.attname)::information_schema.sql_identifier AS attribute_name,\n    (a.attnum)::information_schema.cardinal_number AS ordinal_position,\n    (pg_get_expr(ad.adbin, ad.adrelid))::information_schema.character_data AS attribute_default,\n    (\n        CASE\n            WHEN (a.attnotnull OR ((t.typtype = &apos;d&apos;::&quot;char&quot;) AND t.typnotnull)) THEN &apos;NO&apos;::text\n            ELSE &apos;YES&apos;::text\n        END)::information_schema.yes_or_no AS is_nullable,\n    (\n        CASE\n            WHEN ((t.typelem &lt;&gt; (0)::oid) AND (t.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n            WHEN (nt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(a.atttypid, NULL::integer)\n            ELSE &apos;USER-DEFINED&apos;::text\n        END)::information_schema.character_data AS data_type,\n    (information_schema._pg_char_max_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_maximum_length,\n    (information_schema._pg_char_octet_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (\n        CASE\n            WHEN (nco.nspname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS collation_catalog,\n    (nco.nspname)::information_schema.sql_identifier AS collation_schema,\n    (co.collname)::information_schema.sql_identifier AS collation_name,\n    (information_schema._pg_numeric_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision,\n    (information_schema._pg_numeric_precision_radix(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision_radix,\n    (information_schema._pg_numeric_scale(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_scale,\n    (information_schema._pg_datetime_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS datetime_precision,\n    (information_schema._pg_interval_type(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (current_database())::information_schema.sql_identifier AS attribute_udt_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS attribute_udt_schema,\n    (t.typname)::information_schema.sql_identifier AS attribute_udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    (a.attnum)::information_schema.sql_identifier AS dtd_identifier,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_derived_reference_attribute\n   FROM ((((pg_attribute a\n     LEFT JOIN pg_attrdef ad ON (((a.attrelid = ad.adrelid) AND (a.attnum = ad.adnum))))\n     JOIN (pg_class c\n     JOIN pg_namespace nc ON ((c.relnamespace = nc.oid))) ON ((a.attrelid = c.oid)))\n     JOIN (pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((a.atttypid = t.oid)))\n     LEFT JOIN (pg_collation co\n     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((a.attcollation = co.oid) AND ((nco.nspname &lt;&gt; &apos;pg_catalog&apos;::name) OR (co.collname &lt;&gt; &apos;default&apos;::name)))))\n  WHERE ((a.attnum &gt; 0) AND (NOT a.attisdropped) AND (c.relkind = &apos;c&apos;::&quot;char&quot;) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_type_privilege(c.reltype, &apos;USAGE&apos;::text)));\n                             SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS udt_schema,\n    (c.relname)::information_schema.sql_identifier AS udt_name,\n    (a.attname)::information_schema.sql_identifier AS attribute_name,\n    (a.attnum)::information_schema.cardinal_number AS ordinal_position,\n    (pg_get_expr(ad.adbin, ad.adrelid))::information_schema.character_data AS attribute_default,\n    (\n        CASE\n            WHEN (a.attnotnull OR ((t.typtype = &apos;d&apos;::&quot;char&quot;) AND t.typnotnull)) THEN &apos;NO&apos;::text\n            ELSE &apos;YES&apos;::text\n        END)::information_schema.yes_or_no AS is_nullable,\n    (\n        CASE\n            WHEN ((t.typelem &lt;&gt; (0)::oid) AND (t.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n            WHEN (nt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(a.atttypid, NULL::integer)\n            ELSE &apos;USER-DEFINED&apos;::text\n        END)::information_schema.character_data AS data_type,\n    (information_schema._pg_char_max_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_maximum_length,\n    (information_schema._pg_char_octet_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (\n        CASE\n            WHEN (nco.nspname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS collation_catalog,\n    (nco.nspname)::information_schema.sql_identifier AS collation_schema,\n    (co.collname)::information_schema.sql_identifier AS collation_name,\n    (information_schema._pg_numeric_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision,\n    (information_schema._pg_numeric_precision_radix(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision_radix,\n    (information_schema._pg_numeric_scale(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_scale,\n    (information_schema._pg_datetime_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS datetime_precision,\n    (information_schema._pg_interval_type(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (current_database())::information_schema.sql_identifier AS attribute_udt_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS attribute_udt_schema,\n    (t.typname)::information_schema.sql_identifier AS attribute_udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    (a.attnum)::information_schema.sql_identifier AS dtd_identifier,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_derived_reference_attribute\n   FROM ((((pg_attribute a\n     LEFT JOIN pg_attrdef ad ON (((a.attrelid = ad.adrelid) AND (a.attnum = ad.adnum))))\n     JOIN (pg_class c\n     JOIN pg_namespace nc ON ((c.relnamespace = nc.oid))) ON ((a.attrelid = c.oid)))\n     JOIN (pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((a.atttypid = t.oid)))\n     LEFT JOIN (pg_collation co\n     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((a.attcollation = co.oid) AND ((nco.nspname &lt;&gt; &apos;pg_catalog&apos;::name) OR (co.collname &lt;&gt; &apos;default&apos;::name)))))\n  WHERE ((a.attnum &gt; 0) AND (NOT a.attisdropped) AND (c.relkind = &apos;c&apos;::&quot;char&quot;) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_type_privilege(c.reltype, &apos;USAGE&apos;::text)));\n                        ": "",
    "\n                             SELECT t.foreign_table_catalog,\n    t.foreign_table_schema,\n    t.foreign_table_name,\n    ((pg_options_to_table(t.ftoptions)).option_name)::information_schema.sql_identifier AS option_name,\n    ((pg_options_to_table(t.ftoptions)).option_value)::information_schema.character_data AS option_value\n   FROM information_schema._pg_foreign_tables t;\n                             SELECT t.foreign_table_catalog,\n    t.foreign_table_schema,\n    t.foreign_table_name,\n    ((pg_options_to_table(t.ftoptions)).option_name)::information_schema.sql_identifier AS option_name,\n    ((pg_options_to_table(t.ftoptions)).option_value)::information_schema.character_data AS option_value\n   FROM information_schema._pg_foreign_tables t;\n                        ": "",
    "\n                             SELECT pg_statio_all_tables.relid,\n    pg_statio_all_tables.schemaname,\n    pg_statio_all_tables.relname,\n    pg_statio_all_tables.heap_blks_read,\n    pg_statio_all_tables.heap_blks_hit,\n    pg_statio_all_tables.idx_blks_read,\n    pg_statio_all_tables.idx_blks_hit,\n    pg_statio_all_tables.toast_blks_read,\n    pg_statio_all_tables.toast_blks_hit,\n    pg_statio_all_tables.tidx_blks_read,\n    pg_statio_all_tables.tidx_blks_hit\n   FROM pg_statio_all_tables\n  WHERE ((pg_statio_all_tables.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_statio_all_tables.schemaname !~ &apos;^pg_toast&apos;::text));\n                             SELECT pg_statio_all_tables.relid,\n    pg_statio_all_tables.schemaname,\n    pg_statio_all_tables.relname,\n    pg_statio_all_tables.heap_blks_read,\n    pg_statio_all_tables.heap_blks_hit,\n    pg_statio_all_tables.idx_blks_read,\n    pg_statio_all_tables.idx_blks_hit,\n    pg_statio_all_tables.toast_blks_read,\n    pg_statio_all_tables.toast_blks_hit,\n    pg_statio_all_tables.tidx_blks_read,\n    pg_statio_all_tables.tidx_blks_hit\n   FROM pg_statio_all_tables\n  WHERE ((pg_statio_all_tables.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_statio_all_tables.schemaname !~ &apos;^pg_toast&apos;::text));\n                        ": "",
    "\n                             SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (n.nspname)::information_schema.sql_identifier AS udt_schema,\n    (t.typname)::information_schema.sql_identifier AS udt_name,\n    (&apos;TYPE USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, t.typowner, &apos;USAGE&apos;::text) OR t.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_type.oid,\n            pg_type.typname,\n            pg_type.typnamespace,\n            pg_type.typtype,\n            pg_type.typowner,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).is_grantable AS is_grantable\n           FROM pg_type) t(oid, typname, typnamespace, typtype, typowner, grantor, grantee, prtype, grantable),\n    pg_namespace n,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((t.typnamespace = n.oid) AND (t.typtype = &apos;c&apos;::&quot;char&quot;) AND (t.grantee = grantee.oid) AND (t.grantor = u_grantor.oid) AND (t.prtype = &apos;USAGE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)));\n                             SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (n.nspname)::information_schema.sql_identifier AS udt_schema,\n    (t.typname)::information_schema.sql_identifier AS udt_name,\n    (&apos;TYPE USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, t.typowner, &apos;USAGE&apos;::text) OR t.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_type.oid,\n            pg_type.typname,\n            pg_type.typnamespace,\n            pg_type.typtype,\n            pg_type.typowner,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).is_grantable AS is_grantable\n           FROM pg_type) t(oid, typname, typnamespace, typtype, typowner, grantor, grantee, prtype, grantable),\n    pg_namespace n,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((t.typnamespace = n.oid) AND (t.typtype = &apos;c&apos;::&quot;char&quot;) AND (t.grantee = grantee.oid) AND (t.grantor = u_grantor.oid) AND (t.prtype = &apos;USAGE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)));\n                        ": "",
    "\n                             SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (n.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,\n    (current_database())::information_schema.sql_identifier AS routine_catalog,\n    (n.nspname)::information_schema.sql_identifier AS routine_schema,\n    (p.proname)::information_schema.sql_identifier AS routine_name,\n    (&apos;EXECUTE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, p.proowner, &apos;USAGE&apos;::text) OR p.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_proc.oid,\n            pg_proc.proname,\n            pg_proc.proowner,\n            pg_proc.pronamespace,\n            (aclexplode(COALESCE(pg_proc.proacl, acldefault(&apos;f&apos;::&quot;char&quot;, pg_proc.proowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_proc.proacl, acldefault(&apos;f&apos;::&quot;char&quot;, pg_proc.proowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_proc.proacl, acldefault(&apos;f&apos;::&quot;char&quot;, pg_proc.proowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_proc.proacl, acldefault(&apos;f&apos;::&quot;char&quot;, pg_proc.proowner)))).is_grantable AS is_grantable\n           FROM pg_proc) p(oid, proname, proowner, pronamespace, grantor, grantee, prtype, grantable),\n    pg_namespace n,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((p.pronamespace = n.oid) AND (grantee.oid = p.grantee) AND (u_grantor.oid = p.grantor) AND (p.prtype = &apos;EXECUTE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)));\n                             SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (n.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,\n    (current_database())::information_schema.sql_identifier AS routine_catalog,\n    (n.nspname)::information_schema.sql_identifier AS routine_schema,\n    (p.proname)::information_schema.sql_identifier AS routine_name,\n    (&apos;EXECUTE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, p.proowner, &apos;USAGE&apos;::text) OR p.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_proc.oid,\n            pg_proc.proname,\n            pg_proc.proowner,\n            pg_proc.pronamespace,\n            (aclexplode(COALESCE(pg_proc.proacl, acldefault(&apos;f&apos;::&quot;char&quot;, pg_proc.proowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_proc.proacl, acldefault(&apos;f&apos;::&quot;char&quot;, pg_proc.proowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_proc.proacl, acldefault(&apos;f&apos;::&quot;char&quot;, pg_proc.proowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_proc.proacl, acldefault(&apos;f&apos;::&quot;char&quot;, pg_proc.proowner)))).is_grantable AS is_grantable\n           FROM pg_proc) p(oid, proname, proowner, pronamespace, grantor, grantee, prtype, grantable),\n    pg_namespace n,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((p.pronamespace = n.oid) AND (grantee.oid = p.grantee) AND (u_grantor.oid = p.grantor) AND (p.prtype = &apos;EXECUTE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (t.typname)::information_schema.sql_identifier AS udt_name,\n    (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (np.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,\n    (l.lanname)::information_schema.sql_identifier AS group_name,\n    (&apos;FROM SQL&apos;::character varying)::information_schema.character_data AS transform_type\n   FROM (((((pg_type t\n     JOIN pg_transform x ON ((t.oid = x.trftype)))\n     JOIN pg_language l ON ((x.trflang = l.oid)))\n     JOIN pg_proc p ON (((x.trffromsql)::oid = p.oid)))\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))\n     JOIN pg_namespace np ON ((p.pronamespace = np.oid)))\nUNION\n SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (t.typname)::information_schema.sql_identifier AS udt_name,\n    (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (np.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,\n    (l.lanname)::information_schema.sql_identifier AS group_name,\n    (&apos;TO SQL&apos;::character varying)::information_schema.character_data AS transform_type\n   FROM (((((pg_type t\n     JOIN pg_transform x ON ((t.oid = x.trftype)))\n     JOIN pg_language l ON ((x.trflang = l.oid)))\n     JOIN pg_proc p ON (((x.trftosql)::oid = p.oid)))\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))\n     JOIN pg_namespace np ON ((p.pronamespace = np.oid)))\n  ORDER BY 1, 2, 3, 7, 8;\n                             SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (t.typname)::information_schema.sql_identifier AS udt_name,\n    (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (np.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,\n    (l.lanname)::information_schema.sql_identifier AS group_name,\n    (&apos;FROM SQL&apos;::character varying)::information_schema.character_data AS transform_type\n   FROM (((((pg_type t\n     JOIN pg_transform x ON ((t.oid = x.trftype)))\n     JOIN pg_language l ON ((x.trflang = l.oid)))\n     JOIN pg_proc p ON (((x.trffromsql)::oid = p.oid)))\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))\n     JOIN pg_namespace np ON ((p.pronamespace = np.oid)))\nUNION\n SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (t.typname)::information_schema.sql_identifier AS udt_name,\n    (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (np.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,\n    (l.lanname)::information_schema.sql_identifier AS group_name,\n    (&apos;TO SQL&apos;::character varying)::information_schema.character_data AS transform_type\n   FROM (((((pg_type t\n     JOIN pg_transform x ON ((t.oid = x.trftype)))\n     JOIN pg_language l ON ((x.trflang = l.oid)))\n     JOIN pg_proc p ON (((x.trftosql)::oid = p.oid)))\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))\n     JOIN pg_namespace np ON ((p.pronamespace = np.oid)))\n  ORDER BY 1, 2, 3, 7, 8;\n                        ": "",
    "\n                             SELECT pg_authid.rolname AS groname,\n    pg_authid.oid AS grosysid,\n    ARRAY( SELECT pg_auth_members.member\n           FROM pg_auth_members\n          WHERE (pg_auth_members.roleid = pg_authid.oid)) AS grolist\n   FROM pg_authid\n  WHERE (NOT pg_authid.rolcanlogin);\n                             SELECT pg_authid.rolname AS groname,\n    pg_authid.oid AS grosysid,\n    ARRAY( SELECT pg_auth_members.member\n           FROM pg_auth_members\n          WHERE (pg_auth_members.roleid = pg_authid.oid)) AS grolist\n   FROM pg_authid\n  WHERE (NOT pg_authid.rolcanlogin);\n                        ": "",
    "\n                             SELECT l.slot_name,\n    l.plugin,\n    l.slot_type,\n    l.datoid,\n    d.datname AS database,\n    l.temporary,\n    l.active,\n    l.active_pid,\n    l.xmin,\n    l.catalog_xmin,\n    l.restart_lsn,\n    l.confirmed_flush_lsn\n   FROM (pg_get_replication_slots() l(slot_name, plugin, slot_type, datoid, temporary, active, active_pid, xmin, catalog_xmin, restart_lsn, confirmed_flush_lsn)\n     LEFT JOIN pg_database d ON ((l.datoid = d.oid)));\n                             SELECT l.slot_name,\n    l.plugin,\n    l.slot_type,\n    l.datoid,\n    d.datname AS database,\n    l.temporary,\n    l.active,\n    l.active_pid,\n    l.xmin,\n    l.catalog_xmin,\n    l.restart_lsn,\n    l.confirmed_flush_lsn\n   FROM (pg_get_replication_slots() l(slot_name, plugin, slot_type, datoid, temporary, active, active_pid, xmin, catalog_xmin, restart_lsn, confirmed_flush_lsn)\n     LEFT JOIN pg_database d ON ((l.datoid = d.oid)));\n                        ": "",
    "\n                             SELECT l.locktype,\n    l.database,\n    l.relation,\n    l.page,\n    l.tuple,\n    l.virtualxid,\n    l.transactionid,\n    l.classid,\n    l.objid,\n    l.objsubid,\n    l.virtualtransaction,\n    l.pid,\n    l.mode,\n    l.granted,\n    l.fastpath\n   FROM pg_lock_status() l(locktype, database, relation, page, tuple, virtualxid, transactionid, classid, objid, objsubid, virtualtransaction, pid, mode, granted, fastpath);\n                             SELECT l.locktype,\n    l.database,\n    l.relation,\n    l.page,\n    l.tuple,\n    l.virtualxid,\n    l.transactionid,\n    l.classid,\n    l.objid,\n    l.objsubid,\n    l.virtualtransaction,\n    l.pid,\n    l.mode,\n    l.granted,\n    l.fastpath\n   FROM pg_lock_status() l(locktype, database, relation, page, tuple, virtualxid, transactionid, classid, objid, objsubid, virtualtransaction, pid, mode, granted, fastpath);\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (c.conname)::information_schema.sql_identifier AS constraint_name,\n    (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (np.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name\n   FROM pg_namespace nc,\n    pg_constraint c,\n    pg_depend d,\n    pg_proc p,\n    pg_namespace np\n  WHERE ((nc.oid = c.connamespace) AND (c.contype = &apos;c&apos;::&quot;char&quot;) AND (c.oid = d.objid) AND (d.classid = (&apos;pg_constraint&apos;::regclass)::oid) AND (d.refobjid = p.oid) AND (d.refclassid = (&apos;pg_proc&apos;::regclass)::oid) AND (p.pronamespace = np.oid) AND pg_has_role(p.proowner, &apos;USAGE&apos;::text));\n                             SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (c.conname)::information_schema.sql_identifier AS constraint_name,\n    (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (np.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name\n   FROM pg_namespace nc,\n    pg_constraint c,\n    pg_depend d,\n    pg_proc p,\n    pg_namespace np\n  WHERE ((nc.oid = c.connamespace) AND (c.contype = &apos;c&apos;::&quot;char&quot;) AND (c.oid = d.objid) AND (d.classid = (&apos;pg_constraint&apos;::regclass)::oid) AND (d.refobjid = p.oid) AND (d.refclassid = (&apos;pg_proc&apos;::regclass)::oid) AND (p.pronamespace = np.oid) AND pg_has_role(p.proowner, &apos;USAGE&apos;::text));\n                        ": "",
    "\n                             SELECT u.oid AS umid,\n    s.oid AS srvid,\n    s.srvname,\n    u.umuser,\n        CASE\n            WHEN (u.umuser = (0)::oid) THEN &apos;public&apos;::name\n            ELSE a.rolname\n        END AS usename,\n        CASE\n            WHEN (((u.umuser &lt;&gt; (0)::oid) AND (a.rolname = CURRENT_USER) AND (pg_has_role(s.srvowner, &apos;USAGE&apos;::text) OR has_server_privilege(s.oid, &apos;USAGE&apos;::text))) OR ((u.umuser = (0)::oid) AND pg_has_role(s.srvowner, &apos;USAGE&apos;::text)) OR ( SELECT pg_authid.rolsuper\n               FROM pg_authid\n              WHERE (pg_authid.rolname = CURRENT_USER))) THEN u.umoptions\n            ELSE NULL::text[]\n        END AS umoptions\n   FROM ((pg_user_mapping u\n     JOIN pg_foreign_server s ON ((u.umserver = s.oid)))\n     LEFT JOIN pg_authid a ON ((a.oid = u.umuser)));\n                             SELECT u.oid AS umid,\n    s.oid AS srvid,\n    s.srvname,\n    u.umuser,\n        CASE\n            WHEN (u.umuser = (0)::oid) THEN &apos;public&apos;::name\n            ELSE a.rolname\n        END AS usename,\n        CASE\n            WHEN (((u.umuser &lt;&gt; (0)::oid) AND (a.rolname = CURRENT_USER) AND (pg_has_role(s.srvowner, &apos;USAGE&apos;::text) OR has_server_privilege(s.oid, &apos;USAGE&apos;::text))) OR ((u.umuser = (0)::oid) AND pg_has_role(s.srvowner, &apos;USAGE&apos;::text)) OR ( SELECT pg_authid.rolsuper\n               FROM pg_authid\n              WHERE (pg_authid.rolname = CURRENT_USER))) THEN u.umoptions\n            ELSE NULL::text[]\n        END AS umoptions\n   FROM ((pg_user_mapping u\n     JOIN pg_foreign_server s ON ((u.umserver = s.oid)))\n     LEFT JOIN pg_authid a ON ((a.oid = u.umuser)));\n                        ": "",
    "\n                             SELECT p.name,\n    p.statement,\n    p.prepare_time,\n    p.parameter_types,\n    p.from_sql\n   FROM pg_prepared_statement() p(name, statement, prepare_time, parameter_types, from_sql);\n                             SELECT p.name,\n    p.statement,\n    p.prepare_time,\n    p.parameter_types,\n    p.from_sql\n   FROM pg_prepared_statement() p(name, statement, prepare_time, parameter_types, from_sql);\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS foreign_table_catalog,\n    (n.nspname)::information_schema.sql_identifier AS foreign_table_schema,\n    (c.relname)::information_schema.sql_identifier AS foreign_table_name,\n    t.ftoptions,\n    (current_database())::information_schema.sql_identifier AS foreign_server_catalog,\n    (s.srvname)::information_schema.sql_identifier AS foreign_server_name,\n    (u.rolname)::information_schema.sql_identifier AS authorization_identifier\n   FROM pg_foreign_table t,\n    pg_foreign_server s,\n    pg_foreign_data_wrapper w,\n    pg_authid u,\n    pg_namespace n,\n    pg_class c\n  WHERE ((w.oid = s.srvfdw) AND (u.oid = c.relowner) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)) AND (n.oid = c.relnamespace) AND (c.oid = t.ftrelid) AND (c.relkind = &apos;f&apos;::&quot;char&quot;) AND (s.oid = t.ftserver));\n                             SELECT (current_database())::information_schema.sql_identifier AS foreign_table_catalog,\n    (n.nspname)::information_schema.sql_identifier AS foreign_table_schema,\n    (c.relname)::information_schema.sql_identifier AS foreign_table_name,\n    t.ftoptions,\n    (current_database())::information_schema.sql_identifier AS foreign_server_catalog,\n    (s.srvname)::information_schema.sql_identifier AS foreign_server_name,\n    (u.rolname)::information_schema.sql_identifier AS authorization_identifier\n   FROM pg_foreign_table t,\n    pg_foreign_server s,\n    pg_foreign_data_wrapper w,\n    pg_authid u,\n    pg_namespace n,\n    pg_class c\n  WHERE ((w.oid = s.srvfdw) AND (u.oid = c.relowner) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)) AND (n.oid = c.relnamespace) AND (c.oid = t.ftrelid) AND (c.relkind = &apos;f&apos;::&quot;char&quot;) AND (s.oid = t.ftserver));\n                        ": "",
    "\n                             SELECT su.oid AS subid,\n    su.subname,\n    st.pid,\n    st.relid,\n    st.received_lsn,\n    st.last_msg_send_time,\n    st.last_msg_receipt_time,\n    st.latest_end_lsn,\n    st.latest_end_time\n   FROM (pg_subscription su\n     LEFT JOIN pg_stat_get_subscription(NULL::oid) st(subid, relid, pid, received_lsn, last_msg_send_time, last_msg_receipt_time, latest_end_lsn, latest_end_time) ON ((st.subid = su.oid)));\n                             SELECT su.oid AS subid,\n    su.subname,\n    st.pid,\n    st.relid,\n    st.received_lsn,\n    st.last_msg_send_time,\n    st.last_msg_receipt_time,\n    st.latest_end_lsn,\n    st.latest_end_time\n   FROM (pg_subscription su\n     LEFT JOIN pg_stat_get_subscription(NULL::oid) st(subid, relid, pid, received_lsn, last_msg_send_time, last_msg_receipt_time, latest_end_lsn, latest_end_time) ON ((st.subid = su.oid)));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS trigger_catalog,\n    (n.nspname)::information_schema.sql_identifier AS trigger_schema,\n    (t.tgname)::information_schema.sql_identifier AS trigger_name,\n    (em.text)::information_schema.character_data AS event_manipulation,\n    (current_database())::information_schema.sql_identifier AS event_object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS event_object_schema,\n    (c.relname)::information_schema.sql_identifier AS event_object_table,\n    (rank() OVER (PARTITION BY (n.nspname)::information_schema.sql_identifier, (c.relname)::information_schema.sql_identifier, em.num, ((t.tgtype)::integer &amp; 1), ((t.tgtype)::integer &amp; 66) ORDER BY t.tgname))::information_schema.cardinal_number AS action_order,\n    (\n        CASE\n            WHEN pg_has_role(c.relowner, &apos;USAGE&apos;::text) THEN (regexp_match(pg_get_triggerdef(t.oid), &apos;.{35,} WHEN \\((.+)\\) EXECUTE FUNCTION&apos;::text))[1]\n            ELSE NULL::text\n        END)::information_schema.character_data AS action_condition,\n    (&quot;substring&quot;(pg_get_triggerdef(t.oid), (&quot;position&quot;(&quot;substring&quot;(pg_get_triggerdef(t.oid), 48), &apos;EXECUTE FUNCTION&apos;::text) + 47)))::information_schema.character_data AS action_statement,\n    (\n        CASE ((t.tgtype)::integer &amp; 1)\n            WHEN 1 THEN &apos;ROW&apos;::text\n            ELSE &apos;STATEMENT&apos;::text\n        END)::information_schema.character_data AS action_orientation,\n    (\n        CASE ((t.tgtype)::integer &amp; 66)\n            WHEN 2 THEN &apos;BEFORE&apos;::text\n            WHEN 64 THEN &apos;INSTEAD OF&apos;::text\n            ELSE &apos;AFTER&apos;::text\n        END)::information_schema.character_data AS action_timing,\n    (t.tgoldtable)::information_schema.sql_identifier AS action_reference_old_table,\n    (t.tgnewtable)::information_schema.sql_identifier AS action_reference_new_table,\n    (NULL::name)::information_schema.sql_identifier AS action_reference_old_row,\n    (NULL::name)::information_schema.sql_identifier AS action_reference_new_row,\n    (NULL::timestamp with time zone)::information_schema.time_stamp AS created\n   FROM pg_namespace n,\n    pg_class c,\n    pg_trigger t,\n    ( VALUES (4,&apos;INSERT&apos;::text), (8,&apos;DELETE&apos;::text), (16,&apos;UPDATE&apos;::text)) em(num, text)\n  WHERE ((n.oid = c.relnamespace) AND (c.oid = t.tgrelid) AND (((t.tgtype)::integer &amp; em.num) &lt;&gt; 0) AND (NOT t.tgisinternal) AND (NOT pg_is_other_temp_schema(n.oid)) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(c.oid, &apos;INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(c.oid, &apos;INSERT, UPDATE, REFERENCES&apos;::text)));\n                             SELECT (current_database())::information_schema.sql_identifier AS trigger_catalog,\n    (n.nspname)::information_schema.sql_identifier AS trigger_schema,\n    (t.tgname)::information_schema.sql_identifier AS trigger_name,\n    (em.text)::information_schema.character_data AS event_manipulation,\n    (current_database())::information_schema.sql_identifier AS event_object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS event_object_schema,\n    (c.relname)::information_schema.sql_identifier AS event_object_table,\n    (rank() OVER (PARTITION BY (n.nspname)::information_schema.sql_identifier, (c.relname)::information_schema.sql_identifier, em.num, ((t.tgtype)::integer &amp; 1), ((t.tgtype)::integer &amp; 66) ORDER BY t.tgname))::information_schema.cardinal_number AS action_order,\n    (\n        CASE\n            WHEN pg_has_role(c.relowner, &apos;USAGE&apos;::text) THEN (regexp_match(pg_get_triggerdef(t.oid), &apos;.{35,} WHEN \\((.+)\\) EXECUTE FUNCTION&apos;::text))[1]\n            ELSE NULL::text\n        END)::information_schema.character_data AS action_condition,\n    (&quot;substring&quot;(pg_get_triggerdef(t.oid), (&quot;position&quot;(&quot;substring&quot;(pg_get_triggerdef(t.oid), 48), &apos;EXECUTE FUNCTION&apos;::text) + 47)))::information_schema.character_data AS action_statement,\n    (\n        CASE ((t.tgtype)::integer &amp; 1)\n            WHEN 1 THEN &apos;ROW&apos;::text\n            ELSE &apos;STATEMENT&apos;::text\n        END)::information_schema.character_data AS action_orientation,\n    (\n        CASE ((t.tgtype)::integer &amp; 66)\n            WHEN 2 THEN &apos;BEFORE&apos;::text\n            WHEN 64 THEN &apos;INSTEAD OF&apos;::text\n            ELSE &apos;AFTER&apos;::text\n        END)::information_schema.character_data AS action_timing,\n    (t.tgoldtable)::information_schema.sql_identifier AS action_reference_old_table,\n    (t.tgnewtable)::information_schema.sql_identifier AS action_reference_new_table,\n    (NULL::name)::information_schema.sql_identifier AS action_reference_old_row,\n    (NULL::name)::information_schema.sql_identifier AS action_reference_new_row,\n    (NULL::timestamp with time zone)::information_schema.time_stamp AS created\n   FROM pg_namespace n,\n    pg_class c,\n    pg_trigger t,\n    ( VALUES (4,&apos;INSERT&apos;::text), (8,&apos;DELETE&apos;::text), (16,&apos;UPDATE&apos;::text)) em(num, text)\n  WHERE ((n.oid = c.relnamespace) AND (c.oid = t.tgrelid) AND (((t.tgtype)::integer &amp; em.num) &lt;&gt; 0) AND (NOT t.tgisinternal) AND (NOT pg_is_other_temp_schema(n.oid)) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(c.oid, &apos;INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(c.oid, &apos;INSERT, UPDATE, REFERENCES&apos;::text)));\n                        ": "",
    "\n                             SELECT column_privileges.grantor,\n    column_privileges.grantee,\n    column_privileges.table_catalog,\n    column_privileges.table_schema,\n    column_privileges.table_name,\n    column_privileges.column_name,\n    column_privileges.privilege_type,\n    column_privileges.is_grantable\n   FROM information_schema.column_privileges\n  WHERE (((column_privileges.grantor)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)) OR ((column_privileges.grantee)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)));\n                             SELECT column_privileges.grantor,\n    column_privileges.grantee,\n    column_privileges.table_catalog,\n    column_privileges.table_schema,\n    column_privileges.table_name,\n    column_privileges.column_name,\n    column_privileges.privilege_type,\n    column_privileges.is_grantable\n   FROM information_schema.column_privileges\n  WHERE (((column_privileges.grantor)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)) OR ((column_privileges.grantee)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (c.conname)::information_schema.sql_identifier AS constraint_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nr.nspname)::information_schema.sql_identifier AS table_schema,\n    (r.relname)::information_schema.sql_identifier AS table_name,\n    (\n        CASE c.contype\n            WHEN &apos;c&apos;::&quot;char&quot; THEN &apos;CHECK&apos;::text\n            WHEN &apos;f&apos;::&quot;char&quot; THEN &apos;FOREIGN KEY&apos;::text\n            WHEN &apos;p&apos;::&quot;char&quot; THEN &apos;PRIMARY KEY&apos;::text\n            WHEN &apos;u&apos;::&quot;char&quot; THEN &apos;UNIQUE&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS constraint_type,\n    (\n        CASE\n            WHEN c.condeferrable THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_deferrable,\n    (\n        CASE\n            WHEN c.condeferred THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS initially_deferred,\n    (&apos;YES&apos;::character varying)::information_schema.yes_or_no AS enforced\n   FROM pg_namespace nc,\n    pg_namespace nr,\n    pg_constraint c,\n    pg_class r\n  WHERE ((nc.oid = c.connamespace) AND (nr.oid = r.relnamespace) AND (c.conrelid = r.oid) AND (c.contype &lt;&gt; ALL (ARRAY[&apos;t&apos;::&quot;char&quot;, &apos;x&apos;::&quot;char&quot;])) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (NOT pg_is_other_temp_schema(nr.oid)) AND (pg_has_role(r.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(r.oid, &apos;INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(r.oid, &apos;INSERT, UPDATE, REFERENCES&apos;::text)))\nUNION ALL\n SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (nr.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (((((((nr.oid)::text || &apos;_&apos;::text) || (r.oid)::text) || &apos;_&apos;::text) || (a.attnum)::text) || &apos;_not_null&apos;::text))::information_schema.sql_identifier AS constraint_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nr.nspname)::information_schema.sql_identifier AS table_schema,\n    (r.relname)::information_schema.sql_identifier AS table_name,\n    (&apos;CHECK&apos;::character varying)::information_schema.character_data AS constraint_type,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_deferrable,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS initially_deferred,\n    (&apos;YES&apos;::character varying)::information_schema.yes_or_no AS enforced\n   FROM pg_namespace nr,\n    pg_class r,\n    pg_attribute a\n  WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND a.attnotnull AND (a.attnum &gt; 0) AND (NOT a.attisdropped) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (NOT pg_is_other_temp_schema(nr.oid)) AND (pg_has_role(r.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(r.oid, &apos;INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(r.oid, &apos;INSERT, UPDATE, REFERENCES&apos;::text)));\n                             SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (c.conname)::information_schema.sql_identifier AS constraint_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nr.nspname)::information_schema.sql_identifier AS table_schema,\n    (r.relname)::information_schema.sql_identifier AS table_name,\n    (\n        CASE c.contype\n            WHEN &apos;c&apos;::&quot;char&quot; THEN &apos;CHECK&apos;::text\n            WHEN &apos;f&apos;::&quot;char&quot; THEN &apos;FOREIGN KEY&apos;::text\n            WHEN &apos;p&apos;::&quot;char&quot; THEN &apos;PRIMARY KEY&apos;::text\n            WHEN &apos;u&apos;::&quot;char&quot; THEN &apos;UNIQUE&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS constraint_type,\n    (\n        CASE\n            WHEN c.condeferrable THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_deferrable,\n    (\n        CASE\n            WHEN c.condeferred THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS initially_deferred,\n    (&apos;YES&apos;::character varying)::information_schema.yes_or_no AS enforced\n   FROM pg_namespace nc,\n    pg_namespace nr,\n    pg_constraint c,\n    pg_class r\n  WHERE ((nc.oid = c.connamespace) AND (nr.oid = r.relnamespace) AND (c.conrelid = r.oid) AND (c.contype &lt;&gt; ALL (ARRAY[&apos;t&apos;::&quot;char&quot;, &apos;x&apos;::&quot;char&quot;])) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (NOT pg_is_other_temp_schema(nr.oid)) AND (pg_has_role(r.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(r.oid, &apos;INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(r.oid, &apos;INSERT, UPDATE, REFERENCES&apos;::text)))\nUNION ALL\n SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (nr.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (((((((nr.oid)::text || &apos;_&apos;::text) || (r.oid)::text) || &apos;_&apos;::text) || (a.attnum)::text) || &apos;_not_null&apos;::text))::information_schema.sql_identifier AS constraint_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nr.nspname)::information_schema.sql_identifier AS table_schema,\n    (r.relname)::information_schema.sql_identifier AS table_name,\n    (&apos;CHECK&apos;::character varying)::information_schema.character_data AS constraint_type,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_deferrable,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS initially_deferred,\n    (&apos;YES&apos;::character varying)::information_schema.yes_or_no AS enforced\n   FROM pg_namespace nr,\n    pg_class r,\n    pg_attribute a\n  WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND a.attnotnull AND (a.attnum &gt; 0) AND (NOT a.attisdropped) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (NOT pg_is_other_temp_schema(nr.oid)) AND (pg_has_role(r.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(r.oid, &apos;INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(r.oid, &apos;INSERT, UPDATE, REFERENCES&apos;::text)));\n                        ": "",
    "\n                             SELECT _pg_foreign_tables.foreign_table_catalog,\n    _pg_foreign_tables.foreign_table_schema,\n    _pg_foreign_tables.foreign_table_name,\n    _pg_foreign_tables.foreign_server_catalog,\n    _pg_foreign_tables.foreign_server_name\n   FROM information_schema._pg_foreign_tables;\n                             SELECT _pg_foreign_tables.foreign_table_catalog,\n    _pg_foreign_tables.foreign_table_schema,\n    _pg_foreign_tables.foreign_table_name,\n    _pg_foreign_tables.foreign_server_catalog,\n    _pg_foreign_tables.foreign_server_name\n   FROM information_schema._pg_foreign_tables;\n                        ": "",
    "\n                             SELECT applicable_roles.grantee,\n    applicable_roles.role_name,\n    applicable_roles.is_grantable\n   FROM information_schema.applicable_roles\n  WHERE ((applicable_roles.is_grantable)::text = &apos;YES&apos;::text);\n                             SELECT applicable_roles.grantee,\n    applicable_roles.role_name,\n    applicable_roles.is_grantable\n   FROM information_schema.applicable_roles\n  WHERE ((applicable_roles.is_grantable)::text = &apos;YES&apos;::text);\n                        ": "",
    "\n                             SELECT p.oid AS funcid,\n    n.nspname AS schemaname,\n    p.proname AS funcname,\n    pg_stat_get_xact_function_calls(p.oid) AS calls,\n    pg_stat_get_xact_function_total_time(p.oid) AS total_time,\n    pg_stat_get_xact_function_self_time(p.oid) AS self_time\n   FROM (pg_proc p\n     LEFT JOIN pg_namespace n ON ((n.oid = p.pronamespace)))\n  WHERE ((p.prolang &lt;&gt; (12)::oid) AND (pg_stat_get_xact_function_calls(p.oid) IS NOT NULL));\n                             SELECT p.oid AS funcid,\n    n.nspname AS schemaname,\n    p.proname AS funcname,\n    pg_stat_get_xact_function_calls(p.oid) AS calls,\n    pg_stat_get_xact_function_total_time(p.oid) AS total_time,\n    pg_stat_get_xact_function_self_time(p.oid) AS self_time\n   FROM (pg_proc p\n     LEFT JOIN pg_namespace n ON ((n.oid = p.pronamespace)))\n  WHERE ((p.prolang &lt;&gt; (12)::oid) AND (pg_stat_get_xact_function_calls(p.oid) IS NOT NULL));\n                        ": "",
    "\n                             SELECT d.oid AS datid,\n    d.datname,\n    pg_stat_get_db_conflict_tablespace(d.oid) AS confl_tablespace,\n    pg_stat_get_db_conflict_lock(d.oid) AS confl_lock,\n    pg_stat_get_db_conflict_snapshot(d.oid) AS confl_snapshot,\n    pg_stat_get_db_conflict_bufferpin(d.oid) AS confl_bufferpin,\n    pg_stat_get_db_conflict_startup_deadlock(d.oid) AS confl_deadlock\n   FROM pg_database d;\n                             SELECT d.oid AS datid,\n    d.datname,\n    pg_stat_get_db_conflict_tablespace(d.oid) AS confl_tablespace,\n    pg_stat_get_db_conflict_lock(d.oid) AS confl_lock,\n    pg_stat_get_db_conflict_snapshot(d.oid) AS confl_snapshot,\n    pg_stat_get_db_conflict_bufferpin(d.oid) AS confl_bufferpin,\n    pg_stat_get_db_conflict_startup_deadlock(d.oid) AS confl_deadlock\n   FROM pg_database d;\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (ss.n_nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(ss.proname, ss.p_oid))::information_schema.sql_identifier AS specific_name,\n    ((ss.x).n)::information_schema.cardinal_number AS ordinal_position,\n    (\n        CASE\n            WHEN (ss.proargmodes IS NULL) THEN &apos;IN&apos;::text\n            WHEN (ss.proargmodes[(ss.x).n] = &apos;i&apos;::&quot;char&quot;) THEN &apos;IN&apos;::text\n            WHEN (ss.proargmodes[(ss.x).n] = &apos;o&apos;::&quot;char&quot;) THEN &apos;OUT&apos;::text\n            WHEN (ss.proargmodes[(ss.x).n] = &apos;b&apos;::&quot;char&quot;) THEN &apos;INOUT&apos;::text\n            WHEN (ss.proargmodes[(ss.x).n] = &apos;v&apos;::&quot;char&quot;) THEN &apos;IN&apos;::text\n            WHEN (ss.proargmodes[(ss.x).n] = &apos;t&apos;::&quot;char&quot;) THEN &apos;OUT&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS parameter_mode,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_result,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS as_locator,\n    (NULLIF(ss.proargnames[(ss.x).n], &apos;&apos;::text))::information_schema.sql_identifier AS parameter_name,\n    (\n        CASE\n            WHEN ((t.typelem &lt;&gt; (0)::oid) AND (t.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n            WHEN (nt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(t.oid, NULL::integer)\n            ELSE &apos;USER-DEFINED&apos;::text\n        END)::information_schema.character_data AS data_type,\n    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,\n    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (NULL::name)::information_schema.sql_identifier AS collation_catalog,\n    (NULL::name)::information_schema.sql_identifier AS collation_schema,\n    (NULL::name)::information_schema.sql_identifier AS collation_name,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,\n    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,\n    (NULL::character varying)::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (t.typname)::information_schema.sql_identifier AS udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    ((ss.x).n)::information_schema.sql_identifier AS dtd_identifier,\n    (\n        CASE\n            WHEN pg_has_role(ss.proowner, &apos;USAGE&apos;::text) THEN pg_get_function_arg_default(ss.p_oid, (ss.x).n)\n            ELSE NULL::text\n        END)::information_schema.character_data AS parameter_default\n   FROM pg_type t,\n    pg_namespace nt,\n    ( SELECT n.nspname AS n_nspname,\n            p.proname,\n            p.oid AS p_oid,\n            p.proowner,\n            p.proargnames,\n            p.proargmodes,\n            information_schema._pg_expandarray(COALESCE(p.proallargtypes, (p.proargtypes)::oid[])) AS x\n           FROM pg_namespace n,\n            pg_proc p\n          WHERE ((n.oid = p.pronamespace) AND (pg_has_role(p.proowner, &apos;USAGE&apos;::text) OR has_function_privilege(p.oid, &apos;EXECUTE&apos;::text)))) ss\n  WHERE ((t.oid = (ss.x).x) AND (t.typnamespace = nt.oid));\n                             SELECT (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (ss.n_nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(ss.proname, ss.p_oid))::information_schema.sql_identifier AS specific_name,\n    ((ss.x).n)::information_schema.cardinal_number AS ordinal_position,\n    (\n        CASE\n            WHEN (ss.proargmodes IS NULL) THEN &apos;IN&apos;::text\n            WHEN (ss.proargmodes[(ss.x).n] = &apos;i&apos;::&quot;char&quot;) THEN &apos;IN&apos;::text\n            WHEN (ss.proargmodes[(ss.x).n] = &apos;o&apos;::&quot;char&quot;) THEN &apos;OUT&apos;::text\n            WHEN (ss.proargmodes[(ss.x).n] = &apos;b&apos;::&quot;char&quot;) THEN &apos;INOUT&apos;::text\n            WHEN (ss.proargmodes[(ss.x).n] = &apos;v&apos;::&quot;char&quot;) THEN &apos;IN&apos;::text\n            WHEN (ss.proargmodes[(ss.x).n] = &apos;t&apos;::&quot;char&quot;) THEN &apos;OUT&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS parameter_mode,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_result,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS as_locator,\n    (NULLIF(ss.proargnames[(ss.x).n], &apos;&apos;::text))::information_schema.sql_identifier AS parameter_name,\n    (\n        CASE\n            WHEN ((t.typelem &lt;&gt; (0)::oid) AND (t.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n            WHEN (nt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(t.oid, NULL::integer)\n            ELSE &apos;USER-DEFINED&apos;::text\n        END)::information_schema.character_data AS data_type,\n    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,\n    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (NULL::name)::information_schema.sql_identifier AS collation_catalog,\n    (NULL::name)::information_schema.sql_identifier AS collation_schema,\n    (NULL::name)::information_schema.sql_identifier AS collation_name,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,\n    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,\n    (NULL::character varying)::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (t.typname)::information_schema.sql_identifier AS udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    ((ss.x).n)::information_schema.sql_identifier AS dtd_identifier,\n    (\n        CASE\n            WHEN pg_has_role(ss.proowner, &apos;USAGE&apos;::text) THEN pg_get_function_arg_default(ss.p_oid, (ss.x).n)\n            ELSE NULL::text\n        END)::information_schema.character_data AS parameter_default\n   FROM pg_type t,\n    pg_namespace nt,\n    ( SELECT n.nspname AS n_nspname,\n            p.proname,\n            p.oid AS p_oid,\n            p.proowner,\n            p.proargnames,\n            p.proargmodes,\n            information_schema._pg_expandarray(COALESCE(p.proallargtypes, (p.proargtypes)::oid[])) AS x\n           FROM pg_namespace n,\n            pg_proc p\n          WHERE ((n.oid = p.pronamespace) AND (pg_has_role(p.proowner, &apos;USAGE&apos;::text) OR has_function_privilege(p.oid, &apos;EXECUTE&apos;::text)))) ss\n  WHERE ((t.oid = (ss.x).x) AND (t.typnamespace = nt.oid));\n                        ": "",
    "\n                             SELECT (u.rolname)::information_schema.sql_identifier AS grantor,\n    (&apos;PUBLIC&apos;::name)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS object_schema,\n    (c.collname)::information_schema.sql_identifier AS object_name,\n    (&apos;COLLATION&apos;::character varying)::information_schema.character_data AS object_type,\n    (&apos;USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_grantable\n   FROM pg_authid u,\n    pg_namespace n,\n    pg_collation c\n  WHERE ((u.oid = c.collowner) AND (c.collnamespace = n.oid) AND (c.collencoding = ANY (ARRAY[&apos;-1&apos;::integer, ( SELECT pg_database.encoding\n           FROM pg_database\n          WHERE (pg_database.datname = current_database()))])))\nUNION ALL\n SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS object_schema,\n    (t.typname)::information_schema.sql_identifier AS object_name,\n    (&apos;DOMAIN&apos;::character varying)::information_schema.character_data AS object_type,\n    (&apos;USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, t.typowner, &apos;USAGE&apos;::text) OR t.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_type.oid,\n            pg_type.typname,\n            pg_type.typnamespace,\n            pg_type.typtype,\n            pg_type.typowner,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).is_grantable AS is_grantable\n           FROM pg_type) t(oid, typname, typnamespace, typtype, typowner, grantor, grantee, prtype, grantable),\n    pg_namespace n,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((t.typnamespace = n.oid) AND (t.typtype = &apos;d&apos;::&quot;char&quot;) AND (t.grantee = grantee.oid) AND (t.grantor = u_grantor.oid) AND (t.prtype = &apos;USAGE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)))\nUNION ALL\n SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS object_catalog,\n    (&apos;&apos;::name)::information_schema.sql_identifier AS object_schema,\n    (fdw.fdwname)::information_schema.sql_identifier AS object_name,\n    (&apos;FOREIGN DATA WRAPPER&apos;::character varying)::information_schema.character_data AS object_type,\n    (&apos;USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, fdw.fdwowner, &apos;USAGE&apos;::text) OR fdw.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_foreign_data_wrapper.fdwname,\n            pg_foreign_data_wrapper.fdwowner,\n            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault(&apos;F&apos;::&quot;char&quot;, pg_foreign_data_wrapper.fdwowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault(&apos;F&apos;::&quot;char&quot;, pg_foreign_data_wrapper.fdwowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault(&apos;F&apos;::&quot;char&quot;, pg_foreign_data_wrapper.fdwowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault(&apos;F&apos;::&quot;char&quot;, pg_foreign_data_wrapper.fdwowner)))).is_grantable AS is_grantable\n           FROM pg_foreign_data_wrapper) fdw(fdwname, fdwowner, grantor, grantee, prtype, grantable),\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((u_grantor.oid = fdw.grantor) AND (grantee.oid = fdw.grantee) AND (fdw.prtype = &apos;USAGE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)))\nUNION ALL\n SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS object_catalog,\n    (&apos;&apos;::name)::information_schema.sql_identifier AS object_schema,\n    (srv.srvname)::information_schema.sql_identifier AS object_name,\n    (&apos;FOREIGN SERVER&apos;::character varying)::information_schema.character_data AS object_type,\n    (&apos;USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, srv.srvowner, &apos;USAGE&apos;::text) OR srv.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_foreign_server.srvname,\n            pg_foreign_server.srvowner,\n            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault(&apos;S&apos;::&quot;char&quot;, pg_foreign_server.srvowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault(&apos;S&apos;::&quot;char&quot;, pg_foreign_server.srvowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault(&apos;S&apos;::&quot;char&quot;, pg_foreign_server.srvowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault(&apos;S&apos;::&quot;char&quot;, pg_foreign_server.srvowner)))).is_grantable AS is_grantable\n           FROM pg_foreign_server) srv(srvname, srvowner, grantor, grantee, prtype, grantable),\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((u_grantor.oid = srv.grantor) AND (grantee.oid = srv.grantee) AND (srv.prtype = &apos;USAGE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)))\nUNION ALL\n SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS object_schema,\n    (c.relname)::information_schema.sql_identifier AS object_name,\n    (&apos;SEQUENCE&apos;::character varying)::information_schema.character_data AS object_type,\n    (&apos;USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, c.relowner, &apos;USAGE&apos;::text) OR c.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_class.oid,\n            pg_class.relname,\n            pg_class.relnamespace,\n            pg_class.relkind,\n            pg_class.relowner,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).is_grantable AS is_grantable\n           FROM pg_class) c(oid, relname, relnamespace, relkind, relowner, grantor, grantee, prtype, grantable),\n    pg_namespace n,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((c.relnamespace = n.oid) AND (c.relkind = &apos;S&apos;::&quot;char&quot;) AND (c.grantee = grantee.oid) AND (c.grantor = u_grantor.oid) AND (c.prtype = &apos;USAGE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)));\n                             SELECT (u.rolname)::information_schema.sql_identifier AS grantor,\n    (&apos;PUBLIC&apos;::name)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS object_schema,\n    (c.collname)::information_schema.sql_identifier AS object_name,\n    (&apos;COLLATION&apos;::character varying)::information_schema.character_data AS object_type,\n    (&apos;USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (&apos;NO&apos;::character varying)::information_schema.yes_or_no AS is_grantable\n   FROM pg_authid u,\n    pg_namespace n,\n    pg_collation c\n  WHERE ((u.oid = c.collowner) AND (c.collnamespace = n.oid) AND (c.collencoding = ANY (ARRAY[&apos;-1&apos;::integer, ( SELECT pg_database.encoding\n           FROM pg_database\n          WHERE (pg_database.datname = current_database()))])))\nUNION ALL\n SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS object_schema,\n    (t.typname)::information_schema.sql_identifier AS object_name,\n    (&apos;DOMAIN&apos;::character varying)::information_schema.character_data AS object_type,\n    (&apos;USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, t.typowner, &apos;USAGE&apos;::text) OR t.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_type.oid,\n            pg_type.typname,\n            pg_type.typnamespace,\n            pg_type.typtype,\n            pg_type.typowner,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_type.typacl, acldefault(&apos;T&apos;::&quot;char&quot;, pg_type.typowner)))).is_grantable AS is_grantable\n           FROM pg_type) t(oid, typname, typnamespace, typtype, typowner, grantor, grantee, prtype, grantable),\n    pg_namespace n,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((t.typnamespace = n.oid) AND (t.typtype = &apos;d&apos;::&quot;char&quot;) AND (t.grantee = grantee.oid) AND (t.grantor = u_grantor.oid) AND (t.prtype = &apos;USAGE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)))\nUNION ALL\n SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS object_catalog,\n    (&apos;&apos;::name)::information_schema.sql_identifier AS object_schema,\n    (fdw.fdwname)::information_schema.sql_identifier AS object_name,\n    (&apos;FOREIGN DATA WRAPPER&apos;::character varying)::information_schema.character_data AS object_type,\n    (&apos;USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, fdw.fdwowner, &apos;USAGE&apos;::text) OR fdw.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_foreign_data_wrapper.fdwname,\n            pg_foreign_data_wrapper.fdwowner,\n            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault(&apos;F&apos;::&quot;char&quot;, pg_foreign_data_wrapper.fdwowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault(&apos;F&apos;::&quot;char&quot;, pg_foreign_data_wrapper.fdwowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault(&apos;F&apos;::&quot;char&quot;, pg_foreign_data_wrapper.fdwowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault(&apos;F&apos;::&quot;char&quot;, pg_foreign_data_wrapper.fdwowner)))).is_grantable AS is_grantable\n           FROM pg_foreign_data_wrapper) fdw(fdwname, fdwowner, grantor, grantee, prtype, grantable),\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((u_grantor.oid = fdw.grantor) AND (grantee.oid = fdw.grantee) AND (fdw.prtype = &apos;USAGE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)))\nUNION ALL\n SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS object_catalog,\n    (&apos;&apos;::name)::information_schema.sql_identifier AS object_schema,\n    (srv.srvname)::information_schema.sql_identifier AS object_name,\n    (&apos;FOREIGN SERVER&apos;::character varying)::information_schema.character_data AS object_type,\n    (&apos;USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, srv.srvowner, &apos;USAGE&apos;::text) OR srv.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_foreign_server.srvname,\n            pg_foreign_server.srvowner,\n            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault(&apos;S&apos;::&quot;char&quot;, pg_foreign_server.srvowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault(&apos;S&apos;::&quot;char&quot;, pg_foreign_server.srvowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault(&apos;S&apos;::&quot;char&quot;, pg_foreign_server.srvowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault(&apos;S&apos;::&quot;char&quot;, pg_foreign_server.srvowner)))).is_grantable AS is_grantable\n           FROM pg_foreign_server) srv(srvname, srvowner, grantor, grantee, prtype, grantable),\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((u_grantor.oid = srv.grantor) AND (grantee.oid = srv.grantee) AND (srv.prtype = &apos;USAGE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)))\nUNION ALL\n SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS object_schema,\n    (c.relname)::information_schema.sql_identifier AS object_name,\n    (&apos;SEQUENCE&apos;::character varying)::information_schema.character_data AS object_type,\n    (&apos;USAGE&apos;::character varying)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(grantee.oid, c.relowner, &apos;USAGE&apos;::text) OR c.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pg_class.oid,\n            pg_class.relname,\n            pg_class.relnamespace,\n            pg_class.relkind,\n            pg_class.relowner,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantor AS grantor,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantee AS grantee,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).privilege_type AS privilege_type,\n            (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).is_grantable AS is_grantable\n           FROM pg_class) c(oid, relname, relnamespace, relkind, relowner, grantor, grantee, prtype, grantable),\n    pg_namespace n,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((c.relnamespace = n.oid) AND (c.relkind = &apos;S&apos;::&quot;char&quot;) AND (c.grantee = grantee.oid) AND (c.grantor = u_grantor.oid) AND (c.prtype = &apos;USAGE&apos;::text) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (ncon.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (con.conname)::information_schema.sql_identifier AS constraint_name,\n    (\n        CASE\n            WHEN (npkc.nspname IS NULL) THEN NULL::name\n            ELSE current_database()\n        END)::information_schema.sql_identifier AS unique_constraint_catalog,\n    (npkc.nspname)::information_schema.sql_identifier AS unique_constraint_schema,\n    (pkc.conname)::information_schema.sql_identifier AS unique_constraint_name,\n    (\n        CASE con.confmatchtype\n            WHEN &apos;f&apos;::&quot;char&quot; THEN &apos;FULL&apos;::text\n            WHEN &apos;p&apos;::&quot;char&quot; THEN &apos;PARTIAL&apos;::text\n            WHEN &apos;s&apos;::&quot;char&quot; THEN &apos;NONE&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS match_option,\n    (\n        CASE con.confupdtype\n            WHEN &apos;c&apos;::&quot;char&quot; THEN &apos;CASCADE&apos;::text\n            WHEN &apos;n&apos;::&quot;char&quot; THEN &apos;SET NULL&apos;::text\n            WHEN &apos;d&apos;::&quot;char&quot; THEN &apos;SET DEFAULT&apos;::text\n            WHEN &apos;r&apos;::&quot;char&quot; THEN &apos;RESTRICT&apos;::text\n            WHEN &apos;a&apos;::&quot;char&quot; THEN &apos;NO ACTION&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS update_rule,\n    (\n        CASE con.confdeltype\n            WHEN &apos;c&apos;::&quot;char&quot; THEN &apos;CASCADE&apos;::text\n            WHEN &apos;n&apos;::&quot;char&quot; THEN &apos;SET NULL&apos;::text\n            WHEN &apos;d&apos;::&quot;char&quot; THEN &apos;SET DEFAULT&apos;::text\n            WHEN &apos;r&apos;::&quot;char&quot; THEN &apos;RESTRICT&apos;::text\n            WHEN &apos;a&apos;::&quot;char&quot; THEN &apos;NO ACTION&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS delete_rule\n   FROM ((((((pg_namespace ncon\n     JOIN pg_constraint con ON ((ncon.oid = con.connamespace)))\n     JOIN pg_class c ON (((con.conrelid = c.oid) AND (con.contype = &apos;f&apos;::&quot;char&quot;))))\n     LEFT JOIN pg_depend d1 ON (((d1.objid = con.oid) AND (d1.classid = (&apos;pg_constraint&apos;::regclass)::oid) AND (d1.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (d1.refobjsubid = 0))))\n     LEFT JOIN pg_depend d2 ON (((d2.refclassid = (&apos;pg_constraint&apos;::regclass)::oid) AND (d2.classid = (&apos;pg_class&apos;::regclass)::oid) AND (d2.objid = d1.refobjid) AND (d2.objsubid = 0) AND (d2.deptype = &apos;i&apos;::&quot;char&quot;))))\n     LEFT JOIN pg_constraint pkc ON (((pkc.oid = d2.refobjid) AND (pkc.contype = ANY (ARRAY[&apos;p&apos;::&quot;char&quot;, &apos;u&apos;::&quot;char&quot;])) AND (pkc.conrelid = con.confrelid))))\n     LEFT JOIN pg_namespace npkc ON ((pkc.connamespace = npkc.oid)))\n  WHERE (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(c.oid, &apos;INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(c.oid, &apos;INSERT, UPDATE, REFERENCES&apos;::text));\n                             SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (ncon.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (con.conname)::information_schema.sql_identifier AS constraint_name,\n    (\n        CASE\n            WHEN (npkc.nspname IS NULL) THEN NULL::name\n            ELSE current_database()\n        END)::information_schema.sql_identifier AS unique_constraint_catalog,\n    (npkc.nspname)::information_schema.sql_identifier AS unique_constraint_schema,\n    (pkc.conname)::information_schema.sql_identifier AS unique_constraint_name,\n    (\n        CASE con.confmatchtype\n            WHEN &apos;f&apos;::&quot;char&quot; THEN &apos;FULL&apos;::text\n            WHEN &apos;p&apos;::&quot;char&quot; THEN &apos;PARTIAL&apos;::text\n            WHEN &apos;s&apos;::&quot;char&quot; THEN &apos;NONE&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS match_option,\n    (\n        CASE con.confupdtype\n            WHEN &apos;c&apos;::&quot;char&quot; THEN &apos;CASCADE&apos;::text\n            WHEN &apos;n&apos;::&quot;char&quot; THEN &apos;SET NULL&apos;::text\n            WHEN &apos;d&apos;::&quot;char&quot; THEN &apos;SET DEFAULT&apos;::text\n            WHEN &apos;r&apos;::&quot;char&quot; THEN &apos;RESTRICT&apos;::text\n            WHEN &apos;a&apos;::&quot;char&quot; THEN &apos;NO ACTION&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS update_rule,\n    (\n        CASE con.confdeltype\n            WHEN &apos;c&apos;::&quot;char&quot; THEN &apos;CASCADE&apos;::text\n            WHEN &apos;n&apos;::&quot;char&quot; THEN &apos;SET NULL&apos;::text\n            WHEN &apos;d&apos;::&quot;char&quot; THEN &apos;SET DEFAULT&apos;::text\n            WHEN &apos;r&apos;::&quot;char&quot; THEN &apos;RESTRICT&apos;::text\n            WHEN &apos;a&apos;::&quot;char&quot; THEN &apos;NO ACTION&apos;::text\n            ELSE NULL::text\n        END)::information_schema.character_data AS delete_rule\n   FROM ((((((pg_namespace ncon\n     JOIN pg_constraint con ON ((ncon.oid = con.connamespace)))\n     JOIN pg_class c ON (((con.conrelid = c.oid) AND (con.contype = &apos;f&apos;::&quot;char&quot;))))\n     LEFT JOIN pg_depend d1 ON (((d1.objid = con.oid) AND (d1.classid = (&apos;pg_constraint&apos;::regclass)::oid) AND (d1.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (d1.refobjsubid = 0))))\n     LEFT JOIN pg_depend d2 ON (((d2.refclassid = (&apos;pg_constraint&apos;::regclass)::oid) AND (d2.classid = (&apos;pg_class&apos;::regclass)::oid) AND (d2.objid = d1.refobjid) AND (d2.objsubid = 0) AND (d2.deptype = &apos;i&apos;::&quot;char&quot;))))\n     LEFT JOIN pg_constraint pkc ON (((pkc.oid = d2.refobjid) AND (pkc.contype = ANY (ARRAY[&apos;p&apos;::&quot;char&quot;, &apos;u&apos;::&quot;char&quot;])) AND (pkc.conrelid = con.confrelid))))\n     LEFT JOIN pg_namespace npkc ON ((pkc.connamespace = npkc.oid)))\n  WHERE (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(c.oid, &apos;INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(c.oid, &apos;INSERT, UPDATE, REFERENCES&apos;::text));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS trigger_catalog,\n    (n.nspname)::information_schema.sql_identifier AS trigger_schema,\n    (t.tgname)::information_schema.sql_identifier AS trigger_name,\n    (current_database())::information_schema.sql_identifier AS event_object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS event_object_schema,\n    (c.relname)::information_schema.sql_identifier AS event_object_table,\n    (a.attname)::information_schema.sql_identifier AS event_object_column\n   FROM pg_namespace n,\n    pg_class c,\n    pg_trigger t,\n    ( SELECT ta0.tgoid,\n            (ta0.tgat).x AS tgattnum,\n            (ta0.tgat).n AS tgattpos\n           FROM ( SELECT pg_trigger.oid AS tgoid,\n                    information_schema._pg_expandarray(pg_trigger.tgattr) AS tgat\n                   FROM pg_trigger) ta0) ta,\n    pg_attribute a\n  WHERE ((n.oid = c.relnamespace) AND (c.oid = t.tgrelid) AND (t.oid = ta.tgoid) AND ((a.attrelid = t.tgrelid) AND (a.attnum = ta.tgattnum)) AND (NOT t.tgisinternal) AND (NOT pg_is_other_temp_schema(n.oid)) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_column_privilege(c.oid, a.attnum, &apos;INSERT, UPDATE, REFERENCES&apos;::text)));\n                             SELECT (current_database())::information_schema.sql_identifier AS trigger_catalog,\n    (n.nspname)::information_schema.sql_identifier AS trigger_schema,\n    (t.tgname)::information_schema.sql_identifier AS trigger_name,\n    (current_database())::information_schema.sql_identifier AS event_object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS event_object_schema,\n    (c.relname)::information_schema.sql_identifier AS event_object_table,\n    (a.attname)::information_schema.sql_identifier AS event_object_column\n   FROM pg_namespace n,\n    pg_class c,\n    pg_trigger t,\n    ( SELECT ta0.tgoid,\n            (ta0.tgat).x AS tgattnum,\n            (ta0.tgat).n AS tgattpos\n           FROM ( SELECT pg_trigger.oid AS tgoid,\n                    information_schema._pg_expandarray(pg_trigger.tgattr) AS tgat\n                   FROM pg_trigger) ta0) ta,\n    pg_attribute a\n  WHERE ((n.oid = c.relnamespace) AND (c.oid = t.tgrelid) AND (t.oid = ta.tgoid) AND ((a.attrelid = t.tgrelid) AND (a.attnum = ta.tgattnum)) AND (NOT t.tgisinternal) AND (NOT pg_is_other_temp_schema(n.oid)) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_column_privilege(c.oid, a.attnum, &apos;INSERT, UPDATE, REFERENCES&apos;::text)));\n                        ": "",
    "\n                             SELECT a.name,\n    a.setting,\n    a.unit,\n    a.category,\n    a.short_desc,\n    a.extra_desc,\n    a.context,\n    a.vartype,\n    a.source,\n    a.min_val,\n    a.max_val,\n    a.enumvals,\n    a.boot_val,\n    a.reset_val,\n    a.sourcefile,\n    a.sourceline,\n    a.pending_restart\n   FROM pg_show_all_settings() a(name, setting, unit, category, short_desc, extra_desc, context, vartype, source, min_val, max_val, enumvals, boot_val, reset_val, sourcefile, sourceline, pending_restart);\n                             SELECT a.name,\n    a.setting,\n    a.unit,\n    a.category,\n    a.short_desc,\n    a.extra_desc,\n    a.context,\n    a.vartype,\n    a.source,\n    a.min_val,\n    a.max_val,\n    a.enumvals,\n    a.boot_val,\n    a.reset_val,\n    a.sourcefile,\n    a.sourceline,\n    a.pending_restart\n   FROM pg_show_all_settings() a(name, setting, unit, category, short_desc, extra_desc, context, vartype, source, min_val, max_val, enumvals, boot_val, reset_val, sourcefile, sourceline, pending_restart);\n                        ": "",
    "\n                             SELECT p.pubname,\n    n.nspname AS schemaname,\n    c.relname AS tablename\n   FROM pg_publication p,\n    LATERAL pg_get_publication_tables((p.pubname)::text) gpt(relid),\n    (pg_class c\n     JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.oid = gpt.relid);\n                             SELECT p.pubname,\n    n.nspname AS schemaname,\n    c.relname AS tablename\n   FROM pg_publication p,\n    LATERAL pg_get_publication_tables((p.pubname)::text) gpt(relid),\n    (pg_class c\n     JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.oid = gpt.relid);\n                        ": "",
    "\n                             SELECT pg_statio_all_tables.relid,\n    pg_statio_all_tables.schemaname,\n    pg_statio_all_tables.relname,\n    pg_statio_all_tables.heap_blks_read,\n    pg_statio_all_tables.heap_blks_hit,\n    pg_statio_all_tables.idx_blks_read,\n    pg_statio_all_tables.idx_blks_hit,\n    pg_statio_all_tables.toast_blks_read,\n    pg_statio_all_tables.toast_blks_hit,\n    pg_statio_all_tables.tidx_blks_read,\n    pg_statio_all_tables.tidx_blks_hit\n   FROM pg_statio_all_tables\n  WHERE ((pg_statio_all_tables.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_statio_all_tables.schemaname ~ &apos;^pg_toast&apos;::text));\n                             SELECT pg_statio_all_tables.relid,\n    pg_statio_all_tables.schemaname,\n    pg_statio_all_tables.relname,\n    pg_statio_all_tables.heap_blks_read,\n    pg_statio_all_tables.heap_blks_hit,\n    pg_statio_all_tables.idx_blks_read,\n    pg_statio_all_tables.idx_blks_hit,\n    pg_statio_all_tables.toast_blks_read,\n    pg_statio_all_tables.toast_blks_hit,\n    pg_statio_all_tables.tidx_blks_read,\n    pg_statio_all_tables.tidx_blks_hit\n   FROM pg_statio_all_tables\n  WHERE ((pg_statio_all_tables.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_statio_all_tables.schemaname ~ &apos;^pg_toast&apos;::text));\n                        ": "",
    "\n                             SELECT n.nspname AS schemaname,\n    c.relname AS sequencename,\n    pg_get_userbyid(c.relowner) AS sequenceowner,\n    (s.seqtypid)::regtype AS data_type,\n    s.seqstart AS start_value,\n    s.seqmin AS min_value,\n    s.seqmax AS max_value,\n    s.seqincrement AS increment_by,\n    s.seqcycle AS cycle,\n    s.seqcache AS cache_size,\n        CASE\n            WHEN has_sequence_privilege(c.oid, &apos;SELECT,USAGE&apos;::text) THEN pg_sequence_last_value((c.oid)::regclass)\n            ELSE NULL::bigint\n        END AS last_value\n   FROM ((pg_sequence s\n     JOIN pg_class c ON ((c.oid = s.seqrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE ((NOT pg_is_other_temp_schema(n.oid)) AND (c.relkind = &apos;S&apos;::&quot;char&quot;));\n                             SELECT n.nspname AS schemaname,\n    c.relname AS sequencename,\n    pg_get_userbyid(c.relowner) AS sequenceowner,\n    (s.seqtypid)::regtype AS data_type,\n    s.seqstart AS start_value,\n    s.seqmin AS min_value,\n    s.seqmax AS max_value,\n    s.seqincrement AS increment_by,\n    s.seqcycle AS cycle,\n    s.seqcache AS cache_size,\n        CASE\n            WHEN has_sequence_privilege(c.oid, &apos;SELECT,USAGE&apos;::text) THEN pg_sequence_last_value((c.oid)::regclass)\n            ELSE NULL::bigint\n        END AS last_value\n   FROM ((pg_sequence s\n     JOIN pg_class c ON ((c.oid = s.seqrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE ((NOT pg_is_other_temp_schema(n.oid)) AND (c.relkind = &apos;S&apos;::&quot;char&quot;));\n                        ": "",
    "\n                             SELECT c.name,\n    c.statement,\n    c.is_holdable,\n    c.is_binary,\n    c.is_scrollable,\n    c.creation_time\n   FROM pg_cursor() c(name, statement, is_holdable, is_binary, is_scrollable, creation_time);\n                             SELECT c.name,\n    c.statement,\n    c.is_holdable,\n    c.is_binary,\n    c.is_scrollable,\n    c.creation_time\n   FROM pg_cursor() c(name, statement, is_holdable, is_binary, is_scrollable, creation_time);\n                        ": "",
    "\n                             SELECT um.authorization_identifier,\n    um.foreign_server_catalog,\n    um.foreign_server_name,\n    (opts.option_name)::information_schema.sql_identifier AS option_name,\n    (\n        CASE\n            WHEN (((um.umuser &lt;&gt; (0)::oid) AND ((um.authorization_identifier)::name = CURRENT_USER)) OR ((um.umuser = (0)::oid) AND pg_has_role((um.srvowner)::name, &apos;USAGE&apos;::text)) OR ( SELECT pg_authid.rolsuper\n               FROM pg_authid\n              WHERE (pg_authid.rolname = CURRENT_USER))) THEN opts.option_value\n            ELSE NULL::text\n        END)::information_schema.character_data AS option_value\n   FROM information_schema._pg_user_mappings um,\n    LATERAL pg_options_to_table(um.umoptions) opts(option_name, option_value);\n                             SELECT um.authorization_identifier,\n    um.foreign_server_catalog,\n    um.foreign_server_name,\n    (opts.option_name)::information_schema.sql_identifier AS option_name,\n    (\n        CASE\n            WHEN (((um.umuser &lt;&gt; (0)::oid) AND ((um.authorization_identifier)::name = CURRENT_USER)) OR ((um.umuser = (0)::oid) AND pg_has_role((um.srvowner)::name, &apos;USAGE&apos;::text)) OR ( SELECT pg_authid.rolsuper\n               FROM pg_authid\n              WHERE (pg_authid.rolname = CURRENT_USER))) THEN opts.option_value\n            ELSE NULL::text\n        END)::information_schema.character_data AS option_value\n   FROM information_schema._pg_user_mappings um,\n    LATERAL pg_options_to_table(um.umoptions) opts(option_name, option_value);\n                        ": "",
    "\n                             SELECT s.pid,\n    s.ssl,\n    s.sslversion AS version,\n    s.sslcipher AS cipher,\n    s.sslbits AS bits,\n    s.sslcompression AS compression,\n    s.ssl_client_dn AS client_dn,\n    s.ssl_client_serial AS client_serial,\n    s.ssl_issuer_dn AS issuer_dn\n   FROM pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc);\n                             SELECT s.pid,\n    s.ssl,\n    s.sslversion AS version,\n    s.sslcipher AS cipher,\n    s.sslbits AS bits,\n    s.sslcompression AS compression,\n    s.ssl_client_dn AS client_dn,\n    s.ssl_client_serial AS client_serial,\n    s.ssl_issuer_dn AS issuer_dn\n   FROM pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc);\n                        ": "",
    "\n                             SELECT DISTINCT (current_database())::information_schema.sql_identifier AS view_catalog,\n    (nv.nspname)::information_schema.sql_identifier AS view_schema,\n    (v.relname)::information_schema.sql_identifier AS view_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS table_schema,\n    (t.relname)::information_schema.sql_identifier AS table_name\n   FROM pg_namespace nv,\n    pg_class v,\n    pg_depend dv,\n    pg_depend dt,\n    pg_class t,\n    pg_namespace nt\n  WHERE ((nv.oid = v.relnamespace) AND (v.relkind = &apos;v&apos;::&quot;char&quot;) AND (v.oid = dv.refobjid) AND (dv.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dv.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dv.deptype = &apos;i&apos;::&quot;char&quot;) AND (dv.objid = dt.objid) AND (dv.refobjid &lt;&gt; dt.refobjid) AND (dt.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dt.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dt.refobjid = t.oid) AND (t.relnamespace = nt.oid) AND (t.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND pg_has_role(t.relowner, &apos;USAGE&apos;::text));\n                             SELECT DISTINCT (current_database())::information_schema.sql_identifier AS view_catalog,\n    (nv.nspname)::information_schema.sql_identifier AS view_schema,\n    (v.relname)::information_schema.sql_identifier AS view_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS table_schema,\n    (t.relname)::information_schema.sql_identifier AS table_name\n   FROM pg_namespace nv,\n    pg_class v,\n    pg_depend dv,\n    pg_depend dt,\n    pg_class t,\n    pg_namespace nt\n  WHERE ((nv.oid = v.relnamespace) AND (v.relkind = &apos;v&apos;::&quot;char&quot;) AND (v.oid = dv.refobjid) AND (dv.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dv.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dv.deptype = &apos;i&apos;::&quot;char&quot;) AND (dv.objid = dt.objid) AND (dv.refobjid &lt;&gt; dt.refobjid) AND (dt.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dt.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dt.refobjid = t.oid) AND (t.relnamespace = nt.oid) AND (t.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND pg_has_role(t.relowner, &apos;USAGE&apos;::text));\n                        ": "",
    "\n                             SELECT pg_stat_all_indexes.relid,\n    pg_stat_all_indexes.indexrelid,\n    pg_stat_all_indexes.schemaname,\n    pg_stat_all_indexes.relname,\n    pg_stat_all_indexes.indexrelname,\n    pg_stat_all_indexes.idx_scan,\n    pg_stat_all_indexes.idx_tup_read,\n    pg_stat_all_indexes.idx_tup_fetch\n   FROM pg_stat_all_indexes\n  WHERE ((pg_stat_all_indexes.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_stat_all_indexes.schemaname !~ &apos;^pg_toast&apos;::text));\n                             SELECT pg_stat_all_indexes.relid,\n    pg_stat_all_indexes.indexrelid,\n    pg_stat_all_indexes.schemaname,\n    pg_stat_all_indexes.relname,\n    pg_stat_all_indexes.indexrelname,\n    pg_stat_all_indexes.idx_scan,\n    pg_stat_all_indexes.idx_tup_read,\n    pg_stat_all_indexes.idx_tup_fetch\n   FROM pg_stat_all_indexes\n  WHERE ((pg_stat_all_indexes.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_stat_all_indexes.schemaname !~ &apos;^pg_toast&apos;::text));\n                        ": "",
    "\n                             SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n        CASE\n            WHEN (rel.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) THEN &apos;table&apos;::text\n            WHEN (rel.relkind = &apos;v&apos;::&quot;char&quot;) THEN &apos;view&apos;::text\n            WHEN (rel.relkind = &apos;m&apos;::&quot;char&quot;) THEN &apos;materialized view&apos;::text\n            WHEN (rel.relkind = &apos;S&apos;::&quot;char&quot;) THEN &apos;sequence&apos;::text\n            WHEN (rel.relkind = &apos;f&apos;::&quot;char&quot;) THEN &apos;foreign table&apos;::text\n            ELSE NULL::text\n        END AS objtype,\n    rel.relnamespace AS objnamespace,\n        CASE\n            WHEN pg_table_is_visible(rel.oid) THEN quote_ident((rel.relname)::text)\n            ELSE ((quote_ident((nsp.nspname)::text) || &apos;.&apos;::text) || quote_ident((rel.relname)::text))\n        END AS objname,\n    l.provider,\n    l.label\n   FROM ((pg_seclabel l\n     JOIN pg_class rel ON (((l.classoid = rel.tableoid) AND (l.objoid = rel.oid))))\n     JOIN pg_namespace nsp ON ((rel.relnamespace = nsp.oid)))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;column&apos;::text AS objtype,\n    rel.relnamespace AS objnamespace,\n    ((\n        CASE\n            WHEN pg_table_is_visible(rel.oid) THEN quote_ident((rel.relname)::text)\n            ELSE ((quote_ident((nsp.nspname)::text) || &apos;.&apos;::text) || quote_ident((rel.relname)::text))\n        END || &apos;.&apos;::text) || (att.attname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (((pg_seclabel l\n     JOIN pg_class rel ON (((l.classoid = rel.tableoid) AND (l.objoid = rel.oid))))\n     JOIN pg_attribute att ON (((rel.oid = att.attrelid) AND (l.objsubid = att.attnum))))\n     JOIN pg_namespace nsp ON ((rel.relnamespace = nsp.oid)))\n  WHERE (l.objsubid &lt;&gt; 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n        CASE pro.prokind\n            WHEN &apos;a&apos;::&quot;char&quot; THEN &apos;aggregate&apos;::text\n            WHEN &apos;f&apos;::&quot;char&quot; THEN &apos;function&apos;::text\n            WHEN &apos;p&apos;::&quot;char&quot; THEN &apos;procedure&apos;::text\n            WHEN &apos;w&apos;::&quot;char&quot; THEN &apos;window&apos;::text\n            ELSE NULL::text\n        END AS objtype,\n    pro.pronamespace AS objnamespace,\n    (((\n        CASE\n            WHEN pg_function_is_visible(pro.oid) THEN quote_ident((pro.proname)::text)\n            ELSE ((quote_ident((nsp.nspname)::text) || &apos;.&apos;::text) || quote_ident((pro.proname)::text))\n        END || &apos;(&apos;::text) || pg_get_function_arguments(pro.oid)) || &apos;)&apos;::text) AS objname,\n    l.provider,\n    l.label\n   FROM ((pg_seclabel l\n     JOIN pg_proc pro ON (((l.classoid = pro.tableoid) AND (l.objoid = pro.oid))))\n     JOIN pg_namespace nsp ON ((pro.pronamespace = nsp.oid)))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n        CASE\n            WHEN (typ.typtype = &apos;d&apos;::&quot;char&quot;) THEN &apos;domain&apos;::text\n            ELSE &apos;type&apos;::text\n        END AS objtype,\n    typ.typnamespace AS objnamespace,\n        CASE\n            WHEN pg_type_is_visible(typ.oid) THEN quote_ident((typ.typname)::text)\n            ELSE ((quote_ident((nsp.nspname)::text) || &apos;.&apos;::text) || quote_ident((typ.typname)::text))\n        END AS objname,\n    l.provider,\n    l.label\n   FROM ((pg_seclabel l\n     JOIN pg_type typ ON (((l.classoid = typ.tableoid) AND (l.objoid = typ.oid))))\n     JOIN pg_namespace nsp ON ((typ.typnamespace = nsp.oid)))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;large object&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    (l.objoid)::text AS objname,\n    l.provider,\n    l.label\n   FROM (pg_seclabel l\n     JOIN pg_largeobject_metadata lom ON ((l.objoid = lom.oid)))\n  WHERE ((l.classoid = (&apos;pg_largeobject&apos;::regclass)::oid) AND (l.objsubid = 0))\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;language&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((lan.lanname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_seclabel l\n     JOIN pg_language lan ON (((l.classoid = lan.tableoid) AND (l.objoid = lan.oid))))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;schema&apos;::text AS objtype,\n    nsp.oid AS objnamespace,\n    quote_ident((nsp.nspname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_seclabel l\n     JOIN pg_namespace nsp ON (((l.classoid = nsp.tableoid) AND (l.objoid = nsp.oid))))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;event trigger&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((evt.evtname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_seclabel l\n     JOIN pg_event_trigger evt ON (((l.classoid = evt.tableoid) AND (l.objoid = evt.oid))))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;publication&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((p.pubname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_seclabel l\n     JOIN pg_publication p ON (((l.classoid = p.tableoid) AND (l.objoid = p.oid))))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    0 AS objsubid,\n    &apos;subscription&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((s.subname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_shseclabel l\n     JOIN pg_subscription s ON (((l.classoid = s.tableoid) AND (l.objoid = s.oid))))\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    0 AS objsubid,\n    &apos;database&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((dat.datname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_shseclabel l\n     JOIN pg_database dat ON (((l.classoid = dat.tableoid) AND (l.objoid = dat.oid))))\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    0 AS objsubid,\n    &apos;tablespace&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((spc.spcname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_shseclabel l\n     JOIN pg_tablespace spc ON (((l.classoid = spc.tableoid) AND (l.objoid = spc.oid))))\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    0 AS objsubid,\n    &apos;role&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((rol.rolname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_shseclabel l\n     JOIN pg_authid rol ON (((l.classoid = rol.tableoid) AND (l.objoid = rol.oid))));\n                             SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n        CASE\n            WHEN (rel.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) THEN &apos;table&apos;::text\n            WHEN (rel.relkind = &apos;v&apos;::&quot;char&quot;) THEN &apos;view&apos;::text\n            WHEN (rel.relkind = &apos;m&apos;::&quot;char&quot;) THEN &apos;materialized view&apos;::text\n            WHEN (rel.relkind = &apos;S&apos;::&quot;char&quot;) THEN &apos;sequence&apos;::text\n            WHEN (rel.relkind = &apos;f&apos;::&quot;char&quot;) THEN &apos;foreign table&apos;::text\n            ELSE NULL::text\n        END AS objtype,\n    rel.relnamespace AS objnamespace,\n        CASE\n            WHEN pg_table_is_visible(rel.oid) THEN quote_ident((rel.relname)::text)\n            ELSE ((quote_ident((nsp.nspname)::text) || &apos;.&apos;::text) || quote_ident((rel.relname)::text))\n        END AS objname,\n    l.provider,\n    l.label\n   FROM ((pg_seclabel l\n     JOIN pg_class rel ON (((l.classoid = rel.tableoid) AND (l.objoid = rel.oid))))\n     JOIN pg_namespace nsp ON ((rel.relnamespace = nsp.oid)))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;column&apos;::text AS objtype,\n    rel.relnamespace AS objnamespace,\n    ((\n        CASE\n            WHEN pg_table_is_visible(rel.oid) THEN quote_ident((rel.relname)::text)\n            ELSE ((quote_ident((nsp.nspname)::text) || &apos;.&apos;::text) || quote_ident((rel.relname)::text))\n        END || &apos;.&apos;::text) || (att.attname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (((pg_seclabel l\n     JOIN pg_class rel ON (((l.classoid = rel.tableoid) AND (l.objoid = rel.oid))))\n     JOIN pg_attribute att ON (((rel.oid = att.attrelid) AND (l.objsubid = att.attnum))))\n     JOIN pg_namespace nsp ON ((rel.relnamespace = nsp.oid)))\n  WHERE (l.objsubid &lt;&gt; 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n        CASE pro.prokind\n            WHEN &apos;a&apos;::&quot;char&quot; THEN &apos;aggregate&apos;::text\n            WHEN &apos;f&apos;::&quot;char&quot; THEN &apos;function&apos;::text\n            WHEN &apos;p&apos;::&quot;char&quot; THEN &apos;procedure&apos;::text\n            WHEN &apos;w&apos;::&quot;char&quot; THEN &apos;window&apos;::text\n            ELSE NULL::text\n        END AS objtype,\n    pro.pronamespace AS objnamespace,\n    (((\n        CASE\n            WHEN pg_function_is_visible(pro.oid) THEN quote_ident((pro.proname)::text)\n            ELSE ((quote_ident((nsp.nspname)::text) || &apos;.&apos;::text) || quote_ident((pro.proname)::text))\n        END || &apos;(&apos;::text) || pg_get_function_arguments(pro.oid)) || &apos;)&apos;::text) AS objname,\n    l.provider,\n    l.label\n   FROM ((pg_seclabel l\n     JOIN pg_proc pro ON (((l.classoid = pro.tableoid) AND (l.objoid = pro.oid))))\n     JOIN pg_namespace nsp ON ((pro.pronamespace = nsp.oid)))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n        CASE\n            WHEN (typ.typtype = &apos;d&apos;::&quot;char&quot;) THEN &apos;domain&apos;::text\n            ELSE &apos;type&apos;::text\n        END AS objtype,\n    typ.typnamespace AS objnamespace,\n        CASE\n            WHEN pg_type_is_visible(typ.oid) THEN quote_ident((typ.typname)::text)\n            ELSE ((quote_ident((nsp.nspname)::text) || &apos;.&apos;::text) || quote_ident((typ.typname)::text))\n        END AS objname,\n    l.provider,\n    l.label\n   FROM ((pg_seclabel l\n     JOIN pg_type typ ON (((l.classoid = typ.tableoid) AND (l.objoid = typ.oid))))\n     JOIN pg_namespace nsp ON ((typ.typnamespace = nsp.oid)))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;large object&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    (l.objoid)::text AS objname,\n    l.provider,\n    l.label\n   FROM (pg_seclabel l\n     JOIN pg_largeobject_metadata lom ON ((l.objoid = lom.oid)))\n  WHERE ((l.classoid = (&apos;pg_largeobject&apos;::regclass)::oid) AND (l.objsubid = 0))\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;language&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((lan.lanname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_seclabel l\n     JOIN pg_language lan ON (((l.classoid = lan.tableoid) AND (l.objoid = lan.oid))))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;schema&apos;::text AS objtype,\n    nsp.oid AS objnamespace,\n    quote_ident((nsp.nspname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_seclabel l\n     JOIN pg_namespace nsp ON (((l.classoid = nsp.tableoid) AND (l.objoid = nsp.oid))))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;event trigger&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((evt.evtname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_seclabel l\n     JOIN pg_event_trigger evt ON (((l.classoid = evt.tableoid) AND (l.objoid = evt.oid))))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    l.objsubid,\n    &apos;publication&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((p.pubname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_seclabel l\n     JOIN pg_publication p ON (((l.classoid = p.tableoid) AND (l.objoid = p.oid))))\n  WHERE (l.objsubid = 0)\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    0 AS objsubid,\n    &apos;subscription&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((s.subname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_shseclabel l\n     JOIN pg_subscription s ON (((l.classoid = s.tableoid) AND (l.objoid = s.oid))))\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    0 AS objsubid,\n    &apos;database&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((dat.datname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_shseclabel l\n     JOIN pg_database dat ON (((l.classoid = dat.tableoid) AND (l.objoid = dat.oid))))\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    0 AS objsubid,\n    &apos;tablespace&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((spc.spcname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_shseclabel l\n     JOIN pg_tablespace spc ON (((l.classoid = spc.tableoid) AND (l.objoid = spc.oid))))\nUNION ALL\n SELECT l.objoid,\n    l.classoid,\n    0 AS objsubid,\n    &apos;role&apos;::text AS objtype,\n    NULL::oid AS objnamespace,\n    quote_ident((rol.rolname)::text) AS objname,\n    l.provider,\n    l.label\n   FROM (pg_shseclabel l\n     JOIN pg_authid rol ON (((l.classoid = rol.tableoid) AND (l.objoid = rol.oid))));\n                        ": "",
    "\n                             SELECT pg_authid.rolname,\n    pg_authid.rolsuper,\n    pg_authid.rolinherit,\n    pg_authid.rolcreaterole,\n    pg_authid.rolcreatedb,\n    pg_authid.rolcanlogin,\n    pg_authid.rolreplication,\n    pg_authid.rolconnlimit,\n    &apos;********&apos;::text AS rolpassword,\n    pg_authid.rolvaliduntil,\n    pg_authid.rolbypassrls,\n    s.setconfig AS rolconfig,\n    pg_authid.oid\n   FROM (pg_authid\n     LEFT JOIN pg_db_role_setting s ON (((pg_authid.oid = s.setrole) AND (s.setdatabase = (0)::oid))));\n                             SELECT pg_authid.rolname,\n    pg_authid.rolsuper,\n    pg_authid.rolinherit,\n    pg_authid.rolcreaterole,\n    pg_authid.rolcreatedb,\n    pg_authid.rolcanlogin,\n    pg_authid.rolreplication,\n    pg_authid.rolconnlimit,\n    &apos;********&apos;::text AS rolpassword,\n    pg_authid.rolvaliduntil,\n    pg_authid.rolbypassrls,\n    s.setconfig AS rolconfig,\n    pg_authid.oid\n   FROM (pg_authid\n     LEFT JOIN pg_db_role_setting s ON (((pg_authid.oid = s.setrole) AND (s.setdatabase = (0)::oid))));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (\n        CASE\n            WHEN pg_has_role(c.relowner, &apos;USAGE&apos;::text) THEN pg_get_viewdef(c.oid)\n            ELSE NULL::text\n        END)::information_schema.character_data AS view_definition,\n    (\n        CASE\n            WHEN (&apos;check_option=cascaded&apos;::text = ANY (c.reloptions)) THEN &apos;CASCADED&apos;::text\n            WHEN (&apos;check_option=local&apos;::text = ANY (c.reloptions)) THEN &apos;LOCAL&apos;::text\n            ELSE &apos;NONE&apos;::text\n        END)::information_schema.character_data AS check_option,\n    (\n        CASE\n            WHEN ((pg_relation_is_updatable((c.oid)::regclass, false) &amp; 20) = 20) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_updatable,\n    (\n        CASE\n            WHEN ((pg_relation_is_updatable((c.oid)::regclass, false) &amp; 8) = 8) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_insertable_into,\n    (\n        CASE\n            WHEN (EXISTS ( SELECT 1\n               FROM pg_trigger\n              WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer &amp; 81) = 81)))) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_trigger_updatable,\n    (\n        CASE\n            WHEN (EXISTS ( SELECT 1\n               FROM pg_trigger\n              WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer &amp; 73) = 73)))) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_trigger_deletable,\n    (\n        CASE\n            WHEN (EXISTS ( SELECT 1\n               FROM pg_trigger\n              WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer &amp; 69) = 69)))) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_trigger_insertable_into\n   FROM pg_namespace nc,\n    pg_class c\n  WHERE ((c.relnamespace = nc.oid) AND (c.relkind = &apos;v&apos;::&quot;char&quot;) AND (NOT pg_is_other_temp_schema(nc.oid)) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)));\n                             SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (\n        CASE\n            WHEN pg_has_role(c.relowner, &apos;USAGE&apos;::text) THEN pg_get_viewdef(c.oid)\n            ELSE NULL::text\n        END)::information_schema.character_data AS view_definition,\n    (\n        CASE\n            WHEN (&apos;check_option=cascaded&apos;::text = ANY (c.reloptions)) THEN &apos;CASCADED&apos;::text\n            WHEN (&apos;check_option=local&apos;::text = ANY (c.reloptions)) THEN &apos;LOCAL&apos;::text\n            ELSE &apos;NONE&apos;::text\n        END)::information_schema.character_data AS check_option,\n    (\n        CASE\n            WHEN ((pg_relation_is_updatable((c.oid)::regclass, false) &amp; 20) = 20) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_updatable,\n    (\n        CASE\n            WHEN ((pg_relation_is_updatable((c.oid)::regclass, false) &amp; 8) = 8) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_insertable_into,\n    (\n        CASE\n            WHEN (EXISTS ( SELECT 1\n               FROM pg_trigger\n              WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer &amp; 81) = 81)))) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_trigger_updatable,\n    (\n        CASE\n            WHEN (EXISTS ( SELECT 1\n               FROM pg_trigger\n              WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer &amp; 73) = 73)))) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_trigger_deletable,\n    (\n        CASE\n            WHEN (EXISTS ( SELECT 1\n               FROM pg_trigger\n              WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer &amp; 69) = 69)))) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_trigger_insertable_into\n   FROM pg_namespace nc,\n    pg_class c\n  WHERE ((c.relnamespace = nc.oid) AND (c.relkind = &apos;v&apos;::&quot;char&quot;) AND (NOT pg_is_other_temp_schema(nc.oid)) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_table_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER&apos;::text) OR has_any_column_privilege(c.oid, &apos;SELECT, INSERT, UPDATE, REFERENCES&apos;::text)));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS domain_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS domain_schema,\n    (t.typname)::information_schema.sql_identifier AS domain_name,\n    (\n        CASE\n            WHEN ((t.typelem &lt;&gt; (0)::oid) AND (t.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n            WHEN (nbt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(t.typbasetype, NULL::integer)\n            ELSE &apos;USER-DEFINED&apos;::text\n        END)::information_schema.character_data AS data_type,\n    (information_schema._pg_char_max_length(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS character_maximum_length,\n    (information_schema._pg_char_octet_length(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (\n        CASE\n            WHEN (nco.nspname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS collation_catalog,\n    (nco.nspname)::information_schema.sql_identifier AS collation_schema,\n    (co.collname)::information_schema.sql_identifier AS collation_name,\n    (information_schema._pg_numeric_precision(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_precision,\n    (information_schema._pg_numeric_precision_radix(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_precision_radix,\n    (information_schema._pg_numeric_scale(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_scale,\n    (information_schema._pg_datetime_precision(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS datetime_precision,\n    (information_schema._pg_interval_type(t.typbasetype, t.typtypmod))::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (t.typdefault)::information_schema.character_data AS domain_default,\n    (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nbt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (bt.typname)::information_schema.sql_identifier AS udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    (1)::information_schema.sql_identifier AS dtd_identifier\n   FROM (((pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))\n     JOIN (pg_type bt\n     JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typbasetype = bt.oid) AND (t.typtype = &apos;d&apos;::&quot;char&quot;))))\n     LEFT JOIN (pg_collation co\n     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((t.typcollation = co.oid) AND ((nco.nspname &lt;&gt; &apos;pg_catalog&apos;::name) OR (co.collname &lt;&gt; &apos;default&apos;::name)))))\n  WHERE (pg_has_role(t.typowner, &apos;USAGE&apos;::text) OR has_type_privilege(t.oid, &apos;USAGE&apos;::text));\n                             SELECT (current_database())::information_schema.sql_identifier AS domain_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS domain_schema,\n    (t.typname)::information_schema.sql_identifier AS domain_name,\n    (\n        CASE\n            WHEN ((t.typelem &lt;&gt; (0)::oid) AND (t.typlen = &apos;-1&apos;::integer)) THEN &apos;ARRAY&apos;::text\n            WHEN (nbt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(t.typbasetype, NULL::integer)\n            ELSE &apos;USER-DEFINED&apos;::text\n        END)::information_schema.character_data AS data_type,\n    (information_schema._pg_char_max_length(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS character_maximum_length,\n    (information_schema._pg_char_octet_length(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (\n        CASE\n            WHEN (nco.nspname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS collation_catalog,\n    (nco.nspname)::information_schema.sql_identifier AS collation_schema,\n    (co.collname)::information_schema.sql_identifier AS collation_name,\n    (information_schema._pg_numeric_precision(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_precision,\n    (information_schema._pg_numeric_precision_radix(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_precision_radix,\n    (information_schema._pg_numeric_scale(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_scale,\n    (information_schema._pg_datetime_precision(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS datetime_precision,\n    (information_schema._pg_interval_type(t.typbasetype, t.typtypmod))::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (t.typdefault)::information_schema.character_data AS domain_default,\n    (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nbt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (bt.typname)::information_schema.sql_identifier AS udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    (1)::information_schema.sql_identifier AS dtd_identifier\n   FROM (((pg_type t\n     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))\n     JOIN (pg_type bt\n     JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typbasetype = bt.oid) AND (t.typtype = &apos;d&apos;::&quot;char&quot;))))\n     LEFT JOIN (pg_collation co\n     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((t.typcollation = co.oid) AND ((nco.nspname &lt;&gt; &apos;pg_catalog&apos;::name) OR (co.collname &lt;&gt; &apos;default&apos;::name)))))\n  WHERE (pg_has_role(t.typowner, &apos;USAGE&apos;::text) OR has_type_privilege(t.oid, &apos;USAGE&apos;::text));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (n.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (ac.attname)::information_schema.sql_identifier AS column_name,\n    (ad.attname)::information_schema.sql_identifier AS dependent_column\n   FROM pg_namespace n,\n    pg_class c,\n    pg_depend d,\n    pg_attribute ac,\n    pg_attribute ad\n  WHERE ((n.oid = c.relnamespace) AND (c.oid = ac.attrelid) AND (c.oid = ad.attrelid) AND (d.classid = (&apos;pg_class&apos;::regclass)::oid) AND (d.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (d.objid = d.refobjid) AND (c.oid = d.objid) AND (d.objsubid = ad.attnum) AND (d.refobjsubid = ac.attnum) AND (ad.attgenerated &lt;&gt; &apos;&apos;::&quot;char&quot;) AND pg_has_role(c.relowner, &apos;USAGE&apos;::text));\n                             SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (n.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (ac.attname)::information_schema.sql_identifier AS column_name,\n    (ad.attname)::information_schema.sql_identifier AS dependent_column\n   FROM pg_namespace n,\n    pg_class c,\n    pg_depend d,\n    pg_attribute ac,\n    pg_attribute ad\n  WHERE ((n.oid = c.relnamespace) AND (c.oid = ac.attrelid) AND (c.oid = ad.attrelid) AND (d.classid = (&apos;pg_class&apos;::regclass)::oid) AND (d.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (d.objid = d.refobjid) AND (c.oid = d.objid) AND (d.objsubid = ad.attnum) AND (d.refobjsubid = ac.attnum) AND (ad.attgenerated &lt;&gt; &apos;&apos;::&quot;char&quot;) AND pg_has_role(c.relowner, &apos;USAGE&apos;::text));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS collation_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS collation_schema,\n    (c.collname)::information_schema.sql_identifier AS collation_name,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (getdatabaseencoding())::information_schema.sql_identifier AS character_set_name\n   FROM pg_collation c,\n    pg_namespace nc\n  WHERE ((c.collnamespace = nc.oid) AND (c.collencoding = ANY (ARRAY[&apos;-1&apos;::integer, ( SELECT pg_database.encoding\n           FROM pg_database\n          WHERE (pg_database.datname = current_database()))])));\n                             SELECT (current_database())::information_schema.sql_identifier AS collation_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS collation_schema,\n    (c.collname)::information_schema.sql_identifier AS collation_name,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (getdatabaseencoding())::information_schema.sql_identifier AS character_set_name\n   FROM pg_collation c,\n    pg_namespace nc\n  WHERE ((c.collnamespace = nc.oid) AND (c.collencoding = ANY (ARRAY[&apos;-1&apos;::integer, ( SELECT pg_database.encoding\n           FROM pg_database\n          WHERE (pg_database.datname = current_database()))])));\n                        ": "",
    "\n                             SELECT w.foreign_data_wrapper_catalog,\n    w.foreign_data_wrapper_name,\n    w.authorization_identifier,\n    (NULL::character varying)::information_schema.character_data AS library_name,\n    w.foreign_data_wrapper_language\n   FROM information_schema._pg_foreign_data_wrappers w;\n                             SELECT w.foreign_data_wrapper_catalog,\n    w.foreign_data_wrapper_name,\n    w.authorization_identifier,\n    (NULL::character varying)::information_schema.character_data AS library_name,\n    w.foreign_data_wrapper_language\n   FROM information_schema._pg_foreign_data_wrappers w;\n                        ": "",
    "\n                             SELECT n.nspname AS schemaname,\n    c.relname AS viewname,\n    pg_get_userbyid(c.relowner) AS viewowner,\n    pg_get_viewdef(c.oid) AS definition\n   FROM (pg_class c\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = &apos;v&apos;::&quot;char&quot;);\n                             SELECT n.nspname AS schemaname,\n    c.relname AS viewname,\n    pg_get_userbyid(c.relowner) AS viewowner,\n    pg_get_viewdef(c.oid) AS definition\n   FROM (pg_class c\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = &apos;v&apos;::&quot;char&quot;);\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS object_catalog,\n    x.objschema AS object_schema,\n    x.objname AS object_name,\n    (x.objtype)::information_schema.character_data AS object_type,\n    x.objdtdid AS dtd_identifier\n   FROM ( SELECT attributes.udt_schema,\n            attributes.udt_name,\n            &apos;USER-DEFINED TYPE&apos;::text AS text,\n            attributes.dtd_identifier\n           FROM information_schema.attributes\n        UNION ALL\n         SELECT columns.table_schema,\n            columns.table_name,\n            &apos;TABLE&apos;::text AS text,\n            columns.dtd_identifier\n           FROM information_schema.columns\n        UNION ALL\n         SELECT domains.domain_schema,\n            domains.domain_name,\n            &apos;DOMAIN&apos;::text AS text,\n            domains.dtd_identifier\n           FROM information_schema.domains\n        UNION ALL\n         SELECT parameters.specific_schema,\n            parameters.specific_name,\n            &apos;ROUTINE&apos;::text AS text,\n            parameters.dtd_identifier\n           FROM information_schema.parameters\n        UNION ALL\n         SELECT routines.specific_schema,\n            routines.specific_name,\n            &apos;ROUTINE&apos;::text AS text,\n            routines.dtd_identifier\n           FROM information_schema.routines) x(objschema, objname, objtype, objdtdid);\n                             SELECT (current_database())::information_schema.sql_identifier AS object_catalog,\n    x.objschema AS object_schema,\n    x.objname AS object_name,\n    (x.objtype)::information_schema.character_data AS object_type,\n    x.objdtdid AS dtd_identifier\n   FROM ( SELECT attributes.udt_schema,\n            attributes.udt_name,\n            &apos;USER-DEFINED TYPE&apos;::text AS text,\n            attributes.dtd_identifier\n           FROM information_schema.attributes\n        UNION ALL\n         SELECT columns.table_schema,\n            columns.table_name,\n            &apos;TABLE&apos;::text AS text,\n            columns.dtd_identifier\n           FROM information_schema.columns\n        UNION ALL\n         SELECT domains.domain_schema,\n            domains.domain_name,\n            &apos;DOMAIN&apos;::text AS text,\n            domains.dtd_identifier\n           FROM information_schema.domains\n        UNION ALL\n         SELECT parameters.specific_schema,\n            parameters.specific_name,\n            &apos;ROUTINE&apos;::text AS text,\n            parameters.dtd_identifier\n           FROM information_schema.parameters\n        UNION ALL\n         SELECT routines.specific_schema,\n            routines.specific_name,\n            &apos;ROUTINE&apos;::text AS text,\n            routines.dtd_identifier\n           FROM information_schema.routines) x(objschema, objname, objtype, objdtdid);\n                        ": "",
    "\n                             SELECT s.foreign_server_catalog,\n    s.foreign_server_name,\n    ((pg_options_to_table(s.srvoptions)).option_name)::information_schema.sql_identifier AS option_name,\n    ((pg_options_to_table(s.srvoptions)).option_value)::information_schema.character_data AS option_value\n   FROM information_schema._pg_foreign_servers s;\n                             SELECT s.foreign_server_catalog,\n    s.foreign_server_name,\n    ((pg_options_to_table(s.srvoptions)).option_name)::information_schema.sql_identifier AS option_name,\n    ((pg_options_to_table(s.srvoptions)).option_value)::information_schema.character_data AS option_value\n   FROM information_schema._pg_foreign_servers s;\n                        ": "",
    "\n                             SELECT udt_privileges.grantor,\n    udt_privileges.grantee,\n    udt_privileges.udt_catalog,\n    udt_privileges.udt_schema,\n    udt_privileges.udt_name,\n    udt_privileges.privilege_type,\n    udt_privileges.is_grantable\n   FROM information_schema.udt_privileges\n  WHERE (((udt_privileges.grantor)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)) OR ((udt_privileges.grantee)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)));\n                             SELECT udt_privileges.grantor,\n    udt_privileges.grantee,\n    udt_privileges.udt_catalog,\n    udt_privileges.udt_schema,\n    udt_privileges.udt_name,\n    udt_privileges.privilege_type,\n    udt_privileges.is_grantable\n   FROM information_schema.udt_privileges\n  WHERE (((udt_privileges.grantor)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)) OR ((udt_privileges.grantee)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)));\n                        ": "",
    "\n                             SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (x.relname)::information_schema.sql_identifier AS table_name,\n    (x.attname)::information_schema.sql_identifier AS column_name,\n    (x.prtype)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(x.grantee, x.relowner, &apos;USAGE&apos;::text) OR x.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pr_c.grantor,\n            pr_c.grantee,\n            a.attname,\n            pr_c.relname,\n            pr_c.relnamespace,\n            pr_c.prtype,\n            pr_c.grantable,\n            pr_c.relowner\n           FROM ( SELECT pg_class.oid,\n                    pg_class.relname,\n                    pg_class.relnamespace,\n                    pg_class.relowner,\n                    (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantor AS grantor,\n                    (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantee AS grantee,\n                    (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).privilege_type AS privilege_type,\n                    (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).is_grantable AS is_grantable\n                   FROM pg_class\n                  WHERE (pg_class.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;]))) pr_c(oid, relname, relnamespace, relowner, grantor, grantee, prtype, grantable),\n            pg_attribute a\n          WHERE ((a.attrelid = pr_c.oid) AND (a.attnum &gt; 0) AND (NOT a.attisdropped))\n        UNION\n         SELECT pr_a.grantor,\n            pr_a.grantee,\n            pr_a.attname,\n            c.relname,\n            c.relnamespace,\n            pr_a.prtype,\n            pr_a.grantable,\n            c.relowner\n           FROM ( SELECT a.attrelid,\n                    a.attname,\n                    (aclexplode(COALESCE(a.attacl, acldefault(&apos;c&apos;::&quot;char&quot;, cc.relowner)))).grantor AS grantor,\n                    (aclexplode(COALESCE(a.attacl, acldefault(&apos;c&apos;::&quot;char&quot;, cc.relowner)))).grantee AS grantee,\n                    (aclexplode(COALESCE(a.attacl, acldefault(&apos;c&apos;::&quot;char&quot;, cc.relowner)))).privilege_type AS privilege_type,\n                    (aclexplode(COALESCE(a.attacl, acldefault(&apos;c&apos;::&quot;char&quot;, cc.relowner)))).is_grantable AS is_grantable\n                   FROM (pg_attribute a\n                     JOIN pg_class cc ON ((a.attrelid = cc.oid)))\n                  WHERE ((a.attnum &gt; 0) AND (NOT a.attisdropped))) pr_a(attrelid, attname, grantor, grantee, prtype, grantable),\n            pg_class c\n          WHERE ((pr_a.attrelid = c.oid) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])))) x,\n    pg_namespace nc,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((x.relnamespace = nc.oid) AND (x.grantee = grantee.oid) AND (x.grantor = u_grantor.oid) AND (x.prtype = ANY (ARRAY[&apos;INSERT&apos;::text, &apos;SELECT&apos;::text, &apos;UPDATE&apos;::text, &apos;REFERENCES&apos;::text])) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)));\n                             SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,\n    (grantee.rolname)::information_schema.sql_identifier AS grantee,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS table_schema,\n    (x.relname)::information_schema.sql_identifier AS table_name,\n    (x.attname)::information_schema.sql_identifier AS column_name,\n    (x.prtype)::information_schema.character_data AS privilege_type,\n    (\n        CASE\n            WHEN (pg_has_role(x.grantee, x.relowner, &apos;USAGE&apos;::text) OR x.grantable) THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ( SELECT pr_c.grantor,\n            pr_c.grantee,\n            a.attname,\n            pr_c.relname,\n            pr_c.relnamespace,\n            pr_c.prtype,\n            pr_c.grantable,\n            pr_c.relowner\n           FROM ( SELECT pg_class.oid,\n                    pg_class.relname,\n                    pg_class.relnamespace,\n                    pg_class.relowner,\n                    (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantor AS grantor,\n                    (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).grantee AS grantee,\n                    (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).privilege_type AS privilege_type,\n                    (aclexplode(COALESCE(pg_class.relacl, acldefault(&apos;r&apos;::&quot;char&quot;, pg_class.relowner)))).is_grantable AS is_grantable\n                   FROM pg_class\n                  WHERE (pg_class.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;]))) pr_c(oid, relname, relnamespace, relowner, grantor, grantee, prtype, grantable),\n            pg_attribute a\n          WHERE ((a.attrelid = pr_c.oid) AND (a.attnum &gt; 0) AND (NOT a.attisdropped))\n        UNION\n         SELECT pr_a.grantor,\n            pr_a.grantee,\n            pr_a.attname,\n            c.relname,\n            c.relnamespace,\n            pr_a.prtype,\n            pr_a.grantable,\n            c.relowner\n           FROM ( SELECT a.attrelid,\n                    a.attname,\n                    (aclexplode(COALESCE(a.attacl, acldefault(&apos;c&apos;::&quot;char&quot;, cc.relowner)))).grantor AS grantor,\n                    (aclexplode(COALESCE(a.attacl, acldefault(&apos;c&apos;::&quot;char&quot;, cc.relowner)))).grantee AS grantee,\n                    (aclexplode(COALESCE(a.attacl, acldefault(&apos;c&apos;::&quot;char&quot;, cc.relowner)))).privilege_type AS privilege_type,\n                    (aclexplode(COALESCE(a.attacl, acldefault(&apos;c&apos;::&quot;char&quot;, cc.relowner)))).is_grantable AS is_grantable\n                   FROM (pg_attribute a\n                     JOIN pg_class cc ON ((a.attrelid = cc.oid)))\n                  WHERE ((a.attnum &gt; 0) AND (NOT a.attisdropped))) pr_a(attrelid, attname, grantor, grantee, prtype, grantable),\n            pg_class c\n          WHERE ((pr_a.attrelid = c.oid) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])))) x,\n    pg_namespace nc,\n    pg_authid u_grantor,\n    ( SELECT pg_authid.oid,\n            pg_authid.rolname\n           FROM pg_authid\n        UNION ALL\n         SELECT (0)::oid AS oid,\n            &apos;PUBLIC&apos;::name) grantee(oid, rolname)\n  WHERE ((x.relnamespace = nc.oid) AND (x.grantee = grantee.oid) AND (x.grantor = u_grantor.oid) AND (x.prtype = ANY (ARRAY[&apos;INSERT&apos;::text, &apos;SELECT&apos;::text, &apos;UPDATE&apos;::text, &apos;REFERENCES&apos;::text])) AND (pg_has_role(u_grantor.oid, &apos;USAGE&apos;::text) OR pg_has_role(grantee.oid, &apos;USAGE&apos;::text) OR (grantee.rolname = &apos;PUBLIC&apos;::name)));\n                        ": "",
    "\n                             SELECT s.pid,\n    s.usesysid,\n    u.rolname AS usename,\n    s.application_name,\n    s.client_addr,\n    s.client_hostname,\n    s.client_port,\n    s.backend_start,\n    s.backend_xmin,\n    w.state,\n    w.sent_lsn,\n    w.write_lsn,\n    w.flush_lsn,\n    w.replay_lsn,\n    w.write_lag,\n    w.flush_lag,\n    w.replay_lag,\n    w.sync_priority,\n    w.sync_state,\n    w.reply_time\n   FROM ((pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc)\n     JOIN pg_stat_get_wal_senders() w(pid, state, sent_lsn, write_lsn, flush_lsn, replay_lsn, write_lag, flush_lag, replay_lag, sync_priority, sync_state, reply_time) ON ((s.pid = w.pid)))\n     LEFT JOIN pg_authid u ON ((s.usesysid = u.oid)));\n                             SELECT s.pid,\n    s.usesysid,\n    u.rolname AS usename,\n    s.application_name,\n    s.client_addr,\n    s.client_hostname,\n    s.client_port,\n    s.backend_start,\n    s.backend_xmin,\n    w.state,\n    w.sent_lsn,\n    w.write_lsn,\n    w.flush_lsn,\n    w.replay_lsn,\n    w.write_lag,\n    w.flush_lag,\n    w.replay_lag,\n    w.sync_priority,\n    w.sync_state,\n    w.reply_time\n   FROM ((pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc)\n     JOIN pg_stat_get_wal_senders() w(pid, state, sent_lsn, write_lsn, flush_lsn, replay_lsn, write_lag, flush_lag, replay_lag, sync_priority, sync_state, reply_time) ON ((s.pid = w.pid)))\n     LEFT JOIN pg_authid u ON ((s.usesysid = u.oid)));\n                        ": "",
    "\n                             SELECT pg_stat_xact_all_tables.relid,\n    pg_stat_xact_all_tables.schemaname,\n    pg_stat_xact_all_tables.relname,\n    pg_stat_xact_all_tables.seq_scan,\n    pg_stat_xact_all_tables.seq_tup_read,\n    pg_stat_xact_all_tables.idx_scan,\n    pg_stat_xact_all_tables.idx_tup_fetch,\n    pg_stat_xact_all_tables.n_tup_ins,\n    pg_stat_xact_all_tables.n_tup_upd,\n    pg_stat_xact_all_tables.n_tup_del,\n    pg_stat_xact_all_tables.n_tup_hot_upd\n   FROM pg_stat_xact_all_tables\n  WHERE ((pg_stat_xact_all_tables.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_stat_xact_all_tables.schemaname !~ &apos;^pg_toast&apos;::text));\n                             SELECT pg_stat_xact_all_tables.relid,\n    pg_stat_xact_all_tables.schemaname,\n    pg_stat_xact_all_tables.relname,\n    pg_stat_xact_all_tables.seq_scan,\n    pg_stat_xact_all_tables.seq_tup_read,\n    pg_stat_xact_all_tables.idx_scan,\n    pg_stat_xact_all_tables.idx_tup_fetch,\n    pg_stat_xact_all_tables.n_tup_ins,\n    pg_stat_xact_all_tables.n_tup_upd,\n    pg_stat_xact_all_tables.n_tup_del,\n    pg_stat_xact_all_tables.n_tup_hot_upd\n   FROM pg_stat_xact_all_tables\n  WHERE ((pg_stat_xact_all_tables.schemaname &lt;&gt; ALL (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) AND (pg_stat_xact_all_tables.schemaname !~ &apos;^pg_toast&apos;::text));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS collation_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS collation_schema,\n    (c.collname)::information_schema.sql_identifier AS collation_name,\n    (&apos;NO PAD&apos;::character varying)::information_schema.character_data AS pad_attribute\n   FROM pg_collation c,\n    pg_namespace nc\n  WHERE ((c.collnamespace = nc.oid) AND (c.collencoding = ANY (ARRAY[&apos;-1&apos;::integer, ( SELECT pg_database.encoding\n           FROM pg_database\n          WHERE (pg_database.datname = current_database()))])));\n                             SELECT (current_database())::information_schema.sql_identifier AS collation_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS collation_schema,\n    (c.collname)::information_schema.sql_identifier AS collation_name,\n    (&apos;NO PAD&apos;::character varying)::information_schema.character_data AS pad_attribute\n   FROM pg_collation c,\n    pg_namespace nc\n  WHERE ((c.collnamespace = nc.oid) AND (c.collencoding = ANY (ARRAY[&apos;-1&apos;::integer, ( SELECT pg_database.encoding\n           FROM pg_database\n          WHERE (pg_database.datname = current_database()))])));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (rs.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (con.conname)::information_schema.sql_identifier AS constraint_name,\n    (current_database())::information_schema.sql_identifier AS domain_catalog,\n    (n.nspname)::information_schema.sql_identifier AS domain_schema,\n    (t.typname)::information_schema.sql_identifier AS domain_name,\n    (\n        CASE\n            WHEN con.condeferrable THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_deferrable,\n    (\n        CASE\n            WHEN con.condeferred THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS initially_deferred\n   FROM pg_namespace rs,\n    pg_namespace n,\n    pg_constraint con,\n    pg_type t\n  WHERE ((rs.oid = con.connamespace) AND (n.oid = t.typnamespace) AND (t.oid = con.contypid) AND (pg_has_role(t.typowner, &apos;USAGE&apos;::text) OR has_type_privilege(t.oid, &apos;USAGE&apos;::text)));\n                             SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (rs.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (con.conname)::information_schema.sql_identifier AS constraint_name,\n    (current_database())::information_schema.sql_identifier AS domain_catalog,\n    (n.nspname)::information_schema.sql_identifier AS domain_schema,\n    (t.typname)::information_schema.sql_identifier AS domain_name,\n    (\n        CASE\n            WHEN con.condeferrable THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_deferrable,\n    (\n        CASE\n            WHEN con.condeferred THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS initially_deferred\n   FROM pg_namespace rs,\n    pg_namespace n,\n    pg_constraint con,\n    pg_type t\n  WHERE ((rs.oid = con.connamespace) AND (n.oid = t.typnamespace) AND (t.oid = con.contypid) AND (pg_has_role(t.typowner, &apos;USAGE&apos;::text) OR has_type_privilege(t.oid, &apos;USAGE&apos;::text)));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS sequence_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS sequence_schema,\n    (c.relname)::information_schema.sql_identifier AS sequence_name,\n    (format_type(s.seqtypid, NULL::integer))::information_schema.character_data AS data_type,\n    (information_schema._pg_numeric_precision(s.seqtypid, &apos;-1&apos;::integer))::information_schema.cardinal_number AS numeric_precision,\n    (2)::information_schema.cardinal_number AS numeric_precision_radix,\n    (0)::information_schema.cardinal_number AS numeric_scale,\n    (s.seqstart)::information_schema.character_data AS start_value,\n    (s.seqmin)::information_schema.character_data AS minimum_value,\n    (s.seqmax)::information_schema.character_data AS maximum_value,\n    (s.seqincrement)::information_schema.character_data AS increment,\n    (\n        CASE\n            WHEN s.seqcycle THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS cycle_option\n   FROM pg_namespace nc,\n    pg_class c,\n    pg_sequence s\n  WHERE ((c.relnamespace = nc.oid) AND (c.relkind = &apos;S&apos;::&quot;char&quot;) AND (NOT (EXISTS ( SELECT 1\n           FROM pg_depend\n          WHERE ((pg_depend.classid = (&apos;pg_class&apos;::regclass)::oid) AND (pg_depend.objid = c.oid) AND (pg_depend.deptype = &apos;i&apos;::&quot;char&quot;))))) AND (NOT pg_is_other_temp_schema(nc.oid)) AND (c.oid = s.seqrelid) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_sequence_privilege(c.oid, &apos;SELECT, UPDATE, USAGE&apos;::text)));\n                             SELECT (current_database())::information_schema.sql_identifier AS sequence_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS sequence_schema,\n    (c.relname)::information_schema.sql_identifier AS sequence_name,\n    (format_type(s.seqtypid, NULL::integer))::information_schema.character_data AS data_type,\n    (information_schema._pg_numeric_precision(s.seqtypid, &apos;-1&apos;::integer))::information_schema.cardinal_number AS numeric_precision,\n    (2)::information_schema.cardinal_number AS numeric_precision_radix,\n    (0)::information_schema.cardinal_number AS numeric_scale,\n    (s.seqstart)::information_schema.character_data AS start_value,\n    (s.seqmin)::information_schema.character_data AS minimum_value,\n    (s.seqmax)::information_schema.character_data AS maximum_value,\n    (s.seqincrement)::information_schema.character_data AS increment,\n    (\n        CASE\n            WHEN s.seqcycle THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS cycle_option\n   FROM pg_namespace nc,\n    pg_class c,\n    pg_sequence s\n  WHERE ((c.relnamespace = nc.oid) AND (c.relkind = &apos;S&apos;::&quot;char&quot;) AND (NOT (EXISTS ( SELECT 1\n           FROM pg_depend\n          WHERE ((pg_depend.classid = (&apos;pg_class&apos;::regclass)::oid) AND (pg_depend.objid = c.oid) AND (pg_depend.deptype = &apos;i&apos;::&quot;char&quot;))))) AND (NOT pg_is_other_temp_schema(nc.oid)) AND (c.oid = s.seqrelid) AND (pg_has_role(c.relowner, &apos;USAGE&apos;::text) OR has_sequence_privilege(c.oid, &apos;SELECT, UPDATE, USAGE&apos;::text)));\n                        ": "",
    "\n                             SELECT DISTINCT (current_database())::information_schema.sql_identifier AS view_catalog,\n    (nv.nspname)::information_schema.sql_identifier AS view_schema,\n    (v.relname)::information_schema.sql_identifier AS view_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS table_schema,\n    (t.relname)::information_schema.sql_identifier AS table_name,\n    (a.attname)::information_schema.sql_identifier AS column_name\n   FROM pg_namespace nv,\n    pg_class v,\n    pg_depend dv,\n    pg_depend dt,\n    pg_class t,\n    pg_namespace nt,\n    pg_attribute a\n  WHERE ((nv.oid = v.relnamespace) AND (v.relkind = &apos;v&apos;::&quot;char&quot;) AND (v.oid = dv.refobjid) AND (dv.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dv.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dv.deptype = &apos;i&apos;::&quot;char&quot;) AND (dv.objid = dt.objid) AND (dv.refobjid &lt;&gt; dt.refobjid) AND (dt.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dt.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dt.refobjid = t.oid) AND (t.relnamespace = nt.oid) AND (t.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (t.oid = a.attrelid) AND (dt.refobjsubid = a.attnum) AND pg_has_role(t.relowner, &apos;USAGE&apos;::text));\n                             SELECT DISTINCT (current_database())::information_schema.sql_identifier AS view_catalog,\n    (nv.nspname)::information_schema.sql_identifier AS view_schema,\n    (v.relname)::information_schema.sql_identifier AS view_name,\n    (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS table_schema,\n    (t.relname)::information_schema.sql_identifier AS table_name,\n    (a.attname)::information_schema.sql_identifier AS column_name\n   FROM pg_namespace nv,\n    pg_class v,\n    pg_depend dv,\n    pg_depend dt,\n    pg_class t,\n    pg_namespace nt,\n    pg_attribute a\n  WHERE ((nv.oid = v.relnamespace) AND (v.relkind = &apos;v&apos;::&quot;char&quot;) AND (v.oid = dv.refobjid) AND (dv.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dv.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dv.deptype = &apos;i&apos;::&quot;char&quot;) AND (dv.objid = dt.objid) AND (dv.refobjid &lt;&gt; dt.refobjid) AND (dt.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dt.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dt.refobjid = t.oid) AND (t.relnamespace = nt.oid) AND (t.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (t.oid = a.attrelid) AND (dt.refobjsubid = a.attnum) AND pg_has_role(t.relowner, &apos;USAGE&apos;::text));\n                        ": "",
    "\n                             SELECT p.oid AS funcid,\n    n.nspname AS schemaname,\n    p.proname AS funcname,\n    pg_stat_get_function_calls(p.oid) AS calls,\n    pg_stat_get_function_total_time(p.oid) AS total_time,\n    pg_stat_get_function_self_time(p.oid) AS self_time\n   FROM (pg_proc p\n     LEFT JOIN pg_namespace n ON ((n.oid = p.pronamespace)))\n  WHERE ((p.prolang &lt;&gt; (12)::oid) AND (pg_stat_get_function_calls(p.oid) IS NOT NULL));\n                             SELECT p.oid AS funcid,\n    n.nspname AS schemaname,\n    p.proname AS funcname,\n    pg_stat_get_function_calls(p.oid) AS calls,\n    pg_stat_get_function_total_time(p.oid) AS total_time,\n    pg_stat_get_function_self_time(p.oid) AS self_time\n   FROM (pg_proc p\n     LEFT JOIN pg_namespace n ON ((n.oid = p.pronamespace)))\n  WHERE ((p.prolang &lt;&gt; (12)::oid) AND (pg_stat_get_function_calls(p.oid) IS NOT NULL));\n                        ": "",
    "\n                             SELECT _pg_user_mappings.authorization_identifier,\n    _pg_user_mappings.foreign_server_catalog,\n    _pg_user_mappings.foreign_server_name\n   FROM information_schema._pg_user_mappings;\n                             SELECT _pg_user_mappings.authorization_identifier,\n    _pg_user_mappings.foreign_server_catalog,\n    _pg_user_mappings.foreign_server_name\n   FROM information_schema._pg_user_mappings;\n                        ": "",
    "\n                             SELECT usage_privileges.grantor,\n    usage_privileges.grantee,\n    usage_privileges.object_catalog,\n    usage_privileges.object_schema,\n    usage_privileges.object_name,\n    usage_privileges.object_type,\n    usage_privileges.privilege_type,\n    usage_privileges.is_grantable\n   FROM information_schema.usage_privileges\n  WHERE (((usage_privileges.grantor)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)) OR ((usage_privileges.grantee)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)));\n                             SELECT usage_privileges.grantor,\n    usage_privileges.grantee,\n    usage_privileges.object_catalog,\n    usage_privileges.object_schema,\n    usage_privileges.object_name,\n    usage_privileges.object_type,\n    usage_privileges.privilege_type,\n    usage_privileges.is_grantable\n   FROM information_schema.usage_privileges\n  WHERE (((usage_privileges.grantor)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)) OR ((usage_privileges.grantee)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)));\n                        ": "",
    "\n                             SELECT a.sourcefile,\n    a.sourceline,\n    a.seqno,\n    a.name,\n    a.setting,\n    a.applied,\n    a.error\n   FROM pg_show_all_file_settings() a(sourcefile, sourceline, seqno, name, setting, applied, error);\n                             SELECT a.sourcefile,\n    a.sourceline,\n    a.seqno,\n    a.name,\n    a.setting,\n    a.applied,\n    a.error\n   FROM pg_show_all_file_settings() a(sourcefile, sourceline, seqno, name, setting, applied, error);\n                        ": "",
    "\n                             SELECT routine_privileges.grantor,\n    routine_privileges.grantee,\n    routine_privileges.specific_catalog,\n    routine_privileges.specific_schema,\n    routine_privileges.specific_name,\n    routine_privileges.routine_catalog,\n    routine_privileges.routine_schema,\n    routine_privileges.routine_name,\n    routine_privileges.privilege_type,\n    routine_privileges.is_grantable\n   FROM information_schema.routine_privileges\n  WHERE (((routine_privileges.grantor)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)) OR ((routine_privileges.grantee)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)));\n                             SELECT routine_privileges.grantor,\n    routine_privileges.grantee,\n    routine_privileges.specific_catalog,\n    routine_privileges.specific_schema,\n    routine_privileges.specific_name,\n    routine_privileges.routine_catalog,\n    routine_privileges.routine_schema,\n    routine_privileges.routine_name,\n    routine_privileges.privilege_type,\n    routine_privileges.is_grantable\n   FROM information_schema.routine_privileges\n  WHERE (((routine_privileges.grantor)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)) OR ((routine_privileges.grantee)::name IN ( SELECT enabled_roles.role_name\n           FROM information_schema.enabled_roles)));\n                        ": "",
    "\n                             SELECT s.pid,\n    s.datid,\n    d.datname,\n    s.relid,\n        CASE s.param1\n            WHEN 0 THEN &apos;initializing&apos;::text\n            WHEN 1 THEN &apos;scanning heap&apos;::text\n            WHEN 2 THEN &apos;vacuuming indexes&apos;::text\n            WHEN 3 THEN &apos;vacuuming heap&apos;::text\n            WHEN 4 THEN &apos;cleaning up indexes&apos;::text\n            WHEN 5 THEN &apos;truncating heap&apos;::text\n            WHEN 6 THEN &apos;performing final cleanup&apos;::text\n            ELSE NULL::text\n        END AS phase,\n    s.param2 AS heap_blks_total,\n    s.param3 AS heap_blks_scanned,\n    s.param4 AS heap_blks_vacuumed,\n    s.param5 AS index_vacuum_count,\n    s.param6 AS max_dead_tuples,\n    s.param7 AS num_dead_tuples\n   FROM (pg_stat_get_progress_info(&apos;VACUUM&apos;::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)\n     LEFT JOIN pg_database d ON ((s.datid = d.oid)));\n                             SELECT s.pid,\n    s.datid,\n    d.datname,\n    s.relid,\n        CASE s.param1\n            WHEN 0 THEN &apos;initializing&apos;::text\n            WHEN 1 THEN &apos;scanning heap&apos;::text\n            WHEN 2 THEN &apos;vacuuming indexes&apos;::text\n            WHEN 3 THEN &apos;vacuuming heap&apos;::text\n            WHEN 4 THEN &apos;cleaning up indexes&apos;::text\n            WHEN 5 THEN &apos;truncating heap&apos;::text\n            WHEN 6 THEN &apos;performing final cleanup&apos;::text\n            ELSE NULL::text\n        END AS phase,\n    s.param2 AS heap_blks_total,\n    s.param3 AS heap_blks_scanned,\n    s.param4 AS heap_blks_vacuumed,\n    s.param5 AS index_vacuum_count,\n    s.param6 AS max_dead_tuples,\n    s.param7 AS num_dead_tuples\n   FROM (pg_stat_get_progress_info(&apos;VACUUM&apos;::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)\n     LEFT JOIN pg_database d ON ((s.datid = d.oid)));\n                        ": "",
    "\n                             SELECT s.pid,\n    s.datid,\n    d.datname,\n    s.relid,\n        CASE s.param1\n            WHEN 1 THEN &apos;CLUSTER&apos;::text\n            WHEN 2 THEN &apos;VACUUM FULL&apos;::text\n            ELSE NULL::text\n        END AS command,\n        CASE s.param2\n            WHEN 0 THEN &apos;initializing&apos;::text\n            WHEN 1 THEN &apos;seq scanning heap&apos;::text\n            WHEN 2 THEN &apos;index scanning heap&apos;::text\n            WHEN 3 THEN &apos;sorting tuples&apos;::text\n            WHEN 4 THEN &apos;writing new heap&apos;::text\n            WHEN 5 THEN &apos;swapping relation files&apos;::text\n            WHEN 6 THEN &apos;rebuilding index&apos;::text\n            WHEN 7 THEN &apos;performing final cleanup&apos;::text\n            ELSE NULL::text\n        END AS phase,\n    (s.param3)::oid AS cluster_index_relid,\n    s.param4 AS heap_tuples_scanned,\n    s.param5 AS heap_tuples_written,\n    s.param6 AS heap_blks_total,\n    s.param7 AS heap_blks_scanned,\n    s.param8 AS index_rebuild_count\n   FROM (pg_stat_get_progress_info(&apos;CLUSTER&apos;::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)\n     LEFT JOIN pg_database d ON ((s.datid = d.oid)));\n                             SELECT s.pid,\n    s.datid,\n    d.datname,\n    s.relid,\n        CASE s.param1\n            WHEN 1 THEN &apos;CLUSTER&apos;::text\n            WHEN 2 THEN &apos;VACUUM FULL&apos;::text\n            ELSE NULL::text\n        END AS command,\n        CASE s.param2\n            WHEN 0 THEN &apos;initializing&apos;::text\n            WHEN 1 THEN &apos;seq scanning heap&apos;::text\n            WHEN 2 THEN &apos;index scanning heap&apos;::text\n            WHEN 3 THEN &apos;sorting tuples&apos;::text\n            WHEN 4 THEN &apos;writing new heap&apos;::text\n            WHEN 5 THEN &apos;swapping relation files&apos;::text\n            WHEN 6 THEN &apos;rebuilding index&apos;::text\n            WHEN 7 THEN &apos;performing final cleanup&apos;::text\n            ELSE NULL::text\n        END AS phase,\n    (s.param3)::oid AS cluster_index_relid,\n    s.param4 AS heap_tuples_scanned,\n    s.param5 AS heap_tuples_written,\n    s.param6 AS heap_blks_total,\n    s.param7 AS heap_blks_scanned,\n    s.param8 AS index_rebuild_count\n   FROM (pg_stat_get_progress_info(&apos;CLUSTER&apos;::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)\n     LEFT JOIN pg_database d ON ((s.datid = d.oid)));\n                        ": "",
    "\n                             SELECT cn.nspname AS schemaname,\n    c.relname AS tablename,\n    sn.nspname AS statistics_schemaname,\n    s.stxname AS statistics_name,\n    pg_get_userbyid(s.stxowner) AS statistics_owner,\n    ( SELECT array_agg(a.attname ORDER BY a.attnum) AS array_agg\n           FROM (unnest(s.stxkeys) k(k)\n             JOIN pg_attribute a ON (((a.attrelid = s.stxrelid) AND (a.attnum = k.k))))) AS attnames,\n    s.stxkind AS kinds,\n    sd.stxdndistinct AS n_distinct,\n    sd.stxddependencies AS dependencies,\n    m.most_common_vals,\n    m.most_common_val_nulls,\n    m.most_common_freqs,\n    m.most_common_base_freqs\n   FROM (((((pg_statistic_ext s\n     JOIN pg_class c ON ((c.oid = s.stxrelid)))\n     JOIN pg_statistic_ext_data sd ON ((s.oid = sd.stxoid)))\n     LEFT JOIN pg_namespace cn ON ((cn.oid = c.relnamespace)))\n     LEFT JOIN pg_namespace sn ON ((sn.oid = s.stxnamespace)))\n     LEFT JOIN LATERAL ( SELECT array_agg(pg_mcv_list_items.&quot;values&quot;) AS most_common_vals,\n            array_agg(pg_mcv_list_items.nulls) AS most_common_val_nulls,\n            array_agg(pg_mcv_list_items.frequency) AS most_common_freqs,\n            array_agg(pg_mcv_list_items.base_frequency) AS most_common_base_freqs\n           FROM pg_mcv_list_items(sd.stxdmcv) pg_mcv_list_items(index, &quot;values&quot;, nulls, frequency, base_frequency)) m ON ((sd.stxdmcv IS NOT NULL)))\n  WHERE ((NOT (EXISTS ( SELECT 1\n           FROM (unnest(s.stxkeys) k(k)\n             JOIN pg_attribute a ON (((a.attrelid = s.stxrelid) AND (a.attnum = k.k))))\n          WHERE (NOT has_column_privilege(c.oid, a.attnum, &apos;select&apos;::text))))) AND ((c.relrowsecurity = false) OR (NOT row_security_active(c.oid))));\n                             SELECT cn.nspname AS schemaname,\n    c.relname AS tablename,\n    sn.nspname AS statistics_schemaname,\n    s.stxname AS statistics_name,\n    pg_get_userbyid(s.stxowner) AS statistics_owner,\n    ( SELECT array_agg(a.attname ORDER BY a.attnum) AS array_agg\n           FROM (unnest(s.stxkeys) k(k)\n             JOIN pg_attribute a ON (((a.attrelid = s.stxrelid) AND (a.attnum = k.k))))) AS attnames,\n    s.stxkind AS kinds,\n    sd.stxdndistinct AS n_distinct,\n    sd.stxddependencies AS dependencies,\n    m.most_common_vals,\n    m.most_common_val_nulls,\n    m.most_common_freqs,\n    m.most_common_base_freqs\n   FROM (((((pg_statistic_ext s\n     JOIN pg_class c ON ((c.oid = s.stxrelid)))\n     JOIN pg_statistic_ext_data sd ON ((s.oid = sd.stxoid)))\n     LEFT JOIN pg_namespace cn ON ((cn.oid = c.relnamespace)))\n     LEFT JOIN pg_namespace sn ON ((sn.oid = s.stxnamespace)))\n     LEFT JOIN LATERAL ( SELECT array_agg(pg_mcv_list_items.&quot;values&quot;) AS most_common_vals,\n            array_agg(pg_mcv_list_items.nulls) AS most_common_val_nulls,\n            array_agg(pg_mcv_list_items.frequency) AS most_common_freqs,\n            array_agg(pg_mcv_list_items.base_frequency) AS most_common_base_freqs\n           FROM pg_mcv_list_items(sd.stxdmcv) pg_mcv_list_items(index, &quot;values&quot;, nulls, frequency, base_frequency)) m ON ((sd.stxdmcv IS NOT NULL)))\n  WHERE ((NOT (EXISTS ( SELECT 1\n           FROM (unnest(s.stxkeys) k(k)\n             JOIN pg_attribute a ON (((a.attrelid = s.stxrelid) AND (a.attnum = k.k))))\n          WHERE (NOT has_column_privilege(c.oid, a.attnum, &apos;select&apos;::text))))) AND ((c.relrowsecurity = false) OR (NOT row_security_active(c.oid))));\n                        ": "",
    "\n                             SELECT s.datid,\n    d.datname,\n    s.pid,\n    s.usesysid,\n    u.rolname AS usename,\n    s.application_name,\n    s.client_addr,\n    s.client_hostname,\n    s.client_port,\n    s.backend_start,\n    s.xact_start,\n    s.query_start,\n    s.state_change,\n    s.wait_event_type,\n    s.wait_event,\n    s.state,\n    s.backend_xid,\n    s.backend_xmin,\n    s.query,\n    s.backend_type\n   FROM ((pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc)\n     LEFT JOIN pg_database d ON ((s.datid = d.oid)))\n     LEFT JOIN pg_authid u ON ((s.usesysid = u.oid)));\n                             SELECT s.datid,\n    d.datname,\n    s.pid,\n    s.usesysid,\n    u.rolname AS usename,\n    s.application_name,\n    s.client_addr,\n    s.client_hostname,\n    s.client_port,\n    s.backend_start,\n    s.xact_start,\n    s.query_start,\n    s.state_change,\n    s.wait_event_type,\n    s.wait_event,\n    s.state,\n    s.backend_xid,\n    s.backend_xmin,\n    s.query,\n    s.backend_type\n   FROM ((pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, sslcompression, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc)\n     LEFT JOIN pg_database d ON ((s.datid = d.oid)))\n     LEFT JOIN pg_authid u ON ((s.usesysid = u.oid)));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nr.nspname)::information_schema.sql_identifier AS table_schema,\n    (r.relname)::information_schema.sql_identifier AS table_name,\n    (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (c.conname)::information_schema.sql_identifier AS constraint_name\n   FROM pg_constraint c,\n    pg_namespace nc,\n    pg_class r,\n    pg_namespace nr\n  WHERE ((c.connamespace = nc.oid) AND (r.relnamespace = nr.oid) AND (((c.contype = &apos;f&apos;::&quot;char&quot;) AND (c.confrelid = r.oid)) OR ((c.contype = ANY (ARRAY[&apos;p&apos;::&quot;char&quot;, &apos;u&apos;::&quot;char&quot;])) AND (c.conrelid = r.oid))) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND pg_has_role(r.relowner, &apos;USAGE&apos;::text));\n                             SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nr.nspname)::information_schema.sql_identifier AS table_schema,\n    (r.relname)::information_schema.sql_identifier AS table_name,\n    (current_database())::information_schema.sql_identifier AS constraint_catalog,\n    (nc.nspname)::information_schema.sql_identifier AS constraint_schema,\n    (c.conname)::information_schema.sql_identifier AS constraint_name\n   FROM pg_constraint c,\n    pg_namespace nc,\n    pg_class r,\n    pg_namespace nr\n  WHERE ((c.connamespace = nc.oid) AND (r.relnamespace = nr.oid) AND (((c.contype = &apos;f&apos;::&quot;char&quot;) AND (c.confrelid = r.oid)) OR ((c.contype = ANY (ARRAY[&apos;p&apos;::&quot;char&quot;, &apos;u&apos;::&quot;char&quot;])) AND (c.conrelid = r.oid))) AND (r.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND pg_has_role(r.relowner, &apos;USAGE&apos;::text));\n                        ": "",
    "\n                             SELECT pg_show_replication_origin_status.local_id,\n    pg_show_replication_origin_status.external_id,\n    pg_show_replication_origin_status.remote_lsn,\n    pg_show_replication_origin_status.local_lsn\n   FROM pg_show_replication_origin_status() pg_show_replication_origin_status(local_id, external_id, remote_lsn, local_lsn);\n                             SELECT pg_show_replication_origin_status.local_id,\n    pg_show_replication_origin_status.external_id,\n    pg_show_replication_origin_status.remote_lsn,\n    pg_show_replication_origin_status.local_lsn\n   FROM pg_show_replication_origin_status() pg_show_replication_origin_status(local_id, external_id, remote_lsn, local_lsn);\n                        ": "",
    "\n                             SELECT pg_timezone_names.name,\n    pg_timezone_names.abbrev,\n    pg_timezone_names.utc_offset,\n    pg_timezone_names.is_dst\n   FROM pg_timezone_names() pg_timezone_names(name, abbrev, utc_offset, is_dst);\n                             SELECT pg_timezone_names.name,\n    pg_timezone_names.abbrev,\n    pg_timezone_names.utc_offset,\n    pg_timezone_names.is_dst\n   FROM pg_timezone_names() pg_timezone_names(name, abbrev, utc_offset, is_dst);\n                        ": "",
    "\n                             SELECT n.nspname AS schemaname,\n    c.relname AS tablename,\n    r.rulename,\n    pg_get_ruledef(r.oid) AS definition\n   FROM ((pg_rewrite r\n     JOIN pg_class c ON ((c.oid = r.ev_class)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (r.rulename &lt;&gt; &apos;_RETURN&apos;::name);\n                             SELECT n.nspname AS schemaname,\n    c.relname AS tablename,\n    r.rulename,\n    pg_get_ruledef(r.oid) AS definition\n   FROM ((pg_rewrite r\n     JOIN pg_class c ON ((c.oid = r.ev_class)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (r.rulename &lt;&gt; &apos;_RETURN&apos;::name);\n                        ": "",
    "\n                             SELECT pg_stat_get_bgwriter_timed_checkpoints() AS checkpoints_timed,\n    pg_stat_get_bgwriter_requested_checkpoints() AS checkpoints_req,\n    pg_stat_get_checkpoint_write_time() AS checkpoint_write_time,\n    pg_stat_get_checkpoint_sync_time() AS checkpoint_sync_time,\n    pg_stat_get_bgwriter_buf_written_checkpoints() AS buffers_checkpoint,\n    pg_stat_get_bgwriter_buf_written_clean() AS buffers_clean,\n    pg_stat_get_bgwriter_maxwritten_clean() AS maxwritten_clean,\n    pg_stat_get_buf_written_backend() AS buffers_backend,\n    pg_stat_get_buf_fsync_backend() AS buffers_backend_fsync,\n    pg_stat_get_buf_alloc() AS buffers_alloc,\n    pg_stat_get_bgwriter_stat_reset_time() AS stats_reset;\n                             SELECT pg_stat_get_bgwriter_timed_checkpoints() AS checkpoints_timed,\n    pg_stat_get_bgwriter_requested_checkpoints() AS checkpoints_req,\n    pg_stat_get_checkpoint_write_time() AS checkpoint_write_time,\n    pg_stat_get_checkpoint_sync_time() AS checkpoint_sync_time,\n    pg_stat_get_bgwriter_buf_written_checkpoints() AS buffers_checkpoint,\n    pg_stat_get_bgwriter_buf_written_clean() AS buffers_clean,\n    pg_stat_get_bgwriter_maxwritten_clean() AS maxwritten_clean,\n    pg_stat_get_buf_written_backend() AS buffers_backend,\n    pg_stat_get_buf_fsync_backend() AS buffers_backend_fsync,\n    pg_stat_get_buf_alloc() AS buffers_alloc,\n    pg_stat_get_bgwriter_stat_reset_time() AS stats_reset;\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (c.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (c.attname)::information_schema.sql_identifier AS column_name,\n    ((pg_options_to_table(c.attfdwoptions)).option_name)::information_schema.sql_identifier AS option_name,\n    ((pg_options_to_table(c.attfdwoptions)).option_value)::information_schema.character_data AS option_value\n   FROM information_schema._pg_foreign_table_columns c;\n                             SELECT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (c.nspname)::information_schema.sql_identifier AS table_schema,\n    (c.relname)::information_schema.sql_identifier AS table_name,\n    (c.attname)::information_schema.sql_identifier AS column_name,\n    ((pg_options_to_table(c.attfdwoptions)).option_name)::information_schema.sql_identifier AS option_name,\n    ((pg_options_to_table(c.attfdwoptions)).option_value)::information_schema.character_data AS option_value\n   FROM information_schema._pg_foreign_table_columns c;\n                        ": "",
    "\n                             SELECT s.archived_count,\n    s.last_archived_wal,\n    s.last_archived_time,\n    s.failed_count,\n    s.last_failed_wal,\n    s.last_failed_time,\n    s.stats_reset\n   FROM pg_stat_get_archiver() s(archived_count, last_archived_wal, last_archived_time, failed_count, last_failed_wal, last_failed_time, stats_reset);\n                             SELECT s.archived_count,\n    s.last_archived_wal,\n    s.last_archived_time,\n    s.failed_count,\n    s.last_failed_wal,\n    s.last_failed_time,\n    s.stats_reset\n   FROM pg_stat_get_archiver() s(archived_count, last_archived_wal, last_archived_time, failed_count, last_failed_wal, last_failed_time, stats_reset);\n                        ": "",
    "\n                             SELECT c.oid AS relid,\n    i.oid AS indexrelid,\n    n.nspname AS schemaname,\n    c.relname,\n    i.relname AS indexrelname,\n    pg_stat_get_numscans(i.oid) AS idx_scan,\n    pg_stat_get_tuples_returned(i.oid) AS idx_tup_read,\n    pg_stat_get_tuples_fetched(i.oid) AS idx_tup_fetch\n   FROM (((pg_class c\n     JOIN pg_index x ON ((c.oid = x.indrelid)))\n     JOIN pg_class i ON ((i.oid = x.indexrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;t&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;]));\n                             SELECT c.oid AS relid,\n    i.oid AS indexrelid,\n    n.nspname AS schemaname,\n    c.relname,\n    i.relname AS indexrelname,\n    pg_stat_get_numscans(i.oid) AS idx_scan,\n    pg_stat_get_tuples_returned(i.oid) AS idx_tup_read,\n    pg_stat_get_tuples_fetched(i.oid) AS idx_tup_fetch\n   FROM (((pg_class c\n     JOIN pg_index x ON ((c.oid = x.indrelid)))\n     JOIN pg_class i ON ((i.oid = x.indexrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;t&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;]));\n                        ": "",
    "\n                             SELECT n.nspname AS schemaname,\n    c.relname AS tablename,\n    i.relname AS indexname,\n    t.spcname AS tablespace,\n    pg_get_indexdef(i.oid) AS indexdef\n   FROM ((((pg_index x\n     JOIN pg_class c ON ((c.oid = x.indrelid)))\n     JOIN pg_class i ON ((i.oid = x.indexrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n     LEFT JOIN pg_tablespace t ON ((t.oid = i.reltablespace)))\n  WHERE ((c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (i.relkind = ANY (ARRAY[&apos;i&apos;::&quot;char&quot;, &apos;I&apos;::&quot;char&quot;])));\n                             SELECT n.nspname AS schemaname,\n    c.relname AS tablename,\n    i.relname AS indexname,\n    t.spcname AS tablespace,\n    pg_get_indexdef(i.oid) AS indexdef\n   FROM ((((pg_index x\n     JOIN pg_class c ON ((c.oid = x.indrelid)))\n     JOIN pg_class i ON ((i.oid = x.indexrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n     LEFT JOIN pg_tablespace t ON ((t.oid = i.reltablespace)))\n  WHERE ((c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (i.relkind = ANY (ARRAY[&apos;i&apos;::&quot;char&quot;, &apos;I&apos;::&quot;char&quot;])));\n                        ": "",
    "\n                             SELECT w.foreign_data_wrapper_catalog,\n    w.foreign_data_wrapper_name,\n    ((pg_options_to_table(w.fdwoptions)).option_name)::information_schema.sql_identifier AS option_name,\n    ((pg_options_to_table(w.fdwoptions)).option_value)::information_schema.character_data AS option_value\n   FROM information_schema._pg_foreign_data_wrappers w;\n                             SELECT w.foreign_data_wrapper_catalog,\n    w.foreign_data_wrapper_name,\n    ((pg_options_to_table(w.fdwoptions)).option_name)::information_schema.sql_identifier AS option_name,\n    ((pg_options_to_table(w.fdwoptions)).option_value)::information_schema.character_data AS option_value\n   FROM information_schema._pg_foreign_data_wrappers w;\n                        ": "",
    "\n                             SELECT (a.rolname)::information_schema.sql_identifier AS grantee,\n    (b.rolname)::information_schema.sql_identifier AS role_name,\n    (\n        CASE\n            WHEN m.admin_option THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ((pg_auth_members m\n     JOIN pg_authid a ON ((m.member = a.oid)))\n     JOIN pg_authid b ON ((m.roleid = b.oid)))\n  WHERE pg_has_role(a.oid, &apos;USAGE&apos;::text);\n                             SELECT (a.rolname)::information_schema.sql_identifier AS grantee,\n    (b.rolname)::information_schema.sql_identifier AS role_name,\n    (\n        CASE\n            WHEN m.admin_option THEN &apos;YES&apos;::text\n            ELSE &apos;NO&apos;::text\n        END)::information_schema.yes_or_no AS is_grantable\n   FROM ((pg_auth_members m\n     JOIN pg_authid a ON ((m.member = a.oid)))\n     JOIN pg_authid b ON ((m.roleid = b.oid)))\n  WHERE pg_has_role(a.oid, &apos;USAGE&apos;::text);\n                        ": "",
    "\n                             SELECT n.nspname AS schemaname,\n    c.relname AS tablename,\n    pg_get_userbyid(c.relowner) AS tableowner,\n    t.spcname AS tablespace,\n    c.relhasindex AS hasindexes,\n    c.relhasrules AS hasrules,\n    c.relhastriggers AS hastriggers,\n    c.relrowsecurity AS rowsecurity\n   FROM ((pg_class c\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n     LEFT JOIN pg_tablespace t ON ((t.oid = c.reltablespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;]));\n                             SELECT n.nspname AS schemaname,\n    c.relname AS tablename,\n    pg_get_userbyid(c.relowner) AS tableowner,\n    t.spcname AS tablespace,\n    c.relhasindex AS hasindexes,\n    c.relhasrules AS hasrules,\n    c.relhastriggers AS hastriggers,\n    c.relrowsecurity AS rowsecurity\n   FROM ((pg_class c\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n     LEFT JOIN pg_tablespace t ON ((t.oid = c.reltablespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;]));\n                        ": "",
    "\n                             SELECT a.line_number,\n    a.type,\n    a.database,\n    a.user_name,\n    a.address,\n    a.netmask,\n    a.auth_method,\n    a.options,\n    a.error\n   FROM pg_hba_file_rules() a(line_number, type, database, user_name, address, netmask, auth_method, options, error);\n                             SELECT a.line_number,\n    a.type,\n    a.database,\n    a.user_name,\n    a.address,\n    a.netmask,\n    a.auth_method,\n    a.options,\n    a.error\n   FROM pg_hba_file_rules() a(line_number, type, database, user_name, address, netmask, auth_method, options, error);\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS object_schema,\n    x.objname AS object_name,\n    (x.objtype)::information_schema.character_data AS object_type,\n    (x.objdtdid)::information_schema.sql_identifier AS collection_type_identifier,\n    (\n        CASE\n            WHEN (nbt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(bt.oid, NULL::integer)\n            ELSE &apos;USER-DEFINED&apos;::text\n        END)::information_schema.character_data AS data_type,\n    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,\n    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (\n        CASE\n            WHEN (nco.nspname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS collation_catalog,\n    (nco.nspname)::information_schema.sql_identifier AS collation_schema,\n    (co.collname)::information_schema.sql_identifier AS collation_name,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,\n    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,\n    (NULL::character varying)::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (NULL::character varying)::information_schema.character_data AS domain_default,\n    (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nbt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (bt.typname)::information_schema.sql_identifier AS udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    ((&apos;a&apos;::text || (x.objdtdid)::text))::information_schema.sql_identifier AS dtd_identifier\n   FROM pg_namespace n,\n    pg_type at,\n    pg_namespace nbt,\n    pg_type bt,\n    (( SELECT c.relnamespace,\n            (c.relname)::information_schema.sql_identifier AS relname,\n                CASE\n                    WHEN (c.relkind = &apos;c&apos;::&quot;char&quot;) THEN &apos;USER-DEFINED TYPE&apos;::text\n                    ELSE &apos;TABLE&apos;::text\n                END AS &quot;case&quot;,\n            a.attnum,\n            a.atttypid,\n            a.attcollation\n           FROM pg_class c,\n            pg_attribute a\n          WHERE ((c.oid = a.attrelid) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;c&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (a.attnum &gt; 0) AND (NOT a.attisdropped))\n        UNION ALL\n         SELECT t.typnamespace,\n            (t.typname)::information_schema.sql_identifier AS typname,\n            &apos;DOMAIN&apos;::text AS text,\n            1,\n            t.typbasetype,\n            t.typcollation\n           FROM pg_type t\n          WHERE (t.typtype = &apos;d&apos;::&quot;char&quot;)\n        UNION ALL\n         SELECT ss.pronamespace,\n            (nameconcatoid(ss.proname, ss.oid))::information_schema.sql_identifier AS nameconcatoid,\n            &apos;ROUTINE&apos;::text AS text,\n            (ss.x).n AS n,\n            (ss.x).x AS x,\n            0\n           FROM ( SELECT p.pronamespace,\n                    p.proname,\n                    p.oid,\n                    information_schema._pg_expandarray(COALESCE(p.proallargtypes, (p.proargtypes)::oid[])) AS x\n                   FROM pg_proc p) ss\n        UNION ALL\n         SELECT p.pronamespace,\n            (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS nameconcatoid,\n            &apos;ROUTINE&apos;::text AS text,\n            0,\n            p.prorettype,\n            0\n           FROM pg_proc p) x(objschema, objname, objtype, objdtdid, objtypeid, objcollation)\n     LEFT JOIN (pg_collation co\n     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((x.objcollation = co.oid) AND ((nco.nspname &lt;&gt; &apos;pg_catalog&apos;::name) OR (co.collname &lt;&gt; &apos;default&apos;::name)))))\n  WHERE ((n.oid = x.objschema) AND (at.oid = x.objtypeid) AND ((at.typelem &lt;&gt; (0)::oid) AND (at.typlen = &apos;-1&apos;::integer)) AND (at.typelem = bt.oid) AND (nbt.oid = bt.typnamespace) AND ((n.nspname, (x.objname)::name, x.objtype, ((x.objdtdid)::information_schema.sql_identifier)::name) IN ( SELECT data_type_privileges.object_schema,\n            data_type_privileges.object_name,\n            data_type_privileges.object_type,\n            data_type_privileges.dtd_identifier\n           FROM information_schema.data_type_privileges)));\n                             SELECT (current_database())::information_schema.sql_identifier AS object_catalog,\n    (n.nspname)::information_schema.sql_identifier AS object_schema,\n    x.objname AS object_name,\n    (x.objtype)::information_schema.character_data AS object_type,\n    (x.objdtdid)::information_schema.sql_identifier AS collection_type_identifier,\n    (\n        CASE\n            WHEN (nbt.nspname = &apos;pg_catalog&apos;::name) THEN format_type(bt.oid, NULL::integer)\n            ELSE &apos;USER-DEFINED&apos;::text\n        END)::information_schema.character_data AS data_type,\n    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,\n    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,\n    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,\n    (NULL::name)::information_schema.sql_identifier AS character_set_schema,\n    (NULL::name)::information_schema.sql_identifier AS character_set_name,\n    (\n        CASE\n            WHEN (nco.nspname IS NOT NULL) THEN current_database()\n            ELSE NULL::name\n        END)::information_schema.sql_identifier AS collation_catalog,\n    (nco.nspname)::information_schema.sql_identifier AS collation_schema,\n    (co.collname)::information_schema.sql_identifier AS collation_name,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,\n    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,\n    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,\n    (NULL::character varying)::information_schema.character_data AS interval_type,\n    (NULL::integer)::information_schema.cardinal_number AS interval_precision,\n    (NULL::character varying)::information_schema.character_data AS domain_default,\n    (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nbt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (bt.typname)::information_schema.sql_identifier AS udt_name,\n    (NULL::name)::information_schema.sql_identifier AS scope_catalog,\n    (NULL::name)::information_schema.sql_identifier AS scope_schema,\n    (NULL::name)::information_schema.sql_identifier AS scope_name,\n    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,\n    ((&apos;a&apos;::text || (x.objdtdid)::text))::information_schema.sql_identifier AS dtd_identifier\n   FROM pg_namespace n,\n    pg_type at,\n    pg_namespace nbt,\n    pg_type bt,\n    (( SELECT c.relnamespace,\n            (c.relname)::information_schema.sql_identifier AS relname,\n                CASE\n                    WHEN (c.relkind = &apos;c&apos;::&quot;char&quot;) THEN &apos;USER-DEFINED TYPE&apos;::text\n                    ELSE &apos;TABLE&apos;::text\n                END AS &quot;case&quot;,\n            a.attnum,\n            a.atttypid,\n            a.attcollation\n           FROM pg_class c,\n            pg_attribute a\n          WHERE ((c.oid = a.attrelid) AND (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;v&apos;::&quot;char&quot;, &apos;f&apos;::&quot;char&quot;, &apos;c&apos;::&quot;char&quot;, &apos;p&apos;::&quot;char&quot;])) AND (a.attnum &gt; 0) AND (NOT a.attisdropped))\n        UNION ALL\n         SELECT t.typnamespace,\n            (t.typname)::information_schema.sql_identifier AS typname,\n            &apos;DOMAIN&apos;::text AS text,\n            1,\n            t.typbasetype,\n            t.typcollation\n           FROM pg_type t\n          WHERE (t.typtype = &apos;d&apos;::&quot;char&quot;)\n        UNION ALL\n         SELECT ss.pronamespace,\n            (nameconcatoid(ss.proname, ss.oid))::information_schema.sql_identifier AS nameconcatoid,\n            &apos;ROUTINE&apos;::text AS text,\n            (ss.x).n AS n,\n            (ss.x).x AS x,\n            0\n           FROM ( SELECT p.pronamespace,\n                    p.proname,\n                    p.oid,\n                    information_schema._pg_expandarray(COALESCE(p.proallargtypes, (p.proargtypes)::oid[])) AS x\n                   FROM pg_proc p) ss\n        UNION ALL\n         SELECT p.pronamespace,\n            (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS nameconcatoid,\n            &apos;ROUTINE&apos;::text AS text,\n            0,\n            p.prorettype,\n            0\n           FROM pg_proc p) x(objschema, objname, objtype, objdtdid, objtypeid, objcollation)\n     LEFT JOIN (pg_collation co\n     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((x.objcollation = co.oid) AND ((nco.nspname &lt;&gt; &apos;pg_catalog&apos;::name) OR (co.collname &lt;&gt; &apos;default&apos;::name)))))\n  WHERE ((n.oid = x.objschema) AND (at.oid = x.objtypeid) AND ((at.typelem &lt;&gt; (0)::oid) AND (at.typlen = &apos;-1&apos;::integer)) AND (at.typelem = bt.oid) AND (nbt.oid = bt.typnamespace) AND ((n.nspname, (x.objname)::name, x.objtype, ((x.objdtdid)::information_schema.sql_identifier)::name) IN ( SELECT data_type_privileges.object_schema,\n            data_type_privileges.object_name,\n            data_type_privileges.object_type,\n            data_type_privileges.dtd_identifier\n           FROM information_schema.data_type_privileges)));\n                        ": "",
    "\n                             SELECT c.oid AS relid,\n    n.nspname AS schemaname,\n    c.relname,\n    pg_stat_get_numscans(c.oid) AS seq_scan,\n    pg_stat_get_tuples_returned(c.oid) AS seq_tup_read,\n    (sum(pg_stat_get_numscans(i.indexrelid)))::bigint AS idx_scan,\n    ((sum(pg_stat_get_tuples_fetched(i.indexrelid)))::bigint + pg_stat_get_tuples_fetched(c.oid)) AS idx_tup_fetch,\n    pg_stat_get_tuples_inserted(c.oid) AS n_tup_ins,\n    pg_stat_get_tuples_updated(c.oid) AS n_tup_upd,\n    pg_stat_get_tuples_deleted(c.oid) AS n_tup_del,\n    pg_stat_get_tuples_hot_updated(c.oid) AS n_tup_hot_upd,\n    pg_stat_get_live_tuples(c.oid) AS n_live_tup,\n    pg_stat_get_dead_tuples(c.oid) AS n_dead_tup,\n    pg_stat_get_mod_since_analyze(c.oid) AS n_mod_since_analyze,\n    pg_stat_get_last_vacuum_time(c.oid) AS last_vacuum,\n    pg_stat_get_last_autovacuum_time(c.oid) AS last_autovacuum,\n    pg_stat_get_last_analyze_time(c.oid) AS last_analyze,\n    pg_stat_get_last_autoanalyze_time(c.oid) AS last_autoanalyze,\n    pg_stat_get_vacuum_count(c.oid) AS vacuum_count,\n    pg_stat_get_autovacuum_count(c.oid) AS autovacuum_count,\n    pg_stat_get_analyze_count(c.oid) AS analyze_count,\n    pg_stat_get_autoanalyze_count(c.oid) AS autoanalyze_count\n   FROM ((pg_class c\n     LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;t&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;]))\n  GROUP BY c.oid, n.nspname, c.relname;\n                             SELECT c.oid AS relid,\n    n.nspname AS schemaname,\n    c.relname,\n    pg_stat_get_numscans(c.oid) AS seq_scan,\n    pg_stat_get_tuples_returned(c.oid) AS seq_tup_read,\n    (sum(pg_stat_get_numscans(i.indexrelid)))::bigint AS idx_scan,\n    ((sum(pg_stat_get_tuples_fetched(i.indexrelid)))::bigint + pg_stat_get_tuples_fetched(c.oid)) AS idx_tup_fetch,\n    pg_stat_get_tuples_inserted(c.oid) AS n_tup_ins,\n    pg_stat_get_tuples_updated(c.oid) AS n_tup_upd,\n    pg_stat_get_tuples_deleted(c.oid) AS n_tup_del,\n    pg_stat_get_tuples_hot_updated(c.oid) AS n_tup_hot_upd,\n    pg_stat_get_live_tuples(c.oid) AS n_live_tup,\n    pg_stat_get_dead_tuples(c.oid) AS n_dead_tup,\n    pg_stat_get_mod_since_analyze(c.oid) AS n_mod_since_analyze,\n    pg_stat_get_last_vacuum_time(c.oid) AS last_vacuum,\n    pg_stat_get_last_autovacuum_time(c.oid) AS last_autovacuum,\n    pg_stat_get_last_analyze_time(c.oid) AS last_analyze,\n    pg_stat_get_last_autoanalyze_time(c.oid) AS last_autoanalyze,\n    pg_stat_get_vacuum_count(c.oid) AS vacuum_count,\n    pg_stat_get_autovacuum_count(c.oid) AS autovacuum_count,\n    pg_stat_get_analyze_count(c.oid) AS analyze_count,\n    pg_stat_get_autoanalyze_count(c.oid) AS autoanalyze_count\n   FROM ((pg_class c\n     LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))\n     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n  WHERE (c.relkind = ANY (ARRAY[&apos;r&apos;::&quot;char&quot;, &apos;t&apos;::&quot;char&quot;, &apos;m&apos;::&quot;char&quot;]))\n  GROUP BY c.oid, n.nspname, c.relname;\n                        ": "",
    "\n                             SELECT DISTINCT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nv.nspname)::information_schema.sql_identifier AS table_schema,\n    (v.relname)::information_schema.sql_identifier AS table_name,\n    (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (np.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name\n   FROM pg_namespace nv,\n    pg_class v,\n    pg_depend dv,\n    pg_depend dp,\n    pg_proc p,\n    pg_namespace np\n  WHERE ((nv.oid = v.relnamespace) AND (v.relkind = &apos;v&apos;::&quot;char&quot;) AND (v.oid = dv.refobjid) AND (dv.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dv.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dv.deptype = &apos;i&apos;::&quot;char&quot;) AND (dv.objid = dp.objid) AND (dp.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dp.refclassid = (&apos;pg_proc&apos;::regclass)::oid) AND (dp.refobjid = p.oid) AND (p.pronamespace = np.oid) AND pg_has_role(p.proowner, &apos;USAGE&apos;::text));\n                             SELECT DISTINCT (current_database())::information_schema.sql_identifier AS table_catalog,\n    (nv.nspname)::information_schema.sql_identifier AS table_schema,\n    (v.relname)::information_schema.sql_identifier AS table_name,\n    (current_database())::information_schema.sql_identifier AS specific_catalog,\n    (np.nspname)::information_schema.sql_identifier AS specific_schema,\n    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name\n   FROM pg_namespace nv,\n    pg_class v,\n    pg_depend dv,\n    pg_depend dp,\n    pg_proc p,\n    pg_namespace np\n  WHERE ((nv.oid = v.relnamespace) AND (v.relkind = &apos;v&apos;::&quot;char&quot;) AND (v.oid = dv.refobjid) AND (dv.refclassid = (&apos;pg_class&apos;::regclass)::oid) AND (dv.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dv.deptype = &apos;i&apos;::&quot;char&quot;) AND (dv.objid = dp.objid) AND (dp.classid = (&apos;pg_rewrite&apos;::regclass)::oid) AND (dp.refclassid = (&apos;pg_proc&apos;::regclass)::oid) AND (dp.refobjid = p.oid) AND (p.pronamespace = np.oid) AND pg_has_role(p.proowner, &apos;USAGE&apos;::text));\n                        ": "",
    "\n                             SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nbt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (bt.typname)::information_schema.sql_identifier AS udt_name,\n    (current_database())::information_schema.sql_identifier AS domain_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS domain_schema,\n    (t.typname)::information_schema.sql_identifier AS domain_name\n   FROM pg_type t,\n    pg_namespace nt,\n    pg_type bt,\n    pg_namespace nbt\n  WHERE ((t.typnamespace = nt.oid) AND (t.typbasetype = bt.oid) AND (bt.typnamespace = nbt.oid) AND (t.typtype = &apos;d&apos;::&quot;char&quot;) AND pg_has_role(bt.typowner, &apos;USAGE&apos;::text));\n                             SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,\n    (nbt.nspname)::information_schema.sql_identifier AS udt_schema,\n    (bt.typname)::information_schema.sql_identifier AS udt_name,\n    (current_database())::information_schema.sql_identifier AS domain_catalog,\n    (nt.nspname)::information_schema.sql_identifier AS domain_schema,\n    (t.typname)::information_schema.sql_identifier AS domain_name\n   FROM pg_type t,\n    pg_namespace nt,\n    pg_type bt,\n    pg_namespace nbt\n  WHERE ((t.typnamespace = nt.oid) AND (t.typbasetype = bt.oid) AND (bt.typnamespace = nbt.oid) AND (t.typtype = &apos;d&apos;::&quot;char&quot;) AND pg_has_role(bt.typowner, &apos;USAGE&apos;::text));\n                        ": "",
    "\n                             SELECT pg_statio_all_indexes.relid,\n    pg_statio_all_indexes.indexrelid,\n    pg_statio_all_indexes.schemaname,\n    pg_statio_all_indexes.relname,\n    pg_statio_all_indexes.indexrelname,\n    pg_statio_all_indexes.idx_blks_read,\n    pg_statio_all_indexes.idx_blks_hit\n   FROM pg_statio_all_indexes\n  WHERE ((pg_statio_all_indexes.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_statio_all_indexes.schemaname ~ &apos;^pg_toast&apos;::text));\n                             SELECT pg_statio_all_indexes.relid,\n    pg_statio_all_indexes.indexrelid,\n    pg_statio_all_indexes.schemaname,\n    pg_statio_all_indexes.relname,\n    pg_statio_all_indexes.indexrelname,\n    pg_statio_all_indexes.idx_blks_read,\n    pg_statio_all_indexes.idx_blks_hit\n   FROM pg_statio_all_indexes\n  WHERE ((pg_statio_all_indexes.schemaname = ANY (ARRAY[&apos;pg_catalog&apos;::name, &apos;information_schema&apos;::name])) OR (pg_statio_all_indexes.schemaname ~ &apos;^pg_toast&apos;::text));\n                        ": "",
    "\n                            $libdir/latin2_and_win1250\n                            $libdir/latin2_and_win1250\n                        ": "",
    "\n                            $libdir/utf8_and_sjis2004\n                            $libdir/utf8_and_sjis2004\n                        ": "",
    "\n                            $libdir/euc_kr_and_mic\n                            $libdir/euc_kr_and_mic\n                        ": "",
    "\n                            $libdir/dict_snowball\n                            $libdir/dict_snowball\n                        ": "",
    "\n                            $libdir/utf8_and_sjis\n                            $libdir/utf8_and_sjis\n                        ": "",
    "\n                            $libdir/utf8_and_johab\n                            $libdir/utf8_and_johab\n                        ": "",
    "\n                            $libdir/euc_jp_and_sjis\n                            $libdir/euc_jp_and_sjis\n                        ": "",
    "\n                            $libdir/latin_and_mic\n                            $libdir/latin_and_mic\n                        ": "",
    "\n                            $libdir/utf8_and_ascii\n                            $libdir/utf8_and_ascii\n                        ": "",
    "\n                            $libdir/utf8_and_euc_tw\n                            $libdir/utf8_and_euc_tw\n                        ": "",
    "\n                            $libdir/utf8_and_euc2004\n                            $libdir/utf8_and_euc2004\n                        ": "",
    "\n                            $libdir/euc_cn_and_mic\n                            $libdir/euc_cn_and_mic\n                        ": "",
    "\n                            $libdir/utf8_and_euc_cn\n                            $libdir/utf8_and_euc_cn\n                        ": "",
    "\n                            $libdir/utf8_and_gb18030\n                            $libdir/utf8_and_gb18030\n                        ": "",
    "\n                            $libdir/utf8_and_win\n                            $libdir/utf8_and_win\n                        ": "",
    "\n                            $libdir/utf8_and_uhc\n                            $libdir/utf8_and_uhc\n                        ": "",
    "\n                            $libdir/utf8_and_cyrillic\n                            $libdir/utf8_and_cyrillic\n                        ": "",
    "\n                            $libdir/euc2004_sjis2004\n                            $libdir/euc2004_sjis2004\n                        ": "",
    "\n                            $libdir/ascii_and_mic\n                            $libdir/ascii_and_mic\n                        ": "",
    "\n                            $libdir/utf8_and_euc_kr\n                            $libdir/utf8_and_euc_kr\n                        ": "",
    "\n                            $libdir/utf8_and_iso8859\n                            $libdir/utf8_and_iso8859\n                        ": "",
    "\n                            $libdir/utf8_and_euc_jp\n                            $libdir/utf8_and_euc_jp\n                        ": "",
    "\n                            $libdir/utf8_and_iso8859_1\n                            $libdir/utf8_and_iso8859_1\n                        ": "",
    "\n                            $libdir/utf8_and_gbk\n                            $libdir/utf8_and_gbk\n                        ": "",
    "\n                            $libdir/cyrillic_and_mic\n                            $libdir/cyrillic_and_mic\n                        ": "",
    "\n                            $libdir/utf8_and_big5\n                            $libdir/utf8_and_big5\n                        ": "",
    "\n                            $libdir/euc_tw_and_big5\n                            $libdir/euc_tw_and_big5\n                        ": "",
    "\n                            circle_right\n                            circle_right\n                        ": "",
    "\n                            bool_and\n                            bool_and\n                        ": "",
    "\n                            language_handler_in\n                            language_handler_in\n                        ": "",
    "\n                            line_intersect\n                            line_intersect\n                        ": "",
    "\n                            macaddr_not\n                            macaddr_not\n                        ": "",
    "\n                            nameicregexeq\n                            nameicregexeq\n                        ": "",
    "\n                            dsynonym_init\n                            dsynonym_init\n                        ": "",
    "\n                            timestamptz_gt_timestamp\n                            timestamptz_gt_timestamp\n                        ": "",
    "\n                            tsvector_gt\n                            tsvector_gt\n                        ": "",
    "\n                            xml_is_well_formed_document\n                            xml_is_well_formed_document\n                        ": "",
    "\n                            timestamp_mi\n                            timestamp_mi\n                        ": "",
    "\n                            pg_walfile_name_offset\n                            pg_walfile_name_offset\n                        ": "",
    "\n                            path_send\n                            path_send\n                        ": "",
    "\n                            pg_replication_origin_xact_setup\n                            pg_replication_origin_xact_setup\n                        ": "",
    "\n                            pg_identify_object\n                            pg_identify_object\n                        ": "",
    "\n                            int8div\n                            int8div\n                        ": "",
    "\n                            pg_stat_clear_snapshot\n                            pg_stat_clear_snapshot\n                        ": "",
    "\n                            pg_stat_get_backend_dbid\n                            pg_stat_get_backend_dbid\n                        ": "",
    "\n                            txid_snapshot_in\n                            txid_snapshot_in\n                        ": "",
    "\n                            textregexeq_support\n                            textregexeq_support\n                        ": "",
    "\n                            uuid_sortsupport\n                            uuid_sortsupport\n                        ": "",
    "\n                            round\n                            round\n                        ": "",
    "\n                            cash_mul_int2\n                            cash_mul_int2\n                        ": "",
    "\n                            gin_extract_tsvector\n                            gin_extract_tsvector\n                        ": "",
    "\n                            network_gt\n                            network_gt\n                        ": "",
    "\n                            pg_current_logfile\n                            pg_current_logfile\n                        ": "",
    "\n                            cidin\n                            cidin\n                        ": "",
    "\n                            time_mi_interval\n                            time_mi_interval\n                        ": "",
    "\n                            int8shr\n                            int8shr\n                        ": "",
    "\n                            pg_show_all_settings\n                            pg_show_all_settings\n                        ": "",
    "\n                            poly_above\n                            poly_above\n                        ": "",
    "\n                            poly_overbelow\n                            poly_overbelow\n                        ": "",
    "\n                            date_trunc\n                            date_trunc\n                        ": "",
    "\n                            range_gist_consistent\n                            range_gist_consistent\n                        ": "",
    "\n                            timestamptz_in\n                            timestamptz_in\n                        ": "",
    "\n                            rtrim\n                            rtrim\n                        ": "",
    "\n                            atan2d\n                            atan2d\n                        ": "",
    "\n                            line_perp\n                            line_perp\n                        ": "",
    "\n                            int82mul\n                            int82mul\n                        ": "",
    "\n                            regoperatorin\n                            regoperatorin\n                        ": "",
    "\n                            oidvectorge\n                            oidvectorge\n                        ": "",
    "\n                            lo_export\n                            lo_export\n                        ": "",
    "\n                            timedate_pl\n                            timedate_pl\n                        ": "",
    "\n                            array_send\n                            array_send\n                        ": "",
    "\n                            pg_stat_get_checkpoint_sync_time\n                            pg_stat_get_checkpoint_sync_time\n                        ": "",
    "\n                            latin3_to_mic\n                            latin3_to_mic\n                        ": "",
    "\n                            enum_ne\n                            enum_ne\n                        ": "",
    "\n                            float4ge\n                            float4ge\n                        ": "",
    "\n                            hashmacaddrextended\n                            hashmacaddrextended\n                        ": "",
    "\n                            tsvector_update_trigger\n                            tsvector_update_trigger\n                        ": "",
    "\n                            hashoid\n                            hashoid\n                        ": "",
    "\n                            cash_div_int4\n                            cash_div_int4\n                        ": "",
    "\n                            array_remove\n                            array_remove\n                        ": "",
    "\n                            prsd_end\n                            prsd_end\n                        ": "",
    "\n                            pg_stat_get_last_analyze_time\n                            pg_stat_get_last_analyze_time\n                        ": "",
    "\n                            int84eq\n                            int84eq\n                        ": "",
    "\n                            brinhandler\n                            brinhandler\n                        ": "",
    "\n                            time_lt\n                            time_lt\n                        ": "",
    "\n                            pg_try_advisory_lock_shared\n                            pg_try_advisory_lock_shared\n                        ": "",
    "\n                            scalarltsel\n                            scalarltsel\n                        ": "",
    "\n                            timestamptypmodin\n                            timestamptypmodin\n                        ": "",
    "\n                            icregexnesel\n                            icregexnesel\n                        ": "",
    "\n                            cash_send\n                            cash_send\n                        ": "",
    "\n                            varbitge\n                            varbitge\n                        ": "",
    "\n                            jsonb_send\n                            jsonb_send\n                        ": "",
    "\n                            on_ppath\n                            on_ppath\n                        ": "",
    "\n                            cidout\n                            cidout\n                        ": "",
    "\n                            line_send\n                            line_send\n                        ": "",
    "\n                            txid_visible_in_snapshot\n                            txid_visible_in_snapshot\n                        ": "",
    "\n                            cursor_to_xmlschema\n                            cursor_to_xmlschema\n                        ": "",
    "\n                            namege\n                            namege\n                        ": "",
    "\n                            pg_export_snapshot\n                            pg_export_snapshot\n                        ": "",
    "\n                            table_to_xml\n                            table_to_xml\n                        ": "",
    "\n                            pg_stat_get_xact_tuples_updated\n                            pg_stat_get_xact_tuples_updated\n                        ": "",
    "\n                            timestamptz_gt_date\n                            timestamptz_gt_date\n                        ": "",
    "\n                            inet_spg_config\n                            inet_spg_config\n                        ": "",
    "\n                            dist_pc\n                            dist_pc\n                        ": "",
    "\n                            win1251_to_koi8r\n                            win1251_to_koi8r\n                        ": "",
    "\n                            uuid_send\n                            uuid_send\n                        ": "",
    "\n                            lo_from_bytea\n                            lo_from_bytea\n                        ": "",
    "\n                            inet_gist_compress\n                            inet_gist_compress\n                        ": "",
    "\n                            int2mod\n                            int2mod\n                        ": "",
    "\n                            neqjoinsel\n                            neqjoinsel\n                        ": "",
    "\n                            pg_relation_is_publishable\n                            pg_relation_is_publishable\n                        ": "",
    "\n                            pg_stat_get_backend_client_port\n                            pg_stat_get_backend_client_port\n                        ": "",
    "\n                            int42mul\n                            int42mul\n                        ": "",
    "\n                            pg_logical_slot_peek_changes\n                            pg_logical_slot_peek_changes\n                        ": "",
    "\n                            pg_rotate_logfile_old\n                            pg_rotate_logfile_old\n                        ": "",
    "\n                            pg_is_wal_replay_paused\n                            pg_is_wal_replay_paused\n                        ": "",
    "\n                            array_gt\n                            array_gt\n                        ": "",
    "\n                            cstring_in\n                            cstring_in\n                        ": "",
    "\n                            int42ge\n                            int42ge\n                        ": "",
    "\n                            circle_out\n                            circle_out\n                        ": "",
    "\n                            gtsquery_consistent\n                            gtsquery_consistent\n                        ": "",
    "\n                            to_regclass\n                            to_regclass\n                        ": "",
    "\n                            path_distance\n                            path_distance\n                        ": "",
    "\n                            xidneq\n                            xidneq\n                        ": "",
    "\n                            gist_box_picksplit\n                            gist_box_picksplit\n                        ": "",
    "\n                            jsonb_eq\n                            jsonb_eq\n                        ": "",
    "\n                            timestamptz_cmp_date\n                            timestamptz_cmp_date\n                        ": "",
    "\n                            path_n_lt\n                            path_n_lt\n                        ": "",
    "\n                            float8_stddev_pop\n                            float8_stddev_pop\n                        ": "",
    "\n                            xidneqint4\n                            xidneqint4\n                        ": "",
    "\n                            int28ge\n                            int28ge\n                        ": "",
    "\n                            pg_stat_get_tuples_inserted\n                            pg_stat_get_tuples_inserted\n                        ": "",
    "\n                            lseg_eq\n                            lseg_eq\n                        ": "",
    "\n                            win1250_to_mic\n                            win1250_to_mic\n                        ": "",
    "\n                            byteale\n                            byteale\n                        ": "",
    "\n                            inet_spg_picksplit\n                            inet_spg_picksplit\n                        ": "",
    "\n                            texticregexne\n                            texticregexne\n                        ": "",
    "\n                            radius\n                            radius\n                        ": "",
    "\n                            stddev_samp\n                            stddev_samp\n                        ": "",
    "\n                            circle_ne\n                            circle_ne\n                        ": "",
    "\n                            pg_encoding_max_length\n                            pg_encoding_max_length\n                        ": "",
    "\n                            int4gt\n                            int4gt\n                        ": "",
    "\n                            upper_inf\n                            upper_inf\n                        ": "",
    "\n                            abs\n                            abs\n                        ": "",
    "\n                            btarraycmp\n                            btarraycmp\n                        ": "",
    "\n                            binary_upgrade_set_next_toast_pg_class_oid\n                            binary_upgrade_set_next_toast_pg_class_oid\n                        ": "",
    "\n                            array_agg\n                            array_agg\n                        ": "",
    "\n                            float8ge\n                            float8ge\n                        ": "",
    "\n                            float84pl\n                            float84pl\n                        ": "",
    "\n                            gist_circle_compress\n                            gist_circle_compress\n                        ": "",
    "\n                            circle_gt\n                            circle_gt\n                        ": "",
    "\n                            range_ne\n                            range_ne\n                        ": "",
    "\n                            jsonb_path_exists_opr\n                            jsonb_path_exists_opr\n                        ": "",
    "\n                            pg_read_file\n                            pg_read_file\n                        ": "",
    "\n                            text_lt\n                            text_lt\n                        ": "",
    "\n                            pg_stat_get_db_deadlocks\n                            pg_stat_get_db_deadlocks\n                        ": "",
    "\n                            phraseto_tsquery\n                            phraseto_tsquery\n                        ": "",
    "\n                            hashfloat8\n                            hashfloat8\n                        ": "",
    "\n                            float8_regr_avgy\n                            float8_regr_avgy\n                        ": "",
    "\n                            jsonb_hash_extended\n                            jsonb_hash_extended\n                        ": "",
    "\n                            to_char\n                            to_char\n                        ": "",
    "\n                            jsonb_set\n                            jsonb_set\n                        ": "",
    "\n                            line_vertical\n                            line_vertical\n                        ": "",
    "\n                            jsonb_object_agg\n                            jsonb_object_agg\n                        ": "",
    "\n                            int2smaller\n                            int2smaller\n                        ": "",
    "\n                            int2eq\n                            int2eq\n                        ": "",
    "\n                            pg_get_functiondef\n                            pg_get_functiondef\n                        ": "",
    "\n                            similar_escape\n                            similar_escape\n                        ": "",
    "\n                            sinh\n                            sinh\n                        ": "",
    "\n                            gist_point_consistent\n                            gist_point_consistent\n                        ": "",
    "\n                            pg_stat_get_xact_function_calls\n                            pg_stat_get_xact_function_calls\n                        ": "",
    "\n                            int4eq\n                            int4eq\n                        ": "",
    "\n                            pg_start_backup\n                            pg_start_backup\n                        ": "",
    "\n                            interval_combine\n                            interval_combine\n                        ": "",
    "\n                            timestamptztypmodin\n                            timestamptztypmodin\n                        ": "",
    "\n                            row_security_active\n                            row_security_active\n                        ": "",
    "\n                            int8_mul_cash\n                            int8_mul_cash\n                        ": "",
    "\n                            tsquery_eq\n                            tsquery_eq\n                        ": "",
    "\n                            has_database_privilege\n                            has_database_privilege\n                        ": "",
    "\n                            int48gt\n                            int48gt\n                        ": "",
    "\n                            point_in\n                            point_in\n                        ": "",
    "\n                            varchartypmodout\n                            varchartypmodout\n                        ": "",
    "\n                            pg_stat_get_backend_client_addr\n                            pg_stat_get_backend_client_addr\n                        ": "",
    "\n                            pg_stop_backup\n                            pg_stop_backup\n                        ": "",
    "\n                            float8_regr_slope\n                            float8_regr_slope\n                        ": "",
    "\n                            int2mi\n                            int2mi\n                        ": "",
    "\n                            path_length\n                            path_length\n                        ": "",
    "\n                            xideq\n                            xideq\n                        ": "",
    "\n                            btoidsortsupport\n                            btoidsortsupport\n                        ": "",
    "\n                            timestamp_le_timestamptz\n                            timestamp_le_timestamptz\n                        ": "",
    "\n                            date_ge\n                            date_ge\n                        ": "",
    "\n                            poly_right\n                            poly_right\n                        ": "",
    "\n                            line_in\n                            line_in\n                        ": "",
    "\n                            float4send\n                            float4send\n                        ": "",
    "\n                            pg_nextoid\n                            pg_nextoid\n                        ": "",
    "\n                            inet_out\n                            inet_out\n                        ": "",
    "\n                            enum_eq\n                            enum_eq\n                        ": "",
    "\n                            isempty\n                            isempty\n                        ": "",
    "\n                            prsd_nexttoken\n                            prsd_nexttoken\n                        ": "",
    "\n                            tsvector_le\n                            tsvector_le\n                        ": "",
    "\n                            dsimple_lexize\n                            dsimple_lexize\n                        ": "",
    "\n                            path_n_eq\n                            path_n_eq\n                        ": "",
    "\n                            iso8859_1_to_utf8\n                            iso8859_1_to_utf8\n                        ": "",
    "\n                            pg_event_trigger_table_rewrite_oid\n                            pg_event_trigger_table_rewrite_oid\n                        ": "",
    "\n                            bitgt\n                            bitgt\n                        ": "",
    "\n                            nameregexeq\n                            nameregexeq\n                        ": "",
    "\n                            pg_partition_root\n                            pg_partition_root\n                        ": "",
    "\n                            setweight\n                            setweight\n                        ": "",
    "\n                            int4not\n                            int4not\n                        ": "",
    "\n                            numeric_gt\n                            numeric_gt\n                        ": "",
    "\n                            gtsvector_penalty\n                            gtsvector_penalty\n                        ": "",
    "\n                            pg_stat_get_bgwriter_maxwritten_clean\n                            pg_stat_get_bgwriter_maxwritten_clean\n                        ": "",
    "\n                            int84gt\n                            int84gt\n                        ": "",
    "\n                            pg_stat_get_wal_receiver\n                            pg_stat_get_wal_receiver\n                        ": "",
    "\n                            hash_range\n                            hash_range\n                        ": "",
    "\n                            range_overlaps\n                            range_overlaps\n                        ": "",
    "\n                            pg_my_temp_schema\n                            pg_my_temp_schema\n                        ": "",
    "\n                            jsonb_to_record\n                            jsonb_to_record\n                        ": "",
    "\n                            cos\n                            cos\n                        ": "",
    "\n                            table_am_handler_out\n                            table_am_handler_out\n                        ": "",
    "\n                            lseg_vertical\n                            lseg_vertical\n                        ": "",
    "\n                            has_server_privilege\n                            has_server_privilege\n                        ": "",
    "\n                            path_mul_pt\n                            path_mul_pt\n                        ": "",
    "\n                            int4out\n                            int4out\n                        ": "",
    "\n                            circle_contain_pt\n                            circle_contain_pt\n                        ": "",
    "\n                            make_timestamptz\n                            make_timestamptz\n                        ": "",
    "\n                            nameicnlike\n                            nameicnlike\n                        ": "",
    "\n                            array_smaller\n                            array_smaller\n                        ": "",
    "\n                            win866_to_mic\n                            win866_to_mic\n                        ": "",
    "\n                            int24pl\n                            int24pl\n                        ": "",
    "\n                            btnamecmp\n                            btnamecmp\n                        ": "",
    "\n                            enum_range\n                            enum_range\n                        ": "",
    "\n                            database_to_xml_and_xmlschema\n                            database_to_xml_and_xmlschema\n                        ": "",
    "\n                            point_distance\n                            point_distance\n                        ": "",
    "\n                            array_in\n                            array_in\n                        ": "",
    "\n                            timetztypmodin\n                            timetztypmodin\n                        ": "",
    "\n                            timetz_in\n                            timetz_in\n                        ": "",
    "\n                            like_escape\n                            like_escape\n                        ": "",
    "\n                            byteane\n                            byteane\n                        ": "",
    "\n                            numeric_var_pop\n                            numeric_var_pop\n                        ": "",
    "\n                            pg_node_tree_out\n                            pg_node_tree_out\n                        ": "",
    "\n                            latin1_to_mic\n                            latin1_to_mic\n                        ": "",
    "\n                            event_trigger_in\n                            event_trigger_in\n                        ": "",
    "\n                            jsonb_ge\n                            jsonb_ge\n                        ": "",
    "\n                            hashtext\n                            hashtext\n                        ": "",
    "\n                            atan\n                            atan\n                        ": "",
    "\n                            timestamp_ne_date\n                            timestamp_ne_date\n                        ": "",
    "\n                            pg_stat_get_xact_tuples_inserted\n                            pg_stat_get_xact_tuples_inserted\n                        ": "",
    "\n                            box_overright\n                            box_overright\n                        ": "",
    "\n                            int48mul\n                            int48mul\n                        ": "",
    "\n                            cosh\n                            cosh\n                        ": "",
    "\n                            pg_relation_filenode\n                            pg_relation_filenode\n                        ": "",
    "\n                            btrim\n                            btrim\n                        ": "",
    "\n                            pg_lsn_gt\n                            pg_lsn_gt\n                        ": "",
    "\n                            num_nonnulls\n                            num_nonnulls\n                        ": "",
    "\n                            texticlike\n                            texticlike\n                        ": "",
    "\n                            pg_tablespace_size\n                            pg_tablespace_size\n                        ": "",
    "\n                            float8_regr_accum\n                            float8_regr_accum\n                        ": "",
    "\n                            hashtextextended\n                            hashtextextended\n                        ": "",
    "\n                            pg_advisory_xact_lock\n                            pg_advisory_xact_lock\n                        ": "",
    "\n                            time_out\n                            time_out\n                        ": "",
    "\n                            _pg_numeric_precision_radix\n                            _pg_numeric_precision_radix\n                        ": "",
    "\n                            cash_ne\n                            cash_ne\n                        ": "",
    "\n                            pg_tablespace_location\n                            pg_tablespace_location\n                        ": "",
    "\n                            pg_extension_update_paths\n                            pg_extension_update_paths\n                        ": "",
    "\n                            line_interpt\n                            line_interpt\n                        ": "",
    "\n                            boolin\n                            boolin\n                        ": "",
    "\n                            btint4sortsupport\n                            btint4sortsupport\n                        ": "",
    "\n                            tsvector_to_array\n                            tsvector_to_array\n                        ": "",
    "\n                            date_cmp_timestamptz\n                            date_cmp_timestamptz\n                        ": "",
    "\n                            regdictionaryrecv\n                            regdictionaryrecv\n                        ": "",
    "\n                            percentile_cont_interval_multi_final\n                            percentile_cont_interval_multi_final\n                        ": "",
    "\n                            _pg_truetypmod\n                            _pg_truetypmod\n                        ": "",
    "\n                            uuid_hash_extended\n                            uuid_hash_extended\n                        ": "",
    "\n                            pg_stat_get_checkpoint_write_time\n                            pg_stat_get_checkpoint_write_time\n                        ": "",
    "\n                            array_ndims\n                            array_ndims\n                        ": "",
    "\n                            bit_and\n                            bit_and\n                        ": "",
    "\n                            shell_in\n                            shell_in\n                        ": "",
    "\n                            nameicregexne\n                            nameicregexne\n                        ": "",
    "\n                            pg_advisory_unlock\n                            pg_advisory_unlock\n                        ": "",
    "\n                            namegetext\n                            namegetext\n                        ": "",
    "\n                            poly_distance\n                            poly_distance\n                        ": "",
    "\n                            pg_stat_get_backend_wait_event_type\n                            pg_stat_get_backend_wait_event_type\n                        ": "",
    "\n                            gtsquery_picksplit\n                            gtsquery_picksplit\n                        ": "",
    "\n                            nameregexne\n                            nameregexne\n                        ": "",
    "\n                            pg_ts_parser_is_visible\n                            pg_ts_parser_is_visible\n                        ": "",
    "\n                            pg_lsn_lt\n                            pg_lsn_lt\n                        ": "",
    "\n                            timestamptz_ge\n                            timestamptz_ge\n                        ": "",
    "\n                            tsvectorout\n                            tsvectorout\n                        ": "",
    "\n                            btint48cmp\n                            btint48cmp\n                        ": "",
    "\n                            any_out\n                            any_out\n                        ": "",
    "\n                            pg_replication_origin_session_progress\n                            pg_replication_origin_session_progress\n                        ": "",
    "\n                            mic_to_latin1\n                            mic_to_latin1\n                        ": "",
    "\n                            tsqueryin\n                            tsqueryin\n                        ": "",
    "\n                            array_eq\n                            array_eq\n                        ": "",
    "\n                            texticregexeq_support\n                            texticregexeq_support\n                        ": "",
    "\n                            numnode\n                            numnode\n                        ": "",
    "\n                            to_regprocedure\n                            to_regprocedure\n                        ": "",
    "\n                            record_recv\n                            record_recv\n                        ": "",
    "\n                            varbitlt\n                            varbitlt\n                        ": "",
    "\n                            age\n                            age\n                        ": "",
    "\n                            mic_to_latin3\n                            mic_to_latin3\n                        ": "",
    "\n                            to_regtype\n                            to_regtype\n                        ": "",
    "\n                            pg_has_role\n                            pg_has_role\n                        ": "",
    "\n                            jsonb_each_text\n                            jsonb_each_text\n                        ": "",
    "\n                            tsqueryrecv\n                            tsqueryrecv\n                        ": "",
    "\n                            int28eq\n                            int28eq\n                        ": "",
    "\n                            hashint8\n                            hashint8\n                        ": "",
    "\n                            pg_logical_slot_get_changes\n                            pg_logical_slot_get_changes\n                        ": "",
    "\n                            float8_var_samp\n                            float8_var_samp\n                        ": "",
    "\n                            jsonb_array_element_text\n                            jsonb_array_element_text\n                        ": "",
    "\n                            bpchargt\n                            bpchargt\n                        ": "",
    "\n                            float8lt\n                            float8lt\n                        ": "",
    "\n                            hashmacaddr8\n                            hashmacaddr8\n                        ": "",
    "\n                            mode_final\n                            mode_final\n                        ": "",
    "\n                            timestamptz_ge_timestamp\n                            timestamptz_ge_timestamp\n                        ": "",
    "\n                            bpcharregexne\n                            bpcharregexne\n                        ": "",
    "\n                            tsquery_lt\n                            tsquery_lt\n                        ": "",
    "\n                            diagonal\n                            diagonal\n                        ": "",
    "\n                            domain_recv\n                            domain_recv\n                        ": "",
    "\n                            macaddr8_or\n                            macaddr8_or\n                        ": "",
    "\n                            int8dec\n                            int8dec\n                        ": "",
    "\n                            integer_pl_date\n                            integer_pl_date\n                        ": "",
    "\n                            float4out\n                            float4out\n                        ": "",
    "\n                            varchar_support\n                            varchar_support\n                        ": "",
    "\n                            txid_current_snapshot\n                            txid_current_snapshot\n                        ": "",
    "\n                            dense_rank\n                            dense_rank\n                        ": "",
    "\n                            uuid_hash\n                            uuid_hash\n                        ": "",
    "\n                            uuid_gt\n                            uuid_gt\n                        ": "",
    "\n                            regopersend\n                            regopersend\n                        ": "",
    "\n                            pg_lsn_eq\n                            pg_lsn_eq\n                        ": "",
    "\n                            uuid_le\n                            uuid_le\n                        ": "",
    "\n                            oidout\n                            oidout\n                        ": "",
    "\n                            pg_control_recovery\n                            pg_control_recovery\n                        ": "",
    "\n                            charne\n                            charne\n                        ": "",
    "\n                            regproceduresend\n                            regproceduresend\n                        ": "",
    "\n                            pg_dependencies_send\n                            pg_dependencies_send\n                        ": "",
    "\n                            float8out\n                            float8out\n                        ": "",
    "\n                            jsonb_delete_path\n                            jsonb_delete_path\n                        ": "",
    "\n                            int24gt\n                            int24gt\n                        ": "",
    "\n                            regtypein\n                            regtypein\n                        ": "",
    "\n                            box_div\n                            box_div\n                        ": "",
    "\n                            regprocedurerecv\n                            regprocedurerecv\n                        ": "",
    "\n                            makeaclitem\n                            makeaclitem\n                        ": "",
    "\n                            inet_client_addr\n                            inet_client_addr\n                        ": "",
    "\n                            datetimetz_pl\n                            datetimetz_pl\n                        ": "",
    "\n                            point_ne\n                            point_ne\n                        ": "",
    "\n                            aclremove\n                            aclremove\n                        ": "",
    "\n                            int2vectorsend\n                            int2vectorsend\n                        ": "",
    "\n                            brin_summarize_new_values\n                            brin_summarize_new_values\n                        ": "",
    "\n                            ginhandler\n                            ginhandler\n                        ": "",
    "\n                            bttext_pattern_sortsupport\n                            bttext_pattern_sortsupport\n                        ": "",
    "\n                            jsonb_array_elements_text\n                            jsonb_array_elements_text\n                        ": "",
    "\n                            text_ge\n                            text_ge\n                        ": "",
    "\n                            regr_slope\n                            regr_slope\n                        ": "",
    "\n                            tsvector_ge\n                            tsvector_ge\n                        ": "",
    "\n                            poly_contain_pt\n                            poly_contain_pt\n                        ": "",
    "\n                            cume_dist\n                            cume_dist\n                        ": "",
    "\n                            int8_accum\n                            int8_accum\n                        ": "",
    "\n                            btfloat84cmp\n                            btfloat84cmp\n                        ": "",
    "\n                            jsonb_ne\n                            jsonb_ne\n                        ": "",
    "\n                            close_pl\n                            close_pl\n                        ": "",
    "\n                            dense_rank_final\n                            dense_rank_final\n                        ": "",
    "\n                            numeric_serialize\n                            numeric_serialize\n                        ": "",
    "\n                            corr\n                            corr\n                        ": "",
    "\n                            acldefault\n                            acldefault\n                        ": "",
    "\n                            int42div\n                            int42div\n                        ": "",
    "\n                            sign\n                            sign\n                        ": "",
    "\n                            timetz_send\n                            timetz_send\n                        ": "",
    "\n                            trigger_out\n                            trigger_out\n                        ": "",
    "\n                            repeat\n                            repeat\n                        ": "",
    "\n                            regexp_split_to_array\n                            regexp_split_to_array\n                        ": "",
    "\n                            int2vectorrecv\n                            int2vectorrecv\n                        ": "",
    "\n                            pg_trigger_depth\n                            pg_trigger_depth\n                        ": "",
    "\n                            lseg_lt\n                            lseg_lt\n                        ": "",
    "\n                            pg_get_ruledef\n                            pg_get_ruledef\n                        ": "",
    "\n                            uuid_out\n                            uuid_out\n                        ": "",
    "\n                            pg_stat_get_numscans\n                            pg_stat_get_numscans\n                        ": "",
    "\n                            interval_avg\n                            interval_avg\n                        ": "",
    "\n                            inet_client_port\n                            inet_client_port\n                        ": "",
    "\n                            numeric_poly_stddev_pop\n                            numeric_poly_stddev_pop\n                        ": "",
    "\n                            range_send\n                            range_send\n                        ": "",
    "\n                            interval_cmp\n                            interval_cmp\n                        ": "",
    "\n                            int82ge\n                            int82ge\n                        ": "",
    "\n                            int28ne\n                            int28ne\n                        ": "",
    "\n                            int28mi\n                            int28mi\n                        ": "",
    "\n                            path_npoints\n                            path_npoints\n                        ": "",
    "\n                            path_out\n                            path_out\n                        ": "",
    "\n                            RI_FKey_cascade_upd\n                            RI_FKey_cascade_upd\n                        ": "",
    "\n                            hashfloat8extended\n                            hashfloat8extended\n                        ": "",
    "\n                            txid_snapshot_xmin\n                            txid_snapshot_xmin\n                        ": "",
    "\n                            int28lt\n                            int28lt\n                        ": "",
    "\n                            query_to_xml_and_xmlschema\n                            query_to_xml_and_xmlschema\n                        ": "",
    "\n                            json_object_field_text\n                            json_object_field_text\n                        ": "",
    "\n                            int4_avg_combine\n                            int4_avg_combine\n                        ": "",
    "\n                            bit_in\n                            bit_in\n                        ": "",
    "\n                            namegttext\n                            namegttext\n                        ": "",
    "\n                            isperp\n                            isperp\n                        ": "",
    "\n                            scalargejoinsel\n                            scalargejoinsel\n                        ": "",
    "\n                            set_config\n                            set_config\n                        ": "",
    "\n                            network_sup\n                            network_sup\n                        ": "",
    "\n                            make_timestamp\n                            make_timestamp\n                        ": "",
    "\n                            int4_accum\n                            int4_accum\n                        ": "",
    "\n                            int2abs\n                            int2abs\n                        ": "",
    "\n                            current_database\n                            current_database\n                        ": "",
    "\n                            text_pattern_gt\n                            text_pattern_gt\n                        ": "",
    "\n                            ts_typanalyze\n                            ts_typanalyze\n                        ": "",
    "\n                            regprocedurein\n                            regprocedurein\n                        ": "",
    "\n                            array_length\n                            array_length\n                        ": "",
    "\n                            btnamesortsupport\n                            btnamesortsupport\n                        ": "",
    "\n                            numeric_add\n                            numeric_add\n                        ": "",
    "\n                            spg_quad_picksplit\n                            spg_quad_picksplit\n                        ": "",
    "\n                            pg_stat_get_backend_activity\n                            pg_stat_get_backend_activity\n                        ": "",
    "\n                            btfloat48cmp\n                            btfloat48cmp\n                        ": "",
    "\n                            pg_get_triggerdef\n                            pg_get_triggerdef\n                        ": "",
    "\n                            int8gt\n                            int8gt\n                        ": "",
    "\n                            lseg_in\n                            lseg_in\n                        ": "",
    "\n                            timestamptz_larger\n                            timestamptz_larger\n                        ": "",
    "\n                            macaddr8_lt\n                            macaddr8_lt\n                        ": "",
    "\n                            every\n                            every\n                        ": "",
    "\n                            charge\n                            charge\n                        ": "",
    "\n                            atan2\n                            atan2\n                        ": "",
    "\n                            txid_status\n                            txid_status\n                        ": "",
    "\n                            interval_accum\n                            interval_accum\n                        ": "",
    "\n                            percent_rank_final\n                            percent_rank_final\n                        ": "",
    "\n                            atanh\n                            atanh\n                        ": "",
    "\n                            poly_contained\n                            poly_contained\n                        ": "",
    "\n                            mic_to_koi8r\n                            mic_to_koi8r\n                        ": "",
    "\n                            numeric_poly_deserialize\n                            numeric_poly_deserialize\n                        ": "",
    "\n                            initcap\n                            initcap\n                        ": "",
    "\n                            pg_show_all_file_settings\n                            pg_show_all_file_settings\n                        ": "",
    "\n                            tsquery_not\n                            tsquery_not\n                        ": "",
    "\n                            concat_ws\n                            concat_ws\n                        ": "",
    "\n                            int8abs\n                            int8abs\n                        ": "",
    "\n                            int8_avg_deserialize\n                            int8_avg_deserialize\n                        ": "",
    "\n                            pg_lsn_in\n                            pg_lsn_in\n                        ": "",
    "\n                            timestamptztypmodout\n                            timestamptztypmodout\n                        ": "",
    "\n                            pg_ls_dir\n                            pg_ls_dir\n                        ": "",
    "\n                            pg_stat_get_tuples_deleted\n                            pg_stat_get_tuples_deleted\n                        ": "",
    "\n                            areajoinsel\n                            areajoinsel\n                        ": "",
    "\n                            count\n                            count\n                        ": "",
    "\n                            anynonarray_out\n                            anynonarray_out\n                        ": "",
    "\n                            pg_mcv_list_send\n                            pg_mcv_list_send\n                        ": "",
    "\n                            iclikesel\n                            iclikesel\n                        ": "",
    "\n                            win866_to_iso\n                            win866_to_iso\n                        ": "",
    "\n                            pg_partition_tree\n                            pg_partition_tree\n                        ": "",
    "\n                            tsvectorsend\n                            tsvectorsend\n                        ": "",
    "\n                            array_dims\n                            array_dims\n                        ": "",
    "\n                            jsonb_to_tsvector\n                            jsonb_to_tsvector\n                        ": "",
    "\n                            has_tablespace_privilege\n                            has_tablespace_privilege\n                        ": "",
    "\n                            varbitle\n                            varbitle\n                        ": "",
    "\n                            set_masklen\n                            set_masklen\n                        ": "",
    "\n                            scalargtjoinsel\n                            scalargtjoinsel\n                        ": "",
    "\n                            anyrange_in\n                            anyrange_in\n                        ": "",
    "\n                            pg_lock_status\n                            pg_lock_status\n                        ": "",
    "\n                            numeric_var_samp\n                            numeric_var_samp\n                        ": "",
    "\n                            string_agg_finalfn\n                            string_agg_finalfn\n                        ": "",
    "\n                            box_overabove\n                            box_overabove\n                        ": "",
    "\n                            pg_current_wal_lsn\n                            pg_current_wal_lsn\n                        ": "",
    "\n                            regexeqsel\n                            regexeqsel\n                        ": "",
    "\n                            cash_ge\n                            cash_ge\n                        ": "",
    "\n                            circle_sub_pt\n                            circle_sub_pt\n                        ": "",
    "\n                            brin_minmax_consistent\n                            brin_minmax_consistent\n                        ": "",
    "\n                            byteaeq\n                            byteaeq\n                        ": "",
    "\n                            range_contains\n                            range_contains\n                        ": "",
    "\n                            uuid_ne\n                            uuid_ne\n                        ": "",
    "\n                            interval_le\n                            interval_le\n                        ": "",
    "\n                            numeric_sub\n                            numeric_sub\n                        ": "",
    "\n                            box_left\n                            box_left\n                        ": "",
    "\n                            pg_stat_get_buf_fsync_backend\n                            pg_stat_get_buf_fsync_backend\n                        ": "",
    "\n                            numeric_abs\n                            numeric_abs\n                        ": "",
    "\n                            int4mul\n                            int4mul\n                        ": "",
    "\n                            pg_postmaster_start_time\n                            pg_postmaster_start_time\n                        ": "",
    "\n                            row_to_json\n                            row_to_json\n                        ": "",
    "\n                            positionjoinsel\n                            positionjoinsel\n                        ": "",
    "\n                            box_lt\n                            box_lt\n                        ": "",
    "\n                            varbittypmodin\n                            varbittypmodin\n                        ": "",
    "\n                            fmgr_c_validator\n                            fmgr_c_validator\n                        ": "",
    "\n                            macaddr_sortsupport\n                            macaddr_sortsupport\n                        ": "",
    "\n                            cidr_send\n                            cidr_send\n                        ": "",
    "\n                            pg_stat_get_bgwriter_stat_reset_time\n                            pg_stat_get_bgwriter_stat_reset_time\n                        ": "",
    "\n                            inet_spg_choose\n                            inet_spg_choose\n                        ": "",
    "\n                            now\n                            now\n                        ": "",
    "\n                            int8or\n                            int8or\n                        ": "",
    "\n                            hash_array_extended\n                            hash_array_extended\n                        ": "",
    "\n                            json_object_agg_transfn\n                            json_object_agg_transfn\n                        ": "",
    "\n                            postgresql_fdw_validator\n                            postgresql_fdw_validator\n                        ": "",
    "\n                            poly_recv\n                            poly_recv\n                        ": "",
    "\n                            texticregexeq\n                            texticregexeq\n                        ": "",
    "\n                            pg_stat_get_db_conflict_bufferpin\n                            pg_stat_get_db_conflict_bufferpin\n                        ": "",
    "\n                            pg_lsn_mi\n                            pg_lsn_mi\n                        ": "",
    "\n                            timetz_smaller\n                            timetz_smaller\n                        ": "",
    "\n                            koi8u_to_utf8\n                            koi8u_to_utf8\n                        ": "",
    "\n                            getdatabaseencoding\n                            getdatabaseencoding\n                        ": "",
    "\n                            setseed\n                            setseed\n                        ": "",
    "\n                            path_contain_pt\n                            path_contain_pt\n                        ": "",
    "\n                            pg_conversion_is_visible\n                            pg_conversion_is_visible\n                        ": "",
    "\n                            hashtid\n                            hashtid\n                        ": "",
    "\n                            float4div\n                            float4div\n                        ": "",
    "\n                            cidrecv\n                            cidrecv\n                        ": "",
    "\n                            xml_is_well_formed\n                            xml_is_well_formed\n                        ": "",
    "\n                            pg_prepared_xact\n                            pg_prepared_xact\n                        ": "",
    "\n                            numeric_poly_sum\n                            numeric_poly_sum\n                        ": "",
    "\n                            float8in\n                            float8in\n                        ": "",
    "\n                            koi8r_to_mic\n                            koi8r_to_mic\n                        ": "",
    "\n                            RI_FKey_restrict_del\n                            RI_FKey_restrict_del\n                        ": "",
    "\n                            _pg_numeric_scale\n                            _pg_numeric_scale\n                        ": "",
    "\n                            time_hash_extended\n                            time_hash_extended\n                        ": "",
    "\n                            utf8_to_koi8u\n                            utf8_to_koi8u\n                        ": "",
    "\n                            to_jsonb\n                            to_jsonb\n                        ": "",
    "\n                            cstring_recv\n                            cstring_recv\n                        ": "",
    "\n                            prefixsel\n                            prefixsel\n                        ": "",
    "\n                            date_part\n                            date_part\n                        ": "",
    "\n                            int8shl\n                            int8shl\n                        ": "",
    "\n                            circle_div_pt\n                            circle_div_pt\n                        ": "",
    "\n                            box_gt\n                            box_gt\n                        ": "",
    "\n                            int84lt\n                            int84lt\n                        ": "",
    "\n                            int84ne\n                            int84ne\n                        ": "",
    "\n                            bit_length\n                            bit_length\n                        ": "",
    "\n                            table_to_xmlschema\n                            table_to_xmlschema\n                        ": "",
    "\n                            record_ne\n                            record_ne\n                        ": "",
    "\n                            cash_eq\n                            cash_eq\n                        ": "",
    "\n                            jsonb_object_field_text\n                            jsonb_object_field_text\n                        ": "",
    "\n                            pg_replication_origin_create\n                            pg_replication_origin_create\n                        ": "",
    "\n                            timestamp_pl_interval\n                            timestamp_pl_interval\n                        ": "",
    "\n                            textlike_support\n                            textlike_support\n                        ": "",
    "\n                            int42ne\n                            int42ne\n                        ": "",
    "\n                            iso_to_win1251\n                            iso_to_win1251\n                        ": "",
    "\n                            to_regnamespace\n                            to_regnamespace\n                        ": "",
    "\n                            bpcharlike\n                            bpcharlike\n                        ": "",
    "\n                            lseg_interpt\n                            lseg_interpt\n                        ": "",
    "\n                            sind\n                            sind\n                        ": "",
    "\n                            time_recv\n                            time_recv\n                        ": "",
    "\n                            cash_pl\n                            cash_pl\n                        ": "",
    "\n                            boolout\n                            boolout\n                        ": "",
    "\n                            varbit_support\n                            varbit_support\n                        ": "",
    "\n                            btcharcmp\n                            btcharcmp\n                        ": "",
    "\n                            byteaout\n                            byteaout\n                        ": "",
    "\n                            numeric_sortsupport\n                            numeric_sortsupport\n                        ": "",
    "\n                            pg_switch_wal\n                            pg_switch_wal\n                        ": "",
    "\n                            hashenum\n                            hashenum\n                        ": "",
    "\n                            sum\n                            sum\n                        ": "",
    "\n                            binary_upgrade_set_next_heap_pg_class_oid\n                            binary_upgrade_set_next_heap_pg_class_oid\n                        ": "",
    "\n                            path_n_gt\n                            path_n_gt\n                        ": "",
    "\n                            spghandler\n                            spghandler\n                        ": "",
    "\n                            jsonb_extract_path_text\n                            jsonb_extract_path_text\n                        ": "",
    "\n                            binary_upgrade_set_next_pg_authid_oid\n                            binary_upgrade_set_next_pg_authid_oid\n                        ": "",
    "\n                            int8and\n                            int8and\n                        ": "",
    "\n                            ts_delete\n                            ts_delete\n                        ": "",
    "\n                            hashint8extended\n                            hashint8extended\n                        ": "",
    "\n                            record_image_gt\n                            record_image_gt\n                        ": "",
    "\n                            log10\n                            log10\n                        ": "",
    "\n                            tstzrange_subdiff\n                            tstzrange_subdiff\n                        ": "",
    "\n                            json_array_length\n                            json_array_length\n                        ": "",
    "\n                            time_send\n                            time_send\n                        ": "",
    "\n                            pg_stat_get_tuples_fetched\n                            pg_stat_get_tuples_fetched\n                        ": "",
    "\n                            to_date\n                            to_date\n                        ": "",
    "\n                            numeric_sum\n                            numeric_sum\n                        ": "",
    "\n                            regr_sxy\n                            regr_sxy\n                        ": "",
    "\n                            pg_stat_reset_single_table_counters\n                            pg_stat_reset_single_table_counters\n                        ": "",
    "\n                            jsonb_to_recordset\n                            jsonb_to_recordset\n                        ": "",
    "\n                            sha384\n                            sha384\n                        ": "",
    "\n                            bpchar_smaller\n                            bpchar_smaller\n                        ": "",
    "\n                            numrange_subdiff\n                            numrange_subdiff\n                        ": "",
    "\n                            txid_snapshot_out\n                            txid_snapshot_out\n                        ": "",
    "\n                            bttext_pattern_cmp\n                            bttext_pattern_cmp\n                        ": "",
    "\n                            gtsvectorout\n                            gtsvectorout\n                        ": "",
    "\n                            float8_regr_avgx\n                            float8_regr_avgx\n                        ": "",
    "\n                            float8_regr_syy\n                            float8_regr_syy\n                        ": "",
    "\n                            inter_sl\n                            inter_sl\n                        ": "",
    "\n                            bytea_string_agg_transfn\n                            bytea_string_agg_transfn\n                        ": "",
    "\n                            pg_stat_get_function_self_time\n                            pg_stat_get_function_self_time\n                        ": "",
    "\n                            int28gt\n                            int28gt\n                        ": "",
    "\n                            date_gt\n                            date_gt\n                        ": "",
    "\n                            network_larger\n                            network_larger\n                        ": "",
    "\n                            int42le\n                            int42le\n                        ": "",
    "\n                            pg_get_statisticsobjdef\n                            pg_get_statisticsobjdef\n                        ": "",
    "\n                            hashinet\n                            hashinet\n                        ": "",
    "\n                            boollt\n                            boollt\n                        ": "",
    "\n                            regconfigsend\n                            regconfigsend\n                        ": "",
    "\n                            jsonb_lt\n                            jsonb_lt\n                        ": "",
    "\n                            setval\n                            setval\n                        ": "",
    "\n                            bpcharcmp\n                            bpcharcmp\n                        ": "",
    "\n                            record_ge\n                            record_ge\n                        ": "",
    "\n                            bitle\n                            bitle\n                        ": "",
    "\n                            win866_to_koi8r\n                            win866_to_koi8r\n                        ": "",
    "\n                            range_overleft\n                            range_overleft\n                        ": "",
    "\n                            lo_create\n                            lo_create\n                        ": "",
    "\n                            icregexeqjoinsel\n                            icregexeqjoinsel\n                        ": "",
    "\n                            pg_collation_actual_version\n                            pg_collation_actual_version\n                        ": "",
    "\n                            hashmacaddr\n                            hashmacaddr\n                        ": "",
    "\n                            poly_center\n                            poly_center\n                        ": "",
    "\n                            split_part\n                            split_part\n                        ": "",
    "\n                            family\n                            family\n                        ": "",
    "\n                            uuid_in\n                            uuid_in\n                        ": "",
    "\n                            pg_encoding_to_char\n                            pg_encoding_to_char\n                        ": "",
    "\n                            timestamp_le_date\n                            timestamp_le_date\n                        ": "",
    "\n                            xidsend\n                            xidsend\n                        ": "",
    "\n                            numeric_div\n                            numeric_div\n                        ": "",
    "\n                            timestamptz_eq\n                            timestamptz_eq\n                        ": "",
    "\n                            ginarrayconsistent\n                            ginarrayconsistent\n                        ": "",
    "\n                            numeric_log\n                            numeric_log\n                        ": "",
    "\n                            pg_control_system\n                            pg_control_system\n                        ": "",
    "\n                            pg_ndistinct_recv\n                            pg_ndistinct_recv\n                        ": "",
    "\n                            utf8_to_win\n                            utf8_to_win\n                        ": "",
    "\n                            numeric_avg_accum\n                            numeric_avg_accum\n                        ": "",
    "\n                            bpcharle\n                            bpcharle\n                        ": "",
    "\n                            box_overbelow\n                            box_overbelow\n                        ": "",
    "\n                            varchartypmodin\n                            varchartypmodin\n                        ": "",
    "\n                            pg_terminate_backend\n                            pg_terminate_backend\n                        ": "",
    "\n                            timetzdate_pl\n                            timetzdate_pl\n                        ": "",
    "\n                            gin_consistent_jsonb_path\n                            gin_consistent_jsonb_path\n                        ": "",
    "\n                            ginarrayextract\n                            ginarrayextract\n                        ": "",
    "\n                            networksel\n                            networksel\n                        ": "",
    "\n                            pg_node_tree_send\n                            pg_node_tree_send\n                        ": "",
    "\n                            gist_point_fetch\n                            gist_point_fetch\n                        ": "",
    "\n                            boolor_statefunc\n                            boolor_statefunc\n                        ": "",
    "\n                            pg_get_multixact_members\n                            pg_get_multixact_members\n                        ": "",
    "\n                            int8inc_any\n                            int8inc_any\n                        ": "",
    "\n                            date_cmp\n                            date_cmp\n                        ": "",
    "\n                            pg_get_function_arg_default\n                            pg_get_function_arg_default\n                        ": "",
    "\n                            fmgr_internal_validator\n                            fmgr_internal_validator\n                        ": "",
    "\n                            timestamp_ne\n                            timestamp_ne\n                        ": "",
    "\n                            pg_stat_get_function_total_time\n                            pg_stat_get_function_total_time\n                        ": "",
    "\n                            nth_value\n                            nth_value\n                        ": "",
    "\n                            bytea_sortsupport\n                            bytea_sortsupport\n                        ": "",
    "\n                            regexeqjoinsel\n                            regexeqjoinsel\n                        ": "",
    "\n                            ts_rank\n                            ts_rank\n                        ": "",
    "\n                            timetz_cmp\n                            timetz_cmp\n                        ": "",
    "\n                            range_le\n                            range_le\n                        ": "",
    "\n                            timestamptz_le_date\n                            timestamptz_le_date\n                        ": "",
    "\n                            position\n                            position\n                        ": "",
    "\n                            network\n                            network\n                        ": "",
    "\n                            scalarlesel\n                            scalarlesel\n                        ": "",
    "\n                            xpath\n                            xpath\n                        ": "",
    "\n                            convert_to\n                            convert_to\n                        ": "",
    "\n                            mxid_age\n                            mxid_age\n                        ": "",
    "\n                            _pg_numeric_precision\n                            _pg_numeric_precision\n                        ": "",
    "\n                            daterange_subdiff\n                            daterange_subdiff\n                        ": "",
    "\n                            array_unnest_support\n                            array_unnest_support\n                        ": "",
    "\n                            session_user\n                            session_user\n                        ": "",
    "\n                            pg_get_expr\n                            pg_get_expr\n                        ": "",
    "\n                            int8in\n                            int8in\n                        ": "",
    "\n                            reverse\n                            reverse\n                        ": "",
    "\n                            spg_box_quad_picksplit\n                            spg_box_quad_picksplit\n                        ": "",
    "\n                            pg_stat_get_db_tuples_deleted\n                            pg_stat_get_db_tuples_deleted\n                        ": "",
    "\n                            notlike\n                            notlike\n                        ": "",
    "\n                            avg\n                            avg\n                        ": "",
    "\n                            gist_circle_distance\n                            gist_circle_distance\n                        ": "",
    "\n                            pg_opclass_is_visible\n                            pg_opclass_is_visible\n                        ": "",
    "\n                            cash_gt\n                            cash_gt\n                        ": "",
    "\n                            acosh\n                            acosh\n                        ": "",
    "\n                            pg_sleep\n                            pg_sleep\n                        ": "",
    "\n                            namene\n                            namene\n                        ": "",
    "\n                            timestamptz_mi\n                            timestamptz_mi\n                        ": "",
    "\n                            int2lt\n                            int2lt\n                        ": "",
    "\n                            pg_mcv_list_recv\n                            pg_mcv_list_recv\n                        ": "",
    "\n                            point_add\n                            point_add\n                        ": "",
    "\n                            array_lt\n                            array_lt\n                        ": "",
    "\n                            pg_notification_queue_usage\n                            pg_notification_queue_usage\n                        ": "",
    "\n                            macaddr8_in\n                            macaddr8_in\n                        ": "",
    "\n                            json_agg_transfn\n                            json_agg_transfn\n                        ": "",
    "\n                            close_sl\n                            close_sl\n                        ": "",
    "\n                            pg_sequence_last_value\n                            pg_sequence_last_value\n                        ": "",
    "\n                            tidrecv\n                            tidrecv\n                        ": "",
    "\n                            interval_support\n                            interval_support\n                        ": "",
    "\n                            bitne\n                            bitne\n                        ": "",
    "\n                            cashsmaller\n                            cashsmaller\n                        ": "",
    "\n                            sha224\n                            sha224\n                        ": "",
    "\n                            range_recv\n                            range_recv\n                        ": "",
    "\n                            record_out\n                            record_out\n                        ": "",
    "\n                            network_overlap\n                            network_overlap\n                        ": "",
    "\n                            int4_accum_inv\n                            int4_accum_inv\n                        ": "",
    "\n                            dist_lb\n                            dist_lb\n                        ": "",
    "\n                            percentile_cont_float8_final\n                            percentile_cont_float8_final\n                        ": "",
    "\n                            pg_stat_get_backend_idset\n                            pg_stat_get_backend_idset\n                        ": "",
    "\n                            date_eq_timestamp\n                            date_eq_timestamp\n                        ": "",
    "\n                            json_object\n                            json_object\n                        ": "",
    "\n                            textregexeq\n                            textregexeq\n                        ": "",
    "\n                            regr_count\n                            regr_count\n                        ": "",
    "\n                            enum_send\n                            enum_send\n                        ": "",
    "\n                            interval_mi\n                            interval_mi\n                        ": "",
    "\n                            enum_cmp\n                            enum_cmp\n                        ": "",
    "\n                            pg_stat_get_xact_tuples_deleted\n                            pg_stat_get_xact_tuples_deleted\n                        ": "",
    "\n                            int8not\n                            int8not\n                        ": "",
    "\n                            float84mi\n                            float84mi\n                        ": "",
    "\n                            int8eq\n                            int8eq\n                        ": "",
    "\n                            btint4cmp\n                            btint4cmp\n                        ": "",
    "\n                            cash_lt\n                            cash_lt\n                        ": "",
    "\n                            json_in\n                            json_in\n                        ": "",
    "\n                            int8xor\n                            int8xor\n                        ": "",
    "\n                            poly_send\n                            poly_send\n                        ": "",
    "\n                            hashtidextended\n                            hashtidextended\n                        ": "",
    "\n                            int2vectorin\n                            int2vectorin\n                        ": "",
    "\n                            numeric_poly_serialize\n                            numeric_poly_serialize\n                        ": "",
    "\n                            int2recv\n                            int2recv\n                        ": "",
    "\n                            bit_send\n                            bit_send\n                        ": "",
    "\n                            jsonb_path_query_array\n                            jsonb_path_query_array\n                        ": "",
    "\n                            txid_snapshot_recv\n                            txid_snapshot_recv\n                        ": "",
    "\n                            anyenum_in\n                            anyenum_in\n                        ": "",
    "\n                            pg_backup_start_time\n                            pg_backup_start_time\n                        ": "",
    "\n                            range_overright\n                            range_overright\n                        ": "",
    "\n                            textgename\n                            textgename\n                        ": "",
    "\n                            float8larger\n                            float8larger\n                        ": "",
    "\n                            koi8r_to_utf8\n                            koi8r_to_utf8\n                        ": "",
    "\n                            pg_typeof\n                            pg_typeof\n                        ": "",
    "\n                            pg_stat_get_backend_activity_start\n                            pg_stat_get_backend_activity_start\n                        ": "",
    "\n                            bpcharout\n                            bpcharout\n                        ": "",
    "\n                            tsqueryout\n                            tsqueryout\n                        ": "",
    "\n                            tidle\n                            tidle\n                        ": "",
    "\n                            inet_same_family\n                            inet_same_family\n                        ": "",
    "\n                            database_to_xml\n                            database_to_xml\n                        ": "",
    "\n                            xmlcomment\n                            xmlcomment\n                        ": "",
    "\n                            interval_smaller\n                            interval_smaller\n                        ": "",
    "\n                            nameeqtext\n                            nameeqtext\n                        ": "",
    "\n                            bitxor\n                            bitxor\n                        ": "",
    "\n                            currtid2\n                            currtid2\n                        ": "",
    "\n                            array_replace\n                            array_replace\n                        ": "",
    "\n                            pg_size_pretty\n                            pg_size_pretty\n                        ": "",
    "\n                            array_agg_finalfn\n                            array_agg_finalfn\n                        ": "",
    "\n                            spg_range_quad_choose\n                            spg_range_quad_choose\n                        ": "",
    "\n                            pg_get_viewdef\n                            pg_get_viewdef\n                        ": "",
    "\n                            charout\n                            charout\n                        ": "",
    "\n                            pg_get_publication_tables\n                            pg_get_publication_tables\n                        ": "",
    "\n                            cbrt\n                            cbrt\n                        ": "",
    "\n                            win866_to_win1251\n                            win866_to_win1251\n                        ": "",
    "\n                            array_append\n                            array_append\n                        ": "",
    "\n                            schema_to_xml_and_xmlschema\n                            schema_to_xml_and_xmlschema\n                        ": "",
    "\n                            schema_to_xmlschema\n                            schema_to_xmlschema\n                        ": "",
    "\n                            circle_ge\n                            circle_ge\n                        ": "",
    "\n                            box_contained\n                            box_contained\n                        ": "",
    "\n                            string_to_array\n                            string_to_array\n                        ": "",
    "\n                            textne\n                            textne\n                        ": "",
    "\n                            tsquery_cmp\n                            tsquery_cmp\n                        ": "",
    "\n                            unknownrecv\n                            unknownrecv\n                        ": "",
    "\n                            inetnot\n                            inetnot\n                        ": "",
    "\n                            oidvectoreq\n                            oidvectoreq\n                        ": "",
    "\n                            bthandler\n                            bthandler\n                        ": "",
    "\n                            regprocedureout\n                            regprocedureout\n                        ": "",
    "\n                            gtsvector_same\n                            gtsvector_same\n                        ": "",
    "\n                            int82pl\n                            int82pl\n                        ": "",
    "\n                            dist_cpoly\n                            dist_cpoly\n                        ": "",
    "\n                            int8lt\n                            int8lt\n                        ": "",
    "\n                            pg_lsn_ge\n                            pg_lsn_ge\n                        ": "",
    "\n                            bpcharicregexne\n                            bpcharicregexne\n                        ": "",
    "\n                            float4lt\n                            float4lt\n                        ": "",
    "\n                            line_parallel\n                            line_parallel\n                        ": "",
    "\n                            jsonpath_out\n                            jsonpath_out\n                        ": "",
    "\n                            inet_spg_inner_consistent\n                            inet_spg_inner_consistent\n                        ": "",
    "\n                            pg_sleep_until\n                            pg_sleep_until\n                        ": "",
    "\n                            inet_in\n                            inet_in\n                        ": "",
    "\n                            percentile_cont_interval_final\n                            percentile_cont_interval_final\n                        ": "",
    "\n                            jsonb_agg_finalfn\n                            jsonb_agg_finalfn\n                        ": "",
    "\n                            macaddr8_and\n                            macaddr8_and\n                        ": "",
    "\n                            circle_send\n                            circle_send\n                        ": "",
    "\n                            to_hex\n                            to_hex\n                        ": "",
    "\n                            byteage\n                            byteage\n                        ": "",
    "\n                            timestamptz_ne_date\n                            timestamptz_ne_date\n                        ": "",
    "\n                            numeric_combine\n                            numeric_combine\n                        ": "",
    "\n                            float4mul\n                            float4mul\n                        ": "",
    "\n                            current_schemas\n                            current_schemas\n                        ": "",
    "\n                            jsonb_array_elements\n                            jsonb_array_elements\n                        ": "",
    "\n                            regclassout\n                            regclassout\n                        ": "",
    "\n                            timetztypmodout\n                            timetztypmodout\n                        ": "",
    "\n                            utf8_to_koi8r\n                            utf8_to_koi8r\n                        ": "",
    "\n                            has_any_column_privilege\n                            has_any_column_privilege\n                        ": "",
    "\n                            obj_description\n                            obj_description\n                        ": "",
    "\n                            oidvectorlt\n                            oidvectorlt\n                        ": "",
    "\n                            inet_spg_leaf_consistent\n                            inet_spg_leaf_consistent\n                        ": "",
    "\n                            float4um\n                            float4um\n                        ": "",
    "\n                            lo_open\n                            lo_open\n                        ": "",
    "\n                            int4up\n                            int4up\n                        ": "",
    "\n                            pg_advisory_lock\n                            pg_advisory_lock\n                        ": "",
    "\n                            float84gt\n                            float84gt\n                        ": "",
    "\n                            int2ge\n                            int2ge\n                        ": "",
    "\n                            cash_words\n                            cash_words\n                        ": "",
    "\n                            enum_recv\n                            enum_recv\n                        ": "",
    "\n                            lo_creat\n                            lo_creat\n                        ": "",
    "\n                            pg_promote\n                            pg_promote\n                        ": "",
    "\n                            iso_to_mic\n                            iso_to_mic\n                        ": "",
    "\n                            pg_cancel_backend\n                            pg_cancel_backend\n                        ": "",
    "\n                            hashhandler\n                            hashhandler\n                        ": "",
    "\n                            pg_stat_get_backend_start\n                            pg_stat_get_backend_start\n                        ": "",
    "\n                            macaddr_out\n                            macaddr_out\n                        ": "",
    "\n                            box_right\n                            box_right\n                        ": "",
    "\n                            jsonb_concat\n                            jsonb_concat\n                        ": "",
    "\n                            timestamp_ne_timestamptz\n                            timestamp_ne_timestamptz\n                        ": "",
    "\n                            pg_stat_get_wal_senders\n                            pg_stat_get_wal_senders\n                        ": "",
    "\n                            numeric_avg_serialize\n                            numeric_avg_serialize\n                        ": "",
    "\n                            hostmask\n                            hostmask\n                        ": "",
    "\n                            varbit_out\n                            varbit_out\n                        ": "",
    "\n                            box_distance\n                            box_distance\n                        ": "",
    "\n                            opaque_in\n                            opaque_in\n                        ": "",
    "\n                            hash_array\n                            hash_array\n                        ": "",
    "\n                            network_subset_support\n                            network_subset_support\n                        ": "",
    "\n                            lseg_gt\n                            lseg_gt\n                        ": "",
    "\n                            jsonb_object_field\n                            jsonb_object_field\n                        ": "",
    "\n                            pg_node_tree_in\n                            pg_node_tree_in\n                        ": "",
    "\n                            macaddr8_eq\n                            macaddr8_eq\n                        ": "",
    "\n                            tidge\n                            tidge\n                        ": "",
    "\n                            pg_stat_get_last_autoanalyze_time\n                            pg_stat_get_last_autoanalyze_time\n                        ": "",
    "\n                            tsquery_phrase\n                            tsquery_phrase\n                        ": "",
    "\n                            numeric_inc\n                            numeric_inc\n                        ": "",
    "\n                            dsimple_init\n                            dsimple_init\n                        ": "",
    "\n                            cash_div_int2\n                            cash_div_int2\n                        ": "",
    "\n                            binary_upgrade_set_next_pg_enum_oid\n                            binary_upgrade_set_next_pg_enum_oid\n                        ": "",
    "\n                            xpath_exists\n                            xpath_exists\n                        ": "",
    "\n                            dsynonym_lexize\n                            dsynonym_lexize\n                        ": "",
    "\n                            _pg_index_position\n                            _pg_index_position\n                        ": "",
    "\n                            justify_days\n                            justify_days\n                        ": "",
    "\n                            jsonb_insert\n                            jsonb_insert\n                        ": "",
    "\n                            box_overleft\n                            box_overleft\n                        ": "",
    "\n                            float48pl\n                            float48pl\n                        ": "",
    "\n                            numerictypmodout\n                            numerictypmodout\n                        ": "",
    "\n                            aclexplode\n                            aclexplode\n                        ": "",
    "\n                            int8send\n                            int8send\n                        ": "",
    "\n                            RI_FKey_setnull_upd\n                            RI_FKey_setnull_upd\n                        ": "",
    "\n                            quote_ident\n                            quote_ident\n                        ": "",
    "\n                            system\n                            system\n                        ": "",
    "\n                            numeric_div_trunc\n                            numeric_div_trunc\n                        ": "",
    "\n                            pg_stat_get_xact_function_self_time\n                            pg_stat_get_xact_function_self_time\n                        ": "",
    "\n                            hashmacaddr8extended\n                            hashmacaddr8extended\n                        ": "",
    "\n                            pg_stat_get_db_blocks_hit\n                            pg_stat_get_db_blocks_hit\n                        ": "",
    "\n                            json_agg_finalfn\n                            json_agg_finalfn\n                        ": "",
    "\n                            date_eq_timestamptz\n                            date_eq_timestamptz\n                        ": "",
    "\n                            bpchar_sortsupport\n                            bpchar_sortsupport\n                        ": "",
    "\n                            texteq\n                            texteq\n                        ": "",
    "\n                            brin_inclusion_union\n                            brin_inclusion_union\n                        ": "",
    "\n                            timestamptz_ne_timestamp\n                            timestamptz_ne_timestamp\n                        ": "",
    "\n                            float8_stddev_samp\n                            float8_stddev_samp\n                        ": "",
    "\n                            numeric_poly_avg\n                            numeric_poly_avg\n                        ": "",
    "\n                            int4inc\n                            int4inc\n                        ": "",
    "\n                            mul_d_interval\n                            mul_d_interval\n                        ": "",
    "\n                            int8inc\n                            int8inc\n                        ": "",
    "\n                            numeric_deserialize\n                            numeric_deserialize\n                        ": "",
    "\n                            interval_larger\n                            interval_larger\n                        ": "",
    "\n                            float8_accum\n                            float8_accum\n                        ": "",
    "\n                            circle_same\n                            circle_same\n                        ": "",
    "\n                            pg_ls_waldir\n                            pg_ls_waldir\n                        ": "",
    "\n                            timestamptz_mi_interval\n                            timestamptz_mi_interval\n                        ": "",
    "\n                            pg_wal_replay_pause\n                            pg_wal_replay_pause\n                        ": "",
    "\n                            jsonb_cmp\n                            jsonb_cmp\n                        ": "",
    "\n                            pg_ndistinct_out\n                            pg_ndistinct_out\n                        ": "",
    "\n                            jsonb_each\n                            jsonb_each\n                        ": "",
    "\n                            int24le\n                            int24le\n                        ": "",
    "\n                            brin_minmax_opcinfo\n                            brin_minmax_opcinfo\n                        ": "",
    "\n                            bitcat\n                            bitcat\n                        ": "",
    "\n                            numeric_ge\n                            numeric_ge\n                        ": "",
    "\n                            byteacmp\n                            byteacmp\n                        ": "",
    "\n                            textgtname\n                            textgtname\n                        ": "",
    "\n                            koi8r_to_win866\n                            koi8r_to_win866\n                        ": "",
    "\n                            textltname\n                            textltname\n                        ": "",
    "\n                            RI_FKey_noaction_upd\n                            RI_FKey_noaction_upd\n                        ": "",
    "\n                            textregexne\n                            textregexne\n                        ": "",
    "\n                            float84lt\n                            float84lt\n                        ": "",
    "\n                            dlog1\n                            dlog1\n                        ": "",
    "\n                            line_distance\n                            line_distance\n                        ": "",
    "\n                            flt4_mul_cash\n                            flt4_mul_cash\n                        ": "",
    "\n                            xml_out\n                            xml_out\n                        ": "",
    "\n                            pg_read_binary_file\n                            pg_read_binary_file\n                        ": "",
    "\n                            scalarltjoinsel\n                            scalarltjoinsel\n                        ": "",
    "\n                            pg_stat_get_archiver\n                            pg_stat_get_archiver\n                        ": "",
    "\n                            numeric_larger\n                            numeric_larger\n                        ": "",
    "\n                            range_out\n                            range_out\n                        ": "",
    "\n                            pg_backend_pid\n                            pg_backend_pid\n                        ": "",
    "\n                            first_value\n                            first_value\n                        ": "",
    "\n                            websearch_to_tsquery\n                            websearch_to_tsquery\n                        ": "",
    "\n                            loread\n                            loread\n                        ": "",
    "\n                            pg_stat_get_vacuum_count\n                            pg_stat_get_vacuum_count\n                        ": "",
    "\n                            jsonb_agg\n                            jsonb_agg\n                        ": "",
    "\n                            inter_sb\n                            inter_sb\n                        ": "",
    "\n                            interval_pl_time\n                            interval_pl_time\n                        ": "",
    "\n                            bytearecv\n                            bytearecv\n                        ": "",
    "\n                            circle_recv\n                            circle_recv\n                        ": "",
    "\n                            hashname\n                            hashname\n                        ": "",
    "\n                            pg_event_trigger_ddl_commands\n                            pg_event_trigger_ddl_commands\n                        ": "",
    "\n                            numeric_poly_combine\n                            numeric_poly_combine\n                        ": "",
    "\n                            regclasssend\n                            regclasssend\n                        ": "",
    "\n                            latin2_to_win1250\n                            latin2_to_win1250\n                        ": "",
    "\n                            int4_sum\n                            int4_sum\n                        ": "",
    "\n                            range_contains_elem\n                            range_contains_elem\n                        ": "",
    "\n                            json_extract_path\n                            json_extract_path\n                        ": "",
    "\n                            range_gist_picksplit\n                            range_gist_picksplit\n                        ": "",
    "\n                            neqsel\n                            neqsel\n                        ": "",
    "\n                            array_prepend\n                            array_prepend\n                        ": "",
    "\n                            eqjoinsel\n                            eqjoinsel\n                        ": "",
    "\n                            gtsvector_compress\n                            gtsvector_compress\n                        ": "",
    "\n                            pg_sleep_for\n                            pg_sleep_for\n                        ": "",
    "\n                            inetand\n                            inetand\n                        ": "",
    "\n                            pg_ddl_command_out\n                            pg_ddl_command_out\n                        ": "",
    "\n                            gtsquery_same\n                            gtsquery_same\n                        ": "",
    "\n                            lo_truncate64\n                            lo_truncate64\n                        ": "",
    "\n                            float4le\n                            float4le\n                        ": "",
    "\n                            void_recv\n                            void_recv\n                        ": "",
    "\n                            array_to_string\n                            array_to_string\n                        ": "",
    "\n                            xml_send\n                            xml_send\n                        ": "",
    "\n                            lower\n                            lower\n                        ": "",
    "\n                            date_sortsupport\n                            date_sortsupport\n                        ": "",
    "\n                            broadcast\n                            broadcast\n                        ": "",
    "\n                            network_ne\n                            network_ne\n                        ": "",
    "\n                            generate_subscripts\n                            generate_subscripts\n                        ": "",
    "\n                            range_merge\n                            range_merge\n                        ": "",
    "\n                            timetz_ge\n                            timetz_ge\n                        ": "",
    "\n                            cursor_to_xml\n                            cursor_to_xml\n                        ": "",
    "\n                            timestamp_cmp_timestamptz\n                            timestamp_cmp_timestamptz\n                        ": "",
    "\n                            jsonb_agg_transfn\n                            jsonb_agg_transfn\n                        ": "",
    "\n                            timestamp_lt_timestamptz\n                            timestamp_lt_timestamptz\n                        ": "",
    "\n                            macaddr_and\n                            macaddr_and\n                        ": "",
    "\n                            regr_syy\n                            regr_syy\n                        ": "",
    "\n                            inet_merge\n                            inet_merge\n                        ": "",
    "\n                            pg_try_advisory_xact_lock_shared\n                            pg_try_advisory_xact_lock_shared\n                        ": "",
    "\n                            bpcharnlike\n                            bpcharnlike\n                        ": "",
    "\n                            pg_show_replication_origin_status\n                            pg_show_replication_origin_status\n                        ": "",
    "\n                            jsonb_object\n                            jsonb_object\n                        ": "",
    "\n                            jsonb_contained\n                            jsonb_contained\n                        ": "",
    "\n                            numeric_accum_inv\n                            numeric_accum_inv\n                        ": "",
    "\n                            anytextcat\n                            anytextcat\n                        ": "",
    "\n                            json_populate_recordset\n                            json_populate_recordset\n                        ": "",
    "\n                            degrees\n                            degrees\n                        ": "",
    "\n                            regr_avgy\n                            regr_avgy\n                        ": "",
    "\n                            box_contain\n                            box_contain\n                        ": "",
    "\n                            inet_server_addr\n                            inet_server_addr\n                        ": "",
    "\n                            ts_debug\n                            ts_debug\n                        ": "",
    "\n                            pg_stat_get_db_blk_write_time\n                            pg_stat_get_db_blk_write_time\n                        ": "",
    "\n                            int4shl\n                            int4shl\n                        ": "",
    "\n                            int8up\n                            int8up\n                        ": "",
    "\n                            win1251_to_mic\n                            win1251_to_mic\n                        ": "",
    "\n                            pg_walfile_name\n                            pg_walfile_name\n                        ": "",
    "\n                            width\n                            width\n                        ": "",
    "\n                            int4in\n                            int4in\n                        ": "",
    "\n                            spg_kd_choose\n                            spg_kd_choose\n                        ": "",
    "\n                            sqrt\n                            sqrt\n                        ": "",
    "\n                            pg_replication_origin_xact_reset\n                            pg_replication_origin_xact_reset\n                        ": "",
    "\n                            get_current_ts_config\n                            get_current_ts_config\n                        ": "",
    "\n                            varbit_in\n                            varbit_in\n                        ": "",
    "\n                            lastval\n                            lastval\n                        ": "",
    "\n                            gin_cmp_tslexeme\n                            gin_cmp_tslexeme\n                        ": "",
    "\n                            btint42cmp\n                            btint42cmp\n                        ": "",
    "\n                            int2and\n                            int2and\n                        ": "",
    "\n                            likejoinsel\n                            likejoinsel\n                        ": "",
    "\n                            circle_contained\n                            circle_contained\n                        ": "",
    "\n                            pg_stat_get_function_calls\n                            pg_stat_get_function_calls\n                        ": "",
    "\n                            int48ge\n                            int48ge\n                        ": "",
    "\n                            pg_relation_size\n                            pg_relation_size\n                        ": "",
    "\n                            regclassin\n                            regclassin\n                        ": "",
    "\n                            unknownin\n                            unknownin\n                        ": "",
    "\n                            has_sequence_privilege\n                            has_sequence_privilege\n                        ": "",
    "\n                            int2_accum_inv\n                            int2_accum_inv\n                        ": "",
    "\n                            tanh\n                            tanh\n                        ": "",
    "\n                            tidlt\n                            tidlt\n                        ": "",
    "\n                            lseg_horizontal\n                            lseg_horizontal\n                        ": "",
    "\n                            path_n_ge\n                            path_n_ge\n                        ": "",
    "\n                            record_lt\n                            record_lt\n                        ": "",
    "\n                            regnamespacein\n                            regnamespacein\n                        ": "",
    "\n                            float48lt\n                            float48lt\n                        ": "",
    "\n                            lo_tell64\n                            lo_tell64\n                        ": "",
    "\n                            pg_copy_physical_replication_slot\n                            pg_copy_physical_replication_slot\n                        ": "",
    "\n                            int4_mul_cash\n                            int4_mul_cash\n                        ": "",
    "\n                            timestamp_cmp_date\n                            timestamp_cmp_date\n                        ": "",
    "\n                            textnlike\n                            textnlike\n                        ": "",
    "\n                            spg_range_quad_picksplit\n                            spg_range_quad_picksplit\n                        ": "",
    "\n                            pg_blocking_pids\n                            pg_blocking_pids\n                        ": "",
    "\n                            table_to_xml_and_xmlschema\n                            table_to_xml_and_xmlschema\n                        ": "",
    "\n                            path_sub_pt\n                            path_sub_pt\n                        ": "",
    "\n                            varcharin\n                            varcharin\n                        ": "",
    "\n                            to_number\n                            to_number\n                        ": "",
    "\n                            dexp\n                            dexp\n                        ": "",
    "\n                            translate\n                            translate\n                        ": "",
    "\n                            numeric_lt\n                            numeric_lt\n                        ": "",
    "\n                            ginqueryarrayextract\n                            ginqueryarrayextract\n                        ": "",
    "\n                            pg_stat_get_tuples_updated\n                            pg_stat_get_tuples_updated\n                        ": "",
    "\n                            bpcharregexeq\n                            bpcharregexeq\n                        ": "",
    "\n                            record_gt\n                            record_gt\n                        ": "",
    "\n                            tidlarger\n                            tidlarger\n                        ": "",
    "\n                            int42gt\n                            int42gt\n                        ": "",
    "\n                            jsonb_build_object\n                            jsonb_build_object\n                        ": "",
    "\n                            has_foreign_data_wrapper_privilege\n                            has_foreign_data_wrapper_privilege\n                        ": "",
    "\n                            spg_range_quad_leaf_consistent\n                            spg_range_quad_leaf_consistent\n                        ": "",
    "\n                            point_vert\n                            point_vert\n                        ": "",
    "\n                            pg_advisory_unlock_all\n                            pg_advisory_unlock_all\n                        ": "",
    "\n                            point_sub\n                            point_sub\n                        ": "",
    "\n                            textlen\n                            textlen\n                        ": "",
    "\n                            bpcharicregexeq\n                            bpcharicregexeq\n                        ": "",
    "\n                            internal_in\n                            internal_in\n                        ": "",
    "\n                            to_regrole\n                            to_regrole\n                        ": "",
    "\n                            macaddr_lt\n                            macaddr_lt\n                        ": "",
    "\n                            range_gist_same\n                            range_gist_same\n                        ": "",
    "\n                            mic_to_win866\n                            mic_to_win866\n                        ": "",
    "\n                            timestamp_ge_timestamptz\n                            timestamp_ge_timestamptz\n                        ": "",
    "\n                            path_add\n                            path_add\n                        ": "",
    "\n                            numeric_poly_var_samp\n                            numeric_poly_var_samp\n                        ": "",
    "\n                            json_each\n                            json_each\n                        ": "",
    "\n                            width_bucket\n                            width_bucket\n                        ": "",
    "\n                            int4div\n                            int4div\n                        ": "",
    "\n                            pg_get_replica_identity_index\n                            pg_get_replica_identity_index\n                        ": "",
    "\n                            heap_tableam_handler\n                            heap_tableam_handler\n                        ": "",
    "\n                            hash_aclitem_extended\n                            hash_aclitem_extended\n                        ": "",
    "\n                            int2_avg_accum\n                            int2_avg_accum\n                        ": "",
    "\n                            jsonb_array_length\n                            jsonb_array_length\n                        ": "",
    "\n                            int8larger\n                            int8larger\n                        ": "",
    "\n                            text_pattern_le\n                            text_pattern_le\n                        ": "",
    "\n                            pg_xact_commit_timestamp\n                            pg_xact_commit_timestamp\n                        ": "",
    "\n                            pg_opfamily_is_visible\n                            pg_opfamily_is_visible\n                        ": "",
    "\n                            pg_wal_replay_resume\n                            pg_wal_replay_resume\n                        ": "",
    "\n                            int2_mul_cash\n                            int2_mul_cash\n                        ": "",
    "\n                            cidr_out\n                            cidr_out\n                        ": "",
    "\n                            point_left\n                            point_left\n                        ": "",
    "\n                            int4abs\n                            int4abs\n                        ": "",
    "\n                            anyelement_in\n                            anyelement_in\n                        ": "",
    "\n                            int2up\n                            int2up\n                        ": "",
    "\n                            range_ge\n                            range_ge\n                        ": "",
    "\n                            RI_FKey_setnull_del\n                            RI_FKey_setnull_del\n                        ": "",
    "\n                            anyelement_out\n                            anyelement_out\n                        ": "",
    "\n                            int84div\n                            int84div\n                        ": "",
    "\n                            int48lt\n                            int48lt\n                        ": "",
    "\n                            pg_describe_object\n                            pg_describe_object\n                        ": "",
    "\n                            enum_smaller\n                            enum_smaller\n                        ": "",
    "\n                            ordered_set_transition_multi\n                            ordered_set_transition_multi\n                        ": "",
    "\n                            date_cmp_timestamp\n                            date_cmp_timestamp\n                        ": "",
    "\n                            txid_current_if_assigned\n                            txid_current_if_assigned\n                        ": "",
    "\n                            date_gt_timestamptz\n                            date_gt_timestamptz\n                        ": "",
    "\n                            bpchar_pattern_le\n                            bpchar_pattern_le\n                        ": "",
    "\n                            tsq_mcontained\n                            tsq_mcontained\n                        ": "",
    "\n                            jsonb_build_array\n                            jsonb_build_array\n                        ": "",
    "\n                            likesel\n                            likesel\n                        ": "",
    "\n                            numeric_out\n                            numeric_out\n                        ": "",
    "\n                            box_add\n                            box_add\n                        ": "",
    "\n                            bittypmodin\n                            bittypmodin\n                        ": "",
    "\n                            pg_try_advisory_xact_lock\n                            pg_try_advisory_xact_lock\n                        ": "",
    "\n                            currtid\n                            currtid\n                        ": "",
    "\n                            int28le\n                            int28le\n                        ": "",
    "\n                            gist_poly_distance\n                            gist_poly_distance\n                        ": "",
    "\n                            intervaltypmodout\n                            intervaltypmodout\n                        ": "",
    "\n                            int8mul\n                            int8mul\n                        ": "",
    "\n                            tsvectorin\n                            tsvectorin\n                        ": "",
    "\n                            hashcharextended\n                            hashcharextended\n                        ": "",
    "\n                            xideqint4\n                            xideqint4\n                        ": "",
    "\n                            time_smaller\n                            time_smaller\n                        ": "",
    "\n                            acosd\n                            acosd\n                        ": "",
    "\n                            int4mi\n                            int4mi\n                        ": "",
    "\n                            gin_extract_jsonb_query\n                            gin_extract_jsonb_query\n                        ": "",
    "\n                            tsquery_le\n                            tsquery_le\n                        ": "",
    "\n                            currval\n                            currval\n                        ": "",
    "\n                            regoperatorout\n                            regoperatorout\n                        ": "",
    "\n                            gist_box_penalty\n                            gist_box_penalty\n                        ": "",
    "\n                            overlay\n                            overlay\n                        ": "",
    "\n                            int8_avg_accum_inv\n                            int8_avg_accum_inv\n                        ": "",
    "\n                            date_out\n                            date_out\n                        ": "",
    "\n                            pg_replication_origin_session_setup\n                            pg_replication_origin_session_setup\n                        ": "",
    "\n                            spg_text_choose\n                            spg_text_choose\n                        ": "",
    "\n                            namelttext\n                            namelttext\n                        ": "",
    "\n                            tsrange_subdiff\n                            tsrange_subdiff\n                        ": "",
    "\n                            txid_snapshot_send\n                            txid_snapshot_send\n                        ": "",
    "\n                            regnamespacesend\n                            regnamespacesend\n                        ": "",
    "\n                            pg_last_wal_receive_lsn\n                            pg_last_wal_receive_lsn\n                        ": "",
    "\n                            macaddr8_ne\n                            macaddr8_ne\n                        ": "",
    "\n                            koi8r_to_iso\n                            koi8r_to_iso\n                        ": "",
    "\n                            tsvector_ne\n                            tsvector_ne\n                        ": "",
    "\n                            macaddr_gt\n                            macaddr_gt\n                        ": "",
    "\n                            enum_last\n                            enum_last\n                        ": "",
    "\n                            date_le\n                            date_le\n                        ": "",
    "\n                            lseg_intersect\n                            lseg_intersect\n                        ": "",
    "\n                            cash_out\n                            cash_out\n                        ": "",
    "\n                            lo_tell\n                            lo_tell\n                        ": "",
    "\n                            timestamp_cmp\n                            timestamp_cmp\n                        ": "",
    "\n                            int8le\n                            int8le\n                        ": "",
    "\n                            interval_pl\n                            interval_pl\n                        ": "",
    "\n                            txid_snapshot_xip\n                            txid_snapshot_xip\n                        ": "",
    "\n                            numeric_support\n                            numeric_support\n                        ": "",
    "\n                            inet_gist_fetch\n                            inet_gist_fetch\n                        ": "",
    "\n                            dist_sl\n                            dist_sl\n                        ": "",
    "\n                            regr_r2\n                            regr_r2\n                        ": "",
    "\n                            acos\n                            acos\n                        ": "",
    "\n                            textnename\n                            textnename\n                        ": "",
    "\n                            poly_in\n                            poly_in\n                        ": "",
    "\n                            inetmi\n                            inetmi\n                        ": "",
    "\n                            unknownout\n                            unknownout\n                        ": "",
    "\n                            power\n                            power\n                        ": "",
    "\n                            latin4_to_mic\n                            latin4_to_mic\n                        ": "",
    "\n                            int2gt\n                            int2gt\n                        ": "",
    "\n                            unnest\n                            unnest\n                        ": "",
    "\n                            hashnameextended\n                            hashnameextended\n                        ": "",
    "\n                            network_lt\n                            network_lt\n                        ": "",
    "\n                            jsonb_recv\n                            jsonb_recv\n                        ": "",
    "\n                            timetz_mi_interval\n                            timetz_mi_interval\n                        ": "",
    "\n                            int2pl\n                            int2pl\n                        ": "",
    "\n                            int4send\n                            int4send\n                        ": "",
    "\n                            pg_stat_get_bgwriter_timed_checkpoints\n                            pg_stat_get_bgwriter_timed_checkpoints\n                        ": "",
    "\n                            int2_sum\n                            int2_sum\n                        ": "",
    "\n                            radians\n                            radians\n                        ": "",
    "\n                            poly_below\n                            poly_below\n                        ": "",
    "\n                            brin_inclusion_opcinfo\n                            brin_inclusion_opcinfo\n                        ": "",
    "\n                            timestamptz_cmp\n                            timestamptz_cmp\n                        ": "",
    "\n                            clock_timestamp\n                            clock_timestamp\n                        ": "",
    "\n                            pg_advisory_unlock_shared\n                            pg_advisory_unlock_shared\n                        ": "",
    "\n                            bitge\n                            bitge\n                        ": "",
    "\n                            oidrecv\n                            oidrecv\n                        ": "",
    "\n                            col_description\n                            col_description\n                        ": "",
    "\n                            jsonb_object_keys\n                            jsonb_object_keys\n                        ": "",
    "\n                            point_div\n                            point_div\n                        ": "",
    "\n                            float8pl\n                            float8pl\n                        ": "",
    "\n                            bpcharne\n                            bpcharne\n                        ": "",
    "\n                            time_ge\n                            time_ge\n                        ": "",
    "\n                            tan\n                            tan\n                        ": "",
    "\n                            to_ascii\n                            to_ascii\n                        ": "",
    "\n                            date_ne\n                            date_ne\n                        ": "",
    "\n                            pg_is_in_recovery\n                            pg_is_in_recovery\n                        ": "",
    "\n                            dispell_init\n                            dispell_init\n                        ": "",
    "\n                            event_trigger_out\n                            event_trigger_out\n                        ": "",
    "\n                            cash_mul_int8\n                            cash_mul_int8\n                        ": "",
    "\n                            timestamptz_pl_interval\n                            timestamptz_pl_interval\n                        ": "",
    "\n                            tsvector_concat\n                            tsvector_concat\n                        ": "",
    "\n                            interval_gt\n                            interval_gt\n                        ": "",
    "\n                            tsmatchsel\n                            tsmatchsel\n                        ": "",
    "\n                            int8out\n                            int8out\n                        ": "",
    "\n                            timestamp_lt_date\n                            timestamp_lt_date\n                        ": "",
    "\n                            uuid_lt\n                            uuid_lt\n                        ": "",
    "\n                            varbiteq\n                            varbiteq\n                        ": "",
    "\n                            record_image_ne\n                            record_image_ne\n                        ": "",
    "\n                            float8_var_pop\n                            float8_var_pop\n                        ": "",
    "\n                            pg_dependencies_recv\n                            pg_dependencies_recv\n                        ": "",
    "\n                            ts_lexize\n                            ts_lexize\n                        ": "",
    "\n                            byteagt\n                            byteagt\n                        ": "",
    "\n                            brin_inclusion_add_value\n                            brin_inclusion_add_value\n                        ": "",
    "\n                            macaddr8_le\n                            macaddr8_le\n                        ": "",
    "\n                            pg_function_is_visible\n                            pg_function_is_visible\n                        ": "",
    "\n                            range_gist_penalty\n                            range_gist_penalty\n                        ": "",
    "\n                            float48le\n                            float48le\n                        ": "",
    "\n                            spg_text_picksplit\n                            spg_text_picksplit\n                        ": "",
    "\n                            bttidcmp\n                            bttidcmp\n                        ": "",
    "\n                            gtsvectorin\n                            gtsvectorin\n                        ": "",
    "\n                            pg_ls_archive_statusdir\n                            pg_ls_archive_statusdir\n                        ": "",
    "\n                            bittypmodout\n                            bittypmodout\n                        ": "",
    "\n                            gtsvector_picksplit\n                            gtsvector_picksplit\n                        ": "",
    "\n                            nlikesel\n                            nlikesel\n                        ": "",
    "\n                            interval_recv\n                            interval_recv\n                        ": "",
    "\n                            win1251_to_win866\n                            win1251_to_win866\n                        ": "",
    "\n                            icnlikesel\n                            icnlikesel\n                        ": "",
    "\n                            pg_indexam_progress_phasename\n                            pg_indexam_progress_phasename\n                        ": "",
    "\n                            numeric_mul\n                            numeric_mul\n                        ": "",
    "\n                            int2le\n                            int2le\n                        ": "",
    "\n                            boolle\n                            boolle\n                        ": "",
    "\n                            interval_accum_inv\n                            interval_accum_inv\n                        ": "",
    "\n                            iso8859_to_utf8\n                            iso8859_to_utf8\n                        ": "",
    "\n                            tidsend\n                            tidsend\n                        ": "",
    "\n                            int24ge\n                            int24ge\n                        ": "",
    "\n                            pg_stat_get_blocks_fetched\n                            pg_stat_get_blocks_fetched\n                        ": "",
    "\n                            jsonb_path_query_first\n                            jsonb_path_query_first\n                        ": "",
    "\n                            fmgr_sql_validator\n                            fmgr_sql_validator\n                        ": "",
    "\n                            float8_regr_intercept\n                            float8_regr_intercept\n                        ": "",
    "\n                            json_to_tsvector\n                            json_to_tsvector\n                        ": "",
    "\n                            float48eq\n                            float48eq\n                        ": "",
    "\n                            dcbrt\n                            dcbrt\n                        ": "",
    "\n                            range_before\n                            range_before\n                        ": "",
    "\n                            int2ne\n                            int2ne\n                        ": "",
    "\n                            pg_event_trigger_table_rewrite_reason\n                            pg_event_trigger_table_rewrite_reason\n                        ": "",
    "\n                            btoidvectorcmp\n                            btoidvectorcmp\n                        ": "",
    "\n                            pg_ddl_command_in\n                            pg_ddl_command_in\n                        ": "",
    "\n                            timestamp_gt_date\n                            timestamp_gt_date\n                        ": "",
    "\n                            RI_FKey_noaction_del\n                            RI_FKey_noaction_del\n                        ": "",
    "\n                            pg_lsn_recv\n                            pg_lsn_recv\n                        ": "",
    "\n                            int24div\n                            int24div\n                        ": "",
    "\n                            booleq\n                            booleq\n                        ": "",
    "\n                            lower_inc\n                            lower_inc\n                        ": "",
    "\n                            point_below\n                            point_below\n                        ": "",
    "\n                            pg_dependencies_in\n                            pg_dependencies_in\n                        ": "",
    "\n                            macaddr_send\n                            macaddr_send\n                        ": "",
    "\n                            timestamp_recv\n                            timestamp_recv\n                        ": "",
    "\n                            circle_eq\n                            circle_eq\n                        ": "",
    "\n                            box_ge\n                            box_ge\n                        ": "",
    "\n                            point_eq\n                            point_eq\n                        ": "",
    "\n                            json_object_field\n                            json_object_field\n                        ": "",
    "\n                            rank_final\n                            rank_final\n                        ": "",
    "\n                            aclitemeq\n                            aclitemeq\n                        ": "",
    "\n                            float4in\n                            float4in\n                        ": "",
    "\n                            numeric_stddev_pop\n                            numeric_stddev_pop\n                        ": "",
    "\n                            lowrite\n                            lowrite\n                        ": "",
    "\n                            cidr_recv\n                            cidr_recv\n                        ": "",
    "\n                            stddev\n                            stddev\n                        ": "",
    "\n                            tideq\n                            tideq\n                        ": "",
    "\n                            pg_stat_get_db_stat_reset_time\n                            pg_stat_get_db_stat_reset_time\n                        ": "",
    "\n                            int28mul\n                            int28mul\n                        ": "",
    "\n                            format_type\n                            format_type\n                        ": "",
    "\n                            slope\n                            slope\n                        ": "",
    "\n                            pg_partition_ancestors\n                            pg_partition_ancestors\n                        ": "",
    "\n                            gin_extract_jsonb_path\n                            gin_extract_jsonb_path\n                        ": "",
    "\n                            pg_advisory_lock_shared\n                            pg_advisory_lock_shared\n                        ": "",
    "\n                            range_minus\n                            range_minus\n                        ": "",
    "\n                            gin_compare_jsonb\n                            gin_compare_jsonb\n                        ": "",
    "\n                            covar_pop\n                            covar_pop\n                        ": "",
    "\n                            ordered_set_transition\n                            ordered_set_transition\n                        ": "",
    "\n                            range_in\n                            range_in\n                        ": "",
    "\n                            macaddr8_ge\n                            macaddr8_ge\n                        ": "",
    "\n                            convert\n                            convert\n                        ": "",
    "\n                            array_to_tsvector\n                            array_to_tsvector\n                        ": "",
    "\n                            oidsend\n                            oidsend\n                        ": "",
    "\n                            date_eq\n                            date_eq\n                        ": "",
    "\n                            domain_in\n                            domain_in\n                        ": "",
    "\n                            oidvectorrecv\n                            oidvectorrecv\n                        ": "",
    "\n                            bytea_string_agg_finalfn\n                            bytea_string_agg_finalfn\n                        ": "",
    "\n                            spg_kd_config\n                            spg_kd_config\n                        ": "",
    "\n                            jsonb_contains\n                            jsonb_contains\n                        ": "",
    "\n                            int4recv\n                            int4recv\n                        ": "",
    "\n                            pg_stat_reset_shared\n                            pg_stat_reset_shared\n                        ": "",
    "\n                            array_ge\n                            array_ge\n                        ": "",
    "\n                            lo_lseek64\n                            lo_lseek64\n                        ": "",
    "\n                            sin\n                            sin\n                        ": "",
    "\n                            numeric_eq\n                            numeric_eq\n                        ": "",
    "\n                            bitcmp\n                            bitcmp\n                        ": "",
    "\n                            icnlikejoinsel\n                            icnlikejoinsel\n                        ": "",
    "\n                            bpcharin\n                            bpcharin\n                        ": "",
    "\n                            pg_replication_slot_advance\n                            pg_replication_slot_advance\n                        ": "",
    "\n                            btbpchar_pattern_cmp\n                            btbpchar_pattern_cmp\n                        ": "",
    "\n                            nameletext\n                            nameletext\n                        ": "",
    "\n                            circle_distance\n                            circle_distance\n                        ": "",
    "\n                            box_overlap\n                            box_overlap\n                        ": "",
    "\n                            float4ne\n                            float4ne\n                        ": "",
    "\n                            elem_contained_by_range\n                            elem_contained_by_range\n                        ": "",
    "\n                            pg_listening_channels\n                            pg_listening_channels\n                        ": "",
    "\n                            namenlike\n                            namenlike\n                        ": "",
    "\n                            int48ne\n                            int48ne\n                        ": "",
    "\n                            in_range\n                            in_range\n                        ": "",
    "\n                            spg_range_quad_inner_consistent\n                            spg_range_quad_inner_consistent\n                        ": "",
    "\n                            var_samp\n                            var_samp\n                        ": "",
    "\n                            oidvectorout\n                            oidvectorout\n                        ": "",
    "\n                            charin\n                            charin\n                        ": "",
    "\n                            btint2cmp\n                            btint2cmp\n                        ": "",
    "\n                            xidout\n                            xidout\n                        ": "",
    "\n                            jsonpath_in\n                            jsonpath_in\n                        ": "",
    "\n                            arraycontjoinsel\n                            arraycontjoinsel\n                        ": "",
    "\n                            btfloat8sortsupport\n                            btfloat8sortsupport\n                        ": "",
    "\n                            prsd_lextype\n                            prsd_lextype\n                        ": "",
    "\n                            inet_gist_same\n                            inet_gist_same\n                        ": "",
    "\n                            pg_relation_is_updatable\n                            pg_relation_is_updatable\n                        ": "",
    "\n                            lseg_out\n                            lseg_out\n                        ": "",
    "\n                            pg_get_function_identity_arguments\n                            pg_get_function_identity_arguments\n                        ": "",
    "\n                            pg_options_to_table\n                            pg_options_to_table\n                        ": "",
    "\n                            network_sub\n                            network_sub\n                        ": "",
    "\n                            regrolesend\n                            regrolesend\n                        ": "",
    "\n                            float8um\n                            float8um\n                        ": "",
    "\n                            gin_clean_pending_list\n                            gin_clean_pending_list\n                        ": "",
    "\n                            binary_upgrade_set_next_index_pg_class_oid\n                            binary_upgrade_set_next_index_pg_class_oid\n                        ": "",
    "\n                            float8mul\n                            float8mul\n                        ": "",
    "\n                            spg_box_quad_choose\n                            spg_box_quad_choose\n                        ": "",
    "\n                            json_to_recordset\n                            json_to_recordset\n                        ": "",
    "\n                            regoperrecv\n                            regoperrecv\n                        ": "",
    "\n                            pg_filenode_relation\n                            pg_filenode_relation\n                        ": "",
    "\n                            cotd\n                            cotd\n                        ": "",
    "\n                            current_user\n                            current_user\n                        ": "",
    "\n                            dist_ps\n                            dist_ps\n                        ": "",
    "\n                            int24eq\n                            int24eq\n                        ": "",
    "\n                            close_ls\n                            close_ls\n                        ": "",
    "\n                            point_recv\n                            point_recv\n                        ": "",
    "\n                            isopen\n                            isopen\n                        ": "",
    "\n                            hashoidextended\n                            hashoidextended\n                        ": "",
    "\n                            cash_mul_int4\n                            cash_mul_int4\n                        ": "",
    "\n                            poly_out\n                            poly_out\n                        ": "",
    "\n                            lseg_recv\n                            lseg_recv\n                        ": "",
    "\n                            aclitemin\n                            aclitemin\n                        ": "",
    "\n                            box_contain_pt\n                            box_contain_pt\n                        ": "",
    "\n                            has_language_privilege\n                            has_language_privilege\n                        ": "",
    "\n                            date_lt_timestamp\n                            date_lt_timestamp\n                        ": "",
    "\n                            int8range_canonical\n                            int8range_canonical\n                        ": "",
    "\n                            hashenumextended\n                            hashenumextended\n                        ": "",
    "\n                            cidsend\n                            cidsend\n                        ": "",
    "\n                            interval_out\n                            interval_out\n                        ": "",
    "\n                            gist_box_same\n                            gist_box_same\n                        ": "",
    "\n                            lseg_distance\n                            lseg_distance\n                        ": "",
    "\n                            float48ge\n                            float48ge\n                        ": "",
    "\n                            trigger_in\n                            trigger_in\n                        ": "",
    "\n                            pg_get_partkeydef\n                            pg_get_partkeydef\n                        ": "",
    "\n                            pg_stat_get_db_tuples_updated\n                            pg_stat_get_db_tuples_updated\n                        ": "",
    "\n                            div\n                            div\n                        ": "",
    "\n                            tsvector_update_trigger_column\n                            tsvector_update_trigger_column\n                        ": "",
    "\n                            lseg_le\n                            lseg_le\n                        ": "",
    "\n                            bpcharlt\n                            bpcharlt\n                        ": "",
    "\n                            int8mi\n                            int8mi\n                        ": "",
    "\n                            mic_to_iso\n                            mic_to_iso\n                        ": "",
    "\n                            void_out\n                            void_out\n                        ": "",
    "\n                            timetz_eq\n                            timetz_eq\n                        ": "",
    "\n                            jsonb_in\n                            jsonb_in\n                        ": "",
    "\n                            bound_box\n                            bound_box\n                        ": "",
    "\n                            int4ge\n                            int4ge\n                        ": "",
    "\n                            pg_stat_get_subscription\n                            pg_stat_get_subscription\n                        ": "",
    "\n                            circle_overlap\n                            circle_overlap\n                        ": "",
    "\n                            timetz_pl_interval\n                            timetz_pl_interval\n                        ": "",
    "\n                            numeric_in\n                            numeric_in\n                        ": "",
    "\n                            record_image_eq\n                            record_image_eq\n                        ": "",
    "\n                            spg_box_quad_inner_consistent\n                            spg_box_quad_inner_consistent\n                        ": "",
    "\n                            gtsquery_union\n                            gtsquery_union\n                        ": "",
    "\n                            pg_client_encoding\n                            pg_client_encoding\n                        ": "",
    "\n                            binary_upgrade_set_next_array_pg_type_oid\n                            binary_upgrade_set_next_array_pg_type_oid\n                        ": "",
    "\n                            tsvector_eq\n                            tsvector_eq\n                        ": "",
    "\n                            bitor\n                            bitor\n                        ": "",
    "\n                            cash_div_int8\n                            cash_div_int8\n                        ": "",
    "\n                            intervaltypmodin\n                            intervaltypmodin\n                        ": "",
    "\n                            arraycontsel\n                            arraycontsel\n                        ": "",
    "\n                            pg_replication_origin_drop\n                            pg_replication_origin_drop\n                        ": "",
    "\n                            date_lt\n                            date_lt\n                        ": "",
    "\n                            regdictionarysend\n                            regdictionarysend\n                        ": "",
    "\n                            int8ne\n                            int8ne\n                        ": "",
    "\n                            byteain\n                            byteain\n                        ": "",
    "\n                            percentile_disc_final\n                            percentile_disc_final\n                        ": "",
    "\n                            byteacat\n                            byteacat\n                        ": "",
    "\n                            like\n                            like\n                        ": "",
    "\n                            int2_avg_accum_inv\n                            int2_avg_accum_inv\n                        ": "",
    "\n                            pg_replication_origin_session_is_setup\n                            pg_replication_origin_session_is_setup\n                        ": "",
    "\n                            bttextcmp\n                            bttextcmp\n                        ": "",
    "\n                            pg_stat_get_activity\n                            pg_stat_get_activity\n                        ": "",
    "\n                            numeric_sqrt\n                            numeric_sqrt\n                        ": "",
    "\n                            array_out\n                            array_out\n                        ": "",
    "\n                            btboolcmp\n                            btboolcmp\n                        ": "",
    "\n                            pg_rotate_logfile\n                            pg_rotate_logfile\n                        ": "",
    "\n                            to_tsquery\n                            to_tsquery\n                        ": "",
    "\n                            textout\n                            textout\n                        ": "",
    "\n                            json_array_elements\n                            json_array_elements\n                        ": "",
    "\n                            timestamptz_cmp_timestamp\n                            timestamptz_cmp_timestamp\n                        ": "",
    "\n                            timestamp_gt_timestamptz\n                            timestamp_gt_timestamptz\n                        ": "",
    "\n                            pg_create_physical_replication_slot\n                            pg_create_physical_replication_slot\n                        ": "",
    "\n                            pg_last_wal_replay_lsn\n                            pg_last_wal_replay_lsn\n                        ": "",
    "\n                            regexp_matches\n                            regexp_matches\n                        ": "",
    "\n                            pg_stat_get_xact_tuples_fetched\n                            pg_stat_get_xact_tuples_fetched\n                        ": "",
    "\n                            oideq\n                            oideq\n                        ": "",
    "\n                            pg_get_serial_sequence\n                            pg_get_serial_sequence\n                        ": "",
    "\n                            set_bit\n                            set_bit\n                        ": "",
    "\n                            tsvector_cmp\n                            tsvector_cmp\n                        ": "",
    "\n                            path_in\n                            path_in\n                        ": "",
    "\n                            textrecv\n                            textrecv\n                        ": "",
    "\n                            exp\n                            exp\n                        ": "",
    "\n                            int2shr\n                            int2shr\n                        ": "",
    "\n                            nameiclike\n                            nameiclike\n                        ": "",
    "\n                            regexnejoinsel\n                            regexnejoinsel\n                        ": "",
    "\n                            pg_ddl_command_recv\n                            pg_ddl_command_recv\n                        ": "",
    "\n                            numeric_stddev_samp\n                            numeric_stddev_samp\n                        ": "",
    "\n                            internal_out\n                            internal_out\n                        ": "",
    "\n                            box_sub\n                            box_sub\n                        ": "",
    "\n                            pg_index_column_has_property\n                            pg_index_column_has_property\n                        ": "",
    "\n                            int8pl_inet\n                            int8pl_inet\n                        ": "",
    "\n                            pg_mcv_list_in\n                            pg_mcv_list_in\n                        ": "",
    "\n                            xml_is_well_formed_content\n                            xml_is_well_formed_content\n                        ": "",
    "\n                            arraycontains\n                            arraycontains\n                        ": "",
    "\n                            pg_conf_load_time\n                            pg_conf_load_time\n                        ": "",
    "\n                            void_in\n                            void_in\n                        ": "",
    "\n                            ascii\n                            ascii\n                        ": "",
    "\n                            int8dec_any\n                            int8dec_any\n                        ": "",
    "\n                            flt8_mul_cash\n                            flt8_mul_cash\n                        ": "",
    "\n                            oidvectorle\n                            oidvectorle\n                        ": "",
    "\n                            json_out\n                            json_out\n                        ": "",
    "\n                            starts_with\n                            starts_with\n                        ": "",
    "\n                            pg_try_advisory_lock\n                            pg_try_advisory_lock\n                        ": "",
    "\n                            pg_stat_get_last_vacuum_time\n                            pg_stat_get_last_vacuum_time\n                        ": "",
    "\n                            hashint2extended\n                            hashint2extended\n                        ": "",
    "\n                            parse_ident\n                            parse_ident\n                        ": "",
    "\n                            spg_quad_config\n                            spg_quad_config\n                        ": "",
    "\n                            bpcharsend\n                            bpcharsend\n                        ": "",
    "\n                            pg_wal_lsn_diff\n                            pg_wal_lsn_diff\n                        ": "",
    "\n                            timestamp_lt\n                            timestamp_lt\n                        ": "",
    "\n                            statement_timestamp\n                            statement_timestamp\n                        ": "",
    "\n                            circle_le\n                            circle_le\n                        ": "",
    "\n                            pg_is_other_temp_schema\n                            pg_is_other_temp_schema\n                        ": "",
    "\n                            int82ne\n                            int82ne\n                        ": "",
    "\n                            bpcharicnlike\n                            bpcharicnlike\n                        ": "",
    "\n                            float8send\n                            float8send\n                        ": "",
    "\n                            regclassrecv\n                            regclassrecv\n                        ": "",
    "\n                            quote_nullable\n                            quote_nullable\n                        ": "",
    "\n                            prefixjoinsel\n                            prefixjoinsel\n                        ": "",
    "\n                            dispell_lexize\n                            dispell_lexize\n                        ": "",
    "\n                            macaddr8_recv\n                            macaddr8_recv\n                        ": "",
    "\n                            spg_bbox_quad_config\n                            spg_bbox_quad_config\n                        ": "",
    "\n                            biteq\n                            biteq\n                        ": "",
    "\n                            spg_kd_inner_consistent\n                            spg_kd_inner_consistent\n                        ": "",
    "\n                            json_build_object\n                            json_build_object\n                        ": "",
    "\n                            _pg_char_max_length\n                            _pg_char_max_length\n                        ": "",
    "\n                            interval_pl_timestamp\n                            interval_pl_timestamp\n                        ": "",
    "\n                            numeric_le\n                            numeric_le\n                        ": "",
    "\n                            array_recv\n                            array_recv\n                        ": "",
    "\n                            float8_regr_combine\n                            float8_regr_combine\n                        ": "",
    "\n                            koi8r_to_win1251\n                            koi8r_to_win1251\n                        ": "",
    "\n                            utf8_to_iso8859_1\n                            utf8_to_iso8859_1\n                        ": "",
    "\n                            array_agg_transfn\n                            array_agg_transfn\n                        ": "",
    "\n                            int48eq\n                            int48eq\n                        ": "",
    "\n                            timestamptz_ge_date\n                            timestamptz_ge_date\n                        ": "",
    "\n                            pg_char_to_encoding\n                            pg_char_to_encoding\n                        ": "",
    "\n                            eqsel\n                            eqsel\n                        ": "",
    "\n                            string_agg_transfn\n                            string_agg_transfn\n                        ": "",
    "\n                            timestamp_in\n                            timestamp_in\n                        ": "",
    "\n                            cidr_in\n                            cidr_in\n                        ": "",
    "\n                            circle_in\n                            circle_in\n                        ": "",
    "\n                            array_to_json\n                            array_to_json\n                        ": "",
    "\n                            circle_overabove\n                            circle_overabove\n                        ": "",
    "\n                            varbitne\n                            varbitne\n                        ": "",
    "\n                            any_in\n                            any_in\n                        ": "",
    "\n                            path_div_pt\n                            path_div_pt\n                        ": "",
    "\n                            anyarray_send\n                            anyarray_send\n                        ": "",
    "\n                            ceiling\n                            ceiling\n                        ": "",
    "\n                            pg_get_function_arguments\n                            pg_get_function_arguments\n                        ": "",
    "\n                            interval_pl_timestamptz\n                            interval_pl_timestamptz\n                        ": "",
    "\n                            aclinsert\n                            aclinsert\n                        ": "",
    "\n                            sha256\n                            sha256\n                        ": "",
    "\n                            bit_out\n                            bit_out\n                        ": "",
    "\n                            spg_range_quad_config\n                            spg_range_quad_config\n                        ": "",
    "\n                            pg_stat_get_dead_tuples\n                            pg_stat_get_dead_tuples\n                        ": "",
    "\n                            height\n                            height\n                        ": "",
    "\n                            isfinite\n                            isfinite\n                        ": "",
    "\n                            gin_consistent_jsonb\n                            gin_consistent_jsonb\n                        ": "",
    "\n                            int4_avg_accum\n                            int4_avg_accum\n                        ": "",
    "\n                            int8um\n                            int8um\n                        ": "",
    "\n                            binary_upgrade_set_next_pg_type_oid\n                            binary_upgrade_set_next_pg_type_oid\n                        ": "",
    "\n                            regr_avgx\n                            regr_avgx\n                        ": "",
    "\n                            interval_mul\n                            interval_mul\n                        ": "",
    "\n                            regprocrecv\n                            regprocrecv\n                        ": "",
    "\n                            poly_overleft\n                            poly_overleft\n                        ": "",
    "\n                            bit_or\n                            bit_or\n                        ": "",
    "\n                            query_to_xml\n                            query_to_xml\n                        ": "",
    "\n                            pg_lsn_cmp\n                            pg_lsn_cmp\n                        ": "",
    "\n                            enum_ge\n                            enum_ge\n                        ": "",
    "\n                            octet_length\n                            octet_length\n                        ": "",
    "\n                            pg_stat_get_live_tuples\n                            pg_stat_get_live_tuples\n                        ": "",
    "\n                            regdictionaryout\n                            regdictionaryout\n                        ": "",
    "\n                            pg_lsn_hash\n                            pg_lsn_hash\n                        ": "",
    "\n                            gtsvector_decompress\n                            gtsvector_decompress\n                        ": "",
    "\n                            dlog10\n                            dlog10\n                        ": "",
    "\n                            timetz_lt\n                            timetz_lt\n                        ": "",
    "\n                            pg_node_tree_recv\n                            pg_node_tree_recv\n                        ": "",
    "\n                            int8_sum\n                            int8_sum\n                        ": "",
    "\n                            float84mul\n                            float84mul\n                        ": "",
    "\n                            charrecv\n                            charrecv\n                        ": "",
    "\n                            brin_minmax_add_value\n                            brin_minmax_add_value\n                        ": "",
    "\n                            pg_is_in_backup\n                            pg_is_in_backup\n                        ": "",
    "\n                            row_number\n                            row_number\n                        ": "",
    "\n                            int8inc_float8_float8\n                            int8inc_float8_float8\n                        ": "",
    "\n                            timetypmodin\n                            timetypmodin\n                        ": "",
    "\n                            tidout\n                            tidout\n                        ": "",
    "\n                            lo_lseek\n                            lo_lseek\n                        ": "",
    "\n                            int4lt\n                            int4lt\n                        ": "",
    "\n                            pg_extension_config_dump\n                            pg_extension_config_dump\n                        ": "",
    "\n                            tsquery_or\n                            tsquery_or\n                        ": "",
    "\n                            pg_stat_get_blocks_hit\n                            pg_stat_get_blocks_hit\n                        ": "",
    "\n                            json_send\n                            json_send\n                        ": "",
    "\n                            int8ge\n                            int8ge\n                        ": "",
    "\n                            float8smaller\n                            float8smaller\n                        ": "",
    "\n                            float8_regr_r2\n                            float8_regr_r2\n                        ": "",
    "\n                            varbit_recv\n                            varbit_recv\n                        ": "",
    "\n                            _pg_truetypid\n                            _pg_truetypid\n                        ": "",
    "\n                            bool_accum_inv\n                            bool_accum_inv\n                        ": "",
    "\n                            regnamespaceout\n                            regnamespaceout\n                        ": "",
    "\n                            quote_literal\n                            quote_literal\n                        ": "",
    "\n                            _pg_keysequal\n                            _pg_keysequal\n                        ": "",
    "\n                            to_tsvector\n                            to_tsvector\n                        ": "",
    "\n                            timetz_recv\n                            timetz_recv\n                        ": "",
    "\n                            xml_recv\n                            xml_recv\n                        ": "",
    "\n                            utf8_to_iso8859\n                            utf8_to_iso8859\n                        ": "",
    "\n                            int4xor\n                            int4xor\n                        ": "",
    "\n                            range_typanalyze\n                            range_typanalyze\n                        ": "",
    "\n                            pg_stat_get_db_xact_commit\n                            pg_stat_get_db_xact_commit\n                        ": "",
    "\n                            pg_get_function_result\n                            pg_get_function_result\n                        ": "",
    "\n                            tsq_mcontains\n                            tsq_mcontains\n                        ": "",
    "\n                            current_schema\n                            current_schema\n                        ": "",
    "\n                            contjoinsel\n                            contjoinsel\n                        ": "",
    "\n                            lseg_ge\n                            lseg_ge\n                        ": "",
    "\n                            float8gt\n                            float8gt\n                        ": "",
    "\n                            record_image_ge\n                            record_image_ge\n                        ": "",
    "\n                            anyenum_out\n                            anyenum_out\n                        ": "",
    "\n                            regroleout\n                            regroleout\n                        ": "",
    "\n                            RI_FKey_check_upd\n                            RI_FKey_check_upd\n                        ": "",
    "\n                            regr_intercept\n                            regr_intercept\n                        ": "",
    "\n                            int84mul\n                            int84mul\n                        ": "",
    "\n                            pg_identify_object_as_address\n                            pg_identify_object_as_address\n                        ": "",
    "\n                            close_lb\n                            close_lb\n                        ": "",
    "\n                            tsquerysend\n                            tsquerysend\n                        ": "",
    "\n                            gist_box_union\n                            gist_box_union\n                        ": "",
    "\n                            hashint4extended\n                            hashint4extended\n                        ": "",
    "\n                            btint82cmp\n                            btint82cmp\n                        ": "",
    "\n                            cosd\n                            cosd\n                        ": "",
    "\n                            int4or\n                            int4or\n                        ": "",
    "\n                            ts_match_qv\n                            ts_match_qv\n                        ": "",
    "\n                            network_eq\n                            network_eq\n                        ": "",
    "\n                            pg_safe_snapshot_blocking_pids\n                            pg_safe_snapshot_blocking_pids\n                        ": "",
    "\n                            inet_gist_penalty\n                            inet_gist_penalty\n                        ": "",
    "\n                            point_above\n                            point_above\n                        ": "",
    "\n                            pg_control_checkpoint\n                            pg_control_checkpoint\n                        ": "",
    "\n                            asinh\n                            asinh\n                        ": "",
    "\n                            has_type_privilege\n                            has_type_privilege\n                        ": "",
    "\n                            percentile_disc\n                            percentile_disc\n                        ": "",
    "\n                            bpchartypmodout\n                            bpchartypmodout\n                        ": "",
    "\n                            anynonarray_in\n                            anynonarray_in\n                        ": "",
    "\n                            dtrunc\n                            dtrunc\n                        ": "",
    "\n                            varbitgt\n                            varbitgt\n                        ": "",
    "\n                            has_column_privilege\n                            has_column_privilege\n                        ": "",
    "\n                            array_upper\n                            array_upper\n                        ": "",
    "\n                            tidin\n                            tidin\n                        ": "",
    "\n                            macaddr8_gt\n                            macaddr8_gt\n                        ": "",
    "\n                            mic_to_win1250\n                            mic_to_win1250\n                        ": "",
    "\n                            ts_rewrite\n                            ts_rewrite\n                        ": "",
    "\n                            json_object_keys\n                            json_object_keys\n                        ": "",
    "\n                            pg_logical_slot_get_binary_changes\n                            pg_logical_slot_get_binary_changes\n                        ": "",
    "\n                            icregexnejoinsel\n                            icregexnejoinsel\n                        ": "",
    "\n                            box_same\n                            box_same\n                        ": "",
    "\n                            int48pl\n                            int48pl\n                        ": "",
    "\n                            dsnowball_init\n                            dsnowball_init\n                        ": "",
    "\n                            hashfloat4\n                            hashfloat4\n                        ": "",
    "\n                            float8mi\n                            float8mi\n                        ": "",
    "\n                            xmlexists\n                            xmlexists\n                        ": "",
    "\n                            ts_match_tq\n                            ts_match_tq\n                        ": "",
    "\n                            substr\n                            substr\n                        ": "",
    "\n                            regrolein\n                            regrolein\n                        ": "",
    "\n                            ts_parse\n                            ts_parse\n                        ": "",
    "\n                            boolsend\n                            boolsend\n                        ": "",
    "\n                            nameout\n                            nameout\n                        ": "",
    "\n                            ts_headline\n                            ts_headline\n                        ": "",
    "\n                            interval_in\n                            interval_in\n                        ": "",
    "\n                            path_n_le\n                            path_n_le\n                        ": "",
    "\n                            timetz_le\n                            timetz_le\n                        ": "",
    "\n                            tsquery_ne\n                            tsquery_ne\n                        ": "",
    "\n                            timestamp_hash\n                            timestamp_hash\n                        ": "",
    "\n                            circle_add_pt\n                            circle_add_pt\n                        ": "",
    "\n                            spg_quad_leaf_consistent\n                            spg_quad_leaf_consistent\n                        ": "",
    "\n                            pg_stat_get_db_checksum_failures\n                            pg_stat_get_db_checksum_failures\n                        ": "",
    "\n                            pg_get_object_address\n                            pg_get_object_address\n                        ": "",
    "\n                            network_smaller\n                            network_smaller\n                        ": "",
    "\n                            right\n                            right\n                        ": "",
    "\n                            texteqname\n                            texteqname\n                        ": "",
    "\n                            macaddr_or\n                            macaddr_or\n                        ": "",
    "\n                            gin_extract_jsonb_query_path\n                            gin_extract_jsonb_query_path\n                        ": "",
    "\n                            pg_column_size\n                            pg_column_size\n                        ": "",
    "\n                            left\n                            left\n                        ": "",
    "\n                            macaddr8_send\n                            macaddr8_send\n                        ": "",
    "\n                            int2shl\n                            int2shl\n                        ": "",
    "\n                            pg_mcv_list_items\n                            pg_mcv_list_items\n                        ": "",
    "\n                            float48div\n                            float48div\n                        ": "",
    "\n                            box_mul\n                            box_mul\n                        ": "",
    "\n                            interval_eq\n                            interval_eq\n                        ": "",
    "\n                            float8_avg\n                            float8_avg\n                        ": "",
    "\n                            jsonb_populate_recordset\n                            jsonb_populate_recordset\n                        ": "",
    "\n                            numeric_cmp\n                            numeric_cmp\n                        ": "",
    "\n                            hashvarlenaextended\n                            hashvarlenaextended\n                        ": "",
    "\n                            macaddr_in\n                            macaddr_in\n                        ": "",
    "\n                            nlikejoinsel\n                            nlikejoinsel\n                        ": "",
    "\n                            point_mul\n                            point_mul\n                        ": "",
    "\n                            hashint4\n                            hashint4\n                        ": "",
    "\n                            variance\n                            variance\n                        ": "",
    "\n                            bpcharge\n                            bpcharge\n                        ": "",
    "\n                            pg_collation_is_visible\n                            pg_collation_is_visible\n                        ": "",
    "\n                            datetime_pl\n                            datetime_pl\n                        ": "",
    "\n                            enum_in\n                            enum_in\n                        ": "",
    "\n                            regrolerecv\n                            regrolerecv\n                        ": "",
    "\n                            hashoidvector\n                            hashoidvector\n                        ": "",
    "\n                            jsonb_populate_record\n                            jsonb_populate_record\n                        ": "",
    "\n                            numeric_recv\n                            numeric_recv\n                        ": "",
    "\n                            sha512\n                            sha512\n                        ": "",
    "\n                            ceil\n                            ceil\n                        ": "",
    "\n                            record_in\n                            record_in\n                        ": "",
    "\n                            convert_from\n                            convert_from\n                        ": "",
    "\n                            bpchar_pattern_ge\n                            bpchar_pattern_ge\n                        ": "",
    "\n                            pg_stat_reset\n                            pg_stat_reset\n                        ": "",
    "\n                            timestamptz_le_timestamp\n                            timestamptz_le_timestamp\n                        ": "",
    "\n                            spg_text_leaf_consistent\n                            spg_text_leaf_consistent\n                        ": "",
    "\n                            to_regoperator\n                            to_regoperator\n                        ": "",
    "\n                            dist_pl\n                            dist_pl\n                        ": "",
    "\n                            pg_ls_tmpdir\n                            pg_ls_tmpdir\n                        ": "",
    "\n                            timetz_ne\n                            timetz_ne\n                        ": "",
    "\n                            pg_stat_get_buf_written_backend\n                            pg_stat_get_buf_written_backend\n                        ": "",
    "\n                            network_ge\n                            network_ge\n                        ": "",
    "\n                            int2send\n                            int2send\n                        ": "",
    "\n                            timetz_hash_extended\n                            timetz_hash_extended\n                        ": "",
    "\n                            pg_stat_get_autoanalyze_count\n                            pg_stat_get_autoanalyze_count\n                        ": "",
    "\n                            hashbpcharextended\n                            hashbpcharextended\n                        ": "",
    "\n                            pg_lsn_out\n                            pg_lsn_out\n                        ": "",
    "\n                            atand\n                            atand\n                        ": "",
    "\n                            binary_upgrade_set_record_init_privs\n                            binary_upgrade_set_record_init_privs\n                        ": "",
    "\n                            regprocin\n                            regprocin\n                        ": "",
    "\n                            make_date\n                            make_date\n                        ": "",
    "\n                            bytealike\n                            bytealike\n                        ": "",
    "\n                            spg_kd_picksplit\n                            spg_kd_picksplit\n                        ": "",
    "\n                            gist_circle_consistent\n                            gist_circle_consistent\n                        ": "",
    "\n                            int4um\n                            int4um\n                        ": "",
    "\n                            int8mod\n                            int8mod\n                        ": "",
    "\n                            strip\n                            strip\n                        ": "",
    "\n                            pg_reload_conf\n                            pg_reload_conf\n                        ": "",
    "\n                            enum_gt\n                            enum_gt\n                        ": "",
    "\n                            area\n                            area\n                        ": "",
    "\n                            int8_avg_serialize\n                            int8_avg_serialize\n                        ": "",
    "\n                            bpchar_larger\n                            bpchar_larger\n                        ": "",
    "\n                            range_contained_by\n                            range_contained_by\n                        ": "",
    "\n                            numeric_ne\n                            numeric_ne\n                        ": "",
    "\n                            textsend\n                            textsend\n                        ": "",
    "\n                            pg_import_system_collations\n                            pg_import_system_collations\n                        ": "",
    "\n                            pg_stat_get_db_tuples_fetched\n                            pg_stat_get_db_tuples_fetched\n                        ": "",
    "\n                            chargt\n                            chargt\n                        ": "",
    "\n                            array_agg_array_transfn\n                            array_agg_array_transfn\n                        ": "",
    "\n                            time_in\n                            time_in\n                        ": "",
    "\n                            circle_overright\n                            circle_overright\n                        ": "",
    "\n                            generate_series_int8_support\n                            generate_series_int8_support\n                        ": "",
    "\n                            pg_relation_filepath\n                            pg_relation_filepath\n                        ": "",
    "\n                            float4mi\n                            float4mi\n                        ": "",
    "\n                            btint84cmp\n                            btint84cmp\n                        ": "",
    "\n                            RI_FKey_cascade_del\n                            RI_FKey_cascade_del\n                        ": "",
    "\n                            query_to_xmlschema\n                            query_to_xmlschema\n                        ": "",
    "\n                            transaction_timestamp\n                            transaction_timestamp\n                        ": "",
    "\n                            regexp_split_to_table\n                            regexp_split_to_table\n                        ": "",
    "\n                            jsonb_gt\n                            jsonb_gt\n                        ": "",
    "\n                            tsvectorrecv\n                            tsvectorrecv\n                        ": "",
    "\n                            pg_tablespace_databases\n                            pg_tablespace_databases\n                        ": "",
    "\n                            lo_unlink\n                            lo_unlink\n                        ": "",
    "\n                            pg_last_xact_replay_timestamp\n                            pg_last_xact_replay_timestamp\n                        ": "",
    "\n                            float48ne\n                            float48ne\n                        ": "",
    "\n                            int82le\n                            int82le\n                        ": "",
    "\n                            xmlvalidate\n                            xmlvalidate\n                        ": "",
    "\n                            interval_hash_extended\n                            interval_hash_extended\n                        ": "",
    "\n                            box_send\n                            box_send\n                        ": "",
    "\n                            bitnot\n                            bitnot\n                        ": "",
    "\n                            jsonb_pretty\n                            jsonb_pretty\n                        ": "",
    "\n                            isparallel\n                            isparallel\n                        ": "",
    "\n                            boolne\n                            boolne\n                        ": "",
    "\n                            win1250_to_latin2\n                            win1250_to_latin2\n                        ": "",
    "\n                            int24lt\n                            int24lt\n                        ": "",
    "\n                            prsd_start\n                            prsd_start\n                        ": "",
    "\n                            pg_stat_get_db_checksum_last_failure\n                            pg_stat_get_db_checksum_last_failure\n                        ": "",
    "\n                            array_larger\n                            array_larger\n                        ": "",
    "\n                            regr_sxx\n                            regr_sxx\n                        ": "",
    "\n                            range_adjacent\n                            range_adjacent\n                        ": "",
    "\n                            dsqrt\n                            dsqrt\n                        ": "",
    "\n                            pg_create_logical_replication_slot\n                            pg_create_logical_replication_slot\n                        ": "",
    "\n                            interval_div\n                            interval_div\n                        ": "",
    "\n                            jsonb_path_exists\n                            jsonb_path_exists\n                        ": "",
    "\n                            pg_lsn_le\n                            pg_lsn_le\n                        ": "",
    "\n                            pg_stat_get_backend_wait_event\n                            pg_stat_get_backend_wait_event\n                        ": "",
    "\n                            int2not\n                            int2not\n                        ": "",
    "\n                            timestamp_le\n                            timestamp_le\n                        ": "",
    "\n                            aclcontains\n                            aclcontains\n                        ": "",
    "\n                            pg_get_indexdef\n                            pg_get_indexdef\n                        ": "",
    "\n                            int28pl\n                            int28pl\n                        ": "",
    "\n                            pg_isolation_test_session_is_blocked\n                            pg_isolation_test_session_is_blocked\n                        ": "",
    "\n                            bpchariclike\n                            bpchariclike\n                        ": "",
    "\n                            cashlarger\n                            cashlarger\n                        ": "",
    "\n                            hash_numeric\n                            hash_numeric\n                        ": "",
    "\n                            hashoidvectorextended\n                            hashoidvectorextended\n                        ": "",
    "\n                            unknownsend\n                            unknownsend\n                        ": "",
    "\n                            btint24cmp\n                            btint24cmp\n                        ": "",
    "\n                            time_hash\n                            time_hash\n                        ": "",
    "\n                            pg_stat_get_db_conflict_lock\n                            pg_stat_get_db_conflict_lock\n                        ": "",
    "\n                            range_gist_union\n                            range_gist_union\n                        ": "",
    "\n                            int4and\n                            int4and\n                        ": "",
    "\n                            random\n                            random\n                        ": "",
    "\n                            scalargesel\n                            scalargesel\n                        ": "",
    "\n                            brin_inclusion_consistent\n                            brin_inclusion_consistent\n                        ": "",
    "\n                            pg_lsn_hash_extended\n                            pg_lsn_hash_extended\n                        ": "",
    "\n                            range_eq\n                            range_eq\n                        ": "",
    "\n                            array_fill\n                            array_fill\n                        ": "",
    "\n                            poly_overright\n                            poly_overright\n                        ": "",
    "\n                            tand\n                            tand\n                        ": "",
    "\n                            generate_series\n                            generate_series\n                        ": "",
    "\n                            textcat\n                            textcat\n                        ": "",
    "\n                            float84eq\n                            float84eq\n                        ": "",
    "\n                            isvertical\n                            isvertical\n                        ": "",
    "\n                            jsonb_exists_any\n                            jsonb_exists_any\n                        ": "",
    "\n                            pg_stat_get_last_autovacuum_time\n                            pg_stat_get_last_autovacuum_time\n                        ": "",
    "\n                            oidvectorne\n                            oidvectorne\n                        ": "",
    "\n                            void_send\n                            void_send\n                        ": "",
    "\n                            pg_prepared_statement\n                            pg_prepared_statement\n                        ": "",
    "\n                            timestamptz_le\n                            timestamptz_le\n                        ": "",
    "\n                            int48le\n                            int48le\n                        ": "",
    "\n                            numeric_accum\n                            numeric_accum\n                        ": "",
    "\n                            macaddr8_cmp\n                            macaddr8_cmp\n                        ": "",
    "\n                            lseg_perp\n                            lseg_perp\n                        ": "",
    "\n                            timestamptz_eq_date\n                            timestamptz_eq_date\n                        ": "",
    "\n                            record_image_le\n                            record_image_le\n                        ": "",
    "\n                            namenetext\n                            namenetext\n                        ": "",
    "\n                            int4pl\n                            int4pl\n                        ": "",
    "\n                            date_larger\n                            date_larger\n                        ": "",
    "\n                            pg_ndistinct_in\n                            pg_ndistinct_in\n                        ": "",
    "\n                            percentile_cont_float8_multi_final\n                            percentile_cont_float8_multi_final\n                        ": "",
    "\n                            jsonpath_send\n                            jsonpath_send\n                        ": "",
    "\n                            binary_upgrade_set_missing_value\n                            binary_upgrade_set_missing_value\n                        ": "",
    "\n                            pg_current_wal_insert_lsn\n                            pg_current_wal_insert_lsn\n                        ": "",
    "\n                            bitlt\n                            bitlt\n                        ": "",
    "\n                            date_pli\n                            date_pli\n                        ": "",
    "\n                            table_am_handler_in\n                            table_am_handler_in\n                        ": "",
    "\n                            bpchareq\n                            bpchareq\n                        ": "",
    "\n                            enum_larger\n                            enum_larger\n                        ": "",
    "\n                            timestamp_smaller\n                            timestamp_smaller\n                        ": "",
    "\n                            date_mi\n                            date_mi\n                        ": "",
    "\n                            jsonb_typeof\n                            jsonb_typeof\n                        ": "",
    "\n                            int2or\n                            int2or\n                        ": "",
    "\n                            varcharsend\n                            varcharsend\n                        ": "",
    "\n                            bool_or\n                            bool_or\n                        ": "",
    "\n                            oidvectorin\n                            oidvectorin\n                        ": "",
    "\n                            varbit_send\n                            varbit_send\n                        ": "",
    "\n                            interval_ge\n                            interval_ge\n                        ": "",
    "\n                            pg_copy_logical_replication_slot\n                            pg_copy_logical_replication_slot\n                        ": "",
    "\n                            dround\n                            dround\n                        ": "",
    "\n                            ts_rank_cd\n                            ts_rank_cd\n                        ": "",
    "\n                            pg_stat_get_progress_info\n                            pg_stat_get_progress_info\n                        ": "",
    "\n                            regoperin\n                            regoperin\n                        ": "",
    "\n                            date_mii\n                            date_mii\n                        ": "",
    "\n                            btnametextcmp\n                            btnametextcmp\n                        ": "",
    "\n                            arrayoverlap\n                            arrayoverlap\n                        ": "",
    "\n                            float8up\n                            float8up\n                        ": "",
    "\n                            date_send\n                            date_send\n                        ": "",
    "\n                            scale\n                            scale\n                        ": "",
    "\n                            tidsmaller\n                            tidsmaller\n                        ": "",
    "\n                            int84ge\n                            int84ge\n                        ": "",
    "\n                            pg_replication_origin_oid\n                            pg_replication_origin_oid\n                        ": "",
    "\n                            btint8sortsupport\n                            btint8sortsupport\n                        ": "",
    "\n                            npoints\n                            npoints\n                        ": "",
    "\n                            timestamptz_ne\n                            timestamptz_ne\n                        ": "",
    "\n                            jsonb_strip_nulls\n                            jsonb_strip_nulls\n                        ": "",
    "\n                            time_mi_time\n                            time_mi_time\n                        ": "",
    "\n                            byteanlike\n                            byteanlike\n                        ": "",
    "\n                            timestamptypmodout\n                            timestamptypmodout\n                        ": "",
    "\n                            inet_gist_picksplit\n                            inet_gist_picksplit\n                        ": "",
    "\n                            pg_ts_config_is_visible\n                            pg_ts_config_is_visible\n                        ": "",
    "\n                            int2larger\n                            int2larger\n                        ": "",
    "\n                            opaque_out\n                            opaque_out\n                        ": "",
    "\n                            macaddr8_set7bit\n                            macaddr8_set7bit\n                        ": "",
    "\n                            pg_stat_get_db_xact_rollback\n                            pg_stat_get_db_xact_rollback\n                        ": "",
    "\n                            current_query\n                            current_query\n                        ": "",
    "\n                            has_function_privilege\n                            has_function_privilege\n                        ": "",
    "\n                            time_larger\n                            time_larger\n                        ": "",
    "\n                            pg_stat_get_backend_pid\n                            pg_stat_get_backend_pid\n                        ": "",
    "\n                            btint8cmp\n                            btint8cmp\n                        ": "",
    "\n                            anyarray_in\n                            anyarray_in\n                        ": "",
    "\n                            float8_covar_pop\n                            float8_covar_pop\n                        ": "",
    "\n                            generate_series_int4_support\n                            generate_series_int4_support\n                        ": "",
    "\n                            hash_numeric_extended\n                            hash_numeric_extended\n                        ": "",
    "\n                            bernoulli\n                            bernoulli\n                        ": "",
    "\n                            inet_server_port\n                            inet_server_port\n                        ": "",
    "\n                            upper_inc\n                            upper_inc\n                        ": "",
    "\n                            txid_current\n                            txid_current\n                        ": "",
    "\n                            lead\n                            lead\n                        ": "",
    "\n                            btfloat8cmp\n                            btfloat8cmp\n                        ": "",
    "\n                            oidne\n                            oidne\n                        ": "",
    "\n                            float48mul\n                            float48mul\n                        ": "",
    "\n                            pg_stat_get_bgwriter_requested_checkpoints\n                            pg_stat_get_bgwriter_requested_checkpoints\n                        ": "",
    "\n                            pg_stat_get_xact_function_total_time\n                            pg_stat_get_xact_function_total_time\n                        ": "",
    "\n                            cot\n                            cot\n                        ": "",
    "\n                            textlike\n                            textlike\n                        ": "",
    "\n                            interval_ne\n                            interval_ne\n                        ": "",
    "\n                            float4recv\n                            float4recv\n                        ": "",
    "\n                            gin_cmp_prefix\n                            gin_cmp_prefix\n                        ": "",
    "\n                            float48mi\n                            float48mi\n                        ": "",
    "\n                            circle_above\n                            circle_above\n                        ": "",
    "\n                            brin_summarize_range\n                            brin_summarize_range\n                        ": "",
    "\n                            network_supeq\n                            network_supeq\n                        ": "",
    "\n                            icregexeqsel\n                            icregexeqsel\n                        ": "",
    "\n                            fdw_handler_in\n                            fdw_handler_in\n                        ": "",
    "\n                            gtsvector_union\n                            gtsvector_union\n                        ": "",
    "\n                            spg_quad_choose\n                            spg_quad_choose\n                        ": "",
    "\n                            gtsvector_consistent\n                            gtsvector_consistent\n                        ": "",
    "\n                            date_gt_timestamp\n                            date_gt_timestamp\n                        ": "",
    "\n                            jsonb_object_agg_transfn\n                            jsonb_object_agg_transfn\n                        ": "",
    "\n                            int42eq\n                            int42eq\n                        ": "",
    "\n                            timestamp_out\n                            timestamp_out\n                        ": "",
    "\n                            array_ne\n                            array_ne\n                        ": "",
    "\n                            oidvectorsend\n                            oidvectorsend\n                        ": "",
    "\n                            date_le_timestamp\n                            date_le_timestamp\n                        ": "",
    "\n                            timestamptz_lt_date\n                            timestamptz_lt_date\n                        ": "",
    "\n                            lo_put\n                            lo_put\n                        ": "",
    "\n                            pg_stat_get_xact_numscans\n                            pg_stat_get_xact_numscans\n                        ": "",
    "\n                            namesend\n                            namesend\n                        ": "",
    "\n                            int8pl\n                            int8pl\n                        ": "",
    "\n                            pg_stat_get_db_conflict_all\n                            pg_stat_get_db_conflict_all\n                        ": "",
    "\n                            dpow\n                            dpow\n                        ": "",
    "\n                            dist_pb\n                            dist_pb\n                        ": "",
    "\n                            pt_contained_poly\n                            pt_contained_poly\n                        ": "",
    "\n                            timestamptz_lt\n                            timestamptz_lt\n                        ": "",
    "\n                            btfloat4cmp\n                            btfloat4cmp\n                        ": "",
    "\n                            pg_control_init\n                            pg_control_init\n                        ": "",
    "\n                            positionsel\n                            positionsel\n                        ": "",
    "\n                            numeric_avg_combine\n                            numeric_avg_combine\n                        ": "",
    "\n                            pg_replication_origin_advance\n                            pg_replication_origin_advance\n                        ": "",
    "\n                            int84mi\n                            int84mi\n                        ": "",
    "\n                            float4pl\n                            float4pl\n                        ": "",
    "\n                            floor\n                            floor\n                        ": "",
    "\n                            pg_size_bytes\n                            pg_size_bytes\n                        ": "",
    "\n                            record_eq\n                            record_eq\n                        ": "",
    "\n                            regconfigrecv\n                            regconfigrecv\n                        ": "",
    "\n                            format\n                            format\n                        ": "",
    "\n                            suppress_redundant_updates_trigger\n                            suppress_redundant_updates_trigger\n                        ": "",
    "\n                            hashfloat4extended\n                            hashfloat4extended\n                        ": "",
    "\n                            substring\n                            substring\n                        ": "",
    "\n                            int82mi\n                            int82mi\n                        ": "",
    "\n                            lower_inf\n                            lower_inf\n                        ": "",
    "\n                            btoidcmp\n                            btoidcmp\n                        ": "",
    "\n                            justify_hours\n                            justify_hours\n                        ": "",
    "\n                            record_image_lt\n                            record_image_lt\n                        ": "",
    "\n                            jsonb_delete\n                            jsonb_delete\n                        ": "",
    "\n                            on_pl\n                            on_pl\n                        ": "",
    "\n                            float8le\n                            float8le\n                        ": "",
    "\n                            ts_stat\n                            ts_stat\n                        ": "",
    "\n                            float8_regr_sxy\n                            float8_regr_sxy\n                        ": "",
    "\n                            date_mi_interval\n                            date_mi_interval\n                        ": "",
    "\n                            int8smaller\n                            int8smaller\n                        ": "",
    "\n                            timetz_out\n                            timetz_out\n                        ": "",
    "\n                            macaddr_le\n                            macaddr_le\n                        ": "",
    "\n                            text_gt\n                            text_gt\n                        ": "",
    "\n                            percent_rank\n                            percent_rank\n                        ": "",
    "\n                            namelt\n                            namelt\n                        ": "",
    "\n                            array_cat\n                            array_cat\n                        ": "",
    "\n                            circle_below\n                            circle_below\n                        ": "",
    "\n                            close_lseg\n                            close_lseg\n                        ": "",
    "\n                            timestamptz_out\n                            timestamptz_out\n                        ": "",
    "\n                            inetor\n                            inetor\n                        ": "",
    "\n                            jsonb_hash\n                            jsonb_hash\n                        ": "",
    "\n                            xmlagg\n                            xmlagg\n                        ": "",
    "\n                            pg_stat_get_xact_tuples_returned\n                            pg_stat_get_xact_tuples_returned\n                        ": "",
    "\n                            text_le\n                            text_le\n                        ": "",
    "\n                            index_am_handler_out\n                            index_am_handler_out\n                        ": "",
    "\n                            json_typeof\n                            json_typeof\n                        ": "",
    "\n                            float84le\n                            float84le\n                        ": "",
    "\n                            date_ge_timestamptz\n                            date_ge_timestamptz\n                        ": "",
    "\n                            int2xor\n                            int2xor\n                        ": "",
    "\n                            cash_recv\n                            cash_recv\n                        ": "",
    "\n                            cash_cmp\n                            cash_cmp\n                        ": "",
    "\n                            int82gt\n                            int82gt\n                        ": "",
    "\n                            pg_stat_get_db_conflict_snapshot\n                            pg_stat_get_db_conflict_snapshot\n                        ": "",
    "\n                            float4larger\n                            float4larger\n                        ": "",
    "\n                            float8abs\n                            float8abs\n                        ": "",
    "\n                            json_object_agg_finalfn\n                            json_object_agg_finalfn\n                        ": "",
    "\n                            pg_sequence_parameters\n                            pg_sequence_parameters\n                        ": "",
    "\n                            tsm_handler_in\n                            tsm_handler_in\n                        ": "",
    "\n                            timestamp_ge_date\n                            timestamp_ge_date\n                        ": "",
    "\n                            cash_div_flt8\n                            cash_div_flt8\n                        ": "",
    "\n                            networkjoinsel\n                            networkjoinsel\n                        ": "",
    "\n                            ts_match_vq\n                            ts_match_vq\n                        ": "",
    "\n                            float4eq\n                            float4eq\n                        ": "",
    "\n                            spg_box_quad_config\n                            spg_box_quad_config\n                        ": "",
    "\n                            int8range_subdiff\n                            int8range_subdiff\n                        ": "",
    "\n                            pg_column_is_updatable\n                            pg_column_is_updatable\n                        ": "",
    "\n                            timestamptz_smaller\n                            timestamptz_smaller\n                        ": "",
    "\n                            int84le\n                            int84le\n                        ": "",
    "\n                            int24mul\n                            int24mul\n                        ": "",
    "\n                            network_subeq\n                            network_subeq\n                        ": "",
    "\n                            nameeq\n                            nameeq\n                        ": "",
    "\n                            jsonb_path_query\n                            jsonb_path_query\n                        ": "",
    "\n                            enum_first\n                            enum_first\n                        ": "",
    "\n                            circle_lt\n                            circle_lt\n                        ": "",
    "\n                            numeric_uplus\n                            numeric_uplus\n                        ": "",
    "\n                            covar_samp\n                            covar_samp\n                        ": "",
    "\n                            hashbpchar\n                            hashbpchar\n                        ": "",
    "\n                            xml_in\n                            xml_in\n                        ": "",
    "\n                            point_send\n                            point_send\n                        ": "",
    "\n                            jsonb_array_element\n                            jsonb_array_element\n                        ": "",
    "\n                            spg_text_inner_consistent\n                            spg_text_inner_consistent\n                        ": "",
    "\n                            pg_create_restore_point\n                            pg_create_restore_point\n                        ": "",
    "\n                            bytealt\n                            bytealt\n                        ": "",
    "\n                            dist_cpoint\n                            dist_cpoint\n                        ": "",
    "\n                            int4range_canonical\n                            int4range_canonical\n                        ": "",
    "\n                            jsonb_path_match\n                            jsonb_path_match\n                        ": "",
    "\n                            pg_type_is_visible\n                            pg_type_is_visible\n                        ": "",
    "\n                            inet_gist_consistent\n                            inet_gist_consistent\n                        ": "",
    "\n                            hashchar\n                            hashchar\n                        ": "",
    "\n                            bttextsortsupport\n                            bttextsortsupport\n                        ": "",
    "\n                            timestamp_larger\n                            timestamp_larger\n                        ": "",
    "\n                            plainto_tsquery\n                            plainto_tsquery\n                        ": "",
    "\n                            float8_corr\n                            float8_corr\n                        ": "",
    "\n                            float4gt\n                            float4gt\n                        ": "",
    "\n                            timestamp_mi_interval\n                            timestamp_mi_interval\n                        ": "",
    "\n                            int2um\n                            int2um\n                        ": "",
    "\n                            amvalidate\n                            amvalidate\n                        ": "",
    "\n                            cash_div_cash\n                            cash_div_cash\n                        ": "",
    "\n                            float8recv\n                            float8recv\n                        ": "",
    "\n                            set_byte\n                            set_byte\n                        ": "",
    "\n                            strpos\n                            strpos\n                        ": "",
    "\n                            box_above_eq\n                            box_above_eq\n                        ": "",
    "\n                            anyrange_out\n                            anyrange_out\n                        ": "",
    "\n                            gin_extract_tsquery\n                            gin_extract_tsquery\n                        ": "",
    "\n                            pg_stat_get_xact_blocks_hit\n                            pg_stat_get_xact_blocks_hit\n                        ": "",
    "\n                            box_out\n                            box_out\n                        ": "",
    "\n                            btbpchar_pattern_sortsupport\n                            btbpchar_pattern_sortsupport\n                        ": "",
    "\n                            range_gt\n                            range_gt\n                        ": "",
    "\n                            current_setting\n                            current_setting\n                        ": "",
    "\n                            json_array_element\n                            json_array_element\n                        ": "",
    "\n                            jsonb_le\n                            jsonb_le\n                        ": "",
    "\n                            circle_mul_pt\n                            circle_mul_pt\n                        ": "",
    "\n                            pg_lsn_send\n                            pg_lsn_send\n                        ": "",
    "\n                            pg_database_size\n                            pg_database_size\n                        ": "",
    "\n                            json_strip_nulls\n                            json_strip_nulls\n                        ": "",
    "\n                            box_eq\n                            box_eq\n                        ": "",
    "\n                            numeric_send\n                            numeric_send\n                        ": "",
    "\n                            json_array_elements_text\n                            json_array_elements_text\n                        ": "",
    "\n                            win_to_utf8\n                            win_to_utf8\n                        ": "",
    "\n                            enum_lt\n                            enum_lt\n                        ": "",
    "\n                            array_typanalyze\n                            array_typanalyze\n                        ": "",
    "\n                            lpad\n                            lpad\n                        ": "",
    "\n                            _pg_interval_type\n                            _pg_interval_type\n                        ": "",
    "\n                            boolrecv\n                            boolrecv\n                        ": "",
    "\n                            charsend\n                            charsend\n                        ": "",
    "\n                            dist_ppath\n                            dist_ppath\n                        ": "",
    "\n                            make_interval\n                            make_interval\n                        ": "",
    "\n                            int24mi\n                            int24mi\n                        ": "",
    "\n                            brin_minmax_union\n                            brin_minmax_union\n                        ": "",
    "\n                            int2_accum\n                            int2_accum\n                        ": "",
    "\n                            character_length\n                            character_length\n                        ": "",
    "\n                            namerecv\n                            namerecv\n                        ": "",
    "\n                            int2div\n                            int2div\n                        ": "",
    "\n                            daterange_canonical\n                            daterange_canonical\n                        ": "",
    "\n                            gist_poly_consistent\n                            gist_poly_consistent\n                        ": "",
    "\n                            poly_overlap\n                            poly_overlap\n                        ": "",
    "\n                            timestamp_eq_timestamptz\n                            timestamp_eq_timestamptz\n                        ": "",
    "\n                            mic_to_latin2\n                            mic_to_latin2\n                        ": "",
    "\n                            bitshiftright\n                            bitshiftright\n                        ": "",
    "\n                            get_bit\n                            get_bit\n                        ": "",
    "\n                            encode\n                            encode\n                        ": "",
    "\n                            isclosed\n                            isclosed\n                        ": "",
    "\n                            on_sb\n                            on_sb\n                        ": "",
    "\n                            timestamp_eq\n                            timestamp_eq\n                        ": "",
    "\n                            pg_logical_emit_message\n                            pg_logical_emit_message\n                        ": "",
    "\n                            to_regoper\n                            to_regoper\n                        ": "",
    "\n                            brin_desummarize_range\n                            brin_desummarize_range\n                        ": "",
    "\n                            pg_stat_get_db_blk_read_time\n                            pg_stat_get_db_blk_read_time\n                        ": "",
    "\n                            byteasend\n                            byteasend\n                        ": "",
    "\n                            gist_box_consistent\n                            gist_box_consistent\n                        ": "",
    "\n                            pg_stat_get_db_conflict_tablespace\n                            pg_stat_get_db_conflict_tablespace\n                        ": "",
    "\n                            inetpl\n                            inetpl\n                        ": "",
    "\n                            array_positions\n                            array_positions\n                        ": "",
    "\n                            float8div\n                            float8div\n                        ": "",
    "\n                            numeric_smaller\n                            numeric_smaller\n                        ": "",
    "\n                            cash_mi\n                            cash_mi\n                        ": "",
    "\n                            float84ge\n                            float84ge\n                        ": "",
    "\n                            tsvector_lt\n                            tsvector_lt\n                        ": "",
    "\n                            time_pl_interval\n                            time_pl_interval\n                        ": "",
    "\n                            hashvarlena\n                            hashvarlena\n                        ": "",
    "\n                            interval_send\n                            interval_send\n                        ": "",
    "\n                            bpchartypmodin\n                            bpchartypmodin\n                        ": "",
    "\n                            pg_stat_get_autovacuum_count\n                            pg_stat_get_autovacuum_count\n                        ": "",
    "\n                            date_lt_timestamptz\n                            date_lt_timestamptz\n                        ": "",
    "\n                            numeric_power\n                            numeric_power\n                        ": "",
    "\n                            asind\n                            asind\n                        ": "",
    "\n                            timestamptz_eq_timestamp\n                            timestamptz_eq_timestamp\n                        ": "",
    "\n                            poly_left\n                            poly_left\n                        ": "",
    "\n                            pg_operator_is_visible\n                            pg_operator_is_visible\n                        ": "",
    "\n                            pow\n                            pow\n                        ": "",
    "\n                            numeric_avg_deserialize\n                            numeric_avg_deserialize\n                        ": "",
    "\n                            _pg_expandarray\n                            _pg_expandarray\n                        ": "",
    "\n                            numeric_avg\n                            numeric_avg\n                        ": "",
    "\n                            tsquery_and\n                            tsquery_and\n                        ": "",
    "\n                            json_object_agg\n                            json_object_agg\n                        ": "",
    "\n                            iso_to_win866\n                            iso_to_win866\n                        ": "",
    "\n                            json_recv\n                            json_recv\n                        ": "",
    "\n                            regoperout\n                            regoperout\n                        ": "",
    "\n                            pg_stat_get_tuples_returned\n                            pg_stat_get_tuples_returned\n                        ": "",
    "\n                            regconfigout\n                            regconfigout\n                        ": "",
    "\n                            cash_in\n                            cash_in\n                        ": "",
    "\n                            inet_send\n                            inet_send\n                        ": "",
    "\n                            close_pb\n                            close_pb\n                        ": "",
    "\n                            language_handler_out\n                            language_handler_out\n                        ": "",
    "\n                            int82eq\n                            int82eq\n                        ": "",
    "\n                            circle_center\n                            circle_center\n                        ": "",
    "\n                            int28div\n                            int28div\n                        ": "",
    "\n                            dist_ppoly\n                            dist_ppoly\n                        ": "",
    "\n                            text_larger\n                            text_larger\n                        ": "",
    "\n                            macaddr_ne\n                            macaddr_ne\n                        ": "",
    "\n                            inter_lb\n                            inter_lb\n                        ": "",
    "\n                            bttextnamecmp\n                            bttextnamecmp\n                        ": "",
    "\n                            cideq\n                            cideq\n                        ": "",
    "\n                            timestamp_support\n                            timestamp_support\n                        ": "",
    "\n                            varbittypmodout\n                            varbittypmodout\n                        ": "",
    "\n                            timestamp_hash_extended\n                            timestamp_hash_extended\n                        ": "",
    "\n                            pg_ts_template_is_visible\n                            pg_ts_template_is_visible\n                        ": "",
    "\n                            int4le\n                            int4le\n                        ": "",
    "\n                            range_intersect\n                            range_intersect\n                        ": "",
    "\n                            time_le\n                            time_le\n                        ": "",
    "\n                            int4range_subdiff\n                            int4range_subdiff\n                        ": "",
    "\n                            oidgt\n                            oidgt\n                        ": "",
    "\n                            textlename\n                            textlename\n                        ": "",
    "\n                            gin_triconsistent_jsonb_path\n                            gin_triconsistent_jsonb_path\n                        ": "",
    "\n                            jsonpath_recv\n                            jsonpath_recv\n                        ": "",
    "\n                            range_union\n                            range_union\n                        ": "",
    "\n                            ts_filter\n                            ts_filter\n                        ": "",
    "\n                            lseg_parallel\n                            lseg_parallel\n                        ": "",
    "\n                            mic_to_latin4\n                            mic_to_latin4\n                        ": "",
    "\n                            date_smaller\n                            date_smaller\n                        ": "",
    "\n                            gin_extract_jsonb\n                            gin_extract_jsonb\n                        ": "",
    "\n                            tsmatchjoinsel\n                            tsmatchjoinsel\n                        ": "",
    "\n                            box_below_eq\n                            box_below_eq\n                        ": "",
    "\n                            date_ne_timestamptz\n                            date_ne_timestamptz\n                        ": "",
    "\n                            gin_tsquery_triconsistent\n                            gin_tsquery_triconsistent\n                        ": "",
    "\n                            int42lt\n                            int42lt\n                        ": "",
    "\n                            circle_left\n                            circle_left\n                        ": "",
    "\n                            line_eq\n                            line_eq\n                        ": "",
    "\n                            mod\n                            mod\n                        ": "",
    "\n                            to_json\n                            to_json\n                        ": "",
    "\n                            RI_FKey_setdefault_del\n                            RI_FKey_setdefault_del\n                        ": "",
    "\n                            macaddr8_not\n                            macaddr8_not\n                        ": "",
    "\n                            dist_sb\n                            dist_sb\n                        ": "",
    "\n                            date_ne_timestamp\n                            date_ne_timestamp\n                        ": "",
    "\n                            interval_lt\n                            interval_lt\n                        ": "",
    "\n                            text_pattern_ge\n                            text_pattern_ge\n                        ": "",
    "\n                            pg_stat_get_backend_userid\n                            pg_stat_get_backend_userid\n                        ": "",
    "\n                            charlt\n                            charlt\n                        ": "",
    "\n                            unique_key_recheck\n                            unique_key_recheck\n                        ": "",
    "\n                            gist_point_compress\n                            gist_point_compress\n                        ": "",
    "\n                            ts_match_tt\n                            ts_match_tt\n                        ": "",
    "\n                            macaddr_cmp\n                            macaddr_cmp\n                        ": "",
    "\n                            bitshiftleft\n                            bitshiftleft\n                        ": "",
    "\n                            jsonb_out\n                            jsonb_out\n                        ": "",
    "\n                            contsel\n                            contsel\n                        ": "",
    "\n                            numeric_exp\n                            numeric_exp\n                        ": "",
    "\n                            to_regproc\n                            to_regproc\n                        ": "",
    "\n                            json_build_array\n                            json_build_array\n                        ": "",
    "\n                            pg_stat_get_db_numbackends\n                            pg_stat_get_db_numbackends\n                        ": "",
    "\n                            binary_upgrade_set_next_toast_pg_type_oid\n                            binary_upgrade_set_next_toast_pg_type_oid\n                        ": "",
    "\n                            timestamp_gt\n                            timestamp_gt\n                        ": "",
    "\n                            network_cmp\n                            network_cmp\n                        ": "",
    "\n                            pg_total_relation_size\n                            pg_total_relation_size\n                        ": "",
    "\n                            btint2sortsupport\n                            btint2sortsupport\n                        ": "",
    "\n                            pg_event_trigger_dropped_objects\n                            pg_event_trigger_dropped_objects\n                        ": "",
    "\n                            pg_mcv_list_out\n                            pg_mcv_list_out\n                        ": "",
    "\n                            range_after\n                            range_after\n                        ": "",
    "\n                            btint28cmp\n                            btint28cmp\n                        ": "",
    "\n                            int4shr\n                            int4shr\n                        ": "",
    "\n                            pg_stat_get_xact_blocks_fetched\n                            pg_stat_get_xact_blocks_fetched\n                        ": "",
    "\n                            percentile_disc_multi_final\n                            percentile_disc_multi_final\n                        ": "",
    "\n                            index_am_handler_in\n                            index_am_handler_in\n                        ": "",
    "\n                            pg_stat_get_buf_alloc\n                            pg_stat_get_buf_alloc\n                        ": "",
    "\n                            int84pl\n                            int84pl\n                        ": "",
    "\n                            jsonb_object_agg_finalfn\n                            jsonb_object_agg_finalfn\n                        ": "",
    "\n                            rank\n                            rank\n                        ": "",
    "\n                            close_ps\n                            close_ps\n                        ": "",
    "\n                            has_table_privilege\n                            has_table_privilege\n                        ": "",
    "\n                            pg_replication_origin_progress\n                            pg_replication_origin_progress\n                        ": "",
    "\n                            range_cmp\n                            range_cmp\n                        ": "",
    "\n                            jsonb_path_match_opr\n                            jsonb_path_match_opr\n                        ": "",
    "\n                            bool_alltrue\n                            bool_alltrue\n                        ": "",
    "\n                            oidvectortypes\n                            oidvectortypes\n                        ": "",
    "\n                            has_schema_privilege\n                            has_schema_privilege\n                        ": "",
    "\n                            on_ps\n                            on_ps\n                        ": "",
    "\n                            pg_stat_get_db_temp_files\n                            pg_stat_get_db_temp_files\n                        ": "",
    "\n                            RI_FKey_setdefault_upd\n                            RI_FKey_setdefault_upd\n                        ": "",
    "\n                            uuid_cmp\n                            uuid_cmp\n                        ": "",
    "\n                            center\n                            center\n                        ": "",
    "\n                            int4ne\n                            int4ne\n                        ": "",
    "\n                            bpchar_pattern_lt\n                            bpchar_pattern_lt\n                        ": "",
    "\n                            nameconcatoid\n                            nameconcatoid\n                        ": "",
    "\n                            time_support\n                            time_support\n                        ": "",
    "\n                            box_in\n                            box_in\n                        ": "",
    "\n                            interval_hash\n                            interval_hash\n                        ": "",
    "\n                            thesaurus_init\n                            thesaurus_init\n                        ": "",
    "\n                            circle_overbelow\n                            circle_overbelow\n                        ": "",
    "\n                            int4smaller\n                            int4smaller\n                        ": "",
    "\n                            float8_regr_sxx\n                            float8_regr_sxx\n                        ": "",
    "\n                            ishorizontal\n                            ishorizontal\n                        ": "",
    "\n                            json_each_text\n                            json_each_text\n                        ": "",
    "\n                            xidin\n                            xidin\n                        ": "",
    "\n                            cash_le\n                            cash_le\n                        ": "",
    "\n                            anyarray_out\n                            anyarray_out\n                        ": "",
    "\n                            int42pl\n                            int42pl\n                        ": "",
    "\n                            time_ne\n                            time_ne\n                        ": "",
    "\n                            path_recv\n                            path_recv\n                        ": "",
    "\n                            boolgt\n                            boolgt\n                        ": "",
    "\n                            regdictionaryin\n                            regdictionaryin\n                        ": "",
    "\n                            spg_box_quad_leaf_consistent\n                            spg_box_quad_leaf_consistent\n                        ": "",
    "\n                            point_horiz\n                            point_horiz\n                        ": "",
    "\n                            nextval\n                            nextval\n                        ": "",
    "\n                            schema_to_xml\n                            schema_to_xml\n                        ": "",
    "\n                            float48gt\n                            float48gt\n                        ": "",
    "\n                            date_recv\n                            date_recv\n                        ": "",
    "\n                            gin_tsquery_consistent\n                            gin_tsquery_consistent\n                        ": "",
    "\n                            num_nulls\n                            num_nulls\n                        ": "",
    "\n                            pg_stat_get_db_conflict_startup_deadlock\n                            pg_stat_get_db_conflict_startup_deadlock\n                        ": "",
    "\n                            pg_cursor\n                            pg_cursor\n                        ": "",
    "\n                            tsquery_gt\n                            tsquery_gt\n                        ": "",
    "\n                            pg_stat_get_bgwriter_buf_written_clean\n                            pg_stat_get_bgwriter_buf_written_clean\n                        ": "",
    "\n                            int2in\n                            int2in\n                        ": "",
    "\n                            namegt\n                            namegt\n                        ": "",
    "\n                            xidrecv\n                            xidrecv\n                        ": "",
    "\n                            path_inter\n                            path_inter\n                        ": "",
    "\n                            pg_jit_available\n                            pg_jit_available\n                        ": "",
    "\n                            regtypeout\n                            regtypeout\n                        ": "",
    "\n                            int82lt\n                            int82lt\n                        ": "",
    "\n                            inet_recv\n                            inet_recv\n                        ": "",
    "\n                            spg_quad_inner_consistent\n                            spg_quad_inner_consistent\n                        ": "",
    "\n                            timetypmodout\n                            timetypmodout\n                        ": "",
    "\n                            btfloat4sortsupport\n                            btfloat4sortsupport\n                        ": "",
    "\n                            asin\n                            asin\n                        ": "",
    "\n                            time_cmp\n                            time_cmp\n                        ": "",
    "\n                            namelike\n                            namelike\n                        ": "",
    "\n                            dist_polyp\n                            dist_polyp\n                        ": "",
    "\n                            hashint2\n                            hashint2\n                        ": "",
    "\n                            pg_stat_get_mod_since_analyze\n                            pg_stat_get_mod_since_analyze\n                        ": "",
    "\n                            timetz_larger\n                            timetz_larger\n                        ": "",
    "\n                            close_sb\n                            close_sb\n                        ": "",
    "\n                            rpad\n                            rpad\n                        ": "",
    "\n                            box_intersect\n                            box_intersect\n                        ": "",
    "\n                            prsd_headline\n                            prsd_headline\n                        ": "",
    "\n                            time_gt\n                            time_gt\n                        ": "",
    "\n                            time_eq\n                            time_eq\n                        ": "",
    "\n                            int8_avg_accum\n                            int8_avg_accum\n                        ": "",
    "\n                            shobj_description\n                            shobj_description\n                        ": "",
    "\n                            win1251_to_iso\n                            win1251_to_iso\n                        ": "",
    "\n                            box_center\n                            box_center\n                        ": "",
    "\n                            anyarray_recv\n                            anyarray_recv\n                        ": "",
    "\n                            poly_npoints\n                            poly_npoints\n                        ": "",
    "\n                            spg_text_config\n                            spg_text_config\n                        ": "",
    "\n                            json_extract_path_text\n                            json_extract_path_text\n                        ": "",
    "\n                            bit_recv\n                            bit_recv\n                        ": "",
    "\n                            rangesel\n                            rangesel\n                        ": "",
    "\n                            _pg_char_octet_length\n                            _pg_char_octet_length\n                        ": "",
    "\n                            max\n                            max\n                        ": "",
    "\n                            float8_combine\n                            float8_combine\n                        ": "",
    "\n                            timestamp_eq_date\n                            timestamp_eq_date\n                        ": "",
    "\n                            upper\n                            upper\n                        ": "",
    "\n                            date_pl_interval\n                            date_pl_interval\n                        ": "",
    "\n                            circle_overleft\n                            circle_overleft\n                        ": "",
    "\n                            numeric_uminus\n                            numeric_uminus\n                        ": "",
    "\n                            pg_stat_get_tuples_hot_updated\n                            pg_stat_get_tuples_hot_updated\n                        ": "",
    "\n                            masklen\n                            masklen\n                        ": "",
    "\n                            int8_accum_inv\n                            int8_accum_inv\n                        ": "",
    "\n                            pg_ls_logdir\n                            pg_ls_logdir\n                        ": "",
    "\n                            namein\n                            namein\n                        ": "",
    "\n                            gin_triconsistent_jsonb\n                            gin_triconsistent_jsonb\n                        ": "",
    "\n                            pt_contained_circle\n                            pt_contained_circle\n                        ": "",
    "\n                            cash_div_flt4\n                            cash_div_flt4\n                        ": "",
    "\n                            oidle\n                            oidle\n                        ": "",
    "\n                            satisfies_hash_partition\n                            satisfies_hash_partition\n                        ": "",
    "\n                            _pg_datetime_precision\n                            _pg_datetime_precision\n                        ": "",
    "\n                            pg_ddl_command_send\n                            pg_ddl_command_send\n                        ": "",
    "\n                            pg_ts_dict_is_visible\n                            pg_ts_dict_is_visible\n                        ": "",
    "\n                            scalargtsel\n                            scalargtsel\n                        ": "",
    "\n                            macaddr8_out\n                            macaddr8_out\n                        ": "",
    "\n                            timestamptz_lt_timestamp\n                            timestamptz_lt_timestamp\n                        ": "",
    "\n                            inet_gist_union\n                            inet_gist_union\n                        ": "",
    "\n                            timestamp_ge\n                            timestamp_ge\n                        ": "",
    "\n                            thesaurus_lexize\n                            thesaurus_lexize\n                        ": "",
    "\n                            pg_collation_for\n                            pg_collation_for\n                        ": "",
    "\n                            int4mod\n                            int4mod\n                        ": "",
    "\n                            regtyperecv\n                            regtyperecv\n                        ": "",
    "\n                            int4larger\n                            int4larger\n                        ": "",
    "\n                            varcharrecv\n                            varcharrecv\n                        ": "",
    "\n                            cume_dist_final\n                            cume_dist_final\n                        ": "",
    "\n                            poly_same\n                            poly_same\n                        ": "",
    "\n                            int8_avg_combine\n                            int8_avg_combine\n                        ": "",
    "\n                            numeric_ln\n                            numeric_ln\n                        ": "",
    "\n                            int42mi\n                            int42mi\n                        ": "",
    "\n                            pg_logical_slot_peek_binary_changes\n                            pg_logical_slot_peek_binary_changes\n                        ": "",
    "\n                            pg_read_file_old\n                            pg_read_file_old\n                        ": "",
    "\n                            RI_FKey_check_ins\n                            RI_FKey_check_ins\n                        ": "",
    "\n                            numeric_mod\n                            numeric_mod\n                        ": "",
    "\n                            pg_stat_get_analyze_count\n                            pg_stat_get_analyze_count\n                        ": "",
    "\n                            var_pop\n                            var_pop\n                        ": "",
    "\n                            int8_avg\n                            int8_avg\n                        ": "",
    "\n                            pg_get_keywords\n                            pg_get_keywords\n                        ": "",
    "\n                            pg_get_partition_constraintdef\n                            pg_get_partition_constraintdef\n                        ": "",
    "\n                            float4smaller\n                            float4smaller\n                        ": "",
    "\n                            textin\n                            textin\n                        ": "",
    "\n                            pg_replication_origin_session_reset\n                            pg_replication_origin_session_reset\n                        ": "",
    "\n                            concat\n                            concat\n                        ": "",
    "\n                            popen\n                            popen\n                        ": "",
    "\n                            gist_poly_compress\n                            gist_poly_compress\n                        ": "",
    "\n                            int48mi\n                            int48mi\n                        ": "",
    "\n                            pg_advisory_xact_lock_shared\n                            pg_advisory_xact_lock_shared\n                        ": "",
    "\n                            point_out\n                            point_out\n                        ": "",
    "\n                            regprocsend\n                            regprocsend\n                        ": "",
    "\n                            pg_index_has_property\n                            pg_index_has_property\n                        ": "",
    "\n                            uuid_ge\n                            uuid_ge\n                        ": "",
    "\n                            pg_stat_get_db_temp_bytes\n                            pg_stat_get_db_temp_bytes\n                        ": "",
    "\n                            int2mul\n                            int2mul\n                        ": "",
    "\n                            chareq\n                            chareq\n                        ": "",
    "\n                            regoperatorrecv\n                            regoperatorrecv\n                        ": "",
    "\n                            tsquery_ge\n                            tsquery_ge\n                        ": "",
    "\n                            interval_pl_timetz\n                            interval_pl_timetz\n                        ": "",
    "\n                            textanycat\n                            textanycat\n                        ": "",
    "\n                            bitand\n                            bitand\n                        ": "",
    "\n                            enum_le\n                            enum_le\n                        ": "",
    "\n                            regtypesend\n                            regtypesend\n                        ": "",
    "\n                            path_add_pt\n                            path_add_pt\n                        ": "",
    "\n                            justify_interval\n                            justify_interval\n                        ": "",
    "\n                            enum_out\n                            enum_out\n                        ": "",
    "\n                            lseg_ne\n                            lseg_ne\n                        ": "",
    "\n                            on_sl\n                            on_sl\n                        ": "",
    "\n                            texticnlike\n                            texticnlike\n                        ": "",
    "\n                            cardinality\n                            cardinality\n                        ": "",
    "\n                            int82div\n                            int82div\n                        ": "",
    "\n                            pg_stat_get_backend_xact_start\n                            pg_stat_get_backend_xact_start\n                        ": "",
    "\n                            texticlike_support\n                            texticlike_support\n                        ": "",
    "\n                            bpcharrecv\n                            bpcharrecv\n                        ": "",
    "\n                            array_agg_array_finalfn\n                            array_agg_array_finalfn\n                        ": "",
    "\n                            pg_table_size\n                            pg_table_size\n                        ": "",
    "\n                            replace\n                            replace\n                        ": "",
    "\n                            timetz_gt\n                            timetz_gt\n                        ": "",
    "\n                            pg_stat_get_bgwriter_buf_written_checkpoints\n                            pg_stat_get_bgwriter_buf_written_checkpoints\n                        ": "",
    "\n                            pi\n                            pi\n                        ": "",
    "\n                            timestamptz_recv\n                            timestamptz_recv\n                        ": "",
    "\n                            range_lt\n                            range_lt\n                        ": "",
    "\n                            record_le\n                            record_le\n                        ": "",
    "\n                            regconfigin\n                            regconfigin\n                        ": "",
    "\n                            timeofday\n                            timeofday\n                        ": "",
    "\n                            poly_contain\n                            poly_contain\n                        ": "",
    "\n                            pclose\n                            pclose\n                        ": "",
    "\n                            lo_truncate\n                            lo_truncate\n                        ": "",
    "\n                            cstring_send\n                            cstring_send\n                        ": "",
    "\n                            oidge\n                            oidge\n                        ": "",
    "\n                            float84div\n                            float84div\n                        ": "",
    "\n                            booland_statefunc\n                            booland_statefunc\n                        ": "",
    "\n                            box_recv\n                            box_recv\n                        ": "",
    "\n                            numerictypmodin\n                            numerictypmodin\n                        ": "",
    "\n                            pg_stat_file\n                            pg_stat_file\n                        ": "",
    "\n                            jsonb_extract_path\n                            jsonb_extract_path\n                        ": "",
    "\n                            cash_mul_flt4\n                            cash_mul_flt4\n                        ": "",
    "\n                            interval_pl_date\n                            interval_pl_date\n                        ": "",
    "\n                            jsonb_exists_all\n                            jsonb_exists_all\n                        ": "",
    "\n                            int2int4_sum\n                            int2int4_sum\n                        ": "",
    "\n                            oidvectorgt\n                            oidvectorgt\n                        ": "",
    "\n                            pg_last_committed_xact\n                            pg_last_committed_xact\n                        ": "",
    "\n                            date_in\n                            date_in\n                        ": "",
    "\n                            arraycontained\n                            arraycontained\n                        ": "",
    "\n                            text_pattern_lt\n                            text_pattern_lt\n                        ": "",
    "\n                            timestamp_send\n                            timestamp_send\n                        ": "",
    "\n                            tsm_handler_out\n                            tsm_handler_out\n                        ": "",
    "\n                            mic_to_win1251\n                            mic_to_win1251\n                        ": "",
    "\n                            iclikejoinsel\n                            iclikejoinsel\n                        ": "",
    "\n                            stddev_pop\n                            stddev_pop\n                        ": "",
    "\n                            pg_notify\n                            pg_notify\n                        ": "",
    "\n                            regoperatorsend\n                            regoperatorsend\n                        ": "",
    "\n                            float8ne\n                            float8ne\n                        ": "",
    "\n                            oidlarger\n                            oidlarger\n                        ": "",
    "\n                            line_horizontal\n                            line_horizontal\n                        ": "",
    "\n                            oidin\n                            oidin\n                        ": "",
    "\n                            int24ne\n                            int24ne\n                        ": "",
    "\n                            on_pb\n                            on_pb\n                        ": "",
    "\n                            timestamp_sortsupport\n                            timestamp_sortsupport\n                        ": "",
    "\n                            getpgusername\n                            getpgusername\n                        ": "",
    "\n                            xmlconcat2\n                            xmlconcat2\n                        ": "",
    "\n                            json_array_element_text\n                            json_array_element_text\n                        ": "",
    "\n                            bpchar_pattern_gt\n                            bpchar_pattern_gt\n                        ": "",
    "\n                            date_le_timestamptz\n                            date_le_timestamptz\n                        ": "",
    "\n                            regexnesel\n                            regexnesel\n                        ": "",
    "\n                            interval_um\n                            interval_um\n                        ": "",
    "\n                            timestamptz_send\n                            timestamptz_send\n                        ": "",
    "\n                            charle\n                            charle\n                        ": "",
    "\n                            scalarlejoinsel\n                            scalarlejoinsel\n                        ": "",
    "\n                            uuid_recv\n                            uuid_recv\n                        ": "",
    "\n                            float4up\n                            float4up\n                        ": "",
    "\n                            btrecordcmp\n                            btrecordcmp\n                        ": "",
    "\n                            pg_get_userbyid\n                            pg_get_userbyid\n                        ": "",
    "\n                            bool_anytrue\n                            bool_anytrue\n                        ": "",
    "\n                            spg_poly_quad_compress\n                            spg_poly_quad_compress\n                        ": "",
    "\n                            percentile_cont\n                            percentile_cont\n                        ": "",
    "\n                            numeric_poly_stddev_samp\n                            numeric_poly_stddev_samp\n                        ": "",
    "\n                            database_to_xmlschema\n                            database_to_xmlschema\n                        ": "",
    "\n                            network_le\n                            network_le\n                        ": "",
    "\n                            array_lower\n                            array_lower\n                        ": "",
    "\n                            dsnowball_lexize\n                            dsnowball_lexize\n                        ": "",
    "\n                            gisthandler\n                            gisthandler\n                        ": "",
    "\n                            pg_drop_replication_slot\n                            pg_drop_replication_slot\n                        ": "",
    "\n                            pg_table_is_visible\n                            pg_table_is_visible\n                        ": "",
    "\n                            pg_stat_get_db_tuples_inserted\n                            pg_stat_get_db_tuples_inserted\n                        ": "",
    "\n                            inetmi_int8\n                            inetmi_int8\n                        ": "",
    "\n                            gtsquery_compress\n                            gtsquery_compress\n                        ": "",
    "\n                            to_timestamp\n                            to_timestamp\n                        ": "",
    "\n                            int8recv\n                            int8recv\n                        ": "",
    "\n                            pg_indexam_has_property\n                            pg_indexam_has_property\n                        ": "",
    "\n                            fdw_handler_out\n                            fdw_handler_out\n                        ": "",
    "\n                            numeric_poly_var_pop\n                            numeric_poly_var_pop\n                        ": "",
    "\n                            box_below\n                            box_below\n                        ": "",
    "\n                            float4abs\n                            float4abs\n                        ": "",
    "\n                            poly_overabove\n                            poly_overabove\n                        ": "",
    "\n                            lo_get\n                            lo_get\n                        ": "",
    "\n                            path_center\n                            path_center\n                        ": "",
    "\n                            pg_stat_get_snapshot_timestamp\n                            pg_stat_get_snapshot_timestamp\n                        ": "",
    "\n                            ginarraytriconsistent\n                            ginarraytriconsistent\n                        ": "",
    "\n                            pg_indexes_size\n                            pg_indexes_size\n                        ": "",
    "\n                            line_out\n                            line_out\n                        ": "",
    "\n                            regnamespacerecv\n                            regnamespacerecv\n                        ": "",
    "\n                            lseg_length\n                            lseg_length\n                        ": "",
    "\n                            lo_import\n                            lo_import\n                        ": "",
    "\n                            ntile\n                            ntile\n                        ": "",
    "\n                            varcharout\n                            varcharout\n                        ": "",
    "\n                            pg_stat_reset_single_function_counters\n                            pg_stat_reset_single_function_counters\n                        ": "",
    "\n                            cash_mul_flt8\n                            cash_mul_flt8\n                        ": "",
    "\n                            json_populate_record\n                            json_populate_record\n                        ": "",
    "\n                            latin2_to_mic\n                            latin2_to_mic\n                        ": "",
    "\n                            lo_close\n                            lo_close\n                        ": "",
    "\n                            lseg_send\n                            lseg_send\n                        ": "",
    "\n                            oidlt\n                            oidlt\n                        ": "",
    "\n                            hash_aclitem\n                            hash_aclitem\n                        ": "",
    "\n                            cstring_out\n                            cstring_out\n                        ": "",
    "\n                            date_ge_timestamp\n                            date_ge_timestamp\n                        ": "",
    "\n                            pg_stat_get_db_tuples_returned\n                            pg_stat_get_db_tuples_returned\n                        ": "",
    "\n                            pg_stat_get_db_blocks_fetched\n                            pg_stat_get_db_blocks_fetched\n                        ": "",
    "\n                            jsonb_exists\n                            jsonb_exists\n                        ": "",
    "\n                            float4_accum\n                            float4_accum\n                        ": "",
    "\n                            oidsmaller\n                            oidsmaller\n                        ": "",
    "\n                            regexp_match\n                            regexp_match\n                        ": "",
    "\n                            lseg_center\n                            lseg_center\n                        ": "",
    "\n                            point_right\n                            point_right\n                        ": "",
    "\n                            iso_to_koi8r\n                            iso_to_koi8r\n                        ": "",
    "\n                            trunc\n                            trunc\n                        ": "",
    "\n                            decode\n                            decode\n                        ": "",
    "\n                            areasel\n                            areasel\n                        ": "",
    "\n                            hash_range_extended\n                            hash_range_extended\n                        ": "",
    "\n                            diameter\n                            diameter\n                        ": "",
    "\n                            uuid_eq\n                            uuid_eq\n                        ": "",
    "\n                            pg_get_replication_slots\n                            pg_get_replication_slots\n                        ": "",
    "\n                            pg_current_wal_flush_lsn\n                            pg_current_wal_flush_lsn\n                        ": "",
    "\n                            pg_statistics_obj_is_visible\n                            pg_statistics_obj_is_visible\n                        ": "",
    "\n                            RI_FKey_restrict_upd\n                            RI_FKey_restrict_upd\n                        ": "",
    "\n                            numeric_fac\n                            numeric_fac\n                        ": "",
    "\n                            array_position\n                            array_position\n                        ": "",
    "\n                            circle_contain\n                            circle_contain\n                        ": "",
    "\n                            text_smaller\n                            text_smaller\n                        ": "",
    "\n                            int2out\n                            int2out\n                        ": "",
    "\n                            int48div\n                            int48div\n                        ": "",
    "\n                            macaddr_ge\n                            macaddr_ge\n                        ": "",
    "\n                            float8eq\n                            float8eq\n                        ": "",
    "\n                            btrecordimagecmp\n                            btrecordimagecmp\n                        ": "",
    "\n                            namele\n                            namele\n                        ": "",
    "\n                            ltrim\n                            ltrim\n                        ": "",
    "\n                            pg_ndistinct_send\n                            pg_ndistinct_send\n                        ": "",
    "\n                            float84ne\n                            float84ne\n                        ": "",
    "\n                            char_length\n                            char_length\n                        ": "",
    "\n                            pg_dependencies_out\n                            pg_dependencies_out\n                        ": "",
    "\n                            box_le\n                            box_le\n                        ": "",
    "\n                            tidgt\n                            tidgt\n                        ": "",
    "\n                            hashinetextended\n                            hashinetextended\n                        ": "",
    "\n                            gtsquery_penalty\n                            gtsquery_penalty\n                        ": "",
    "\n                            float8_covar_samp\n                            float8_covar_samp\n                        ": "",
    "\n                            gist_point_distance\n                            gist_point_distance\n                        ": "",
    "\n                            pg_get_constraintdef\n                            pg_get_constraintdef\n                        ": "",
    "\n                            box_above\n                            box_above\n                        ": "",
    "\n                            txid_snapshot_xmax\n                            txid_snapshot_xmax\n                        ": "",
    "\n                            pg_stat_get_xact_tuples_hot_updated\n                            pg_stat_get_xact_tuples_hot_updated\n                        ": "",
    "\n                            shell_out\n                            shell_out\n                        ": "",
    "\n                            boolge\n                            boolge\n                        ": "",
    "\n                            line_recv\n                            line_recv\n                        ": "",
    "\n                            bool_accum\n                            bool_accum\n                        ": "",
    "\n                            timetz_hash\n                            timetz_hash\n                        ": "",
    "\n                            aclitemout\n                            aclitemout\n                        ": "",
    "\n                            timestamptz_gt\n                            timestamptz_gt\n                        ": "",
    "\n                            array_le\n                            array_le\n                        ": "",
    "\n                            string_agg\n                            string_agg\n                        ": "",
    "\n                            varbitcmp\n                            varbitcmp\n                        ": "",
    "\n                            pg_lsn_ne\n                            pg_lsn_ne\n                        ": "",
    "\n                            binary_upgrade_create_empty_extension\n                            binary_upgrade_create_empty_extension\n                        ": "",
    "\n                            regprocout\n                            regprocout\n                        ": "",
    "\n                            get_byte\n                            get_byte\n                        ": "",
    "\n                            json_agg\n                            json_agg\n                        ": "",
    "\n                            tidne\n                            tidne\n                        ": "",
    "\n                            int4_avg_accum_inv\n                            int4_avg_accum_inv\n                        ": "",
    "\n                            ts_token_type\n                            ts_token_type\n                        ": "",
    "\n                            record_send\n                            record_send\n                        ": "",
    "\n                            regexp_replace\n                            regexp_replace\n                        ": "",
    "\n                            json_to_record\n                            json_to_record\n                        ": "",
    "\n                            int2vectorout\n                            int2vectorout\n                        ": "",
    "\n                            make_time\n                            make_time\n                        ": "",
    "\n                            macaddr_recv\n                            macaddr_recv\n                        ": "",
    "\n                            macaddr_eq\n                            macaddr_eq\n                        ": "",
    "\n                            querytree\n                            querytree\n                        ": "",
    "\n                            timestamptz_time\n                            timestamptz_time\n                        ": "",
    "\n                            xid_age\n                            xid_age\n                        ": "",
    "\n                            inet_to_cidr\n                            inet_to_cidr\n                        ": "",
    "\n                            select pg_catalog.on_ppath($2, $1)\n                            select pg_catalog.on_ppath($2, $1)\n                        ": "",
    "\n                            numeric_int8\n                            numeric_int8\n                        ": "",
    "\n                            pg_num_nulls\n                            pg_num_nulls\n                        ": "",
    "\n                            json_object_two_arg\n                            json_object_two_arg\n                        ": "",
    "\n                            make_timestamptz_at_timezone\n                            make_timestamptz_at_timezone\n                        ": "",
    "\n                            has_any_column_privilege_name\n                            has_any_column_privilege_name\n                        ": "",
    "\n                            has_column_privilege_id_name_attnum\n                            has_column_privilege_id_name_attnum\n                        ": "",
    "\n                            width_bucket_numeric\n                            width_bucket_numeric\n                        ": "",
    "\n                            bittoint8\n                            bittoint8\n                        ": "",
    "\n                            network_netmask\n                            network_netmask\n                        ": "",
    "\n                            show_config_by_name_missing_ok\n                            show_config_by_name_missing_ok\n                        ": "",
    "\n                            ftoi8\n                            ftoi8\n                        ": "",
    "\n                            setval_oid\n                            setval_oid\n                        ": "",
    "\n                            name_bpchar\n                            name_bpchar\n                        ": "",
    "\n                            interval_justify_days\n                            interval_justify_days\n                        ": "",
    "\n                            in_range_time_interval\n                            in_range_time_interval\n                        ": "",
    "\n                            dcos\n                            dcos\n                        ": "",
    "\n                            dcotd\n                            dcotd\n                        ": "",
    "\n                            pg_has_role_name_name\n                            pg_has_role_name_name\n                        ": "",
    "\n                            currtid_byrelname\n                            currtid_byrelname\n                        ": "",
    "\n                            be_lo_unlink\n                            be_lo_unlink\n                        ": "",
    "\n                            array_position_start\n                            array_position_start\n                        ": "",
    "\n                            timestamp_time\n                            timestamp_time\n                        ": "",
    "\n                            has_language_privilege_name\n                            has_language_privilege_name\n                        ": "",
    "\n                            to_tsvector_byid\n                            to_tsvector_byid\n                        ": "",
    "\n                            timestamp_date\n                            timestamp_date\n                        ": "",
    "\n                            has_database_privilege_id_name\n                            has_database_privilege_id_name\n                        ": "",
    "\n                            pg_get_indexdef_ext\n                            pg_get_indexdef_ext\n                        ": "",
    "\n                            text_regclass\n                            text_regclass\n                        ": "",
    "\n                            point_box\n                            point_box\n                        ": "",
    "\n                            md5_text\n                            md5_text\n                        ": "",
    "\n                            dacosd\n                            dacosd\n                        ": "",
    "\n                            has_type_privilege_id_name\n                            has_type_privilege_id_name\n                        ": "",
    "\n                            datan2d\n                            datan2d\n                        ": "",
    "\n                            in_range_int2_int8\n                            in_range_int2_int8\n                        ": "",
    "\n                            has_tablespace_privilege_name_id\n                            has_tablespace_privilege_name_id\n                        ": "",
    "\n                            ts_stat1\n                            ts_stat1\n                        ": "",
    "\n                            pg_convert\n                            pg_convert\n                        ": "",
    "\n                            ts_stat2\n                            ts_stat2\n                        ": "",
    "\n                            path_isclosed\n                            path_isclosed\n                        ": "",
    "\n                            pg_get_viewdef_name\n                            pg_get_viewdef_name\n                        ": "",
    "\n                            pg_advisory_lock_shared_int8\n                            pg_advisory_lock_shared_int8\n                        ": "",
    "\n                            points_box\n                            points_box\n                        ": "",
    "\n                            dasin\n                            dasin\n                        ": "",
    "\n                            float4_to_char\n                            float4_to_char\n                        ": "",
    "\n                            select ($1, ($1 + $2)) overlaps ($3, $4)\n                            select ($1, ($1 + $2)) overlaps ($3, $4)\n                        ": "",
    "\n                            has_server_privilege_name\n                            has_server_privilege_name\n                        ": "",
    "\n                            in_range_timetz_interval\n                            in_range_timetz_interval\n                        ": "",
    "\n                            byteaGetBit\n                            byteaGetBit\n                        ": "",
    "\n                            text_right\n                            text_right\n                        ": "",
    "\n                            timestamp_age\n                            timestamp_age\n                        ": "",
    "\n                            select pg_catalog.xpath_exists($1, $2, &apos;{}&apos;::pg_catalog.text[])\n                            select pg_catalog.xpath_exists($1, $2, &apos;{}&apos;::pg_catalog.text[])\n                        ": "",
    "\n                            byteaoverlay_no_len\n                            byteaoverlay_no_len\n                        ": "",
    "\n                            text_format_nv\n                            text_format_nv\n                        ": "",
    "\n                            has_tablespace_privilege_name\n                            has_tablespace_privilege_name\n                        ": "",
    "\n                            textregexsubstr\n                            textregexsubstr\n                        ": "",
    "\n                            pg_try_advisory_lock_int8\n                            pg_try_advisory_lock_int8\n                        ": "",
    "\n                            \n    SELECT * FROM pg_catalog.ts_debug( pg_catalog.get_current_ts_config(), $1);\n\n                            \n    SELECT * FROM pg_catalog.ts_debug( pg_catalog.get_current_ts_config(), $1);\n\n                        ": "",
    "\n                            path_open\n                            path_open\n                        ": "",
    "\n                            datetime_timestamp\n                            datetime_timestamp\n                        ": "",
    "\n                            jsonb_numeric\n                            jsonb_numeric\n                        ": "",
    "\n                            regexp_split_to_table_no_flags\n                            regexp_split_to_table_no_flags\n                        ": "",
    "\n                            circle_box\n                            circle_box\n                        ": "",
    "\n                            has_function_privilege_id\n                            has_function_privilege_id\n                        ": "",
    "\n                            PG_encoding_to_char\n                            PG_encoding_to_char\n                        ": "",
    "\n                            tsm_system_handler\n                            tsm_system_handler\n                        ": "",
    "\n                            like_escape_bytea\n                            like_escape_bytea\n                        ": "",
    "\n                            pg_size_pretty_numeric\n                            pg_size_pretty_numeric\n                        ": "",
    "\n                            tsvector_update_trigger_byid\n                            tsvector_update_trigger_byid\n                        ": "",
    "\n                            macaddr_trunc\n                            macaddr_trunc\n                        ": "",
    "\n                            has_type_privilege_name\n                            has_type_privilege_name\n                        ": "",
    "\n                            has_database_privilege_id_id\n                            has_database_privilege_id_id\n                        ": "",
    "\n                            select pg_catalog.pg_sleep(extract(epoch from pg_catalog.clock_timestamp() operator(pg_catalog.+) $1) operator(pg_catalog.-) extract(epoch from pg_catalog.clock_timestamp()))\n                            select pg_catalog.pg_sleep(extract(epoch from pg_catalog.clock_timestamp() operator(pg_catalog.+) $1) operator(pg_catalog.-) extract(epoch from pg_catalog.clock_timestamp()))\n                        ": "",
    "\n                            to_hex32\n                            to_hex32\n                        ": "",
    "\n                            numeric_float8\n                            numeric_float8\n                        ": "",
    "\n                            byteaSetByte\n                            byteaSetByte\n                        ": "",
    "\n                            pg_database_size_name\n                            pg_database_size_name\n                        ": "",
    "\n                            window_cume_dist\n                            window_cume_dist\n                        ": "",
    "\n                            i8tof\n                            i8tof\n                        ": "",
    "\n                            timetz_izone\n                            timetz_izone\n                        ": "",
    "\n                            bitoctetlength\n                            bitoctetlength\n                        ": "",
    "\n                            sha256_bytea\n                            sha256_bytea\n                        ": "",
    "\n                            timestamptz_age\n                            timestamptz_age\n                        ": "",
    "\n                            booltext\n                            booltext\n                        ": "",
    "\n                            has_table_privilege_name\n                            has_table_privilege_name\n                        ": "",
    "\n                            be_lo_import\n                            be_lo_import\n                        ": "",
    "\n                            regexp_matches_no_flags\n                            regexp_matches_no_flags\n                        ": "",
    "\n                            i4tod\n                            i4tod\n                        ": "",
    "\n                            boxes_bound_box\n                            boxes_bound_box\n                        ": "",
    "\n                            SELECT\n  CASE WHEN $1 IN (25, 1042, 1043) /* text, char, varchar */\n       THEN CASE WHEN $2 = -1 /* default typmod */\n                 THEN CAST(2^30 AS integer)\n                 ELSE information_schema._pg_char_max_length($1, $2) *\n                      pg_catalog.pg_encoding_max_length((SELECT encoding FROM pg_catalog.pg_database WHERE datname = pg_catalog.current_database()))\n            END\n       ELSE null\n  END\n                            SELECT\n  CASE WHEN $1 IN (25, 1042, 1043) /* text, char, varchar */\n       THEN CASE WHEN $2 = -1 /* default typmod */\n                 THEN CAST(2^30 AS integer)\n                 ELSE information_schema._pg_char_max_length($1, $2) *\n                      pg_catalog.pg_encoding_max_length((SELECT encoding FROM pg_catalog.pg_database WHERE datname = pg_catalog.current_database()))\n            END\n       ELSE null\n  END\n                        ": "",
    "\n                            interval_to_char\n                            interval_to_char\n                        ": "",
    "\n                            timestamp_izone\n                            timestamp_izone\n                        ": "",
    "\n                            select pg_catalog.log(10, $1)\n                            select pg_catalog.log(10, $1)\n                        ": "",
    "\n                            dtoi4\n                            dtoi4\n                        ": "",
    "\n                            dasinh\n                            dasinh\n                        ": "",
    "\n                            length_in_encoding\n                            length_in_encoding\n                        ": "",
    "\n                            SELECT\n  CASE WHEN $2 = -1 /* default typmod */\n       THEN null\n       WHEN $1 IN (1042, 1043) /* char, varchar */\n       THEN $2 - 4\n       WHEN $1 IN (1560, 1562) /* bit, varbit */\n       THEN $2\n       ELSE null\n  END\n                            SELECT\n  CASE WHEN $2 = -1 /* default typmod */\n       THEN null\n       WHEN $1 IN (1042, 1043) /* char, varchar */\n       THEN $2 - 4\n       WHEN $1 IN (1560, 1562) /* bit, varbit */\n       THEN $2\n       ELSE null\n  END\n                        ": "",
    "\n                            numeric_round\n                            numeric_round\n                        ": "",
    "\n                            timestamptz_zone\n                            timestamptz_zone\n                        ": "",
    "\n                            has_foreign_data_wrapper_privilege_id_name\n                            has_foreign_data_wrapper_privilege_id_name\n                        ": "",
    "\n                            has_server_privilege_id_id\n                            has_server_privilege_id_id\n                        ": "",
    "\n                            tsquery_phrase_distance\n                            tsquery_phrase_distance\n                        ": "",
    "\n                            ginarrayextract_2args\n                            ginarrayextract_2args\n                        ": "",
    "\n                            be_lo_creat\n                            be_lo_creat\n                        ": "",
    "\n                            aggregate_dummy\n                            aggregate_dummy\n                        ": "",
    "\n                            numeric_trunc\n                            numeric_trunc\n                        ": "",
    "\n                            pg_stats_ext_mcvlist_items\n                            pg_stats_ext_mcvlist_items\n                        ": "",
    "\n                            be_lo_put\n                            be_lo_put\n                        ": "",
    "\n                            char_bpchar\n                            char_bpchar\n                        ": "",
    "\n                            dasind\n                            dasind\n                        ": "",
    "\n                            dtan\n                            dtan\n                        ": "",
    "\n                            jsonb_to_tsvector_byid\n                            jsonb_to_tsvector_byid\n                        ": "",
    "\n                            pg_logical_emit_message_text\n                            pg_logical_emit_message_text\n                        ": "",
    "\n                            window_lead_with_offset_and_default\n                            window_lead_with_offset_and_default\n                        ": "",
    "\n                            has_any_column_privilege_id_name\n                            has_any_column_privilege_id_name\n                        ": "",
    "\n                            range_upper_inc\n                            range_upper_inc\n                        ": "",
    "\n                            generate_series_timestamptz\n                            generate_series_timestamptz\n                        ": "",
    "\n                            pg_copy_physical_replication_slot_a\n                            pg_copy_physical_replication_slot_a\n                        ": "",
    "\n                            range_constructor2\n                            range_constructor2\n                        ": "",
    "\n                            ts_headline_jsonb_opt\n                            ts_headline_jsonb_opt\n                        ": "",
    "\n                            xmltotext\n                            xmltotext\n                        ": "",
    "\n                            pg_get_expr_ext\n                            pg_get_expr_ext\n                        ": "",
    "\n                            pg_try_advisory_xact_lock_int8\n                            pg_try_advisory_xact_lock_int8\n                        ": "",
    "\n                            pg_get_ruledef_ext\n                            pg_get_ruledef_ext\n                        ": "",
    "\n                            to_hex64\n                            to_hex64\n                        ": "",
    "\n                            int4_to_char\n                            int4_to_char\n                        ": "",
    "\n                            tsvector_setweight_by_filter\n                            tsvector_setweight_by_filter\n                        ": "",
    "\n                            has_any_column_privilege_name_id\n                            has_any_column_privilege_name_id\n                        ": "",
    "\n                            has_function_privilege_id_id\n                            has_function_privilege_id_id\n                        ": "",
    "\n                            pg_has_role_name_id\n                            pg_has_role_name_id\n                        ": "",
    "\n                            text_substr\n                            text_substr\n                        ": "",
    "\n                            SELECT\n  CASE WHEN $1 IN (1186) /* interval */\n           THEN pg_catalog.upper(substring(pg_catalog.format_type($1, $2) from &apos;interval[()0-9]* #&quot;%#&quot;&apos; for &apos;#&apos;))\n       ELSE null\n  END\n                            SELECT\n  CASE WHEN $1 IN (1186) /* interval */\n           THEN pg_catalog.upper(substring(pg_catalog.format_type($1, $2) from &apos;interval[()0-9]* #&quot;%#&quot;&apos; for &apos;#&apos;))\n       ELSE null\n  END\n                        ": "",
    "\n                            bitgetbit\n                            bitgetbit\n                        ": "",
    "\n                            datanh\n                            datanh\n                        ": "",
    "\n                            select pg_catalog.lpad($1, $2, &apos; &apos;)\n                            select pg_catalog.lpad($1, $2, &apos; &apos;)\n                        ": "",
    "\n                            text_to_array_null\n                            text_to_array_null\n                        ": "",
    "\n                            has_table_privilege_id_name\n                            has_table_privilege_id_name\n                        ": "",
    "\n                            pg_advisory_lock_int4\n                            pg_advisory_lock_int4\n                        ": "",
    "\n                            window_lead\n                            window_lead\n                        ": "",
    "\n                            tsquerytree\n                            tsquerytree\n                        ": "",
    "\n                            window_first_value\n                            window_first_value\n                        ": "",
    "\n                            numeric_to_char\n                            numeric_to_char\n                        ": "",
    "\n                            window_lag_with_offset\n                            window_lag_with_offset\n                        ": "",
    "\n                            interval_justify_interval\n                            interval_justify_interval\n                        ": "",
    "\n                            macaddr8_trunc\n                            macaddr8_trunc\n                        ": "",
    "\n                            pg_advisory_xact_lock_shared_int8\n                            pg_advisory_xact_lock_shared_int8\n                        ": "",
    "\n                            timestamp_part\n                            timestamp_part\n                        ": "",
    "\n                            gin_extract_tsquery_5args\n                            gin_extract_tsquery_5args\n                        ": "",
    "\n                            has_language_privilege_name_name\n                            has_language_privilege_name_name\n                        ": "",
    "\n                            tsvector_delete_str\n                            tsvector_delete_str\n                        ": "",
    "\n                            has_language_privilege_name_id\n                            has_language_privilege_name_id\n                        ": "",
    "\n                            generate_series_step_numeric\n                            generate_series_step_numeric\n                        ": "",
    "\n                            bpchar_name\n                            bpchar_name\n                        ": "",
    "\n                            to_tsquery_byid\n                            to_tsquery_byid\n                        ": "",
    "\n                            has_column_privilege_id_id_name\n                            has_column_privilege_id_id_name\n                        ": "",
    "\n                            pg_read_binary_file_off_len\n                            pg_read_binary_file_off_len\n                        ": "",
    "\n                            bitoverlay\n                            bitoverlay\n                        ": "",
    "\n                            window_lag\n                            window_lag\n                        ": "",
    "\n                            ts_rankcd_wtt\n                            ts_rankcd_wtt\n                        ": "",
    "\n                            gin_tsquery_consistent_oldsig\n                            gin_tsquery_consistent_oldsig\n                        ": "",
    "\n                            tsvector_delete_arr\n                            tsvector_delete_arr\n                        ": "",
    "\n                            byteaoctetlen\n                            byteaoctetlen\n                        ": "",
    "\n                            ts_rankcd_ttf\n                            ts_rankcd_ttf\n                        ": "",
    "\n                            pg_get_constraintdef_ext\n                            pg_get_constraintdef_ext\n                        ": "",
    "\n                            pg_ls_dir_1arg\n                            pg_ls_dir_1arg\n                        ": "",
    "\n                            be_lo_create\n                            be_lo_create\n                        ": "",
    "\n                            network_host\n                            network_host\n                        ": "",
    "\n                            ts_headline_json_byid_opt\n                            ts_headline_json_byid_opt\n                        ": "",
    "\n                            macaddr8tomacaddr\n                            macaddr8tomacaddr\n                        ": "",
    "\n                            has_function_privilege_id_name\n                            has_function_privilege_id_name\n                        ": "",
    "\n                            pg_get_viewdef_wrap\n                            pg_get_viewdef_wrap\n                        ": "",
    "\n                            path_area\n                            path_area\n                        ": "",
    "\n                            window_lead_with_offset\n                            window_lead_with_offset\n                        ": "",
    "\n                            pg_try_advisory_xact_lock_int4\n                            pg_try_advisory_xact_lock_int4\n                        ": "",
    "\n                            json_build_object_noargs\n                            json_build_object_noargs\n                        ": "",
    "\n                            time_timetz\n                            time_timetz\n                        ": "",
    "\n                            enum_range_all\n                            enum_range_all\n                        ": "",
    "\n                            datand\n                            datand\n                        ": "",
    "\n                            be_lo_from_bytea\n                            be_lo_from_bytea\n                        ": "",
    "\n                            in_range_date_interval\n                            in_range_date_interval\n                        ": "",
    "\n                            numeric_int2\n                            numeric_int2\n                        ": "",
    "\n                            pg_stop_backup_v2\n                            pg_stop_backup_v2\n                        ": "",
    "\n                            gtsvector_consistent_oldsig\n                            gtsvector_consistent_oldsig\n                        ": "",
    "\n                            circle_diameter\n                            circle_diameter\n                        ": "",
    "\n                            bpcharlen\n                            bpcharlen\n                        ": "",
    "\n                            timestamptz_scale\n                            timestamptz_scale\n                        ": "",
    "\n                            ts_rankcd_wttf\n                            ts_rankcd_wttf\n                        ": "",
    "\n                            array_cardinality\n                            array_cardinality\n                        ": "",
    "\n                            ts_headline_jsonb_byid_opt\n                            ts_headline_jsonb_byid_opt\n                        ": "",
    "\n                            pg_advisory_xact_lock_int8\n                            pg_advisory_xact_lock_int8\n                        ": "",
    "\n                            timetz_part\n                            timetz_part\n                        ": "",
    "\n                            bpcharoctetlen\n                            bpcharoctetlen\n                        ": "",
    "\n                            bitlength\n                            bitlength\n                        ": "",
    "\n                            i2tof\n                            i2tof\n                        ": "",
    "\n                            has_table_privilege_name_name\n                            has_table_privilege_name_name\n                        ": "",
    "\n                            select $1 || $2::pg_catalog.text\n                            select $1 || $2::pg_catalog.text\n                        ": "",
    "\n                            overlaps_time\n                            overlaps_time\n                        ": "",
    "\n                            json_build_array_noargs\n                            json_build_array_noargs\n                        ": "",
    "\n                            timestamptz_izone\n                            timestamptz_izone\n                        ": "",
    "\n                            cash_numeric\n                            cash_numeric\n                        ": "",
    "\n                            i4tochar\n                            i4tochar\n                        ": "",
    "\n                            window_rank\n                            window_rank\n                        ": "",
    "\n                            timestamptz_to_char\n                            timestamptz_to_char\n                        ": "",
    "\n                            timestamptz_timestamp\n                            timestamptz_timestamp\n                        ": "",
    "\n                            currtid_byreloid\n                            currtid_byreloid\n                        ": "",
    "\n                            ts_rank_wttf\n                            ts_rank_wttf\n                        ": "",
    "\n                            text_concat\n                            text_concat\n                        ": "",
    "\n                            int84\n                            int84\n                        ": "",
    "\n                            text_format\n                            text_format\n                        ": "",
    "\n                            pg_advisory_lock_shared_int4\n                            pg_advisory_lock_shared_int4\n                        ": "",
    "\n                            int8_numeric\n                            int8_numeric\n                        ": "",
    "\n                            select $2 + $1\n                            select $2 + $1\n                        ": "",
    "\n                            date_timestamp\n                            date_timestamp\n                        ": "",
    "\n                            timestamptz_trunc\n                            timestamptz_trunc\n                        ": "",
    "\n                            dtoi2\n                            dtoi2\n                        ": "",
    "\n                            pg_copy_logical_replication_slot_b\n                            pg_copy_logical_replication_slot_b\n                        ": "",
    "\n                            has_table_privilege_id_id\n                            has_table_privilege_id_id\n                        ": "",
    "\n                            tsvector_length\n                            tsvector_length\n                        ": "",
    "\n                            SELECT\n  CASE WHEN $1 IN (21, 23, 20, 700, 701) THEN 2\n       WHEN $1 IN (1700) THEN 10\n       ELSE null\n  END\n                            SELECT\n  CASE WHEN $1 IN (21, 23, 20, 700, 701) THEN 2\n       WHEN $1 IN (1700) THEN 10\n       ELSE null\n  END\n                        ": "",
    "\n                            ts_rank_ttf\n                            ts_rank_ttf\n                        ": "",
    "\n                            datan2\n                            datan2\n                        ": "",
    "\n                            pg_rotate_logfile_v2\n                            pg_rotate_logfile_v2\n                        ": "",
    "\n                            box_circle\n                            box_circle\n                        ": "",
    "\n                            hypothetical_cume_dist_final\n                            hypothetical_cume_dist_final\n                        ": "",
    "\n                            time_scale\n                            time_scale\n                        ": "",
    "\n                            numeric_int4\n                            numeric_int4\n                        ": "",
    "\n                            pg_try_advisory_lock_shared_int4\n                            pg_try_advisory_lock_shared_int4\n                        ": "",
    "\n                            window_nth_value\n                            window_nth_value\n                        ": "",
    "\n                            interval_finite\n                            interval_finite\n                        ": "",
    "\n                            cidr_set_masklen\n                            cidr_set_masklen\n                        ": "",
    "\n                            has_database_privilege_name_name\n                            has_database_privilege_name_name\n                        ": "",
    "\n                            dcot\n                            dcot\n                        ": "",
    "\n                            select ($2 + $1)\n                            select ($2 + $1)\n                        ": "",
    "\n                            tsquery_numnode\n                            tsquery_numnode\n                        ": "",
    "\n                            has_function_privilege_name\n                            has_function_privilege_name\n                        ": "",
    "\n                            interval_trunc\n                            interval_trunc\n                        ": "",
    "\n                            select pg_catalog.octet_length($1) * 8\n                            select pg_catalog.octet_length($1) * 8\n                        ": "",
    "\n                            json_to_tsvector_byid\n                            json_to_tsvector_byid\n                        ": "",
    "\n                            currval_oid\n                            currval_oid\n                        ": "",
    "\n                            pg_advisory_unlock_int8\n                            pg_advisory_unlock_int8\n                        ": "",
    "\n                            line_construct_pp\n                            line_construct_pp\n                        ": "",
    "\n                            textoverlay_no_len\n                            textoverlay_no_len\n                        ": "",
    "\n                            box_height\n                            box_height\n                        ": "",
    "\n                            box_width\n                            box_width\n                        ": "",
    "\n                            text_name\n                            text_name\n                        ": "",
    "\n                            ts_headline_json\n                            ts_headline_json\n                        ": "",
    "\n                            has_sequence_privilege_id_id\n                            has_sequence_privilege_id_id\n                        ": "",
    "\n                            has_foreign_data_wrapper_privilege_name_name\n                            has_foreign_data_wrapper_privilege_name_name\n                        ": "",
    "\n                            \nSELECT\n    tt.alias AS alias,\n    tt.description AS description,\n    parse.token AS token,\n    ARRAY ( SELECT m.mapdict::pg_catalog.regdictionary\n            FROM pg_catalog.pg_ts_config_map AS m\n            WHERE m.mapcfg = $1 AND m.maptokentype = parse.tokid\n            ORDER BY m.mapseqno )\n    AS dictionaries,\n    ( SELECT mapdict::pg_catalog.regdictionary\n      FROM pg_catalog.pg_ts_config_map AS m\n      WHERE m.mapcfg = $1 AND m.maptokentype = parse.tokid\n      ORDER BY pg_catalog.ts_lexize(mapdict, parse.token) IS NULL, m.mapseqno\n      LIMIT 1\n    ) AS dictionary,\n    ( SELECT pg_catalog.ts_lexize(mapdict, parse.token)\n      FROM pg_catalog.pg_ts_config_map AS m\n      WHERE m.mapcfg = $1 AND m.maptokentype = parse.tokid\n      ORDER BY pg_catalog.ts_lexize(mapdict, parse.token) IS NULL, m.mapseqno\n      LIMIT 1\n    ) AS lexemes\nFROM pg_catalog.ts_parse(\n        (SELECT cfgparser FROM pg_catalog.pg_ts_config WHERE oid = $1 ), $2\n    ) AS parse,\n     pg_catalog.ts_token_type(\n        (SELECT cfgparser FROM pg_catalog.pg_ts_config WHERE oid = $1 )\n    ) AS tt\nWHERE tt.tokid = parse.tokid\n\n                            \nSELECT\n    tt.alias AS alias,\n    tt.description AS description,\n    parse.token AS token,\n    ARRAY ( SELECT m.mapdict::pg_catalog.regdictionary\n            FROM pg_catalog.pg_ts_config_map AS m\n            WHERE m.mapcfg = $1 AND m.maptokentype = parse.tokid\n            ORDER BY m.mapseqno )\n    AS dictionaries,\n    ( SELECT mapdict::pg_catalog.regdictionary\n      FROM pg_catalog.pg_ts_config_map AS m\n      WHERE m.mapcfg = $1 AND m.maptokentype = parse.tokid\n      ORDER BY pg_catalog.ts_lexize(mapdict, parse.token) IS NULL, m.mapseqno\n      LIMIT 1\n    ) AS dictionary,\n    ( SELECT pg_catalog.ts_lexize(mapdict, parse.token)\n      FROM pg_catalog.pg_ts_config_map AS m\n      WHERE m.mapcfg = $1 AND m.maptokentype = parse.tokid\n      ORDER BY pg_catalog.ts_lexize(mapdict, parse.token) IS NULL, m.mapseqno\n      LIMIT 1\n    ) AS lexemes\nFROM pg_catalog.ts_parse(\n        (SELECT cfgparser FROM pg_catalog.pg_ts_config WHERE oid = $1 ), $2\n    ) AS parse,\n     pg_catalog.ts_token_type(\n        (SELECT cfgparser FROM pg_catalog.pg_ts_config WHERE oid = $1 )\n    ) AS tt\nWHERE tt.tokid = parse.tokid\n\n                        ": "",
    "\n                            tsquery_rewrite_query\n                            tsquery_rewrite_query\n                        ": "",
    "\n                            bittoint4\n                            bittoint4\n                        ": "",
    "\n                            has_foreign_data_wrapper_privilege_id_id\n                            has_foreign_data_wrapper_privilege_id_id\n                        ": "",
    "\n                            interval_justify_hours\n                            interval_justify_hours\n                        ": "",
    "\n                            datan\n                            datan\n                        ": "",
    "\n                            pg_ls_tmpdir_1arg\n                            pg_ls_tmpdir_1arg\n                        ": "",
    "\n                            timetz_zone\n                            timetz_zone\n                        ": "",
    "\n                            tsvector_unnest\n                            tsvector_unnest\n                        ": "",
    "\n                            int28\n                            int28\n                        ": "",
    "\n                            has_tablespace_privilege_id\n                            has_tablespace_privilege_id\n                        ": "",
    "\n                            overlaps_timetz\n                            overlaps_timetz\n                        ": "",
    "\n                            range_lower_inf\n                            range_lower_inf\n                        ": "",
    "\n                            has_schema_privilege_name_name\n                            has_schema_privilege_name_name\n                        ": "",
    "\n                            select pg_catalog.substring($1, pg_catalog.similar_escape($2, $3))\n                            select pg_catalog.substring($1, pg_catalog.similar_escape($2, $3))\n                        ": "",
    "\n                            char_text\n                            char_text\n                        ": "",
    "\n                            has_language_privilege_id_name\n                            has_language_privilege_id_name\n                        ": "",
    "\n                            be_lo_close\n                            be_lo_close\n                        ": "",
    "\n                            box_poly\n                            box_poly\n                        ": "",
    "\n                            pgsql_version\n                            pgsql_version\n                        ": "",
    "\n                            ts_headline_opt\n                            ts_headline_opt\n                        ": "",
    "\n                            textregexreplace_noopt\n                            textregexreplace_noopt\n                        ": "",
    "\n                            pg_stat_file_1arg\n                            pg_stat_file_1arg\n                        ": "",
    "\n                            timestamptz_part\n                            timestamptz_part\n                        ": "",
    "\n                            poly_circle\n                            poly_circle\n                        ": "",
    "\n                            network_hostmask\n                            network_hostmask\n                        ": "",
    "\n                            i4toi2\n                            i4toi2\n                        ": "",
    "\n                            window_row_number\n                            window_row_number\n                        ": "",
    "\n                            byteaoverlay\n                            byteaoverlay\n                        ": "",
    "\n                            text_reverse\n                            text_reverse\n                        ": "",
    "\n                            has_sequence_privilege_name_id\n                            has_sequence_privilege_name_id\n                        ": "",
    "\n                            in_range_timestamp_interval\n                            in_range_timestamp_interval\n                        ": "",
    "\n                            numeric_to_number\n                            numeric_to_number\n                        ": "",
    "\n                            has_column_privilege_name_id_name\n                            has_column_privilege_name_id_name\n                        ": "",
    "\n                            has_column_privilege_id_id_attnum\n                            has_column_privilege_id_id_attnum\n                        ": "",
    "\n                            select description from pg_catalog.pg_description where objoid = $1 and classoid = &apos;pg_catalog.pg_class&apos;::pg_catalog.regclass and objsubid = $2\n                            select description from pg_catalog.pg_description where objoid = $1 and classoid = &apos;pg_catalog.pg_class&apos;::pg_catalog.regclass and objsubid = $2\n                        ": "",
    "\n                            has_schema_privilege_id_id\n                            has_schema_privilege_id_id\n                        ": "",
    "\n                            pg_read_file_off_len\n                            pg_read_file_off_len\n                        ": "",
    "\n                            has_server_privilege_id_name\n                            has_server_privilege_id_name\n                        ": "",
    "\n                            select pg_catalog.date_part($1, cast($2 as timestamp without time zone))\n                            select pg_catalog.date_part($1, cast($2 as timestamp without time zone))\n                        ": "",
    "\n                            text_substr_no_len\n                            text_substr_no_len\n                        ": "",
    "\n                            tsvector_strip\n                            tsvector_strip\n                        ": "",
    "\n                            generate_series_timestamp\n                            generate_series_timestamp\n                        ": "",
    "\n                            be_lo_tell\n                            be_lo_tell\n                        ": "",
    "\n                            poly_box\n                            poly_box\n                        ": "",
    "\n                            be_loread\n                            be_loread\n                        ": "",
    "\n                            inet_set_masklen\n                            inet_set_masklen\n                        ": "",
    "\n                            select pg_catalog.polygon(12, $1)\n                            select pg_catalog.polygon(12, $1)\n                        ": "",
    "\n                            network_broadcast\n                            network_broadcast\n                        ": "",
    "\n                            SELECT\n  CASE $1\n         WHEN 21 /*int2*/ THEN 16\n         WHEN 23 /*int4*/ THEN 32\n         WHEN 20 /*int8*/ THEN 64\n         WHEN 1700 /*numeric*/ THEN\n              CASE WHEN $2 = -1\n                   THEN null\n                   ELSE (($2 - 4) &gt;&gt; 16) &amp; 65535\n                   END\n         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/\n         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/\n         ELSE null\n  END\n                            SELECT\n  CASE $1\n         WHEN 21 /*int2*/ THEN 16\n         WHEN 23 /*int4*/ THEN 32\n         WHEN 20 /*int8*/ THEN 64\n         WHEN 1700 /*numeric*/ THEN\n              CASE WHEN $2 = -1\n                   THEN null\n                   ELSE (($2 - 4) &gt;&gt; 16) &amp; 65535\n                   END\n         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/\n         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/\n         ELSE null\n  END\n                        ": "",
    "\n                            datetimetz_timestamptz\n                            datetimetz_timestamptz\n                        ": "",
    "\n                            textoverlay\n                            textoverlay\n                        ": "",
    "\n                            textoctetlen\n                            textoctetlen\n                        ": "",
    "\n                            jsonb_int8\n                            jsonb_int8\n                        ": "",
    "\n                            pg_has_role_id\n                            pg_has_role_id\n                        ": "",
    "\n                            pg_has_role_id_name\n                            pg_has_role_id_name\n                        ": "",
    "\n                            pg_read_file_v2\n                            pg_read_file_v2\n                        ": "",
    "\n                            interval_part\n                            interval_part\n                        ": "",
    "\n                            sha512_bytea\n                            sha512_bytea\n                        ": "",
    "\n                            row_security_active_name\n                            row_security_active_name\n                        ": "",
    "\n                            timestamptz_trunc_zone\n                            timestamptz_trunc_zone\n                        ": "",
    "\n                            sha224_bytea\n                            sha224_bytea\n                        ": "",
    "\n                            has_schema_privilege_name_id\n                            has_schema_privilege_name_id\n                        ": "",
    "\n                            websearch_to_tsquery_byid\n                            websearch_to_tsquery_byid\n                        ": "",
    "\n                            width_bucket_array\n                            width_bucket_array\n                        ": "",
    "\n                            timestamp_timestamptz\n                            timestamp_timestamptz\n                        ": "",
    "\n                            cr_circle\n                            cr_circle\n                        ": "",
    "\n                            circle_radius\n                            circle_radius\n                        ": "",
    "\n                            select pg_catalog.rpad($1, $2, &apos; &apos;)\n                            select pg_catalog.rpad($1, $2, &apos; &apos;)\n                        ": "",
    "\n                            acldefault_sql\n                            acldefault_sql\n                        ": "",
    "\n                            select $1 operator(pg_catalog.&lt;@) $2 and $2 operator(pg_catalog.&lt;@) $1\n                            select $1 operator(pg_catalog.&lt;@) $2 and $2 operator(pg_catalog.&lt;@) $1\n                        ": "",
    "\n                            window_percent_rank\n                            window_percent_rank\n                        ": "",
    "\n                            window_ntile\n                            window_ntile\n                        ": "",
    "\n                            show_all_settings\n                            show_all_settings\n                        ": "",
    "\n                            int4_numeric\n                            int4_numeric\n                        ": "",
    "\n                            sha384_bytea\n                            sha384_bytea\n                        ": "",
    "\n                            jsonb_delete_idx\n                            jsonb_delete_idx\n                        ": "",
    "\n                            SELECT\n  CASE WHEN $1 IN (1082) /* date */\n           THEN 0\n       WHEN $1 IN (1083, 1114, 1184, 1266) /* time, timestamp, same + tz */\n           THEN CASE WHEN $2 &lt; 0 THEN 6 ELSE $2 END\n       WHEN $1 IN (1186) /* interval */\n           THEN CASE WHEN $2 &lt; 0 OR $2 &amp; 65535 = 65535 THEN 6 ELSE $2 &amp; 65535 END\n       ELSE null\n  END\n                            SELECT\n  CASE WHEN $1 IN (1082) /* date */\n           THEN 0\n       WHEN $1 IN (1083, 1114, 1184, 1266) /* time, timestamp, same + tz */\n           THEN CASE WHEN $2 &lt; 0 THEN 6 ELSE $2 END\n       WHEN $1 IN (1186) /* interval */\n           THEN CASE WHEN $2 &lt; 0 OR $2 &amp; 65535 = 65535 THEN 6 ELSE $2 &amp; 65535 END\n       ELSE null\n  END\n                        ": "",
    "\n                            i2toi4\n                            i2toi4\n                        ": "",
    "\n                            numeric_float4\n                            numeric_float4\n                        ": "",
    "\n                            jsonb_bool\n                            jsonb_bool\n                        ": "",
    "\n                            pg_has_role_id_id\n                            pg_has_role_id_id\n                        ": "",
    "\n                            byteaSetBit\n                            byteaSetBit\n                        ": "",
    "\n                            dsign\n                            dsign\n                        ": "",
    "\n                            ts_headline_jsonb\n                            ts_headline_jsonb\n                        ": "",
    "\n                            pg_try_advisory_xact_lock_shared_int4\n                            pg_try_advisory_xact_lock_shared_int4\n                        ": "",
    "\n                            poly_path\n                            poly_path\n                        ": "",
    "\n                            in_range_interval_interval\n                            in_range_interval_interval\n                        ": "",
    "\n                            regexp_match_no_flags\n                            regexp_match_no_flags\n                        ": "",
    "\n                            rtrim1\n                            rtrim1\n                        ": "",
    "\n                            int48\n                            int48\n                        ": "",
    "\n                            timestamp_to_char\n                            timestamp_to_char\n                        ": "",
    "\n                            jsonb_build_object_noargs\n                            jsonb_build_object_noargs\n                        ": "",
    "\n                            textpos\n                            textpos\n                        ": "",
    "\n                            int82\n                            int82\n                        ": "",
    "\n                            timetz_scale\n                            timetz_scale\n                        ": "",
    "\n                            in_range_numeric_numeric\n                            in_range_numeric_numeric\n                        ": "",
    "\n                            has_column_privilege_id_name\n                            has_column_privilege_id_name\n                        ": "",
    "\n                            pg_advisory_unlock_shared_int4\n                            pg_advisory_unlock_shared_int4\n                        ": "",
    "\n                            be_lo_get\n                            be_lo_get\n                        ": "",
    "\n                            plainto_tsquery_byid\n                            plainto_tsquery_byid\n                        ": "",
    "\n                            has_tablespace_privilege_name_name\n                            has_tablespace_privilege_name_name\n                        ": "",
    "\n                            SELECT CASE WHEN $2.typtype = &apos;d&apos; THEN $2.typtypmod ELSE $1.atttypmod END\n                            SELECT CASE WHEN $2.typtype = &apos;d&apos; THEN $2.typtypmod ELSE $1.atttypmod END\n                        ": "",
    "\n                            box_area\n                            box_area\n                        ": "",
    "\n                            bitsubstr\n                            bitsubstr\n                        ": "",
    "\n                            overlaps_timestamp\n                            overlaps_timestamp\n                        ": "",
    "\n                            pg_try_advisory_xact_lock_shared_int8\n                            pg_try_advisory_xact_lock_shared_int8\n                        ": "",
    "\n                            \nSELECT (ss.a).n FROM\n  (SELECT information_schema._pg_expandarray(indkey) AS a\n   FROM pg_catalog.pg_index WHERE indexrelid = $1) ss\n  WHERE (ss.a).x = $2;\n\n                            \nSELECT (ss.a).n FROM\n  (SELECT information_schema._pg_expandarray(indkey) AS a\n   FROM pg_catalog.pg_index WHERE indexrelid = $1) ss\n  WHERE (ss.a).x = $2;\n\n                        ": "",
    "\n                            in_range_int4_int2\n                            in_range_int4_int2\n                        ": "",
    "\n                            dcosh\n                            dcosh\n                        ": "",
    "\n                            int4_cash\n                            int4_cash\n                        ": "",
    "\n                            select pg_catalog.quote_nullable($1::pg_catalog.text)\n                            select pg_catalog.quote_nullable($1::pg_catalog.text)\n                        ": "",
    "\n                            tsvector_setweight\n                            tsvector_setweight\n                        ": "",
    "\n                            dfloor\n                            dfloor\n                        ": "",
    "\n                            has_column_privilege_name_name_attnum\n                            has_column_privilege_name_name_attnum\n                        ": "",
    "\n                            pg_current_logfile_1arg\n                            pg_current_logfile_1arg\n                        ": "",
    "\n                            construct_point\n                            construct_point\n                        ": "",
    "\n                            ts_headline_byid_opt\n                            ts_headline_byid_opt\n                        ": "",
    "\n                            byteatrim\n                            byteatrim\n                        ": "",
    "\n                            enum_range_bounds\n                            enum_range_bounds\n                        ": "",
    "\n                            has_server_privilege_id\n                            has_server_privilege_id\n                        ": "",
    "\n                            in_range_float4_float8\n                            in_range_float4_float8\n                        ": "",
    "\n                            select pg_catalog.xpath($1, $2, &apos;{}&apos;::pg_catalog.text[])\n                            select pg_catalog.xpath($1, $2, &apos;{}&apos;::pg_catalog.text[])\n                        ": "",
    "\n                            range_empty\n                            range_empty\n                        ": "",
    "\n                            ts_headline_json_byid\n                            ts_headline_json_byid\n                        ": "",
    "\n                            bool_int4\n                            bool_int4\n                        ": "",
    "\n                            generate_subscripts_nodir\n                            generate_subscripts_nodir\n                        ": "",
    "\n                            has_any_column_privilege_id\n                            has_any_column_privilege_id\n                        ": "",
    "\n                            has_server_privilege_name_id\n                            has_server_privilege_name_id\n                        ": "",
    "\n                            pg_has_role_name\n                            pg_has_role_name\n                        ": "",
    "\n                            ts_headline_jsonb_byid\n                            ts_headline_jsonb_byid\n                        ": "",
    "\n                            dsin\n                            dsin\n                        ": "",
    "\n                            generate_series_step_int4\n                            generate_series_step_int4\n                        ": "",
    "\n                            binary_encode\n                            binary_encode\n                        ": "",
    "\n                            array_to_text_null\n                            array_to_text_null\n                        ": "",
    "\n                            tsm_bernoulli_handler\n                            tsm_bernoulli_handler\n                        ": "",
    "\n                            textregexreplace\n                            textregexreplace\n                        ": "",
    "\n                            has_foreign_data_wrapper_privilege_id\n                            has_foreign_data_wrapper_privilege_id\n                        ": "",
    "\n                            window_lag_with_offset_and_default\n                            window_lag_with_offset_and_default\n                        ": "",
    "\n                            timestamp_scale\n                            timestamp_scale\n                        ": "",
    "\n                            name_text\n                            name_text\n                        ": "",
    "\n                            pg_tablespace_size_oid\n                            pg_tablespace_size_oid\n                        ": "",
    "\n                            timetz_time\n                            timetz_time\n                        ": "",
    "\n                            int8_to_char\n                            int8_to_char\n                        ": "",
    "\n                            be_lo_lseek\n                            be_lo_lseek\n                        ": "",
    "\n                            pg_logical_emit_message_bytea\n                            pg_logical_emit_message_bytea\n                        ": "",
    "\n                            i8tooid\n                            i8tooid\n                        ": "",
    "\n                            jsonb_delete_array\n                            jsonb_delete_array\n                        ": "",
    "\n                            split_text\n                            split_text\n                        ": "",
    "\n                            range_lower\n                            range_lower\n                        ": "",
    "\n                            dacos\n                            dacos\n                        ": "",
    "\n                            ts_token_type_byid\n                            ts_token_type_byid\n                        ": "",
    "\n                            setval3_oid\n                            setval3_oid\n                        ": "",
    "\n                            i4tof\n                            i4tof\n                        ": "",
    "\n                            pg_copy_logical_replication_slot_a\n                            pg_copy_logical_replication_slot_a\n                        ": "",
    "\n                            text_to_array\n                            text_to_array\n                        ": "",
    "\n                            in_range_timestamptz_interval\n                            in_range_timestamptz_interval\n                        ": "",
    "\n                            be_lo_truncate64\n                            be_lo_truncate64\n                        ": "",
    "\n                            bitposition\n                            bitposition\n                        ": "",
    "\n                            i2tod\n                            i2tod\n                        ": "",
    "\n                            text_starts_with\n                            text_starts_with\n                        ": "",
    "\n                            regexp_split_to_array_no_flags\n                            regexp_split_to_array_no_flags\n                        ": "",
    "\n                            set_config_by_name\n                            set_config_by_name\n                        ": "",
    "\n                            network_family\n                            network_family\n                        ": "",
    "\n                            byteapos\n                            byteapos\n                        ": "",
    "\n                            int4_bool\n                            int4_bool\n                        ": "",
    "\n                            select description from pg_catalog.pg_description where objoid = $1 and objsubid = 0\n                            select description from pg_catalog.pg_description where objoid = $1 and objsubid = 0\n                        ": "",
    "\n                            pg_get_viewdef_name_ext\n                            pg_get_viewdef_name_ext\n                        ": "",
    "\n                            dceil\n                            dceil\n                        ": "",
    "\n                            pg_read_binary_file_all\n                            pg_read_binary_file_all\n                        ": "",
    "\n                            be_lo_open\n                            be_lo_open\n                        ": "",
    "\n                            float8_timestamptz\n                            float8_timestamptz\n                        ": "",
    "\n                            in_range_int8_int8\n                            in_range_int8_int8\n                        ": "",
    "\n                            pg_copy_logical_replication_slot_c\n                            pg_copy_logical_replication_slot_c\n                        ": "",
    "\n                            in_range_float8_float8\n                            in_range_float8_float8\n                        ": "",
    "\n                            pg_advisory_unlock_shared_int8\n                            pg_advisory_unlock_shared_int8\n                        ": "",
    "\n                            has_type_privilege_id\n                            has_type_privilege_id\n                        ": "",
    "\n                            dtanh\n                            dtanh\n                        ": "",
    "\n                            ts_parse_byname\n                            ts_parse_byname\n                        ": "",
    "\n                            in_range_int4_int4\n                            in_range_int4_int4\n                        ": "",
    "\n                            has_database_privilege_name_id\n                            has_database_privilege_name_id\n                        ": "",
    "\n                            ts_rank_tt\n                            ts_rank_tt\n                        ": "",
    "\n                            has_table_privilege_name_id\n                            has_table_privilege_name_id\n                        ": "",
    "\n                            dcosd\n                            dcosd\n                        ": "",
    "\n                            texttoxml\n                            texttoxml\n                        ": "",
    "\n                            circle_area\n                            circle_area\n                        ": "",
    "\n                            has_tablespace_privilege_id_name\n                            has_tablespace_privilege_id_name\n                        ": "",
    "\n                            has_sequence_privilege_name_name\n                            has_sequence_privilege_name_name\n                        ": "",
    "\n                            generate_series_step_int8\n                            generate_series_step_int8\n                        ": "",
    "\n                            bitsetbit\n                            bitsetbit\n                        ": "",
    "\n                            has_sequence_privilege_id\n                            has_sequence_privilege_id\n                        ": "",
    "\n                            has_foreign_data_wrapper_privilege_name_id\n                            has_foreign_data_wrapper_privilege_name_id\n                        ": "",
    "\n                            pg_read_file_all\n                            pg_read_file_all\n                        ": "",
    "\n                            text_left\n                            text_left\n                        ": "",
    "\n                            timestamp_zone\n                            timestamp_zone\n                        ": "",
    "\n                            ts_rank_wtt\n                            ts_rank_wtt\n                        ": "",
    "\n                            dsinh\n                            dsinh\n                        ": "",
    "\n                            pg_try_advisory_lock_int4\n                            pg_try_advisory_lock_int4\n                        ": "",
    "\n                            select pg_catalog.age(cast(current_date as timestamp with time zone), $1)\n                            select pg_catalog.age(cast(current_date as timestamp with time zone), $1)\n                        ": "",
    "\n                            has_schema_privilege_id_name\n                            has_schema_privilege_id_name\n                        ": "",
    "\n                            dpi\n                            dpi\n                        ": "",
    "\n                            ts_headline_json_opt\n                            ts_headline_json_opt\n                        ": "",
    "\n                            pg_advisory_lock_int8\n                            pg_advisory_lock_int8\n                        ": "",
    "\n                            oidtoi8\n                            oidtoi8\n                        ": "",
    "\n                            date_timestamptz\n                            date_timestamptz\n                        ": "",
    "\n                            json_string_to_tsvector_byid\n                            json_string_to_tsvector_byid\n                        ": "",
    "\n                            numeric_ceil\n                            numeric_ceil\n                        ": "",
    "\n                            select $1::pg_catalog.text || $2\n                            select $1::pg_catalog.text || $2\n                        ": "",
    "\n                            dacosh\n                            dacosh\n                        ": "",
    "\n                            interval_scale\n                            interval_scale\n                        ": "",
    "\n                            interval_time\n                            interval_time\n                        ": "",
    "\n                            gin_extract_tsvector_2args\n                            gin_extract_tsvector_2args\n                        ": "",
    "\n                            select pg_catalog.length($1)\n                            select pg_catalog.length($1)\n                        ": "",
    "\n                            pg_copy_physical_replication_slot_b\n                            pg_copy_physical_replication_slot_b\n                        ": "",
    "\n                            bytea_substr_no_len\n                            bytea_substr_no_len\n                        ": "",
    "\n                            ts_token_type_byname\n                            ts_token_type_byname\n                        ": "",
    "\n                            has_sequence_privilege_name\n                            has_sequence_privilege_name\n                        ": "",
    "\n                            ts_rankcd_tt\n                            ts_rankcd_tt\n                        ": "",
    "\n                            has_schema_privilege_name\n                            has_schema_privilege_name\n                        ": "",
    "\n                            has_type_privilege_id_id\n                            has_type_privilege_id_id\n                        ": "",
    "\n                            jsonb_int4\n                            jsonb_int4\n                        ": "",
    "\n                            width_bucket_float8\n                            width_bucket_float8\n                        ": "",
    "\n                            be_lo_truncate\n                            be_lo_truncate\n                        ": "",
    "\n                            bitfromint8\n                            bitfromint8\n                        ": "",
    "\n                            select description from pg_catalog.pg_description where objoid = $1 and classoid = (select oid from pg_catalog.pg_class where relname = $2 and relnamespace = 11) and objsubid = 0\n                            select description from pg_catalog.pg_description where objoid = $1 and classoid = (select oid from pg_catalog.pg_class where relname = $2 and relnamespace = 11) and objsubid = 0\n                        ": "",
    "\n                            select ($1, $2) overlaps ($3, ($3 + $4))\n                            select ($1, $2) overlaps ($3, ($3 + $4))\n                        ": "",
    "\n                            box_diagonal\n                            box_diagonal\n                        ": "",
    "\n                            json_string_to_tsvector\n                            json_string_to_tsvector\n                        ": "",
    "\n                            md5_bytea\n                            md5_bytea\n                        ": "",
    "\n                            bitfromint4\n                            bitfromint4\n                        ": "",
    "\n                            date_finite\n                            date_finite\n                        ": "",
    "\n                            text_concat_ws\n                            text_concat_ws\n                        ": "",
    "\n                            text_char\n                            text_char\n                        ": "",
    "\n                            has_database_privilege_id\n                            has_database_privilege_id\n                        ": "",
    "\n                            generate_series_int4\n                            generate_series_int4\n                        ": "",
    "\n                            generate_series_int8\n                            generate_series_int8\n                        ": "",
    "\n                            has_any_column_privilege_name_name\n                            has_any_column_privilege_name_name\n                        ": "",
    "\n                            btrim1\n                            btrim1\n                        ": "",
    "\n                            tsvector_filter\n                            tsvector_filter\n                        ": "",
    "\n                            SELECT\n  CASE WHEN $1 IN (21, 23, 20) THEN 0\n       WHEN $1 IN (1700) THEN\n            CASE WHEN $2 = -1\n                 THEN null\n                 ELSE ($2 - 4) &amp; 65535\n                 END\n       ELSE null\n  END\n                            SELECT\n  CASE WHEN $1 IN (21, 23, 20) THEN 0\n       WHEN $1 IN (1700) THEN\n            CASE WHEN $2 = -1\n                 THEN null\n                 ELSE ($2 - 4) &amp; 65535\n                 END\n       ELSE null\n  END\n                        ": "",
    "\n                            nextval_oid\n                            nextval_oid\n                        ": "",
    "\n                            has_type_privilege_name_name\n                            has_type_privilege_name_name\n                        ": "",
    "\n                            drandom\n                            drandom\n                        ": "",
    "\n                            select pg_catalog.age(cast(current_date as timestamp without time zone), $1)\n                            select pg_catalog.age(cast(current_date as timestamp without time zone), $1)\n                        ": "",
    "\n                            select pg_catalog.trunc($1,0)\n                            select pg_catalog.trunc($1,0)\n                        ": "",
    "\n                            ftod\n                            ftod\n                        ": "",
    "\n                            float4_numeric\n                            float4_numeric\n                        ": "",
    "\n                            ts_headline_byid\n                            ts_headline_byid\n                        ": "",
    "\n                            tsvector_update_trigger_bycolumn\n                            tsvector_update_trigger_bycolumn\n                        ": "",
    "\n                            circle_poly\n                            circle_poly\n                        ": "",
    "\n                            range_lower_inc\n                            range_lower_inc\n                        ": "",
    "\n                            jsonb_int2\n                            jsonb_int2\n                        ": "",
    "\n                            has_foreign_data_wrapper_privilege_name\n                            has_foreign_data_wrapper_privilege_name\n                        ": "",
    "\n                            jsonb_string_to_tsvector_byid\n                            jsonb_string_to_tsvector_byid\n                        ": "",
    "\n                            int2_numeric\n                            int2_numeric\n                        ": "",
    "\n                            has_any_column_privilege_id_id\n                            has_any_column_privilege_id_id\n                        ": "",
    "\n                            has_type_privilege_name_id\n                            has_type_privilege_name_id\n                        ": "",
    "\n                            has_column_privilege_name_name_name\n                            has_column_privilege_name_name_name\n                        ": "",
    "\n                            to_ascii_default\n                            to_ascii_default\n                        ": "",
    "\n                            pg_convert_to\n                            pg_convert_to\n                        ": "",
    "\n                            inet_abbrev\n                            inet_abbrev\n                        ": "",
    "\n                            PG_char_to_encoding\n                            PG_char_to_encoding\n                        ": "",
    "\n                            pg_try_advisory_lock_shared_int8\n                            pg_try_advisory_lock_shared_int8\n                        ": "",
    "\n                            has_column_privilege_name_attnum\n                            has_column_privilege_name_attnum\n                        ": "",
    "\n                            has_sequence_privilege_id_name\n                            has_sequence_privilege_id_name\n                        ": "",
    "\n                            select ($1, ($1 + $2)) overlaps ($3, ($3 + $4))\n                            select ($1, ($1 + $2)) overlaps ($3, ($3 + $4))\n                        ": "",
    "\n                            has_tablespace_privilege_id_id\n                            has_tablespace_privilege_id_id\n                        ": "",
    "\n                            pg_encoding_max_length_sql\n                            pg_encoding_max_length_sql\n                        ": "",
    "\n                            in_range_int4_int8\n                            in_range_int4_int8\n                        ": "",
    "\n                            select pg_catalog.quote_literal($1::pg_catalog.text)\n                            select pg_catalog.quote_literal($1::pg_catalog.text)\n                        ": "",
    "\n                            ftoi2\n                            ftoi2\n                        ": "",
    "\n                            show_config_by_name\n                            show_config_by_name\n                        ": "",
    "\n                            has_language_privilege_id_id\n                            has_language_privilege_id_id\n                        ": "",
    "\n                            ltrim1\n                            ltrim1\n                        ": "",
    "\n                            timestamp_trunc\n                            timestamp_trunc\n                        ": "",
    "\n                            has_column_privilege_id_attnum\n                            has_column_privilege_id_attnum\n                        ": "",
    "\n                            be_lo_lseek64\n                            be_lo_lseek64\n                        ": "",
    "\n                            select description from pg_catalog.pg_shdescription where objoid = $1 and classoid = (select oid from pg_catalog.pg_class where relname = $2 and relnamespace = 11)\n                            select description from pg_catalog.pg_shdescription where objoid = $1 and classoid = (select oid from pg_catalog.pg_class where relname = $2 and relnamespace = 11)\n                        ": "",
    "\n                            array_unnest\n                            array_unnest\n                        ": "",
    "\n                            row_to_json_pretty\n                            row_to_json_pretty\n                        ": "",
    "\n                            timestamptz_date\n                            timestamptz_date\n                        ": "",
    "\n                            array_fill_with_lower_bounds\n                            array_fill_with_lower_bounds\n                        ": "",
    "\n                            be_lo_import_with_oid\n                            be_lo_import_with_oid\n                        ": "",
    "\n                            i8tod\n                            i8tod\n                        ": "",
    "\n                            numeric_floor\n                            numeric_floor\n                        ": "",
    "\n                            path_isopen\n                            path_isopen\n                        ": "",
    "\n                            bytea_substr\n                            bytea_substr\n                        ": "",
    "\n                            pg_convert_from\n                            pg_convert_from\n                        ": "",
    "\n                            has_database_privilege_name\n                            has_database_privilege_name\n                        ": "",
    "\n                            point_slope\n                            point_slope\n                        ": "",
    "\n                            has_column_privilege_name_id_attnum\n                            has_column_privilege_name_id_attnum\n                        ": "",
    "\n                            has_function_privilege_name_id\n                            has_function_privilege_name_id\n                        ": "",
    "\n                            replace_text\n                            replace_text\n                        ": "",
    "\n                            network_network\n                            network_network\n                        ": "",
    "\n                            phraseto_tsquery_byid\n                            phraseto_tsquery_byid\n                        ": "",
    "\n                            be_lo_get_fragment\n                            be_lo_get_fragment\n                        ": "",
    "\n                            int8_cash\n                            int8_cash\n                        ": "",
    "\n                            cidr_abbrev\n                            cidr_abbrev\n                        ": "",
    "\n                            pg_database_size_oid\n                            pg_database_size_oid\n                        ": "",
    "\n                            jsonb_object_two_arg\n                            jsonb_object_two_arg\n                        ": "",
    "\n                            select $1[s], s - pg_catalog.array_lower($1,1) + 1\n        from pg_catalog.generate_series(pg_catalog.array_lower($1,1),\n                                        pg_catalog.array_upper($1,1),\n                                        1) as g(s)\n                            select $1[s], s - pg_catalog.array_lower($1,1) + 1\n        from pg_catalog.generate_series(pg_catalog.array_lower($1,1),\n                                        pg_catalog.array_upper($1,1),\n                                        1) as g(s)\n                        ": "",
    "\n                            binary_decode\n                            binary_decode\n                        ": "",
    "\n                            has_server_privilege_name_name\n                            has_server_privilege_name_name\n                        ": "",
    "\n                            hypothetical_rank_final\n                            hypothetical_rank_final\n                        ": "",
    "\n                            float8_to_char\n                            float8_to_char\n                        ": "",
    "\n                            bitsubstr_no_len\n                            bitsubstr_no_len\n                        ": "",
    "\n                            has_function_privilege_name_name\n                            has_function_privilege_name_name\n                        ": "",
    "\n                            in_range_int2_int2\n                            in_range_int2_int2\n                        ": "",
    "\n                            pg_advisory_xact_lock_shared_int4\n                            pg_advisory_xact_lock_shared_int4\n                        ": "",
    "\n                            window_dense_rank\n                            window_dense_rank\n                        ": "",
    "\n                            select pg_catalog.pg_sleep(extract(epoch from $1) operator(pg_catalog.-) extract(epoch from pg_catalog.clock_timestamp()))\n                            select pg_catalog.pg_sleep(extract(epoch from $1) operator(pg_catalog.-) extract(epoch from pg_catalog.clock_timestamp()))\n                        ": "",
    "\n                            timestamptz_timetz\n                            timestamptz_timetz\n                        ": "",
    "\n                            be_lowrite\n                            be_lowrite\n                        ": "",
    "\n                            to_ascii_encname\n                            to_ascii_encname\n                        ": "",
    "\n                            lseg_construct\n                            lseg_construct\n                        ": "",
    "\n                            range_upper_inf\n                            range_upper_inf\n                        ": "",
    "\n                            be_lo_tell64\n                            be_lo_tell64\n                        ": "",
    "\n                            network_masklen\n                            network_masklen\n                        ": "",
    "\n                            to_ascii_enc\n                            to_ascii_enc\n                        ": "",
    "\n                            ts_parse_byid\n                            ts_parse_byid\n                        ": "",
    "\n                            jsonb_string_to_tsvector\n                            jsonb_string_to_tsvector\n                        ": "",
    "\n                            array_to_json_pretty\n                            array_to_json_pretty\n                        ": "",
    "\n                            show_all_file_settings\n                            show_all_file_settings\n                        ": "",
    "\n                            float8_numeric\n                            float8_numeric\n                        ": "",
    "\n                            path_poly\n                            path_poly\n                        ": "",
    "\n                            time_interval\n                            time_interval\n                        ": "",
    "\n                            gin_extract_tsquery_oldsig\n                            gin_extract_tsquery_oldsig\n                        ": "",
    "\n                            in_range_int2_int4\n                            in_range_int2_int4\n                        ": "",
    "\n                            dtoi8\n                            dtoi8\n                        ": "",
    "\n                            has_column_privilege_name_name\n                            has_column_privilege_name_name\n                        ": "",
    "\n                            bitoverlay_no_len\n                            bitoverlay_no_len\n                        ": "",
    "\n                            macaddrtomacaddr8\n                            macaddrtomacaddr8\n                        ": "",
    "\n                            chartoi4\n                            chartoi4\n                        ": "",
    "\n                            has_schema_privilege_id\n                            has_schema_privilege_id\n                        ": "",
    "\n                            pg_tablespace_size_name\n                            pg_tablespace_size_name\n                        ": "",
    "\n                            window_last_value\n                            window_last_value\n                        ": "",
    "\n                            hypothetical_percent_rank_final\n                            hypothetical_percent_rank_final\n                        ": "",
    "\n                            pg_num_nonnulls\n                            pg_num_nonnulls\n                        ": "",
    "\n                            aclitem_eq\n                            aclitem_eq\n                        ": "",
    "\n                            dsind\n                            dsind\n                        ": "",
    "\n                            SELECT CASE WHEN $2.typtype = &apos;d&apos; THEN $2.typbasetype ELSE $1.atttypid END\n                            SELECT CASE WHEN $2.typtype = &apos;d&apos; THEN $2.typbasetype ELSE $1.atttypid END\n                        ": "",
    "\n                            select cast(($1 + $2) as timestamp with time zone)\n                            select cast(($1 + $2) as timestamp with time zone)\n                        ": "",
    "\n                            range_constructor3\n                            range_constructor3\n                        ": "",
    "\n                            range_upper\n                            range_upper\n                        ": "",
    "\n                            generate_series_numeric\n                            generate_series_numeric\n                        ": "",
    "\n                            pg_get_viewdef_ext\n                            pg_get_viewdef_ext\n                        ": "",
    "\n                            has_language_privilege_id\n                            has_language_privilege_id\n                        ": "",
    "\n                            network_show\n                            network_show\n                        ": "",
    "\n                            jsonb_float8\n                            jsonb_float8\n                        ": "",
    "\n                            ftoi4\n                            ftoi4\n                        ": "",
    "\n                            tsquery_rewrite\n                            tsquery_rewrite\n                        ": "",
    "\n                            has_table_privilege_id\n                            has_table_privilege_id\n                        ": "",
    "\n                            dtof\n                            dtof\n                        ": "",
    "\n                            be_lo_export\n                            be_lo_export\n                        ": "",
    "\n                            pg_advisory_unlock_int4\n                            pg_advisory_unlock_int4\n                        ": "",
    "\n                            timestamp_finite\n                            timestamp_finite\n                        ": "",
    "\n                            time_part\n                            time_part\n                        ": "",
    "\n                            gin_tsquery_consistent_6args\n                            gin_tsquery_consistent_6args\n                        ": "",
    "\n                            hypothetical_dense_rank_final\n                            hypothetical_dense_rank_final\n                        ": "",
    "\n                            pg_ls_tmpdir_noargs\n                            pg_ls_tmpdir_noargs\n                        ": "",
    "\n                            numeric_cash\n                            numeric_cash\n                        ": "",
    "\n                            jsonb_float4\n                            jsonb_float4\n                        ": "",
    "\n                            jsonb_build_array_noargs\n                            jsonb_build_array_noargs\n                        ": "",
    "\n                            has_column_privilege_id_name_name\n                            has_column_privilege_id_name_name\n                        ": "",
    "\n                            pg_get_triggerdef_ext\n                            pg_get_triggerdef_ext\n                        ": "",
    "\n                            array_to_text\n                            array_to_text\n                        ": "",
    "\n                            gtsquery_consistent_oldsig\n                            gtsquery_consistent_oldsig\n                        ": "",
    "\n                            pg_advisory_xact_lock_int4\n                            pg_advisory_xact_lock_int4\n                        ": "",
    "\n                            dtand\n                            dtand\n                        ": "",
    "\n                            byteaGetByte\n                            byteaGetByte\n                        ": "",
    "\n                            select pg_catalog.pg_relation_size($1, &apos;main&apos;)\n                            select pg_catalog.pg_relation_size($1, &apos;main&apos;)\n                        ": "",
    "\n                            path_close\n                            path_close\n                        ": "",
    "\n                            select pg_catalog.round($1,0)\n                            select pg_catalog.round($1,0)\n                        ": "",
    "\n                            numeric_sign\n                            numeric_sign\n                        ": ""
  }
}